<!--
/*******************************************************************************
 * Copyright (c) 2016, 2017 IBM Corp. and others
 *
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/
 * or the Apache License, Version 2.0 which accompanies this distribution and
 * is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * This Source Code may also be made available under the following
 * Secondary Licenses when the conditions for such availability set
 * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
 * General Public License, version 2 with the GNU Classpath
 * Exception [1] and GNU General Public License, version 2 with the
 * OpenJDK Assembly Exception [2].
 *
 * [1] https://www.gnu.org/software/classpath/license.html
 * [2] http://openjdk.java.net/legal/assembly-exception.html
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
 *******************************************************************************/
 -->
 
<project name="build" default="post-javac" basedir=".">

	<property name="header.location" location="../runtime/cuda/java" />
	<property name="output.jar" value="cuda4j.jar" />

	<target name="post-javac" depends="generate-headers" />

	<target name="check-cuda4j.bin-exists">
		<eclipse.convertPath resourcePath="/" property="workspace.dir" />
		<property name="cuda4j.bin" location="${workspace.dir}/pConfig CUDA4J/bin" />
		<available property="cuda4j.bin.exists" file="${cuda4j.bin}" type="dir" />
	</target>

	<target name="generate-headers" depends="check-cuda4j.bin-exists" if="cuda4j.bin.exists">
		<echo message="Generating JNI header files" level="info" />
		<tempfile property="header.tmp" destdir="." prefix="#javah-" suffix=".tmp" />
		<mkdir dir="${header.tmp}" />
		<pathconvert property="javah.path">
			<path location="${cuda4j.bin}" />
			<path path="${sun.boot.class.path}" />
		</pathconvert>
		<javah bootclasspath="${javah.path}" destdir="${header.tmp}">
			<class name="com.ibm.cuda.Cuda" />
			<class name="com.ibm.cuda.CudaBuffer" />
			<class name="com.ibm.cuda.CudaDevice" />
			<class name="com.ibm.cuda.CudaEvent" />
			<class name="com.ibm.cuda.CudaFunction" />
			<class name="com.ibm.cuda.CudaJitOptions" />
			<class name="com.ibm.cuda.CudaLinker" />
			<class name="com.ibm.cuda.CudaModule" />
			<class name="com.ibm.cuda.CudaStream" />
		</javah>
		<fixcrlf srcdir="${header.tmp}" eol="unix" />
		<mkdir dir="${header.location}" />
		<copy todir="${header.location}">
			<fileset dir="${header.tmp}" />
			<filterchain>
				<tokenfilter>
					<replaceregex pattern="(\s?)\bJNIEXPORT\s+" replace="\1" flags="g" />
				</tokenfilter>
			</filterchain>
		</copy>
		<delete dir="${header.tmp}" />
	</target>

	<target name="clean">
		<delete dir="${header.location}" failonerror="false" />
		<delete file="${output.jar}" failonerror="false" />
		<mkdir dir="${header.location}" />
	</target>

</project>
