<!--
/*******************************************************************************
 * Copyright (c) 2016, 2017 IBM Corp. and others
 *
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/
 * or the Apache License, Version 2.0 which accompanies this distribution and
 * is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * This Source Code may also be made available under the following
 * Secondary Licenses when the conditions for such availability set
 * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
 * General Public License, version 2 with the GNU Classpath
 * Exception [1] and GNU General Public License, version 2 with the
 * OpenJDK Assembly Exception [2].
 *
 * [1] https://www.gnu.org/software/classpath/license.html
 * [2] http://openjdk.java.net/legal/assembly-exception.html
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
 *******************************************************************************/
 -->

<project name="Build-JCL" default="usage" basedir=".">
	<description>Miscellaneuous JCL build tasks.</description>
	<tstamp />

	<!-- uncomment to do experimental builds
	<property name='build.root' value='/bluebird/team/spirit/bld_${job.buildId}/' description='Where the Axxon build is taking place' />
	-->
	<property name='build.root' value='/bluebird/builds/bld_${job.buildId}/' description='Where the Axxon build is taking place' />

	<!-- STORE JCL -->
	<property name="SCP_USERNAME" value="j9build" />
	<property name="JCL_STORE_ROOT_DIRECTORY" value="/vmtank/vm_archive" />

	<!-- Add optional tasks -->
	<taskdef resource="net/sf/antcontrib/antlib.xml" />

	<target name="usage">
		<echo>Required arguments:</echo>
		<echo>    job.buildId      e.g '42759'                 Specifies the buildID on Axxon</echo>
		<echo></echo>
		<echo>Optional arguments:</echo>
		<echo>============================================================================================</echo>
		<echo>Usage: ant -Dname='value' [target_name]</echo>
		<echo>    ant -v -Dbuild.root=c:\temp\jclbuild all</echo>
	</target>

	<!-- Only call this target once the other JCL configs have been build invididually using this ANT build.xml file -->
	<target name="jcl_se.zip">
		<fail unless='job.buildId'>This job requires a job.buildId defined</fail>
		<zip destfile="${build.root}/build/j9jcl/jcl_se.zip" basedir="${build.root}/build/j9jcl/source" />
		<mkdir dir="${build.root}/build/j9jcl/SE_DIR" />

		<!-- For each SE class library, create a directory and copy over the classes.zip and source.zip into the right name -->

		<!-- Copy Java 8 Classes and Source-->
		<mkdir dir="${build.root}/build/J9_JCL/jclSC18" />
		<copy
			file="${build.root}/build/j9jcl/source/ive/lib/jclSC18/classes-vm.zip"
			tofile="${build.root}/build/J9_JCL/jclSC18/vm.jar"
			failonerror="false" />
		<copy
			file="${build.root}/build/j9jcl/source/ive/lib/jclSC18/source/full.zip"
			tofile="${build.root}/build/J9_JCL/jclSC18/full.zip"
			failonerror="false" />
		<copy
			file="${build.root}/build/j9jcl/source/ive/lib/jclSC18/source/source.zip"
			tofile="${build.root}/build/J9_JCL/jclSC18/source.zip"
			failonerror="false" />

		<!-- Copy Java 8 DAA Classes and Source-->
		<mkdir dir="${build.root}/build/J9_JCL/jclSC180-DAA" />
		<copy
			file="${build.root}/build/j9jcl/source/ive/lib/jclSC180-DAA/classes-vm.zip"
			tofile="${build.root}/build/J9_JCL/jclSC180-DAA/vm.jar"
			failonerror="true" />
		<copy
			file="${build.root}/build/j9jcl/source/ive/lib/jclSC180-DAA/source/full.zip"
			tofile="${build.root}/build/J9_JCL/jclSC180-DAA/full.zip"
			failonerror="true" />
		<copy
			file="${build.root}/build/j9jcl/source/ive/lib/jclSC180-DAA/source/source.zip"
			tofile="${build.root}/build/J9_JCL/jclSC180-DAA/source.zip"
			failonerror="true" />
	</target>

	<target name="scp_jcls_to_vmtank" description="Scp the JCL ">
		<echo>Scp ${build.root}/build/j9jcl/jcl_se.zip to ${storage.server}:${JCL_STORE_ROOT_DIRECTORY}/${stream}/JCLandJCLTests/${job.buildId}</echo>
		<echo>storage.server = ${storage.server}</echo>
		<echo>stream         = ${stream}</echo>
		<echo>job.buildId    = ${job.buildId}</echo>
		<if>
			<contains string="${platform}" substring="win" />
			<then>
				<!-- if on windows, point to different location for user.home -->
				<sshexec host="${storage.server}" username="${SCP_USERNAME}" keyfile="L:/j9build/.ssh/id_rsa" command="mkdir -p ${JCL_STORE_ROOT_DIRECTORY}/${stream}/JCLandJCLTests/${job.buildId}" trust="true" />
				<!-- Use SCP task instead of exec since windows doesn't support exec for scp -->
				<!-- NOTE: This may cause SCP to hang, as seen on some linux machines. (ant bug 41090) -->
				<scp file="${build.root}/build/j9jcl/jcl_se.zip" todir="${SCP_USERNAME}@${storage.server}:${JCL_STORE_ROOT_DIRECTORY}/${stream}/JCLandJCLTests/${job.buildId}" keyfile="L:/j9build/.ssh/id_rsa" passphrase="" trust="true" />
			</then>
			<else>
				<sshexec host="${storage.server}" username="${SCP_USERNAME}" keyfile="${user.home}/.ssh/id_rsa" command="mkdir -p ${JCL_STORE_ROOT_DIRECTORY}/${stream}/JCLandJCLTests/${job.buildId}" trust="true" />
				<!-- Use scp exec since scp task may hang (ant bug 41090) -->
				<exec executable="scp" failonerror="true">
					<arg line="-i ${user.home}/.ssh/id_rsa ${build.root}/build/j9jcl/jcl_se.zip ${SCP_USERNAME}@${storage.server}:${JCL_STORE_ROOT_DIRECTORY}/${stream}/JCLandJCLTests/${job.buildId}" />
				</exec>
			</else>
		</if>
	</target>

</project>
