<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright (c) 2016, 2017 IBM Corp. and others

  This program and the accompanying materials are made available under
  the terms of the Eclipse Public License 2.0 which accompanies this
  distribution and is available at https://www.eclipse.org/legal/epl-2.0/
  or the Apache License, Version 2.0 which accompanies this distribution and
  is available at https://www.apache.org/licenses/LICENSE-2.0.

  This Source Code may also be made available under the following
  Secondary Licenses when the conditions for such availability set
  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
  General Public License, version 2 with the GNU Classpath
  Exception [1] and GNU General Public License, version 2 with the
  OpenJDK Assembly Exception [2].

  [1] https://www.gnu.org/software/classpath/license.html
  [2] http://openjdk.java.net/legal/assembly-exception.html

  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
-->

<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../TestConfig/playlist.xsd">
	<test>
		<testCaseName>cmdLineTester_pltest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) $(JAVA_COMMAND) $(JVM_OPTIONS) -DRESOURCES_DIR=$(Q)$(RESOURCES_DIR)$(Q) -DJVM_TEST_ROOT=$(Q)$(JVM_TEST_ROOT)$(Q) \
	-DEXE='$(JAVA_SHARED_LIBRARIES_DIR)$(D)pltest $(_JVM_OPTIONS)' -jar $(CMDLINETESTER_JAR) -config $(Q)$(TEST_RESROOT)$(D)pltest.xml$(Q) -verbose -explainExcludes \
	-xids all,$(PLATFORM),$(VARIATION) -plats all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
	$(TEST_STATUS)</command>
		<platformRequirements>^os.aix</platformRequirements>
		<tags>
			<tag>sanity</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>cmdLineTester_pltest_aix</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) $(JAVA_COMMAND) $(JVM_OPTIONS) -DRESOURCES_DIR=$(Q)$(RESOURCES_DIR)$(Q) -DJVM_TEST_ROOT=$(Q)$(JVM_TEST_ROOT)$(Q) \
	-DEXE='$(JAVA_SHARED_LIBRARIES_DIR)$(D)pltest -exclude:j9process $(_JVM_OPTIONS)' -jar $(CMDLINETESTER_JAR) -config $(Q)$(TEST_RESROOT)$(D)pltest.xml$(Q) -verbose -explainExcludes \
	-xids all,$(PLATFORM),$(VARIATION) -plats all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
	$(TEST_STATUS)</command>
		<platformRequirements>os.aix</platformRequirements>
		<tags>
			<tag>sanity</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>cmdLineTester_pltest_CEEHDLR</testCaseName>
		<variations>
			<variation>-XCEEHDLR</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -DRESOURCES_DIR=$(Q)$(RESOURCES_DIR)$(Q) -DJVM_TEST_ROOT=$(Q)$(JVM_TEST_ROOT)$(Q) \
	-DEXE='$(JAVA_SHARED_LIBRARIES_DIR)$(D)pltest $(_JVM_OPTIONS)' -jar $(CMDLINETESTER_JAR) -config $(Q)$(TEST_RESROOT)$(D)pltest.xml$(Q) -verbose -explainExcludes \
	-xids all,$(PLATFORM),$(VARIATION) -plats all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
	$(TEST_STATUS)</command>
		<platformRequirements>os.zos,bits.31</platformRequirements>
		<tags>
			<tag>sanity</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>cmdLineTester_pltest_tty_extended</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -DRESOURCES_DIR=$(Q)$(RESOURCES_DIR)$(Q) -DJVM_TEST_ROOT=$(Q)$(JVM_TEST_ROOT)$(Q) \
	-DEXE='$(JAVA_SHARED_LIBRARIES_DIR)$(D)pltest -include:tty_extended' -jar $(CMDLINETESTER_JAR) -config $(Q)$(TEST_RESROOT)$(D)j9tty_extended.xml$(Q) -verbose -explainExcludes \
	-xids all,$(PLATFORM),$(VARIATION) -plats all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
	$(TEST_STATUS)</command>
		<platformRequirements>os.win</platformRequirements>
		<tags>
			<tag>sanity</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>cmdLineTester_pltest_numcpus_notBound</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -DRESOURCES_DIR=$(Q)$(RESOURCES_DIR)$(Q) -DJVM_TEST_ROOT=$(Q)$(JVM_TEST_ROOT)$(Q) \
	-DEXE='$(JAVA_SHARED_LIBRARIES_DIR)$(D)pltest -include:j9numcpus $(_JVM_OPTIONS)' -jar $(CMDLINETESTER_JAR) -config $(Q)$(TEST_RESROOT)$(D)pltest.xml$(Q) -verbose -explainExcludes \
	-xids all,$(PLATFORM),$(VARIATION) -plats all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
	$(TEST_STATUS)</command>
		<platformRequirements>os.win</platformRequirements>
		<tags>
			<tag>sanity</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>cmdLineTester_pltest_numcpus_bound_linux</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export myCPU=`grep Cpus_allowed_list /proc/self/status | sed -e 's/[-,].*//;s/Cpus_allowed_list:[^0-9]*//'`; \
	$(JAVA_COMMAND) $(JVM_OPTIONS) -DRESOURCES_DIR=$(Q)$(RESOURCES_DIR)$(Q) -DJVM_TEST_ROOT=$(Q)$(JVM_TEST_ROOT)$(Q) \
	-DEXE="taskset -c $$myCPU $(JAVA_SHARED_LIBRARIES_DIR)$(D)pltest -include:j9numcpus -boundcpus:1 $(_JVM_OPTIONS)" -jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)pltest_numcpus_bound.xml$(Q) -verbose -explainExcludes \
	-xids all,$(PLATFORM),$(VARIATION) -plats all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
	$(TEST_STATUS)</command>
		<platformRequirements>os.linux</platformRequirements>
		<tags>
			<tag>sanity</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>cmdLineTester_pltest_numcpus_bound_win</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>echo $(Q)$(JAVA_SHARED_LIBRARIES_DIR)$(D)pltest -include:j9numcpus -boundcpus:1$(Q) > run_pltest.bat ; \
	echo exit 0 >> run_pltest.bat; \
	$(JAVA_COMMAND) $(JVM_OPTIONS) -DRESOURCES_DIR=$(Q)$(RESOURCES_DIR)$(Q) -DJVM_TEST_ROOT=$(Q)$(JVM_TEST_ROOT)$(Q) \
	-DEXE='cmd /C start /B /wait /affinity 1 run_pltest.bat  > j9numcpus.txt 2>&1' -jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)pltest_numcpus_bound.xml$(Q) -verbose -explainExcludes \
	-xids all,$(PLATFORM),$(VARIATION) -plats all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
	$(TEST_STATUS)</command>
		<platformRequirements>os.win</platformRequirements>
		<tags>
			<tag>sanity</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>cmdLineTester_pltest_numcpus_bound_aix</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) -DRESOURCES_DIR=$(Q)$(RESOURCES_DIR)$(Q) -DJVM_TEST_ROOT=$(Q)$(JVM_TEST_ROOT)$(Q) \
	-DEXE='execrset -c 1 -e $(JAVA_SHARED_LIBRARIES_DIR)$(D)pltest -include:j9numcpus -boundcpus:1 $(_JVM_OPTIONS)' -jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)pltest_numcpus_bound.xml$(Q) -verbose -explainExcludes \
	-xids all,$(PLATFORM),$(VARIATION) -plats all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
	$(TEST_STATUS)</command>
		<platformRequirements>os.aix</platformRequirements>
		<tags>
			<tag>sanity</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>cmdLineTester_pltest_hyp_HV_vmware</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) -DRESOURCES_DIR=$(Q)$(RESOURCES_DIR)$(Q) -DJVM_TEST_ROOT=$(Q)$(JVM_TEST_ROOT)$(Q) \
	-DEXE='$(JAVA_SHARED_LIBRARIES_DIR)$(D)pltest -include:j9hypervisor -hypervisor:vmware $(_JVM_OPTIONS)' -jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)pltest.xml$(Q) -verbose -explainExcludes \
	-xids all,$(PLATFORM),$(VARIATION) -plats all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
	$(TEST_STATUS)</command>
		<platformRequirements>os.linux,arch.x86</platformRequirements>
		<capabilities>hypervisor:VMWare</capabilities>
		<tags>
			<tag>sanity</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>cmdLineTester_pltest_hyp_HV_kvm</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) -DRESOURCES_DIR=$(Q)$(RESOURCES_DIR)$(Q) -DJVM_TEST_ROOT=$(Q)$(JVM_TEST_ROOT)$(Q) \
	-DEXE='$(JAVA_SHARED_LIBRARIES_DIR)$(D)pltest -include:j9hypervisor -hypervisor:kvm $(_JVM_OPTIONS)' -jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)pltest.xml$(Q) -verbose -explainExcludes \
	-xids all,$(PLATFORM),$(VARIATION) -plats all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
	$(TEST_STATUS)</command>
		<platformRequirements>os.linux,arch.x86</platformRequirements>
		<capabilities>hypervisor:KVM</capabilities>
		<tags>
			<tag>sanity</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
</playlist>