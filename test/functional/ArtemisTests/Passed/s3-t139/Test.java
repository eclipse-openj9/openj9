// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.util.HashSet;
import java.util.List;
import java.util.Collections;

public class Test {

    public static final int N = 256;

    public static long instanceCount = 928298062222930714L;

    public static short sFld = 22421;

    public static float fFld = 2.878F;

    public static int iFld = -11;

    public static byte byFld = -23;

    public static int iFld1 = -50;

    public static boolean bFld = false;

    public static float[] fArrFld = new float[N];

    public static int[] iArrFld = new int[N];

    public float[] fArrFld1 = new float[N];

    public volatile boolean[] bArrFld = new boolean[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -86.735F);
        FuzzerUtils.init(Test.iArrFld, 3);
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long fMeth_check_sum = 0;

    public static float fMeth(int i13, int i14) {
        int i15 = -12, i16 = -24003, i17 = -44373, i18 = 170, i19 = 21017;
        long l = 14L;
        double d = -108.108186;
        float f2 = 1.261F;
        for (float f1 : Test.fArrFld) {
            for (i15 = 1; i15 < 2; ++i15) {
                Test.fArrFld[i15 + 1] = Test.instanceCount;
                i17 = 1;
                while (++i17 < 2) {
                    boolean b1 = false;
                    f1 -= f1;
                    i16 += (i17 ^ Test.instanceCount);
                    i16 |= -60415;
                    switch((i15 % 8) + 111) {
                        case 111:
                            i14 -= 8;
                            Test.instanceCount -= (long) f1;
                            i13 <<= (int) Test.instanceCount;
                            i14 -= (int) Test.instanceCount;
                            i14 = i16;
                            i16 += i17;
                            i14 -= 55517;
                            Test.iArrFld[i15] = (int) 7978896143383736773L;
                            i13 -= -7;
                            Test.instanceCount += (((i17 * i18) + l) - i15);
                            i14 <<= i15;
                            l -= i15;
                            i13 = 7;
                            break;
                        case 112:
                            i16 >>= 13;
                            if (i13 != 0) {
                            }
                            i16 -= (int) d;
                            i18 += (int) d;
                            if (b1) {
                                i19 = i14;
                                f1 = 3091072158416662800L;
                                Test.instanceCount = i19;
                                if (b1)
                                    break;
                                l += (i17 - i18);
                                i13 = i19;
                                i19 = i19;
                                i14 = (int) f1;
                                i16 = i17;
                                i19 *= i16;
                                f2 += (((i17 * l) + f1) - i17);
                            } else {
                                i13 += -184;
                            }
                        case 113:
                            d -= f1;
                        case 114:
                            Test.iArrFld[i15 - 1] = (int) Test.instanceCount;
                            break;
                        case 115:
                            i19 += (i17 ^ i14);
                            break;
                        case 116:
                            Test.instanceCount = Test.instanceCount;
                        case 117:
                            i19 += (int) -20212218951423040L;
                            break;
                        case 118:
                            i13 &= -12410;
                            break;
                    }
                }
            }
        }
        long meth_res = i13 + i14 + i15 + i16 + i17 + i18 + l + Double.doubleToLongBits(d) + i19 + Float.floatToIntBits(f2);
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static void vMeth1(float f, int i5, int i6) {
        if (ax$8) {
            int ax$13 = i5;
            int ax$14 = i6;
            try {
                java.util.List[] ax$11 = new java.util.List[2013];
                boolean ax$12 = (Math.abs(i5 - i6) > 1);
                List<Integer> ax$9 = (List<Integer>) ax$11[i5];
                List<Integer> ax$10 = (List<Integer>) ax$11[i6];
                if (Collections.disjoint(ax$9, ax$10) != ax$12)
                    ;
                if (Collections.disjoint(new HashSet<Integer>(ax$9), ax$10) != ax$12)
                    ;
                if (Collections.disjoint(new HashSet<Integer>(ax$9), new HashSet<Integer>(ax$10)) != ax$12)
                    ;
            } catch (Throwable ax$15) {
            } finally {
                i5 = ax$13;
                i6 = ax$14;
            }
            return;
        }
        int i7 = -12, i8 = -12, i9 = -40371, i10 = 46290, i11 = 9, i12 = 30089, i20 = 144, i21 = 6, i22 = 2, i23 = 120;
        byte by = -113;
        boolean b2 = true;
        for (i7 = 5; i7 < 82; ++i7) {
            i8 += (i7 * i7);
            i5 += (((i7 * i5) + i7) - i6);
            i8 += (i7 - i5);
            by |= (byte) (i5 |= (++i5));
            for (i9 = i7; 7 > i9; i9++) {
                for (i11 = i9; 1 > i11; i11++) {
                    f -= i11;
                    try {
                        i6 = (i10 % 55);
                        i12 = (i8 % 982568072);
                        i10 = (i5 % -33070);
                    } catch (ArithmeticException a_e) {
                    }
                }
                if ((fMeth(i12, i9) * i7) <= -27469)
                    break;
                for (i20 = 1; i20 < 1; ++i20) {
                    Test.fArrFld[i7 - 1] -= i10;
                    Test.iArrFld[i9] = i9;
                    Test.iArrFld[i9 - 1] -= i7;
                    Test.instanceCount += (205 + (i20 * i20));
                    i21 = -20;
                    by = (byte) i8;
                    Test.instanceCount = i5;
                    Test.instanceCount += (118 + (i20 * i20));
                    Test.iArrFld = Test.iArrFld;
                    i10 += (i20 * i12);
                    Test.iArrFld[i20] += (int) -68.282F;
                    if (b2)
                        continue;
                }
            }
            i8 >>= i6;
            Test.iArrFld = Test.iArrFld;
        }
        Test.iArrFld[(185 >>> 1) % N] += Test.sFld;
        for (i22 = 8; i22 < 133; ++i22) {
            i10 += i22;
            i8 = i7;
            i8 -= i9;
            i12 = (int) 68.1558;
            Test.instanceCount <<= i5;
            Test.instanceCount += (i22 * i22);
            Test.instanceCount += i6;
            i21 = (int) f;
            Test.instanceCount -= i6;
            i23 = (int) 2.29514;
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i5 + i6 + i7 + i8 + by + i9 + i10 + i11 + i12 + i20 + i21 + (b2 ? 1 : 0) + i22 + i23;
    }

    public static void vMeth(int i, int i1, int i2) {
        boolean b = false, b3 = false;
        int i3 = -3, i4 = 227, i24 = -199, i25 = 5, i26 = 4, i27 = -2, i28 = -44476, i29 = -48605, i30 = -18457, i31 = -64620;
        long l1 = -2663664506L, lArr[][] = new long[N][N];
        float f3 = -110.184F;
        FuzzerUtils.init(lArr, 5L);
        b = ((i1--) != i);
        for (i3 = 133; 7 < i3; i3 -= 3) {
            {
                java.io.PrintStream ax$18 = System.out;
                java.io.PrintStream ax$19 = System.err;
                java.io.PrintStream ax$20 = new java.io.PrintStream(new java.io.OutputStream() {

                    @Override
                    public void write(int b) throws java.io.IOException {
                        // DO NOTHING: DISCARD ALL OUTPUTS
                    }
                });
                System.setOut(ax$20);
                System.setErr(ax$20);
                try {
                    ax$8 = true;
                    for (int ax$16 = 0; ax$16 < 8978; ax$16 += 1) vMeth1((float) 0.19881494714839065, -181309124, -713331080);
                } catch (java.lang.Throwable ax$17) {
                } finally {
                    ax$8 = false;
                }
                System.setOut(ax$18);
                System.setErr(ax$19);
            }
            vMeth1(Test.fFld, Test.iFld, -14);
            i1 *= Test.iFld;
        }
        for (i24 = 9; 235 > i24; i24++) {
            if (b3) {
                i += (i24 ^ Test.iFld);
                b = b;
                for (i26 = 1; i26 < 3; i26++) {
                    i27 *= i24;
                    Test.iFld -= -18223;
                    Test.iFld = i1;
                }
                if (i3 != 0) {
                    vMeth_check_sum += i + i1 + i2 + (b ? 1 : 0) + i3 + i4 + i24 + i25 + i26 + i27 + i28 + i29 + l1 + i30 + i31 + Float.floatToIntBits(f3) + (b3 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
                    return;
                }
                for (i28 = 1; i28 < 3; ++i28) {
                    i29 += (i28 | Test.byFld);
                    Test.instanceCount -= Test.instanceCount;
                    Test.iArrFld[i24 + 1] -= (int) l1;
                    l1 += Test.iFld;
                    i2 += (i28 * l1);
                    i4 += (((i28 * Test.instanceCount) + Test.instanceCount) - Test.fFld);
                    Test.instanceCount = 62040;
                    Test.instanceCount -= i;
                }
                for (i30 = 1; 3 > i30; ++i30) {
                    i27 >>= i3;
                    Test.instanceCount += 9L;
                    i29 += (int) l1;
                    i29 += (-6799 + (i30 * i30));
                    f3 = 1;
                    while (++f3 < 2) {
                        lArr[(int) (f3 + 1)][i24] = -4201942502748533709L;
                        Test.byFld = (byte) Test.instanceCount;
                        switch((i24 % 3) + 33) {
                            case 33:
                                b3 = false;
                                l1 = i31;
                                i4 += 0;
                                Test.instanceCount += (long) (f3 - i);
                                i2 += (int) (f3 - i3);
                                break;
                            case 34:
                                i27 = i4;
                                break;
                            case 35:
                                i2 += i26;
                                break;
                            default:
                                Test.instanceCount += (long) ((long) f3 ^ l1);
                        }
                    }
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + (b ? 1 : 0) + i3 + i4 + i24 + i25 + i26 + i27 + i28 + i29 + l1 + i30 + i31 + Float.floatToIntBits(f3) + (b3 ? 1 : 0) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {
        double d1 = 2.27734, dArr[] = new double[N];
        int i32 = -216, i33 = 45290, i34 = 13979, i35 = 246;
        long l2 = 59928L, l3 = -51536L, l4 = 3004894456L, lArr1[][] = new long[N][N];
        boolean b4 = true;
        FuzzerUtils.init(dArr, -47.3695);
        FuzzerUtils.init(lArr1, -24L);
        vMeth(Test.iFld, 3530, Test.iFld);
        dArr[(Test.iFld >>> 1) % N] -= d1;
        switch((((Test.iFld >>> 1) % 2) * 5) + 105) {
            case 112:
                for (i32 = 198; 7 < i32; --i32) {
                    l2 = 1;
                    do {
                        if (Test.bFld) {
                            {
                                java.io.PrintStream ax$0 = System.out;
                                java.io.PrintStream ax$1 = System.err;
                                java.io.PrintStream ax$2 = new java.io.PrintStream(new java.io.OutputStream() {

                                    @Override
                                    public void write(int b) throws java.io.IOException {
                                        // DO NOTHING: DISCARD ALL OUTPUTS
                                    }
                                });
                                System.setOut(ax$2);
                                System.setErr(ax$2);
                                {
                                    boolean ax$7 = false;
                                    for (int ax$6 = -1230; ax$6 < 7130; ax$6 += 8) {
                                        if (!ax$7) {
                                            ax$7 = true;
                                            {
                                                System.setOut(ax$0);
                                                System.setErr(ax$1);
                                                for (l3 = 1; l3 < 1; l3 += 3) {
                                                    d1 -= Test.instanceCount;
                                                    Test.iFld *= i34;
                                                    try {
                                                        i34 = (145 / i32);
                                                        Test.iArrFld[(int) (l3 - 1)] = (Test.iArrFld[(int) (l2 + 1)] / 25464);
                                                        i34 = (Test.iFld / Test.iArrFld[(int) (l2 - 1)]);
                                                    } catch (ArithmeticException a_e) {
                                                    }
                                                    i33 += Test.iFld;
                                                    Test.instanceCount *= Test.instanceCount;
                                                    switch(((i33 >>> 1) % 1) + 22) {
                                                        case 22:
                                                        default:
                                                            i34 >>= (int) l3;
                                                            i33 += (int) l3;
                                                            Test.iFld += i34;
                                                            Test.instanceCount >>>= i33;
                                                            Test.fFld = 0;
                                                            i34 += (-5 + (l3 * l3));
                                                            Test.instanceCount += (l3 + i32);
                                                            switch((i32 % 3) + 103) {
                                                                case 103:
                                                                case 104:
                                                                    i33 = 13;
                                                                    i33 -= 11;
                                                                    i34 += (int) (2280867930L + (l3 * l3));
                                                                    Test.iArrFld[i32] = -48891;
                                                                    Test.byFld -= (byte) i32;
                                                                    Test.iArrFld[(int) (l2 + 1)] >>= Test.iFld1;
                                                                    if (b4) {
                                                                        Test.iFld >>>= Test.iFld1;
                                                                        i35 ^= 2;
                                                                        i35 += i35;
                                                                        Test.iFld1 = (int) Test.instanceCount;
                                                                        Test.fFld -= l2;
                                                                        i34 = (int) Test.fFld;
                                                                        Test.iArrFld[i32] = (int) Test.fFld;
                                                                        fArrFld1[i32 + 1] = Test.iFld;
                                                                        Test.fFld += l3;
                                                                    }
                                                                    i34 += 12;
                                                                    i34 = (int) l2;
                                                                    b4 = b4;
                                                                    i34 >>>= i33;
                                                                    Test.iFld1 -= (int) Test.fFld;
                                                                    switch((int) ((l3 % 4) + 38)) {
                                                                        case 38:
                                                                            Test.sFld = (short) 2.973F;
                                                                            i33 = i35;
                                                                            if (Test.bFld) {
                                                                                Test.instanceCount >>= 96;
                                                                                Test.instanceCount *= (long) 1.123440;
                                                                                Test.iFld *= -135;
                                                                                Test.iArrFld[(int) (l2 - 1)] = i34;
                                                                            }
                                                                            if (b4)
                                                                                continue;
                                                                            i33 >>= -13;
                                                                            d1 += i32;
                                                                            b4 = b4;
                                                                            i34 >>= Test.sFld;
                                                                            Test.iArrFld[(int) (l3 + 1)] -= i35;
                                                                            i35 <<= -34374;
                                                                            Test.fFld += ((long) l3 ^ (long) l2);
                                                                            Test.instanceCount += l3;
                                                                            break;
                                                                        case 39:
                                                                            Test.fFld += (float) 2.33190;
                                                                            Test.instanceCount += l3;
                                                                            Test.sFld = (short) i35;
                                                                            i33 += (int) (l3 ^ i32);
                                                                            Test.iArrFld[(int) (l2 - 1)] = (int) l3;
                                                                            Test.sFld = (short) -71;
                                                                            Test.iFld1 += (int) (l3 * Test.instanceCount);
                                                                        case 40:
                                                                            Test.fFld = -5057094898549386528L;
                                                                            d1 = i33;
                                                                            i33 = i33;
                                                                            switch((((Test.iFld >>> 1) % 2) * 5) + 103) {
                                                                                case 113:
                                                                                    i35 = (int) Test.fFld;
                                                                                    i35 += (int) (((l3 * l4) + i32) - i32);
                                                                                    lArr1[i32 + 1][(int) (l2)] <<= i34;
                                                                                    i33 += Test.iFld;
                                                                                    Test.iArrFld[(int) (l3 - 1)] -= i34;
                                                                                case 104:
                                                                                    bArrFld[i32 - 1] = b4;
                                                                            }
                                                                            break;
                                                                        case 41:
                                                                            Test.sFld += (short) l3;
                                                                            break;
                                                                    }
                                                                case 105:
                                                                    Test.iFld += (int) (l3 * l3);
                                                                    break;
                                                                default:
                                                                    lArr1[(int) (l3)][(int) (l3 - 1)] = i33;
                                                            }
                                                    }
                                                }
                                                System.setOut(ax$2);
                                                System.setErr(ax$2);
                                            }
                                        }
                                        try {
                                            char ax$4 = '0';
                                            char ax$3 = 't';
                                            if (ax$4 != Character.reverseBytes(ax$3)) {
                                            }
                                        } catch (Throwable ax$5) {
                                        } finally {
                                        }
                                    }
                                }
                                System.setOut(ax$0);
                                System.setErr(ax$1);
                            }
                        }
                    } while (++l2 < 27);
                }
                break;
            case 108:
                i35 = Test.iFld;
        }
        FuzzerUtils.out.println("d1 i32 i33 = " + Double.doubleToLongBits(d1) + "," + i32 + "," + i33);
        FuzzerUtils.out.println("l2 l3 i34 = " + l2 + "," + l3 + "," + i34);
        FuzzerUtils.out.println("i35 b4 l4 = " + i35 + "," + (b4 ? 1 : 0) + "," + l4);
        FuzzerUtils.out.println("dArr lArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," + FuzzerUtils.checkSum(lArr1));
        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.fFld = " + Test.instanceCount + "," + Test.sFld + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iFld Test.byFld Test.iFld1 = " + Test.iFld + "," + Test.byFld + "," + Test.iFld1);
        FuzzerUtils.out.println("Test.bFld Test.fArrFld Test.iArrFld = " + (Test.bFld ? 1 : 0) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("fArrFld1 bArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld1)) + "," + FuzzerUtils.checkSum(bArrFld));
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        if (ax$21) {
            int ax$23 = iFld1;
            try {
                java.lang.Object[] ax$22 = new Object[250];
                if (iFld1 == ax$22.length) {
                    iFld1 = 0;
                }
            } catch (Throwable ax$24) {
            } finally {
                iFld1 = ax$23;
            }
            return;
        }
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$8 = false;

    private static Boolean ax$21 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  vMeth ->  vMeth mainTest
// DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
// DEBUG  fMeth ->  fMeth vMeth1 vMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
