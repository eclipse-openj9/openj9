// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;

public class Test {
    public static final int N = 256;

    public static long instanceCount = 2269497638990179557L;

    public static int iFld = 57546;

    public static float fFld = -2.585F;

    public static short sFld = -27076;

    public static boolean bFld = true;

    public static byte byFld = -2;

    public static boolean bFld1 = true;

    public static volatile int iFld1 = 0;

    public static int iFld2 = 0;

    public static int iArrFld[] = new int[N];

    public static float fArrFld[] = new float[N];

    public static volatile short sArrFld[] = new short[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -50492);
        FuzzerUtils.init(Test.fArrFld, -25.255F);
        FuzzerUtils.init(Test.sArrFld, ((short) (-29370)));
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long lMeth_check_sum = 0;

    public static long lMeth(boolean b) {
        int i8 = -145;
        int i9 = -69;
        int i10 = 0;
        int i11 = 63671;
        int i12 = 159;
        double d2 = 1.97738;
        double dArr1[][] = new double[N][N];
        byte by = 24;
        byte byArr[] = new byte[N];
        short sArr[] = new short[N];
        long lArr[] = new long[N];
        FuzzerUtils.init(sArr, ((short) (-27677)));
        FuzzerUtils.init(byArr, ((byte) (-120)));
        FuzzerUtils.init(dArr1, 111.28225);
        FuzzerUtils.init(lArr, 16675L);
        if (b) {
            for (i8 = 5; i8 < 174; i8++) {
                i10 = 1;
                do {
                    i9 *= i8;
                    i9 = -11;
                    Test.instanceCount += i10;
                    Test.instanceCount += (-225) + (i10 * i10);
                    i9 = -6;
                    for (i11 = 1; 1 > i11; i11++) {
                        i9 += ((i11 * Test.instanceCount) + i8) - i9;
                        if (b) {
                            i9 = ((int) (Test.instanceCount));
                            Test.iArrFld[i11 - 1] += 13;
                            if (b)
                                break;

                            Test.iArrFld[i11] += i8;
                            d2 -= i8;
                            i9 += i11 * i11;
                            Test.instanceCount -= -153;
                            i12 = 44;
                            if (false)
                                continue;

                            i12 <<= i10;
                            sArr[i11] <<= ((short) (7));
                            Test.instanceCount = i10;
                        } else if (b) {
                            Test.iFld = ((int) (d2));
                            Test.iFld = by;
                            byArr = byArr;
                            i9 = ((int) (63487L));
                            dArr1[i11 - 1][i8 + 1] *= Test.fFld;
                            if (b) {
                                Test.instanceCount += Test.instanceCount;
                                lArr[i10 - 1] = i9;
                                Test.instanceCount -= i8;
                                Test.iArrFld[i10 + 1] = ((int) (Test.fFld));
                                Test.sFld >>= ((short) (Test.instanceCount));
                                Test.fFld += Test.instanceCount;
                                Test.instanceCount += Test.instanceCount;
                                Test.iFld -= -14;
                            }
                        }
                    }
                } while ((++i10) < 3 );
            }
        } else {
            Test.sFld *= ((short) (i9));
        }
        long meth_res = (((((((((((b ? 1 : 0) + i8) + i9) + i10) + i11) + i12) + Double.doubleToLongBits(d2)) + by) + FuzzerUtils.checkSum(sArr)) + FuzzerUtils.checkSum(byArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1))) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return ((long) (meth_res));
    }

    public static void vMeth1(int i1, int i2, float f) {
        int i3 = 10;
        int i4 = -5;
        int i5 = 6902;
        int i6 = 13282;
        int i7 = -6;
        int i13 = -23591;
        int i14 = -66;
        int i15 = -11;
        int i16 = 42;
        double d1 = 1.52785;
        double dArr[] = new double[N];
        boolean b1 = true;
        float fArr[][] = new float[N][N];
        long lArr1[] = new long[N];
        byte byArr1[] = new byte[N];
        FuzzerUtils.init(dArr, 1.58915);
        FuzzerUtils.init(fArr, -2.936F);
        FuzzerUtils.init(lArr1, 6387969478606612782L);
        FuzzerUtils.init(byArr1, ((byte) (-115)));
        for (i3 = 5; i3 < 108; ++i3) {
            Test.instanceCount += ++Test.iArrFld[i3 + 1];
            d1 -= Test.instanceCount++;
            f += ((float) (((++i1) - (dArr[i3 + 1]--)) % ((i1 + (i2 -= i2)) | 1)));
            switch ((i3 % 7) + 123) {
                case 123 :
                    i5 = 1;
                    do {
                        for (i6 = 1; i6 < 1; ++i6) {
                            short s = -25649;
                            Test.instanceCount += i6 + i3;
                            s <<= ((short) (i2++));
                            if (i6 != 0) {
                                vMeth1_check_sum += ((((((((((((((((i1 + i2) + Float.floatToIntBits(f)) + i3) + i4) + Double.doubleToLongBits(d1)) + i5) + i6) + i7) + (b1 ? 1 : 0)) + i13) + i14) + i15) + i16) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr))) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))) + FuzzerUtils.checkSum(lArr1)) + FuzzerUtils.checkSum(byArr1);
                                return;
                            }
                            d1 = lMeth(b1);
                            try {
                                i7 = Test.iArrFld[i6 - 1] % i6;
                                i4 = i3 % i2;
                                i7 = i2 / (-40049);
                            } catch (ArithmeticException a_e) {
                            }
                            Test.iArrFld[(i6 >>> 1) % N] -= 86;
                            i1 = i5;
                        }
                        Test.iArrFld[i3] += -9;
                        fArr[i5][i5] -= ((float) (d1));
                        f = i5;
                        dArr = dArr;
                        Test.iArrFld[i5 + 1] += ((int) (95L));
                        Test.instanceCount -= i1;
                        Test.fArrFld[((-11) >>> 1) % N] *= Test.fFld;
                    } while ((++i5) < 5 );
                    i1 += i3;
                    for (i13 = i3; 5 > i13; i13++) {
                        byte by1 = 88;
                        i7 -= i6;
                        i2 -= ((int) (-126.7251));
                        by1 += ((byte) (Test.iFld));
                    }
                    i14 += i13;
                    if (b1)
                        continue;

                    break;
                case 124 :
                    i14 = i1;
                    Test.sFld *= ((short) (i1));
                    i2 -= ((int) (d1));
                    lArr1[i3] = ((long) (1.956F));
                    try {
                        Test.iArrFld[i3] = i6 % 1211826587;
                        i1 = 205 / i13;
                        i4 = 48344 / i14;
                    } catch (ArithmeticException a_e) {
                    }
                    i2 += i15;
                    fArr[i3][i3] *= Test.fFld;
                    Test.sFld += ((short) (120));
                    Test.instanceCount *= i6;
                    break;
                case 125 :
                    i15 = ((int) (Test.instanceCount));
                case 126 :
                    byArr1[i3 + 1] = ((byte) (i7));
                    break;
                case 127 :
                    i16 *= ((int) (1.81F));
                    break;
                case 128 :
                    Test.instanceCount -= i3;
                case 129 :
                    i15 += i16;
                    break;
            }
        }
        vMeth1_check_sum += ((((((((((((((((i1 + i2) + Float.floatToIntBits(f)) + i3) + i4) + Double.doubleToLongBits(d1)) + i5) + i6) + i7) + (b1 ? 1 : 0)) + i13) + i14) + i15) + i16) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr))) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))) + FuzzerUtils.checkSum(lArr1)) + FuzzerUtils.checkSum(byArr1);
    }

    public static void vMeth(long l, int i) {
        if (Test.ax$0) {
            long[] ax$1 = new long[]{ -1L, 0L, 1L };
            double[] ax$2 = new double[]{ 0.23898485387216917, 0.7416782239873242, 0.7779481946692123, 0.6720818732000156, 0.25763080268943617, 0.17623270475741915 };
            Test.AxOutputRedirectionHelper.redirect();
            try {
                ax$1[20] = -4;
                for (int ax$3 = 0; ax$3 < ax$2.length; ax$3++) {
                    ax$2[ax$3] = ax$1[20] - 2;
                }
            } catch (Throwable ax$4) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            return;
        }
        double d = 1.91124;
        double d3 = -2.21379;
        double d4 = -75.24289;
        int i17 = 6;
        int i18 = 33;
        int i19 = -7991;
        int i20 = 3;
        int i21 = -2;
        int i22 = -64032;
        boolean b2 = false;
        d -= Math.min((--i) + (--i), l);
        vMeth1(Test.iFld, Test.iFld, Test.fFld);
        l -= i;
        l = 21925L;
        for (i17 = 7; i17 < 204; i17++) {
            for (i19 = 1; i19 < 3; i19++) {
                switch ((i17 % 7) + 116) {
                    case 116 :
                        b2 = false;
                        for (i21 = 1; i21 < 2; ++i21) {
                            Test.iFld >>>= i18;
                            i22 -= Test.iFld;
                            Test.iArrFld[i21] *= i22;
                        }
                        Test.fFld += l;
                        d3 = 1;
                        while ((++d3) < 2) {
                            Test.iArrFld[i17] -= 7;
                        }
                        Test.iArrFld[i17] -= i20;
                        if (b2) {
                            Test.instanceCount = i17;
                            Test.iFld *= ((int) (Test.fFld));
                            Test.fFld += ((i19 * i22) + i21) - Test.instanceCount;
                            d4 = 1;
                            while ((++d4) < 2) {
                                Test.iArrFld = FuzzerUtils.int1array(N, ((int) (-13855)));
                                Test.sFld &= ((short) (l));
                                i20 *= ((int) (d3));
                                switch (((int) (((d4 % 5) * 5) + 117))) {
                                    case 142 :
                                        i22 -= ((int) (Test.fFld));
                                        i20 = i18;
                                        Test.iArrFld[i19] += i19;
                                        Test.fFld = i20;
                                        if (b2) {
                                            Test.instanceCount = 4456776358785094206L;
                                            i += 157 + (d4 * d4);
                                            if (false)
                                                break;

                                            Test.fFld -= Test.fFld;
                                            Test.fArrFld[i17 - 1] = i17;
                                            if (Test.iFld != 0) {
                                                vMeth_check_sum += ((((((((((l + i) + Double.doubleToLongBits(d)) + i17) + i18) + i19) + i20) + (b2 ? 1 : 0)) + i21) + i22) + Double.doubleToLongBits(d3)) + Double.doubleToLongBits(d4);
                                                return;
                                            }
                                            if (i20 != 0) {
                                                vMeth_check_sum += ((((((((((l + i) + Double.doubleToLongBits(d)) + i17) + i18) + i19) + i20) + (b2 ? 1 : 0)) + i21) + i22) + Double.doubleToLongBits(d3)) + Double.doubleToLongBits(d4);
                                                return;
                                            }
                                        }
                                        break;
                                    case 119 :
                                        i ^= ((int) (l));
                                        break;
                                    case 129 :
                                        i20 *= ((int) (d4));
                                    case 124 :
                                        Test.iFld += ((int) (l));
                                        break;
                                    case 126 :
                                        Test.fFld -= i20;
                                        break;
                                }
                            }
                        } else if (b2) {
                            l = i;
                            vMeth_check_sum += ((((((((((l + i) + Double.doubleToLongBits(d)) + i17) + i18) + i19) + i20) + (b2 ? 1 : 0)) + i21) + i22) + Double.doubleToLongBits(d3)) + Double.doubleToLongBits(d4);
                            return;
                        }
                        break;
                    case 117 :
                        Test.iArrFld[i19] &= 9494;
                    case 118 :
                        i = i21;
                        break;
                    case 119 :
                        i20 -= i18;
                    case 120 :
                        l = i19;
                        break;
                    case 121 :
                        Test.sFld -= ((short) (i17));
                        break;
                    case 122 :
                        Test.instanceCount |= i20;
                        break;
                }
            }
        }
        vMeth_check_sum += ((((((((((l + i) + Double.doubleToLongBits(d)) + i17) + i18) + i19) + i20) + (b2 ? 1 : 0)) + i21) + i22) + Double.doubleToLongBits(d3)) + Double.doubleToLongBits(d4);
    }

    public void mainTest(String[] strArr1) {
        int i23 = 4;
        int i24 = 178;
        int i26 = 13;
        int i27 = 5;
        int i28 = -63892;
        int i29 = 38543;
        int i30 = 5;
        int i31 = 62634;
        int i32 = 4204;
        float f1 = -64.45F;
        double d5 = -2.6412;
        double dArr2[] = new double[N];
        long lArr2[] = new long[N];
        byte byArr2[] = new byte[N];
        FuzzerUtils.init(lArr2, 72L);
        FuzzerUtils.init(byArr2, ((byte) (44)));
        FuzzerUtils.init(dArr2, 0.124507);
        {
            final long ax$20 = Test.vMeth_check_sum;
            final int ax$21 = Test.iFld1;
            final int ax$22 = Test.iFld;
            try {
                byte[] ax$6 = new byte[]{ ((byte) (-104)), ((byte) (-125)), ((byte) (20)), ((byte) (126)) };
                byte[] ax$9 = new byte[16];
                char[] ax$14 = new char[1];
                char[] ax$18 = new char[100];
                for (int ax$5 = -672; ax$5 < (-672 + 17869); ax$5 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        for (int ax$10 = 0; ax$10 < iFld; ax$10++) {
                            long ax$11 = ax$9[ax$10];
                            long ax$12 = ax$6[ax$10];
                            vMeth_check_sum += Math.abs(ax$11 - ax$12);
                        }
                    } catch (Throwable ax$13) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$0 = true;
                    vMeth(-7671695805869811957L, -2120902449);
                    Test.ax$0 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        ax$18[iFld1] = ((char) ((ax$14[iFld1] & iFld) << iFld1));
                    } catch (Throwable ax$19) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                Test.vMeth_check_sum = ax$20;
                Test.iFld1 = ax$21;
                Test.iFld = ax$22;
            }
        }
        vMeth(182L, 7);
        for (i23 = 4; i23 < 185; ++i23) {
            for (i26 = 1; i26 < 28; i26++) {
                lArr2[i23 + 1] = ((long) (Test.fFld));
                if (Test.bFld)
                    break;

                i27 >>= ((int) (Test.instanceCount));
                byArr2[i26 + 1] >>>= ((byte) (i23));
                for (f1 = 1; f1 < 2; ++f1) {
                    Test.instanceCount += ((long) (((f1 * i26) + i27) - i28));
                    Test.bFld = Test.bFld;
                    Test.sFld *= ((short) (Test.instanceCount));
                    i27 = Test.sFld;
                    Test.bFld = true;
                    dArr2[i26] = i28;
                    i24 *= Test.sFld;
                    Test.iFld = ((int) (60.824F));
                    Test.iFld *= -5;
                    lArr2[((int) (f1 - 1))] |= i28;
                    d5 *= d5;
                    Test.instanceCount = Test.instanceCount;
                    Test.iArrFld[i26] = ((int) (Test.instanceCount));
                    i27 = i23;
                    Test.sFld = ((short) (12));
                }
                Test.iFld -= ((int) (Test.instanceCount));
                switch (((i26 % 9) * 5) + 19) {
                    case 29 :
                        for (i29 = 1; i29 < 2; ++i29) {
                            if (Test.bFld) {
                                Test.iArrFld[i23] = i30;
                            } else if (Test.bFld) {
                                i30 -= Test.byFld;
                                i24 = ((int) (d5));
                                Test.instanceCount = i23;
                                i27 -= i24;
                            }
                            Test.fFld += i29;
                            switch ((i29 % 1) + 110) {
                                case 110 :
                                    Test.instanceCount += ((i29 * i30) + f1) - i28;
                                    Test.fFld += i24;
                                    break;
                            }
                            Test.instanceCount = i26;
                            Test.fFld += 14 + (i29 * i29);
                            i24 += i29 - Test.instanceCount;
                            Test.iArrFld[i26 + 1] = i26;
                            Test.bFld1 = Test.bFld;
                            i28 = 43688;
                            Test.fFld = Test.instanceCount;
                            i24 += ((int) (Test.instanceCount));
                            i24 = Test.byFld;
                            Test.instanceCount <<= i29;
                            i30 -= i26;
                        }
                        i30 <<= i29;
                        Test.fArrFld[i23 - 1] += 6;
                        for (i31 = 2; i31 > 1; --i31) {
                            switch (((i32 >>> 1) % 2) + 121) {
                                case 121 :
                                    Test.iFld >>= -40966;
                                    if (Test.bFld1)
                                        continue;

                                    Test.iFld += i31;
                                    if (false)
                                        continue;

                                    Test.instanceCount <<= Test.instanceCount;
                                    break;
                                case 122 :
                                    switch (i26 + 78) {
                                        case 78 :
                                            lArr2[i26 - 1] += Test.sFld;
                                            i24 = Test.iFld;
                                            i27 *= i30;
                                            if (false)
                                                break;

                                            Test.instanceCount += (-13) + (i31 * i31);
                                            Test.instanceCount = Test.byFld;
                                            i24 |= i23;
                                            Test.instanceCount = i26;
                                            switch (((i23 % 10) * 5) + 16) {
                                                case 26 :
                                                    i32 *= i26;
                                                    Test.sArrFld[i23 - 1] += ((short) (i32));
                                                    i27 *= 0;
                                                    lArr2[i31 - 1] -= i24;
                                                    d5 += i28;
                                                    d5 = Test.sFld;
                                                    i30 += i31;
                                                    i27 += ((i31 * i27) + i31) - Test.instanceCount;
                                                    Test.bFld1 = Test.bFld1;
                                                    break;
                                                case 32 :
                                                    if (Test.bFld1)
                                                        continue;

                                                case 19 :
                                                    Test.instanceCount *= ((long) (f1));
                                                    break;
                                                case 17 :
                                                    Test.fFld = i26;
                                                    break;
                                                case 18 :
                                                    i32 = i26;
                                                case 61 :
                                                    i28 = i32;
                                                case 30 :
                                                    Test.instanceCount = -9;
                                                    break;
                                                case 46 :
                                                    i24 = ((int) (Test.instanceCount));
                                                case 21 :
                                                    Test.instanceCount = Test.instanceCount;
                                                case 38 :
                                                    Test.iArrFld[i31 + 1] *= ((int) (d5));
                                                    break;
                                                default :
                                                    Test.instanceCount *= Test.sFld;
                                            }
                                            break;
                                        case 79 :
                                            i28 >>>= i27;
                                        case 80 :
                                        case 81 :
                                            i30 = 240;
                                            break;
                                        case 82 :
                                            Test.iArrFld[i31] ^= i27;
                                            break;
                                        case 83 :
                                            i24 -= -11195;
                                            break;
                                        case 84 :
                                            i32 = i26;
                                            break;
                                        case 85 :
                                        case 86 :
                                            d5 += i28;
                                            break;
                                        case 87 :
                                            Test.fFld += i31 * i31;
                                            break;
                                        case 88 :
                                            Test.fFld *= i26;
                                            break;
                                        case 89 :
                                            Test.iFld = i30;
                                        case 90 :
                                            Test.iFld = Test.iFld;
                                            break;
                                        case 91 :
                                            Test.iArrFld[i31 - 1] >>>= i27;
                                        case 92 :
                                            Test.byFld = ((byte) (-2));
                                            break;
                                        case 93 :
                                            Test.fFld = Test.sFld;
                                        case 94 :
                                            Test.iFld += i31;
                                            break;
                                        case 95 :
                                            i32 += i31 + Test.iFld;
                                            break;
                                        case 96 :
                                            i28 += i31 - i30;
                                            break;
                                        case 97 :
                                            i30 += i31 | i32;
                                            break;
                                        case 98 :
                                            i28 -= ((int) (f1));
                                            break;
                                        case 99 :
                                            i28 += i31;
                                            break;
                                        case 100 :
                                            Test.sFld += ((short) (i31 ^ Test.instanceCount));
                                            break;
                                        case 101 :
                                            i28 += i31 * i27;
                                            break;
                                        case 102 :
                                            Test.iArrFld[i31 - 1] = ((int) (1395593167331604211L));
                                            break;
                                        case 103 :
                                        case 104 :
                                            i32 += ((int) (Test.fFld));
                                            break;
                                        case 105 :
                                            i30 += i31 ^ Test.instanceCount;
                                        case 106 :
                                            Test.iFld <<= i31;
                                        case 107 :
                                            i28 -= -7;
                                        case 108 :
                                            Test.sFld = ((short) (i32));
                                            break;
                                        case 109 :
                                            Test.iFld += i31 * i31;
                                            break;
                                        case 110 :
                                            Test.bFld = Test.bFld;
                                            break;
                                        case 111 :
                                            Test.instanceCount = i28;
                                        case 112 :
                                            Test.fFld += i31 + Test.byFld;
                                        case 113 :
                                            i24 = i24;
                                            break;
                                        case 114 :
                                            i32 = Test.iFld;
                                            break;
                                        case 115 :
                                            Test.byFld += ((byte) (((i31 * i24) + i32) - Test.fFld));
                                            break;
                                        case 116 :
                                            Test.fArrFld = Test.fArrFld;
                                        case 117 :
                                            Test.sFld <<= ((short) (i23));
                                        case 118 :
                                            Test.iFld += i31;
                                        case 119 :
                                        case 120 :
                                            i28 &= Test.sFld;
                                            break;
                                        case 121 :
                                            i27 *= 5;
                                            break;
                                        case 122 :
                                            d5 *= i23;
                                            break;
                                        case 123 :
                                            i30 = ((int) (-3238803643737246514L));
                                            break;
                                        case 124 :
                                            lArr2[i31 + 1] = 22;
                                            break;
                                        case 125 :
                                            Test.instanceCount = i27;
                                        case 126 :
                                            i28 *= ((int) (91L));
                                            break;
                                        case 127 :
                                            i32 += i23;
                                        case 128 :
                                            i32 ^= i27;
                                            break;
                                        case 129 :
                                            Test.sFld += ((short) (i31));
                                            break;
                                        case 130 :
                                            i27 = i27;
                                            break;
                                        case 131 :
                                            i30 = ((int) (f1));
                                        case 132 :
                                            Test.fFld = i28;
                                            break;
                                        case 133 :
                                            i24 = i23;
                                            break;
                                        case 134 :
                                            Test.sFld += ((short) (((i31 * f1) + Test.instanceCount) - Test.iFld));
                                        case 135 :
                                            i27 <<= Test.iFld;
                                            break;
                                        case 136 :
                                            i30 += i27;
                                        case 137 :
                                            Test.instanceCount += 5;
                                            break;
                                        case 138 :
                                            Test.iFld1 += i31;
                                        case 139 :
                                            if (false)
                                                break;

                                            break;
                                        case 140 :
                                            Test.bFld = Test.bFld;
                                        case 141 :
                                            Test.instanceCount = -63417;
                                            break;
                                        case 142 :
                                            i24 += i31;
                                            break;
                                        case 143 :
                                            Test.fFld = f1;
                                            break;
                                        case 144 :
                                            Test.sArrFld[i23 + 1] = ((short) (i24));
                                            break;
                                        case 145 :
                                            i28 -= Test.iFld2;
                                            break;
                                        case 146 :
                                            Test.iFld1 = Test.sFld;
                                            break;
                                        case 147 :
                                            i30 = 137;
                                            break;
                                    }
                                default :
                            }
                        }
                    case 34 :
                        Test.fFld -= i24;
                        break;
                    case 37 :
                        i28 += ((int) (Test.instanceCount));
                        break;
                    case 39 :
                        i27 += i26 - Test.instanceCount;
                        break;
                    case 31 :
                    case 41 :
                        i28 = Test.iFld1;
                        break;
                    case 47 :
                        Test.iFld2 = i24;
                    case 28 :
                        Test.fFld -= ((float) (d5));
                        break;
                    case 32 :
                        Test.iFld = 12;
                }
            }
        }
        FuzzerUtils.out.println((((("i23 i24 i26 = " + i23) + ",") + i24) + ",") + i26);
        FuzzerUtils.out.println((((("i27 f1 i28 = " + i27) + ",") + Float.floatToIntBits(f1)) + ",") + i28);
        FuzzerUtils.out.println((((("d5 i29 i30 = " + Double.doubleToLongBits(d5)) + ",") + i29) + ",") + i30);
        FuzzerUtils.out.println((((("i31 i32 lArr2 = " + i31) + ",") + i32) + ",") + FuzzerUtils.checkSum(lArr2));
        FuzzerUtils.out.println((("byArr2 dArr2 = " + FuzzerUtils.checkSum(byArr2)) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr2)));
        FuzzerUtils.out.println((((("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount) + ",") + Test.iFld) + ",") + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println((((("Test.sFld Test.bFld Test.byFld = " + Test.sFld) + ",") + (Test.bFld ? 1 : 0)) + ",") + Test.byFld);
        FuzzerUtils.out.println((((("Test.bFld1 Test.iFld1 Test.iFld2 = " + (Test.bFld1 ? 1 : 0)) + ",") + Test.iFld1) + ",") + Test.iFld2);
        FuzzerUtils.out.println((((("Test.iArrFld Test.fArrFld Test.sArrFld = " + FuzzerUtils.checkSum(Test.iArrFld)) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld))) + ",") + FuzzerUtils.checkSum(Test.sArrFld));
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    static Boolean ax$0 = false;

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }
}
