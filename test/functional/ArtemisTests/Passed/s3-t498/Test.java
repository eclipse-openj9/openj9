// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = -57697L;

    public static boolean bFld = false;

    public static short sFld = -24322;

    public static int iFld = -23163;

    public static byte byFld = 84;

    public static float fFld = -118.97F;

    public static double dFld = 0.74901;

    public static long[] lArrFld = new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 5422397473649169897L);
    }

    public static long vMeth_check_sum = 0;

    public static long iMeth_check_sum = 0;

    public static long iMeth1_check_sum = 0;

    public static long fMeth_check_sum = 0;

    public static void vMeth(int i1, int i2) {
        int[][] iArr = new int[N][N];
        FuzzerUtils.init(iArr, 11);
        i1 -= (((i2 + i1) - (i2 >>= -5)) + iArr[(i1 >>> 1) % N][(i1 >>> 1) % N]);
        vMeth_check_sum += i1 + i2 + FuzzerUtils.checkSum(iArr);
    }

    public static float fMeth(int i9) {
        if (ax$8) {
            long ax$976 = iMeth1_check_sum;
            long ax$977 = fMeth_check_sum;
            try {
                if (iMeth1_check_sum != fMeth_check_sum)
                    ;
            } catch (Throwable ax$978) {
            } finally {
                iMeth1_check_sum = ax$976;
                fMeth_check_sum = ax$977;
            }
            return (float) 0.9711607158784733;
        }
        int i10 = -156, i11 = -10, i12 = -19267, i13 = -133, i14 = 0, i15 = -4, i16 = 4, i17 = 29772, iArr1[] = new int[N];
        long l1 = -3497L;
        double d2 = 1.101513;
        float f = 0.593F;
        short[] sArr1 = new short[N];
        FuzzerUtils.init(iArr1, -5);
        FuzzerUtils.init(sArr1, (short) 478);
        i9 = i9;
        i9 += i9;
        i9 = i9;
        for (i10 = 5; i10 < 122; ++i10) {
            i11 = i9;
            i9 = i11;
            for (l1 = 1; l1 < 5; l1++) {
                short s = 17091;
                i12 += (int) Test.instanceCount;
                switch(((0 >>> 1) % 9) + 19) {
                    case 19:
                        for (i13 = 2; i10 < i13; i13--) {
                            i11 <<= i9;
                            i9 = i9;
                            i9 -= 168;
                            iArr1[(int) (l1)] *= 0;
                            if (true)
                                continue;
                            i12 = i9;
                            if (Test.bFld)
                                break;
                            Test.instanceCount = (long) d2;
                            Test.lArrFld[i10 + 1] *= Test.instanceCount;
                            i11 |= (int) 3470972941L;
                        }
                        break;
                    case 20:
                        i11 += (int) l1;
                        switch((i10 % 2) + 93) {
                            case 93:
                                i11 += s;
                                i12 -= (int) l1;
                                i14 = i9;
                                i9 = i12;
                                i11 = (int) Test.instanceCount;
                                sArr1[(int) (l1 - 1)] -= (short) f;
                                i9 = i9;
                                i9 += (int) Test.instanceCount;
                                for (i15 = 1; i15 < 2; ++i15) {
                                    i16 *= (int) Test.instanceCount;
                                    iArr1[(int) (l1)] <<= -53;
                                    switch((int) ((l1 % 7) + 83)) {
                                        case 83:
                                            i11 = i14;
                                            i12 = (int) f;
                                            Test.instanceCount += -137;
                                            break;
                                        case 84:
                                            i12 += i9;
                                            break;
                                        case 85:
                                            i16 -= s;
                                        case 86:
                                            d2 = l1;
                                        case 87:
                                            f = 78;
                                            break;
                                        case 88:
                                            Test.lArrFld[i15] = i9;
                                            break;
                                        case 89:
                                    }
                                }
                            case 94:
                                if (i16 != 0) {
                                }
                                break;
                        }
                        break;
                    case 21:
                        i9 -= i13;
                        break;
                    case 22:
                        d2 = i16;
                        break;
                    case 23:
                        iArr1[i10 - 1] <<= (int) l1;
                    case 24:
                        i11 += (-7301 + (l1 * l1));
                    case 25:
                        iArr1[(int) (l1 - 1)] -= s;
                        break;
                    case 26:
                        try {
                            i11 = (i14 % iArr1[(int) (l1 + 1)]);
                            iArr1[i10] = (24342 / i13);
                            i16 = (i17 % i15);
                        } catch (ArithmeticException a_e) {
                        }
                        break;
                    case 27:
                }
            }
        }
        long meth_res = i9 + i10 + i11 + l1 + i12 + i13 + i14 + Double.doubleToLongBits(d2) + Float.floatToIntBits(f) + i15 + i16 + i17 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr1);
        fMeth_check_sum += meth_res;
        return (float) meth_res;
    }

    public static int iMeth1(int i8, long l) {
        double d1 = 121.72637, d3 = -103.98524;
        int i18 = 11, i19 = 127, i20 = -14, i21 = -82, i22 = -7914, i23 = -11, i24 = 33, i25 = 190, i26 = -6, i27 = -1, i28 = 1, iArr2[] = new int[N];
        byte by1 = -40, byArr[] = new byte[N];
        float f1 = -11.551F;
        short[] sArr = new short[N];
        FuzzerUtils.init(sArr, (short) 4581);
        FuzzerUtils.init(iArr2, 10);
        FuzzerUtils.init(byArr, (byte) -15);
        d1 = (sArr[(i8 >>> 1) % N] - ((Test.instanceCount + l) - (Test.instanceCount + i8)));
        {
            java.io.PrintStream ax$981 = System.out;
            java.io.PrintStream ax$982 = System.err;
            java.io.PrintStream ax$983 = new java.io.PrintStream(new java.io.OutputStream() {

                @Override
                public void write(int b) throws java.io.IOException {
                    // DO NOTHING: DISCARD ALL OUTPUTS
                }
            });
            System.setOut(ax$983);
            System.setErr(ax$983);
            try {
                ax$8 = true;
                for (int ax$979 = 0; ax$979 < 6682; ax$979 += 1) fMeth(-587803834);
            } catch (java.lang.Throwable ax$980) {
            } finally {
                ax$8 = false;
            }
            System.setOut(ax$981);
            System.setErr(ax$982);
        }
        fMeth(i8);
        i18 = 1;
        do {
            Test.instanceCount += i8;
            for (i19 = 1; i19 < 3; ++i19) {
                Test.instanceCount += i18;
            }
            i20 = -12212;
            for (i21 = 1; i21 < 3; ++i21) {
                iArr2[(i19 >>> 1) % N] <<= i21;
                i8 = i8;
            }
            for (i23 = i18; i23 < 3; i23 += 3) {
                if (i20 != 0) {
                }
                iArr2[i23] = i21;
            }
            i25 = 1;
            while (++i25 < 3) {
                i20 = i24;
                i26 = 1;
                do {
                    try {
                        iArr2[i18] = (-29021 / i19);
                        i22 = (-106 % i25);
                        iArr2[i25 - 1] = (i22 / 33381);
                    } catch (ArithmeticException a_e) {
                    }
                } while (++i26 < 1);
                l += (i25 * Test.sFld);
                for (d3 = 1; d3 < 1; ++d3) {
                    i8 |= i26;
                    i22 = i24;
                    switch(((i25 % 3) * 5) + 104) {
                        case 112:
                            i22 = -2;
                            Test.lArrFld[i25 + 1] |= i19;
                            l += i18;
                            i24 >>= by1;
                            switch((i18 % 2) + 94) {
                                case 94:
                                    Test.instanceCount = l;
                                    Test.lArrFld = Test.lArrFld;
                                    i22 = i21;
                                    f1 *= i20;
                                    Test.sFld >>>= Test.sFld;
                                    Test.lArrFld[i18] = i24;
                                    switch((((i21 >>> 1) % 5) * 5) + 100) {
                                        case 120:
                                            i27 += 145;
                                            i8 += (int) (d3 * d3);
                                            i24 += (int) ((long) d3 ^ i19);
                                            break;
                                        case 116:
                                            i20 *= (int) f1;
                                            break;
                                        case 112:
                                            try {
                                                i28 = (i19 / -1150953459);
                                                i22 = (iArr2[(int) (d3 + 1)] % iArr2[(int) (d3)]);
                                                i20 = (i18 % iArr2[i25]);
                                            } catch (ArithmeticException a_e) {
                                            }
                                            break;
                                        case 111:
                                            i27 = (int) Test.instanceCount;
                                        case 124:
                                            i8 <<= (int) Test.instanceCount;
                                            break;
                                    }
                                    break;
                                case 95:
                                    byArr = byArr;
                                    break;
                                default:
                                    i22 -= 11;
                            }
                            break;
                        case 116:
                            i28 *= i21;
                            break;
                        case 115:
                            f1 += (-39917 + (d3 * d3));
                            break;
                    }
                }
            }
        } while (++i18 < 189);
        long meth_res = i8 + l + Double.doubleToLongBits(d1) + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + Double.doubleToLongBits(d3) + i27 + by1 + Float.floatToIntBits(f1) + i28 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(byArr);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(byte by, int i3, int i4) {
        if (ax$984) {
            try {
                float[] ax$987 = new float[10];
                float[] ax$985 = { -0.0f, -0.0f, 0.0f, -0.0f };
                for (int ax$986 = 0; ax$986 < 100; ax$986++) {
                    ax$985[ax$986] = 0.0f;
                    ax$987[ax$986] = 2.0f;
                }
            } catch (Throwable ax$988) {
            } finally {
            }
            return 1065916675;
        }
        double d = -101.9998, dArr[] = new double[N];
        int i5 = 61, i6 = -121, i7 = 73, i29 = -178, i30 = -10, i31 = -4, i32 = -34877, i33 = 12, i34 = -4, iArr3[] = new int[N];
        float f2 = 0.426F;
        byte by2 = 70;
        FuzzerUtils.init(iArr3, 232);
        FuzzerUtils.init(dArr, 0.117889);
        d *= 164;
        i4 &= (--i3);
        for (i5 = 13; i5 < 247; ++i5) {
            Test.instanceCount -= Math.abs(i4--);
            i7 = 1;
            do {
                Test.instanceCount += Math.max(Math.abs(iMeth1(-12446, Test.instanceCount)), i4);
                iArr3[i7 - 1] -= by;
                i4 = -171;
                for (i29 = 1; i29 < 1; ++i29) {
                    if (Test.bFld)
                        continue;
                }
                for (i31 = i7; i31 < 1; i31++) {
                    Test.lArrFld = Test.lArrFld;
                    if (Test.bFld) {
                        f2 += Test.instanceCount;
                        i3 = i33;
                        iArr3[i31] += (int) 1.90720;
                        dArr[i5] -= i4;
                        i33 -= i31;
                        f2 -= i4;
                        i34 >>= i7;
                        f2 = i4;
                        i32 <<= i5;
                        i4 = (int) f2;
                        iArr3[i5] += (int) Test.instanceCount;
                        by = (byte) 202;
                        by = (byte) i34;
                    }
                    i34 = i33;
                    iArr3[i31] = (int) 27.32140;
                    Test.bFld = Test.bFld;
                    i32 = i7;
                    i32 += (int) Test.instanceCount;
                    i33 += i29;
                    by2 = (byte) i31;
                    Test.bFld = false;
                    if (Test.bFld)
                        continue;
                    i3 ^= i32;
                    i33 += Test.iFld;
                }
            } while (++i7 < 3);
        }
        long meth_res = by + i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + i29 + i30 + i31 + i32 + Float.floatToIntBits(f2) + i33 + i34 + by2 + FuzzerUtils.checkSum(iArr3) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {
        int i = -47042, i35 = -83, i36 = 6, i37 = -4, i38 = -6, i39 = 0, i40 = -7, i41 = 45, i42 = -4, i43 = -88, i44 = -11, i45 = 108, iArr4[] = new int[N];
        float f3 = 1.381F, f4 = 53.564F, fArr[] = new float[N];
        double[] dArr1 = new double[N];
        FuzzerUtils.init(iArr4, 1);
        FuzzerUtils.init(fArr, -17.919F);
        FuzzerUtils.init(dArr1, 8.123283);
        i = 1;
        do {
            vMeth((int) (iMeth(Test.byFld, i, i35) * 4076360033L), i);
            Test.iFld >>= (int) Test.instanceCount;
            if (Test.bFld)
                break;
            switch(((-10 >>> 1) % 5) + 12) {
                case 12:
                    iArr4[i + 1] <<= -15174;
                    switch((i % 10) + 106) {
                        case 106:
                            for (f3 = 1; f3 < 27; ++f3) {
                                Test.instanceCount += (long) (((f3 * i) + i) - i35);
                                iArr4[(int) (f3 - 1)] = Test.iFld;
                                switch((i % 2) + 21) {
                                    case 21:
                                        switch((((i36 >>> 1) % 1) * 5) + 80) {
                                            case 81:
                                                fArr[i] = f3;
                                                for (f4 = 1; f4 < 2; f4++) {
                                                    float f5 = 0.621F;
                                                    i35 = (int) Test.instanceCount;
                                                    Test.lArrFld[i] = Test.instanceCount;
                                                    f5 = f5;
                                                    if (Test.bFld)
                                                        break;
                                                }
                                                i37 *= i35;
                                                for (i38 = i; 2 > i38; i38++) {
                                                    Test.instanceCount = 4;
                                                    if (Test.bFld)
                                                        break;
                                                    i36 <<= i40;
                                                    i41 = i35;
                                                    i37 += Test.iFld;
                                                    i36 += -209;
                                                    if (Test.bFld)
                                                        continue;
                                                    Test.lArrFld[(int) (f3)] += Test.iFld;
                                                    try {
                                                        iArr4[i] = (22062 / i41);
                                                        i41 = (-42283 % iArr4[i38]);
                                                        i37 = (57 % i41);
                                                    } catch (ArithmeticException a_e) {
                                                    }
                                                    Test.iFld = (int) Test.instanceCount;
                                                    iArr4 = iArr4;
                                                    i40 &= i36;
                                                }
                                                {
                                                    java.io.PrintStream ax$0 = System.out;
                                                    java.io.PrintStream ax$1 = System.err;
                                                    java.io.PrintStream ax$2 = new java.io.PrintStream(new java.io.OutputStream() {

                                                        @Override
                                                        public void write(int b) throws java.io.IOException {
                                                            // DO NOTHING: DISCARD ALL OUTPUTS
                                                        }
                                                    });
                                                    System.setOut(ax$2);
                                                    System.setErr(ax$2);
                                                    {
                                                        boolean ax$7 = false;
                                                        for (int ax$6 = -162; ax$6 < 8835; ax$6 += 7) {
                                                            if (!ax$7) {
                                                                ax$7 = true;
                                                                {
                                                                    System.setOut(ax$0);
                                                                    System.setErr(ax$1);
                                                                    for (i42 = 1; i42 < 2; i42 += 2) {
                                                                        Test.instanceCount *= i39;
                                                                        i44 = (int) f4;
                                                                        switch((int) ((f3 % 10) + 33)) {
                                                                            case 33:
                                                                                i40 += (i42 ^ Test.instanceCount);
                                                                                Test.instanceCount -= Test.instanceCount;
                                                                                Test.bFld = Test.bFld;
                                                                                Test.iFld -= i38;
                                                                                i39 += (int) f3;
                                                                                Test.iFld += (((i42 * Test.instanceCount) + i44) - Test.instanceCount);
                                                                            case 34:
                                                                                i35 -= i37;
                                                                                Test.fFld += (i42 * i42);
                                                                                break;
                                                                            case 35:
                                                                                Test.iFld -= i36;
                                                                                i39 += i42;
                                                                                break;
                                                                            case 36:
                                                                                i37 >>>= (int) Test.instanceCount;
                                                                                i44 += i42;
                                                                                iArr4[i42] = i41;
                                                                                break;
                                                                            case 37:
                                                                                i35 += (i42 ^ i43);
                                                                                i41 >>= i38;
                                                                                i36 += (int) Test.fFld;
                                                                            case 38:
                                                                                dArr1[i42 + 1] -= Test.instanceCount;
                                                                                i37 += (((i42 * i36) + i36) - i44);
                                                                                Test.instanceCount -= i38;
                                                                                Test.iFld = i39;
                                                                                Test.dFld = Test.instanceCount;
                                                                                i41 = (int) Test.dFld;
                                                                                i36 += (((i42 * i35) + i38) - Test.instanceCount);
                                                                                Test.fFld = i43;
                                                                                Test.dFld += i42;
                                                                                Test.fFld = Test.fFld;
                                                                                Test.iFld <<= -153;
                                                                                i39 = i45;
                                                                                Test.instanceCount = i38;
                                                                                switch(((i42 % 6) * 5) + 109) {
                                                                                    case 135:
                                                                                        fArr = fArr;
                                                                                        i37 += (((i42 * i36) + Test.instanceCount) - i37);
                                                                                        i36 = i36;
                                                                                        i41 += i38;
                                                                                        i36 *= i36;
                                                                                        switch((((i43 >>> 1) % 6) * 5) + 80) {
                                                                                            case 81:
                                                                                                i44 += i42;
                                                                                                Test.iFld += (i42 * i42);
                                                                                                Test.instanceCount = 238;
                                                                                                break;
                                                                                            case 94:
                                                                                                fArr[(i44 >>> 1) % N] = f4;
                                                                                                break;
                                                                                            case 89:
                                                                                                i35 -= (int) Test.dFld;
                                                                                            case 86:
                                                                                                Test.sFld <<= (short) i36;
                                                                                            case 105:
                                                                                                i44 |= i45;
                                                                                                break;
                                                                                            case 87:
                                                                                                Test.instanceCount = Test.iFld;
                                                                                                break;
                                                                                            default:
                                                                                                Test.dFld *= i40;
                                                                                        }
                                                                                        break;
                                                                                    case 121:
                                                                                        Test.instanceCount *= i;
                                                                                        break;
                                                                                    case 128:
                                                                                        Test.fFld += Test.iFld;
                                                                                    case 120:
                                                                                        i35 = i37;
                                                                                    case 112:
                                                                                        i41 += i45;
                                                                                    case 138:
                                                                                        Test.fFld -= i43;
                                                                                    default:
                                                                                        i37 = i40;
                                                                                }
                                                                                break;
                                                                            case 39:
                                                                                iArr4[i + 1] = (int) -6003859025063617470L;
                                                                            case 40:
                                                                                i43 -= i39;
                                                                            case 41:
                                                                                if (Test.bFld)
                                                                                    continue;
                                                                            case 42:
                                                                        }
                                                                    }
                                                                    System.setOut(ax$2);
                                                                    System.setErr(ax$2);
                                                                }
                                                            }
                                                            int ax$3 = i40;
                                                            boolean ax$4 = bFld;
                                                            try {
                                                                if (i40 == 333) {
                                                                } else {
                                                                    bFld = true;
                                                                }
                                                            } catch (Throwable ax$5) {
                                                            } finally {
                                                                i40 = ax$3;
                                                                bFld = ax$4;
                                                            }
                                                        }
                                                    }
                                                    System.setOut(ax$0);
                                                    System.setErr(ax$1);
                                                }
                                            default:
                                                Test.fFld = i43;
                                        }
                                        break;
                                    case 22:
                                        iArr4[i - 1] += (int) 103.108419;
                                    default:
                                        Test.dFld = f4;
                                }
                            }
                            break;
                        case 107:
                            iArr4[i] *= (int) Test.instanceCount;
                            break;
                        case 108:
                            i37 <<= (int) 13L;
                        case 109:
                            i43 *= 3558;
                        case 110:
                            Test.fFld += i;
                            break;
                        case 111:
                            fArr[i - 1] = 220;
                            break;
                        case 112:
                            Test.sFld -= (short) 53;
                            break;
                        case 113:
                            try {
                                Test.iFld = (iArr4[i] / 91);
                                iArr4[i] = (i44 / 197);
                                i35 = (i37 % 33249);
                            } catch (ArithmeticException a_e) {
                            }
                            break;
                        case 114:
                            Test.dFld %= (i44 | 1);
                            break;
                        case 115:
                    }
                case 13:
                    Test.fFld += i;
                    break;
                case 14:
                    i44 = (int) Test.instanceCount;
                case 15:
                    Test.sFld = (short) i44;
                    break;
                case 16:
                    Test.lArrFld[i - 1] ^= Test.instanceCount;
                    break;
                default:
                    Test.byFld &= (byte) Test.sFld;
            }
        } while (++i < 188);
        FuzzerUtils.out.println("i i35 f3 = " + i + "," + i35 + "," + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i36 f4 i37 = " + i36 + "," + Float.floatToIntBits(f4) + "," + i37);
        FuzzerUtils.out.println("i38 i39 i40 = " + i38 + "," + i39 + "," + i40);
        FuzzerUtils.out.println("i41 i42 i43 = " + i41 + "," + i42 + "," + i43);
        FuzzerUtils.out.println("i44 i45 iArr4 = " + i44 + "," + i45 + "," + FuzzerUtils.checkSum(iArr4));
        FuzzerUtils.out.println("fArr dArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));
        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.sFld = " + Test.instanceCount + "," + (Test.bFld ? 1 : 0) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.iFld Test.byFld Test.fFld = " + Test.iFld + "," + Test.byFld + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.dFld Test.lArrFld = " + Double.doubleToLongBits(Test.dFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }

    public static void main(String[] strArr) {
        if (ax$994) {
            long ax$1179 = iMeth1_check_sum;
            long ax$1180 = fMeth_check_sum;
            try {
                if (iMeth1_check_sum != fMeth_check_sum)
                    ;
            } catch (Throwable ax$1181) {
            } finally {
                iMeth1_check_sum = ax$1179;
                fMeth_check_sum = ax$1180;
            }
            return;
        }
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$8 = false;

    private static Boolean ax$984 = false;

    private static Boolean ax$994 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  vMeth ->  vMeth mainTest
// DEBUG  iMeth ->  iMeth mainTest
// DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
// DEBUG  fMeth ->  fMeth iMeth1 iMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
