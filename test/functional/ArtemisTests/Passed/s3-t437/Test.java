// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = -6553502000856971316L;

    public static float fFld = 1.923F;

    public static boolean bFld = true;

    public volatile float fFld1 = -22.59F;

    public static int[] iArrFld = new int[N];

    public static int[] iArrFld1 = new int[N];

    public static long[] lArrFld = new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 179);
        FuzzerUtils.init(Test.iArrFld1, -5);
        FuzzerUtils.init(Test.lArrFld, 5322155906341232084L);
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {
        int i9 = -10, i10 = -51121, i11 = -5, i12 = 143, i13 = 5849, i14 = 181, i15 = 3;
        short s = -19210;
        double d1 = -2.27972;
        boolean b = false;
        byte by = 0;
        for (i9 = 2; i9 < 117; i9++) {
            i10 += (36069 + (i9 * i9));
            for (i11 = 1; i11 < 5; i11++) {
                i10 -= i11;
                Test.iArrFld[i11 + 1] += i11;
            }
            for (i13 = 1; i13 < 5; ++i13) {
                i12 -= i13;
                i15 = 1;
                do {
                    int i16 = -50674;
                    s = (short) Test.instanceCount;
                    i10 += (((i15 * Test.instanceCount) + Test.instanceCount) - i13);
                    i10 += (1189 + (i15 * i15));
                    Test.fFld = i9;
                    i12 = i9;
                    Test.instanceCount *= Test.instanceCount;
                    i14 -= i9;
                    i14 += (int) d1;
                    Test.instanceCount = i12;
                    Test.iArrFld[i9 + 1] >>>= i12;
                    switch(((i12 >>> 1) % 8) + 84) {
                        case 84:
                            Test.instanceCount += -2;
                            switch((i15 % 2) + 121) {
                                case 121:
                                    switch(((i15 % 2) * 5) + 74) {
                                        case 83:
                                            if (i13 != 0) {
                                                vMeth2_check_sum += i9 + i10 + i11 + i12 + i13 + i14 + i15 + s + Double.doubleToLongBits(d1) + (b ? 1 : 0) + by;
                                                return;
                                            }
                                            if (b)
                                                break;
                                            try {
                                                i10 = (Test.iArrFld1[i9 - 1] / -55583);
                                                Test.iArrFld[i15] = (33103 / i10);
                                                Test.iArrFld1[i9] = (i9 / 244);
                                            } catch (ArithmeticException a_e) {
                                            }
                                            d1 = s;
                                            if (i14 != 0) {
                                                vMeth2_check_sum += i9 + i10 + i11 + i12 + i13 + i14 + i15 + s + Double.doubleToLongBits(d1) + (b ? 1 : 0) + by;
                                                return;
                                            }
                                            if (i10 != 0) {
                                                vMeth2_check_sum += i9 + i10 + i11 + i12 + i13 + i14 + i15 + s + Double.doubleToLongBits(d1) + (b ? 1 : 0) + by;
                                                return;
                                            }
                                            i10 &= i13;
                                            Test.instanceCount = i9;
                                            switch(((i9 % 10) * 5) + 62) {
                                                case 94:
                                                    switch(((i15 >>> 1) % 3) + 32) {
                                                        case 32:
                                                            i12 += (int) Test.fFld;
                                                            i12 += by;
                                                            break;
                                                        case 33:
                                                            Test.fFld += i15;
                                                            Test.lArrFld[i15] += i11;
                                                            i14 = (int) Test.instanceCount;
                                                            break;
                                                        case 34:
                                                            try {
                                                                Test.iArrFld[i13] = (i12 / i12);
                                                                Test.iArrFld1[i13] = (-53493 % Test.iArrFld1[i13 + 1]);
                                                                i12 = (i15 % i14);
                                                            } catch (ArithmeticException a_e) {
                                                            }
                                                            break;
                                                    }
                                                case 109:
                                                    i10 = (int) Test.instanceCount;
                                                    break;
                                                case 90:
                                                    i14 += (49308 + (i15 * i15));
                                                case 91:
                                                    i16 += i15;
                                                    break;
                                                case 66:
                                                    i14 -= 2224;
                                                    break;
                                                case 88:
                                                    Test.fFld = i12;
                                                    break;
                                                case 105:
                                                    Test.fFld = 1L;
                                                    break;
                                                case 78:
                                                    i10 = (int) 231L;
                                                    break;
                                                case 92:
                                                    d1 += Test.instanceCount;
                                                    break;
                                                case 74:
                                                    i16 = (int) Test.fFld;
                                                default:
                                                    i14 += i15;
                                            }
                                        case 78:
                                            Test.instanceCount = i13;
                                            break;
                                        default:
                                            i12 -= (int) Test.instanceCount;
                                    }
                                    break;
                                case 122:
                                    Test.instanceCount >>= i10;
                            }
                            break;
                        case 85:
                            i10 = i15;
                            break;
                        case 86:
                            i10 *= i11;
                            break;
                        case 87:
                            Test.fFld = Test.instanceCount;
                            break;
                        case 88:
                            i12 ^= (int) Test.instanceCount;
                            break;
                        case 89:
                            Test.instanceCount -= i15;
                            break;
                        case 90:
                            if (i16 != 0) {
                                vMeth2_check_sum += i9 + i10 + i11 + i12 + i13 + i14 + i15 + s + Double.doubleToLongBits(d1) + (b ? 1 : 0) + by;
                                return;
                            }
                            break;
                        case 91:
                            Test.fFld += (-199 + (i15 * i15));
                            break;
                        default:
                            Test.fFld -= i13;
                    }
                } while (++i15 < 2);
            }
        }
        vMeth2_check_sum += i9 + i10 + i11 + i12 + i13 + i14 + i15 + s + Double.doubleToLongBits(d1) + (b ? 1 : 0) + by;
    }

    public static void vMeth1(int i8) {
        if (ax$10) {
            int ax$14 = i8;
            try {
                byte[] ax$13 = new byte[16];
                byte[] ax$11 = new byte[16];
                for (int ax$12 = 0; ax$12 < ax$13.length; ax$12 += 1) {
                    ax$13[ax$12] = (byte) (ax$11[ax$12] >>> (-i8));
                }
            } catch (Throwable ax$15) {
            } finally {
                i8 = ax$14;
            }
            return;
        }
        float f = -8.795F, fArr[] = new float[N];
        int i17 = -2, i18 = 0, i19 = 228, i20 = 2, i21 = -202;
        short s1 = 17420;
        byte by1 = -17;
        double d2 = -58.108796, dArr[] = new double[N];
        FuzzerUtils.init(dArr, 17.49788);
        FuzzerUtils.init(fArr, 2.499F);
        Test.iArrFld[(-210 >>> 1) % N] = i8;
        vMeth2();
        for (f = 11; f < 183; ++f) {
            for (i18 = 1; i18 < 3; i18++) {
                for (i20 = 2; 1 < i20; i20 -= 3) {
                    boolean b1 = false;
                    Test.fFld = 13;
                    i21 *= i20;
                    i17 += -123;
                    i17 *= (int) Test.instanceCount;
                    i8 += i20;
                    i17 += i21;
                    if (true) {
                        s1 <<= (short) i8;
                        Test.fFld += i20;
                        Test.iArrFld[i18 - 1] += (int) Test.instanceCount;
                        i19 += (0 + (i20 * i20));
                        i21 += i21;
                        i21 -= 31973;
                        dArr[(int) (f)] = s1;
                        Test.lArrFld[i20] += Test.instanceCount;
                    } else if (b1) {
                        Test.lArrFld[(int) (f)] += i17;
                        Test.instanceCount += (-10617L + (i20 * i20));
                        i19 = i19;
                        i8 = 80;
                        i19 = (int) Test.instanceCount;
                        by1 -= (byte) i8;
                        Test.lArrFld[(int) (f + 1)] -= i21;
                        fArr[(int) (f - 1)] *= -62235;
                        Test.instanceCount = 39154;
                        i8 += (((i20 * i8) + i8) - Test.instanceCount);
                        if (b1) {
                            Test.fFld *= i20;
                            by1 = (byte) Test.instanceCount;
                            i19 <<= i19;
                            i21 += (int) d2;
                            Test.lArrFld = Test.lArrFld;
                            Test.instanceCount += Test.instanceCount;
                        } else {
                            i21 += -168;
                        }
                    } else {
                        b1 = b1;
                    }
                }
            }
        }
        vMeth1_check_sum += i8 + Float.floatToIntBits(f) + i17 + i18 + i19 + i20 + i21 + s1 + by1 + Double.doubleToLongBits(d2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth(int i3, int i4) {
        double d = -71.129988;
        int i5 = 5, i6 = 60700, i7 = -30914, i22 = -13, i23 = -1, i24 = -5, i25 = -7, i26 = 3;
        boolean b2 = true, bArr[] = new boolean[N];
        long[][] lArr = new long[N][N];
        short[] sArr = new short[N];
        float[] fArr1 = new float[N];
        FuzzerUtils.init(lArr, -3532497026L);
        FuzzerUtils.init(sArr, (short) 30851);
        FuzzerUtils.init(fArr1, -1.860F);
        FuzzerUtils.init(bArr, true);
        for (d = 2; 96 > d; d++) {
            switch((int) ((d % 2) + 42)) {
                case 42:
                    try {
                        i5 = (-3031 / i4);
                        i3 = (i6 % i4);
                        i4 = (Test.iArrFld[(int) (d + 1)] % 175);
                    } catch (ArithmeticException a_e) {
                    }
                    try {
                        i3 = (i5 / -37110);
                        i4 = (155 % i4);
                        i7 = (i3 / i4);
                    } catch (ArithmeticException a_e) {
                    }
                    i3 <<= (Math.min((int) (i5 - 0.73121), i4) - (++i5));
                    lArr[(int) (d - 1)][(int) (d)] += (Test.instanceCount - (++i5));
                    {
                        java.io.PrintStream ax$18 = System.out;
                        java.io.PrintStream ax$19 = System.err;
                        java.io.PrintStream ax$20 = new java.io.PrintStream(new java.io.OutputStream() {

                            @Override
                            public void write(int b) throws java.io.IOException {
                                // DO NOTHING: DISCARD ALL OUTPUTS
                            }
                        });
                        System.setOut(ax$20);
                        System.setErr(ax$20);
                        try {
                            ax$10 = true;
                            for (int ax$16 = 0; ax$16 < 8573; ax$16 += 1) vMeth1(1142356179);
                        } catch (java.lang.Throwable ax$17) {
                        } finally {
                            ax$10 = false;
                        }
                        System.setOut(ax$18);
                        System.setErr(ax$19);
                    }
                    vMeth1(i7);
                case 43:
                    Test.instanceCount += (-98 + (d * d));
                    Test.instanceCount = i5;
                    for (i22 = 1; i22 < 6; i22++) {
                        for (i24 = 1; i24 < 2; ++i24) {
                            byte by2 = -47;
                            Test.instanceCount = i26;
                            Test.iArrFld1[i24 - 1] |= by2;
                            i5 = (int) Test.instanceCount;
                            Test.iArrFld1[i24 + 1] *= i24;
                            sArr[i22 - 1] += (short) i6;
                            fArr1[i24] = 78;
                            i4 = (int) 37.385F;
                            i23 += 111;
                            i4 += (((i24 * i3) + i7) - Test.instanceCount);
                            if (false) {
                                {
                                    java.io.PrintStream ax$0 = System.out;
                                    java.io.PrintStream ax$1 = System.err;
                                    java.io.PrintStream ax$2 = new java.io.PrintStream(new java.io.OutputStream() {

                                        @Override
                                        public void write(int b) throws java.io.IOException {
                                            // DO NOTHING: DISCARD ALL OUTPUTS
                                        }
                                    });
                                    System.setOut(ax$2);
                                    System.setErr(ax$2);
                                    {
                                        boolean ax$9 = false;
                                        for (int ax$8 = -1357; ax$8 < 5956; ax$8 += 5) {
                                            if (!ax$9) {
                                                ax$9 = true;
                                                {
                                                    System.setOut(ax$0);
                                                    System.setErr(ax$1);
                                                    switch(((i25 >>> 1) % 5) + 47) {
                                                        case 47:
                                                            by2 += (byte) d;
                                                            i6 -= (int) Test.instanceCount;
                                                            i3 <<= -6120;
                                                            i23 -= i25;
                                                            Test.instanceCount += i25;
                                                            i6 <<= i3;
                                                            break;
                                                        case 48:
                                                            bArr[i24 + 1] = true;
                                                            Test.instanceCount += (i24 * Test.instanceCount);
                                                            Test.instanceCount = Test.instanceCount;
                                                            by2 |= (byte) Test.instanceCount;
                                                            by2 = (byte) i4;
                                                            i6 -= (int) Test.instanceCount;
                                                            Test.iArrFld[i24 + 1] += (int) -51L;
                                                            i26 >>= i26;
                                                            Test.instanceCount -= i6;
                                                            break;
                                                        case 49:
                                                            i5 += (int) -64236L;
                                                        case 50:
                                                            Test.instanceCount *= i25;
                                                            break;
                                                        case 51:
                                                            Test.iArrFld[i24 - 1] <<= (int) Test.instanceCount;
                                                            break;
                                                    }
                                                    System.setOut(ax$2);
                                                    System.setErr(ax$2);
                                                }
                                            }
                                            int ax$6 = i22;
                                            try {
                                                int[] ax$5 = { 7 };
                                                int[] ax$3 = { 5, 4, 1, 9, 10, 2, 7, 6, 3, 8 };
                                                for (int ax$4 = 0; ax$4 < ax$5.length; ax$4 += 1) {
                                                    ax$5[ax$4] = (int) (ax$3[ax$4] * (-i22));
                                                }
                                            } catch (Throwable ax$7) {
                                            } finally {
                                                i22 = ax$6;
                                            }
                                        }
                                    }
                                    System.setOut(ax$0);
                                    System.setErr(ax$1);
                                }
                            } else if (b2) {
                                Test.iArrFld[i24] = i7;
                            } else {
                                Test.fFld *= i3;
                            }
                        }
                    }
                    break;
            }
        }
        vMeth_check_sum += i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + i22 + i23 + i24 + i25 + i26 + (b2 ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(sArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {
        int i = -45486, i1 = -239, i2 = 227, i27 = -23867, i28 = 123, i29 = 62791, i30 = -53602, i31 = 252, i32 = -9, i33 = -8, i34 = 19849, i35 = -4895, i36 = -62734, i37 = 6540, i38 = 22877, i39 = 1, i40 = -131, i41 = 5, i42 = 5535, i43 = -15;
        byte by3 = 47;
        double d3 = 51.53566;
        short s2 = -6387;
        float[] fArr2 = new float[N];
        boolean[] bArr1 = new boolean[N];
        FuzzerUtils.init(fArr2, -124.63F);
        FuzzerUtils.init(bArr1, false);
        i = 1;
        while (++i < 246) {
            for (i1 = i; i1 < 21; i1++) {
                vMeth(i2, i2);
                i2 += (((i1 * Test.instanceCount) + Test.fFld) - i2);
                Test.iArrFld1[i1 - 1] >>>= i1;
                Test.instanceCount >>>= i;
                Test.iArrFld[i1 + 1] = (int) -12L;
                Test.lArrFld[i1] -= i;
                for (i27 = 1; i27 < 1; i27++) {
                    Test.instanceCount -= Test.instanceCount;
                    i2 -= i2;
                }
                i28 = -12152;
                i28 += (int) Test.fFld;
                i28 += (i1 * i1);
                Test.instanceCount -= i1;
                i2 += i28;
            }
            Test.instanceCount += i27;
            i28 = (int) Test.instanceCount;
            i2 |= by3;
            i28 -= i;
            Test.iArrFld1[i - 1] = i27;
        }
        for (i29 = 8; i29 < 213; ++i29) {
            i30 &= i1;
            Test.iArrFld[i29] = i30;
        }
        i2 += (int) Test.fFld;
        Test.bFld = Test.bFld;
        Test.bFld = false;
        i28 |= (int) Test.instanceCount;
        for (i31 = 8; i31 < 163; ++i31) {
            Test.lArrFld = Test.lArrFld;
            Test.instanceCount <<= -52819;
            for (i33 = i31; i33 < 33; ++i33) {
                by3 += (byte) 16;
                i30 += i34;
                i2 -= (int) d3;
                i35 = 1;
                do {
                    Test.fFld += -12L;
                } while (++i35 < 1);
                i30 = (int) Test.instanceCount;
                i28 += i2;
                i2 *= (int) d3;
                s2 = (short) i;
                Test.instanceCount = by3;
                Test.bFld = Test.bFld;
                Test.fFld -= Test.instanceCount;
            }
            for (i36 = 1; i36 < 33; i36++) {
                switch((i36 % 9) + 56) {
                    case 56:
                        switch((i31 % 1) + 31) {
                            case 31:
                                for (i38 = 1; i38 < 2; ++i38) {
                                    Test.instanceCount &= Test.instanceCount;
                                    Test.iArrFld1[i38] = (int) d3;
                                }
                                i40 = 2;
                                while (--i40 > 0) {
                                    Test.iArrFld[i36 + 1] = s2;
                                    Test.lArrFld[i36] = i;
                                    i39 += (((i40 * i35) + i1) - i35);
                                    Test.instanceCount -= (long) Test.fFld;
                                }
                                break;
                            default:
                                i39 -= i;
                                Test.instanceCount = -13;
                                d3 *= i27;
                                i32 *= (int) d3;
                                Test.instanceCount = -229;
                                Test.instanceCount >>= i30;
                                Test.instanceCount = 10;
                                i41 = 1;
                                do {
                                    Test.instanceCount += (139 + (i41 * i41));
                                    Test.fFld += (i41 - Test.instanceCount);
                                } while (++i41 < 2);
                                Test.iArrFld1[i31] += i27;
                        }
                        i28 <<= i32;
                        Test.iArrFld1[i36 - 1] += (int) 15.1078;
                        break;
                    case 57:
                        fFld1 = i37;
                        for (i42 = 1; i42 < 2; i42 += 2) {
                            d3 = i39;
                            i32 -= i41;
                            Test.iArrFld1[i42 + 1] = i27;
                            fArr2[i31] = i40;
                            s2 += (short) i43;
                        }
                        break;
                    case 58:
                        Test.iArrFld1[i36] += (int) d3;
                    case 59:
                        s2 >>= (short) -243;
                    case 60:
                        i32 >>= (int) Test.instanceCount;
                    case 61:
                        by3 -= (byte) -104.443F;
                        break;
                    case 62:
                        bArr1[i36] = Test.bFld;
                        break;
                    case 63:
                        i43 += i35;
                        break;
                    case 64:
                        Test.fFld -= i43;
                        break;
                    default:
                        Test.iArrFld1[i36 + 1] -= 8106;
                }
            }
        }
        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i27 i28 by3 = " + i27 + "," + i28 + "," + by3);
        FuzzerUtils.out.println("i29 i30 i31 = " + i29 + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 i33 i34 = " + i32 + "," + i33 + "," + i34);
        FuzzerUtils.out.println("d3 i35 s2 = " + Double.doubleToLongBits(d3) + "," + i35 + "," + s2);
        FuzzerUtils.out.println("i36 i37 i38 = " + i36 + "," + i37 + "," + i38);
        FuzzerUtils.out.println("i39 i40 i41 = " + i39 + "," + i40 + "," + i41);
        FuzzerUtils.out.println("i42 i43 fArr2 = " + i42 + "," + i43 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)));
        FuzzerUtils.out.println("bArr1 = " + FuzzerUtils.checkSum(bArr1));
        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.bFld = " + Test.instanceCount + "," + Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("fFld1 Test.iArrFld Test.iArrFld1 = " + Float.floatToIntBits(fFld1) + "," + FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$10 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  vMeth ->  vMeth mainTest
// DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
// DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
