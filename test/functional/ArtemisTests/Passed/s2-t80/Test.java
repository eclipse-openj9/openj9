// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = 60444L;

    public static int iFld = 103;

    public static float fFld = 10.587F;

    public static volatile double dFld = -70.102981;

    public static byte byFld = -124;

    public static boolean bFld = true;

    public static int iFld1 = 0;

    public static float[] fArrFld = new float[N];

    public static int[] iArrFld = new int[N];

    public static volatile double[] dArrFld = new double[N];

    public static volatile long[] lArrFld = new long[N];

    public static int[] iArrFld1 = new int[N];

    public static short[] sArrFld = new short[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.865F);
        FuzzerUtils.init(Test.iArrFld, 9);
        FuzzerUtils.init(Test.dArrFld, 7.87560);
        FuzzerUtils.init(Test.lArrFld, -2190312905L);
        FuzzerUtils.init(Test.iArrFld1, -187);
        FuzzerUtils.init(Test.sArrFld, (short) 26796);
    }

    public static long byMeth_check_sum = 0;

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1) {
        float f = 31.859F;
        int i1 = 10, i2 = -31438, i3 = 1177, i4 = -43304, i5 = 20920, i6 = 27327, iArr[] = new int[N];
        long l2 = -2661835471L, lArr[] = new long[N];
        byte by = 104;
        double d = -120.51885;
        boolean b1 = false;
        short s = 31955, sArr[] = new short[N];
        FuzzerUtils.init(sArr, (short) 29340);
        FuzzerUtils.init(lArr, -32501L);
        FuzzerUtils.init(iArr, 61258);
        f += 1944;
        sArr[(i1 >>> 1) % N] += (short) i1;
        l2 = 1;
        do {
            for (i2 = 1; i2 < 3; i2++) {
                if (true)
                    continue;
                switch(((i1 >>> 1) % 2) + 15) {
                    case 15:
                        i1 >>= 57268;
                        switch(((i3 >>> 1) % 6) + 5) {
                            case 5:
                                i4 = 1;
                                while (++i4 < 2) {
                                    i3 += (22994 + (i4 * i4));
                                    i3 = i2;
                                    i1 = i3;
                                    i3 <<= (int) l2;
                                    i3 = i3;
                                    sArr[(int) (l2 - 1)] -= (short) i4;
                                    Test.instanceCount += i4;
                                    i1 /= 10167;
                                    f -= by;
                                    if (i1 != 0) {
                                        vMeth1_check_sum += l1 + Float.floatToIntBits(f) + i1 + l2 + i2 + i3 + i4 + by + Double.doubleToLongBits(d) + (b1 ? 1 : 0) + s + i5 + i6 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
                                        return;
                                    }
                                    d += i4;
                                    i3 += (i4 ^ i1);
                                    i3 -= 13;
                                    b1 = b1;
                                }
                                f = i4;
                                i3 += (i2 + i4);
                                f = by;
                                s = (short) 1.21323;
                                for (i5 = 1; 2 > i5; ++i5) {
                                    i3 += (int) d;
                                    lArr[i2 - 1] = i2;
                                    if (i4 != 0) {
                                        vMeth1_check_sum += l1 + Float.floatToIntBits(f) + i1 + l2 + i2 + i3 + i4 + by + Double.doubleToLongBits(d) + (b1 ? 1 : 0) + s + i5 + i6 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
                                        return;
                                    }
                                    iArr[i5] ^= i2;
                                    d %= (i5 | 1);
                                    f *= i3;
                                    i1 += (((i5 * i2) + l1) - i1);
                                    f = i2;
                                    sArr = FuzzerUtils.short1array(N, (short) 31794);
                                }
                            case 6:
                                Test.instanceCount += i2;
                                break;
                            case 7:
                                i3 += i2;
                                break;
                            case 8:
                                i3 += (i2 + i6);
                            case 9:
                                l1 *= i5;
                            case 10:
                                try {
                                    i3 = (iArr[(int) (l2 + 1)] / -42955);
                                    i3 = (62538 / i3);
                                    i3 = (i1 % 28513);
                                } catch (ArithmeticException a_e) {
                                }
                                break;
                            default:
                                i1 *= s;
                        }
                        break;
                    case 16:
                        d = -21163;
                        break;
                    default:
                        if (b1)
                            continue;
                }
            }
        } while (++l2 < 196);
        vMeth1_check_sum += l1 + Float.floatToIntBits(f) + i1 + l2 + i2 + i3 + i4 + by + Double.doubleToLongBits(d) + (b1 ? 1 : 0) + s + i5 + i6 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {
        int i7 = -161, i8 = 55149, i9 = -11474, i10 = 0, i11 = -53192, i12 = 31042, i13 = -1, i14 = -135, i15 = -242, i16 = 32964, i17 = 10;
        byte by1 = 2, byArr[] = new byte[N];
        long l3 = 3435447061L;
        short s1 = -2216;
        float f1 = 68.962F;
        FuzzerUtils.init(byArr, (byte) 103);
        vMeth1(Test.instanceCount);
        Test.iFld *= Test.iFld;
        for (i7 = 5; 94 > i7; i7++) {
            Test.instanceCount <<= 2791;
            byArr[i7 + 1] -= (byte) Test.instanceCount;
            i9 = 1;
            {
                java.io.PrintStream ax$0 = System.out;
                java.io.PrintStream ax$1 = System.err;
                java.io.PrintStream ax$2 = new java.io.PrintStream(new java.io.OutputStream() {

                    @Override
                    public void write(int b) throws java.io.IOException {
                        // DO NOTHING: DISCARD ALL OUTPUTS
                    }
                });
                System.setOut(ax$2);
                System.setErr(ax$2);
                {
                    boolean ax$8 = false;
                    for (int ax$7 = -3757; ax$7 < 4537; ax$7 += 9) {
                        if (!ax$8) {
                            ax$8 = true;
                            {
                                System.setOut(ax$0);
                                System.setErr(ax$1);
                                do {
                                    Test.iFld <<= (int) Test.instanceCount;
                                    Test.fArrFld[i7 + 1] *= Test.fFld;
                                    Test.iArrFld[i7] *= i9;
                                    Test.iFld = -1;
                                    Test.fFld -= -34.838F;
                                } while (++i9 < 6);
                                System.setOut(ax$2);
                                System.setErr(ax$2);
                            }
                        }
                        boolean ax$5 = bFld;
                        try {
                            boolean[] ax$3 = new boolean[576];
                            for (// NOTE: bitwise xor
                            // NOTE: bitwise xor
                            // NOTE: bitwise xor
                            int ax$4 = 0; ax$4 < 128; ax$4++) ax$3[ax$4] ^= bFld;
                        } catch (Throwable ax$6) {
                        } finally {
                            bFld = ax$5;
                        }
                    }
                }
                System.setOut(ax$0);
                System.setErr(ax$1);
            }
            i8 *= i7;
            Test.iFld = by1;
            for (i10 = 1; i10 < 6; ++i10) {
                Test.iFld += (((i10 * i11) + i11) - i9);
                Test.iFld = (int) Test.instanceCount;
                Test.instanceCount *= 6670066673611050295L;
                for (i12 = 1; i12 < 2; i12++) {
                    i8 += i8;
                    Test.instanceCount = Test.instanceCount;
                    Test.iFld <<= i7;
                    l3 = i12;
                    i13 &= i7;
                    Test.dArrFld[i12] = i8;
                    Test.instanceCount -= (long) Test.fFld;
                    i13 -= i14;
                }
                Test.iArrFld[i7] -= 117;
                s1 += (short) 113L;
                Test.fFld += (11 + (i10 * i10));
                i13 += s1;
            }
            for (f1 = 1; f1 < 6; f1++) {
                for (i16 = 2; i16 > 1; i16--) {
                    i17 = (int) l3;
                }
                switch((int) (((f1 % 10) * 5) + 79)) {
                    case 90:
                        Test.instanceCount -= i11;
                        i14 *= (int) Test.fFld;
                        i14 |= i7;
                        break;
                    case 122:
                        i14 *= (int) Test.instanceCount;
                        break;
                    case 118:
                        Test.instanceCount += (long) ((long) f1 | (long) Test.fFld);
                        break;
                    case 80:
                        i14 = i14;
                        break;
                    case 123:
                        i13 = by1;
                        break;
                    case 116:
                        Test.iArrFld[(int) (f1)] = i9;
                        break;
                    case 125:
                        i13 >>= i11;
                        break;
                    case 89:
                        Test.fFld *= i9;
                        break;
                    case 127:
                        i13 -= (int) Test.dFld;
                        break;
                    case 120:
                        Test.fFld += i9;
                        break;
                    default:
                        i15 += (-4 + (f1 * f1));
                }
            }
        }
        vMeth_check_sum += i7 + i8 + i9 + by1 + i10 + i11 + i12 + i13 + l3 + i14 + s1 + Float.floatToIntBits(f1) + i15 + i16 + i17 + FuzzerUtils.checkSum(byArr);
    }

    public static byte byMeth(long l, boolean b) {
        int i18 = -43, i19 = -2450, i20 = 0, i21 = 32165, i22 = 99, i23 = -12, i24 = -48654, i25 = -3, i26 = -14, i27 = 8, i28 = 11, i29 = 4024, iArr1[] = new int[N];
        short s3 = -22636, sArr1[] = new short[N];
        byte by2 = 7;
        long l5 = -152L;
        FuzzerUtils.init(sArr1, (short) -3789);
        FuzzerUtils.init(iArr1, 68);
        vMeth();
        for (i18 = 2; 115 > i18; ++i18) {
            Test.iArrFld = Test.iArrFld;
            switch(i18 + 113) {
                case 113:
                    Test.iFld = i19;
                    for (i20 = 5; i20 > 1; --i20) {
                        for (i22 = i20; i22 < 2; i22 += 3) {
                            short s2 = -21175;
                            long l4 = -2509866851L;
                            Test.iArrFld[i20 - 1] *= Test.iFld;
                            i23 = (int) Test.instanceCount;
                            Test.iFld -= (int) Test.fFld;
                            Test.instanceCount >>>= 62246;
                            i23 = Test.iFld;
                            i19 *= (int) Test.dFld;
                            i21 *= 5;
                            l += (i22 ^ s2);
                            sArr1[i22 + 1] = (short) l;
                            Test.iFld = -11;
                            l4 <<= i22;
                            i23 += (((i22 * Test.iFld) + i21) - i23);
                            i19 |= i21;
                            if (true)
                                break;
                            s2 += (short) (57736L + (i22 * i22));
                        }
                        iArr1[i20 + 1] <<= (int) Test.instanceCount;
                        Test.instanceCount >>>= i18;
                    }
                    Test.instanceCount %= (s3 | 1);
                    if (b)
                        continue;
                    Test.instanceCount += l;
                    break;
                case 114:
                    i19 *= (int) Test.fFld;
                    for (i24 = 5; i24 > 1; --i24) {
                        for (i26 = 1; i26 < 2; ++i26) {
                            i19 += (int) (3341552225042898044L + (i26 * i26));
                            Test.fFld -= l;
                            Test.iFld >>= -25715;
                        }
                        Test.dArrFld[i24] = Test.fFld;
                        for (i28 = 1; i28 < 2; i28++) {
                            iArr1 = FuzzerUtils.int1array(N, (int) 7);
                            i27 += i26;
                        }
                    }
                    break;
                case 115:
                    i27 = by2;
                    break;
                case 116:
                    Test.fFld -= 10;
                case 117:
                case 118:
                    Test.lArrFld[i18] = 17;
                    break;
                case 119:
                    try {
                        i21 = (i28 % -902833040);
                        Test.iArrFld[i18 + 1] = (1713030207 / i19);
                        Test.iArrFld[i18 - 1] = (i28 / i27);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                case 120:
                    Test.instanceCount -= i25;
                    break;
                case 121:
                    Test.fFld += (((i18 * l) + Test.fFld) - i28);
                    break;
                case 122:
                    i21 = -34166;
                    break;
                case 123:
                    b = b;
                    break;
                case 124:
                    i27 = i23;
                    break;
                case 125:
                    s3 += (short) (213 + (i18 * i18));
                    break;
                case 126:
                    Test.iArrFld[i18] = i19;
                    break;
                case 127:
                    i21 -= i23;
                    break;
                case 128:
                    i29 -= 159;
                    break;
                case 129:
                    Test.instanceCount += i18;
                    break;
                case 130:
                    Test.dFld -= l;
                    break;
                case 131:
                case 132:
                    if (b)
                        break;
                    break;
                case 133:
                    Test.iArrFld[i18 + 1] >>= i29;
                    break;
                case 134:
                    Test.instanceCount /= 5L;
                case 135:
                    i27 <<= (int) l;
                case 136:
                    b = b;
                case 137:
                    b = b;
                    break;
                case 138:
                    i25 += (-2 + (i18 * i18));
                    break;
                case 139:
                    Test.iFld = i22;
                    break;
                case 140:
                    Test.iArrFld[i18] -= (int) l;
                    break;
                case 141:
                    Test.iArrFld[i18] <<= i27;
                    break;
                case 142:
                    Test.dArrFld[i18 - 1] -= i22;
                    break;
                case 143:
                    i27 = i21;
                case 144:
                case 145:
                    Test.dFld -= i19;
                    break;
                case 146:
                    Test.dFld = 252;
                    break;
                case 147:
                    if (i26 != 0) {
                    }
                    break;
                case 148:
                    Test.fArrFld[i18 + 1] += Test.instanceCount;
                    break;
                case 149:
                    Test.iFld += (((i18 * Test.instanceCount) + Test.fFld) - Test.instanceCount);
                    break;
                case 150:
                    i29 += 10148;
                    break;
                case 151:
                    i25 += (i18 ^ l);
                    break;
                case 152:
                    Test.fFld *= i26;
                    break;
                case 153:
                    i25 = i27;
                    break;
                case 154:
                    i27 = (int) Test.instanceCount;
                    break;
                case 155:
                    b = b;
                    break;
                case 156:
                    Test.dFld += by2;
                case 157:
                    i25 ^= -151;
                    break;
                case 158:
                    Test.instanceCount >>= l;
                    break;
                case 159:
                case 160:
                    l5 *= i19;
                    break;
                case 161:
                    Test.fFld *= i18;
                    break;
                case 162:
                    Test.dFld = Test.dFld;
                    break;
                case 163:
                    Test.instanceCount >>= 8125291431944370080L;
                    break;
                case 164:
                    l5 = i18;
                case 165:
                    i21 <<= i25;
                case 166:
                    i27 = i22;
                case 167:
                    i29 -= i24;
                    break;
                case 168:
                case 169:
                    i21 |= (int) 2755781471L;
                    break;
                case 170:
                    Test.iArrFld = Test.iArrFld;
                case 171:
                    Test.iFld *= i19;
                    break;
                case 172:
                    iArr1[i18] *= (int) Test.fFld;
                    break;
                case 173:
                    if (b)
                        break;
                    break;
                case 174:
                    i21 *= -251;
                    break;
                case 175:
                    Test.dFld -= i29;
                    break;
                case 176:
                    if (i25 != 0) {
                    }
                    break;
                case 177:
                    i29 = -4;
                    break;
                case 178:
                    Test.instanceCount += (long) 27.426F;
                case 179:
                    Test.dFld = i20;
                case 180:
                    l5 += (87 + (i18 * i18));
                    break;
                case 181:
                    i25 = i22;
                    break;
                case 182:
                    l5 += (-42927 + (i18 * i18));
                    break;
                default:
                    Test.iFld += i29;
            }
        }
        long meth_res = l + (b ? 1 : 0) + i18 + i19 + i20 + i21 + i22 + i23 + s3 + i24 + i25 + i26 + i27 + i28 + i29 + by2 + l5 + FuzzerUtils.checkSum(sArr1) + FuzzerUtils.checkSum(iArr1);
        byMeth_check_sum += meth_res;
        return (byte) meth_res;
    }

    public void mainTest(String[] strArr1) {
        int i = 54868, i30 = 9, i31 = 128, i32 = -46268, i33 = -55754, i34 = -106, i35 = -13, i36 = -47162, i37 = -38324, i38 = -64091;
        short s4 = -5659;
        i = byMeth(53L, false);
        for (i30 = 1; i30 < 128; i30++) {
            Test.lArrFld[i30 - 1] *= -1100231355L;
            i31 *= (int) Test.instanceCount;
            Test.instanceCount >>= Test.byFld;
            try {
                Test.iFld = (Test.iArrFld1[i30 + 1] / 18029);
                i = (-1983301673 / Test.iFld);
                Test.iArrFld[i30 + 1] = (Test.iArrFld1[i30] % i);
            } catch (ArithmeticException a_e) {
            }
        }
        for (i32 = 214; i32 > 8; i32--) {
            Test.iFld -= i33;
            i34 = 25;
            while (--i34 > 0) {
                Test.iFld += i34;
                i -= -4;
                Test.iFld += (int) Test.dFld;
                Test.dFld += Test.fFld;
                Test.iFld = (int) Test.fFld;
                switch(((i30 >>> 1) % 9) + 120) {
                    case 120:
                        Test.iArrFld[i34] -= (int) Test.fFld;
                        for (i35 = 1; i35 < 1; ++i35) {
                            Test.instanceCount = i33;
                            Test.fFld -= Test.fFld;
                            i = i32;
                            if (Test.bFld)
                                break;
                            Test.byFld |= (byte) i36;
                            i36 += (int) (0.42F + (i35 * i35));
                            Test.bFld = Test.bFld;
                            if (Test.bFld)
                                continue;
                            i36 += (int) (64877L + (i35 * i35));
                        }
                        for (i37 = 1; i37 < 1; ++i37) {
                            Test.instanceCount += -35752;
                            Test.lArrFld[i34 + 1] ^= i31;
                            Test.sArrFld[i37 + 1] += (short) 12L;
                            if (Test.bFld) {
                                i38 -= 10;
                                i33 -= i34;
                                Test.iArrFld[i32 + 1] >>= i33;
                                i31 = i36;
                                i38 = i;
                                Test.dFld = i30;
                                Test.iFld1 += (i37 | i32);
                                {
                                    java.io.PrintStream ax$9 = System.out;
                                    java.io.PrintStream ax$10 = System.err;
                                    java.io.PrintStream ax$11 = new java.io.PrintStream(new java.io.OutputStream() {

                                        @Override
                                        public void write(int b) throws java.io.IOException {
                                            // DO NOTHING: DISCARD ALL OUTPUTS
                                        }
                                    });
                                    System.setOut(ax$11);
                                    System.setErr(ax$11);
                                    {
                                        boolean ax$18 = false;
                                        for (int ax$17 = -3347; ax$17 < 2209; ax$17 += 7) {
                                            if (!ax$18) {
                                                ax$18 = true;
                                                {
                                                    System.setOut(ax$9);
                                                    System.setErr(ax$10);
                                                    switch(((i37 % 1) * 5) + 84) {
                                                        case 87:
                                                            Test.fFld -= 933362420L;
                                                            i38 = i32;
                                                            i31 ^= i38;
                                                            break;
                                                        default:
                                                            if (Test.bFld) {
                                                                Test.iFld += Test.iFld1;
                                                                Test.iArrFld1[i34] = i32;
                                                                i33 += (i37 - i35);
                                                                i = Test.iFld;
                                                            } else {
                                                                i36 *= i31;
                                                                if (Test.bFld) {
                                                                    i38 -= (int) Test.fFld;
                                                                    Test.dFld = i31;
                                                                    i31 += (i37 * i37);
                                                                    i36 -= 247;
                                                                    i >>>= i34;
                                                                    i31 >>= i30;
                                                                    i38 += (i37 + i31);
                                                                    Test.fFld = i36;
                                                                    Test.iFld1 -= Test.iFld;
                                                                    if (Test.bFld)
                                                                        break;
                                                                    Test.fFld *= Test.fFld;
                                                                    Test.iFld1 += (((i37 * i30) + Test.byFld) - i38);
                                                                } else {
                                                                    Test.iArrFld[i34] += 34;
                                                                    i31 += (i37 | Test.iFld1);
                                                                    i += i38;
                                                                    i36 = Test.iFld1;
                                                                    Test.fFld = (float) Test.dFld;
                                                                    i *= (int) Test.fFld;
                                                                    Test.iArrFld1 = Test.iArrFld1;
                                                                    Test.instanceCount += (i37 * i37);
                                                                    Test.fFld += (i37 - Test.instanceCount);
                                                                    Test.iFld1 += (i37 + i35);
                                                                    Test.iArrFld[i34] *= i;
                                                                }
                                                                i36 += i36;
                                                                Test.fFld += i38;
                                                                i -= (int) Test.instanceCount;
                                                            }
                                                    }
                                                    System.setOut(ax$11);
                                                    System.setErr(ax$11);
                                                }
                                            }
                                            try {
                                                int ax$12 = 0xcafe;
                                                boolean ax$13 = true;
                                                int ax$14 = 5788;
                                                int ax$15 = 1558824;
                                                // the compiler could just generate one block with selects.
                                                if (ax$13) {
                                                    ax$15 = 42;
                                                }
                                                ax$12 = (ax$14 == 1) ? 1 : 0;
                                            } catch (Throwable ax$16) {
                                            } finally {
                                            }
                                        }
                                    }
                                    System.setOut(ax$9);
                                    System.setErr(ax$10);
                                }
                            }
                        }
                        break;
                    case 121:
                        Test.iArrFld1[i32 - 1] &= Test.iFld;
                        break;
                    case 122:
                        i31 += (((i34 * i38) + Test.iFld1) - i30);
                    case 123:
                        Test.iArrFld1[i34 - 1] >>= (int) Test.instanceCount;
                    case 124:
                        Test.iFld += (((i34 * Test.iFld) + Test.fFld) - s4);
                        break;
                    case 125:
                        Test.iFld -= (int) 1.661F;
                        break;
                    case 126:
                        i38 += (i34 * i34);
                        break;
                    case 127:
                        i *= s4;
                        break;
                    case 128:
                        i36 <<= -71;
                        break;
                }
            }
        }
        FuzzerUtils.out.println("i i30 i31 = " + i + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 i33 i34 = " + i32 + "," + i33 + "," + i34);
        FuzzerUtils.out.println("i35 i36 i37 = " + i35 + "," + i36 + "," + i37);
        FuzzerUtils.out.println("i38 s4 = " + i38 + "," + s4);
        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.dFld Test.byFld Test.bFld = " + Double.doubleToLongBits(Test.dFld) + "," + Test.byFld + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iFld1 Test.fArrFld Test.iArrFld = " + Test.iFld1 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.dArrFld Test.lArrFld Test.iArrFld1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1));
        FuzzerUtils.out.println("Test.sArrFld = " + FuzzerUtils.checkSum(Test.sArrFld));
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }

    public static void main(String[] strArr) {
        if (ax$19) {
            try {
                for (int ax$21 = 0; ax$21 < 4; ax$21++) {
                    String ax$20 = new String("Creating some garbage" + Math.random());
                    if (ax$20.length() < 22) {
                    }
                }
            } catch (Throwable ax$22) {
            } finally {
            }
            return;
        }
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$19 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  byMeth ->  byMeth mainTest
// DEBUG  vMeth ->  vMeth byMeth mainTest
// DEBUG  vMeth1 ->  vMeth1 vMeth byMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
