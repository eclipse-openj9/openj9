// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.util.Arrays;
import java.util.zip.GZIPInputStream;
import java.io.ByteArrayInputStream;

public class Test {

    public static final int N = 256;

    public static long instanceCount = -67863364L;

    public int iFld = 215;

    public static float fFld = -69.80F;

    public static byte byFld = -28;

    public static double dFld = -2.128747;

    public static short sFld = -20701;

    public static boolean bFld = true;

    public static long lFld = -11L;

    public static int iFld1 = 3;

    public static float[] fArrFld = new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 61.340F);
    }

    public static long iMeth_check_sum = 0;

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {
        if (ax$0) {
            try {
                java.lang.Long ax$2 = new Long(0xFFFFFFFFL);
                java.lang.Long ax$1 = new Long(0xFFFFFFFFL);
                for (int ax$3 = 0; ax$3 < 1000; ax$3++) {
                    ax$1 = new Long(ax$1 + 1);
                    ax$2 = ax$2 + 2;
                }
            } catch (Throwable ax$4) {
            } finally {
            }
            return;
        }
        int i = -35362, i1 = 53457, i2 = -14, i3 = 0, i4 = 13097, i5 = -41, i6 = -63443, iArr[] = new int[N];
        short s1 = 23947;
        boolean b = true;
        long[] lArr = new long[N];
        FuzzerUtils.init(lArr, -41L);
        FuzzerUtils.init(iArr, 12);
        for (i = 6; i < 155; i += 3) {
            i1 <<= (int) Test.instanceCount;
            i2 = 1;
            do {
                i1 += (i2 ^ i1);
                i1 += (int) Test.instanceCount;
                i1 = (int) Test.instanceCount;
                i1 -= (int) Test.fFld;
            } while (++i2 < 11);
            for (i3 = 1; i3 < 11; i3++) {
                lArr[i] -= (long) Test.fFld;
                Test.instanceCount += (9L + (i3 * i3));
                i4 += (int) Test.instanceCount;
                iArr[i3 + 1] -= s1;
                lArr[i - 1] += i;
                Test.fFld %= (i2 | 1);
            }
            Test.byFld += (byte) (i * i4);
            i5 = 1;
            do {
                Test.byFld &= (byte) Test.instanceCount;
                if (b) {
                    i1 = i5;
                    Test.fFld = i;
                    i1 -= (int) 96.127005;
                    i1 = 44160;
                    i4 = (int) 1.84271;
                    i4 -= i;
                } else {
                    iArr[i5 - 1] = (int) Test.instanceCount;
                    if (b) {
                        i1 -= (int) 2.215F;
                        try {
                            i4 = (i5 % -196);
                            i4 = (-39654 % i);
                            iArr[i5 - 1] = (i2 / -7055);
                        } catch (ArithmeticException a_e) {
                        }
                        i6 = 1;
                        do {
                            if (i3 != 0) {
                                vMeth1_check_sum += i + i1 + i2 + i3 + i4 + s1 + i5 + (b ? 1 : 0) + i6 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
                                return;
                            }
                            i1 <<= i6;
                            i4 &= i2;
                            i4 *= 84;
                            if (b) {
                                if (false)
                                    break;
                                Test.instanceCount += (i6 - i1);
                                Test.fArrFld[i + 1] = i1;
                            } else if (b) {
                                i1 -= -73;
                            } else {
                                i4 += (i6 | (long) Test.fFld);
                                vMeth1_check_sum += i + i1 + i2 + i3 + i4 + s1 + i5 + (b ? 1 : 0) + i6 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
                                return;
                            }
                        } while (++i6 < 1);
                    } else if (b) {
                        i4 += -2;
                    } else if (false) {
                        Test.instanceCount += (-207 + (i5 * i5));
                    } else {
                        i1 += (((i5 * i3) + Test.instanceCount) - i);
                    }
                }
            } while (++i5 < 11);
        }
        vMeth1_check_sum += i + i1 + i2 + i3 + i4 + s1 + i5 + (b ? 1 : 0) + i6 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth() {
        if (ax$10) {
            int ax$22 = iFld1;
            try {
                char[] ax$21 = new char[1];
                byte[] ax$20 = new byte[10];
                ax$21[iFld1] = (char) -1;
                ax$20[iFld1] = (byte) -1;
            } catch (Throwable ax$23) {
            } finally {
                iFld1 = ax$22;
            }
            return;
        }
        double d = -9.127284;
        int i7 = -150, i8 = -3382, i9 = 45035, i10 = -30269, i11 = -212, iArr1[][] = new int[N][N];
        byte by = 115;
        boolean b1 = false;
        long[] lArr1 = new long[N];
        FuzzerUtils.init(iArr1, -34044);
        FuzzerUtils.init(lArr1, 137L);
        {
            java.io.PrintStream ax$7 = System.out;
            java.io.PrintStream ax$8 = System.err;
            java.io.PrintStream ax$9 = new java.io.PrintStream(new java.io.OutputStream() {

                @Override
                public void write(int b) throws java.io.IOException {
                    // DO NOTHING: DISCARD ALL OUTPUTS
                }
            });
            System.setOut(ax$9);
            System.setErr(ax$9);
            try {
                ax$0 = true;
                for (int ax$5 = 0; ax$5 < 7650; ax$5 += 1) vMeth1();
            } catch (java.lang.Throwable ax$6) {
            } finally {
                ax$0 = false;
            }
            System.setOut(ax$7);
            System.setErr(ax$8);
        }
        vMeth1();
        d = 1;
        do {
            i7 -= (int) 3111848194L;
            i7 += -32013;
            iArr1[(int) (d - 1)][(int) (d)] <<= i7;
            Test.dFld = i7;
            for (i8 = 6; i8 > 1; i8 -= 3) {
                for (i10 = 1; i10 < 6; ++i10) {
                    Test.sFld = (short) -62;
                    i11 >>>= (int) Test.instanceCount;
                    Test.instanceCount = i7;
                    Test.fFld = Test.instanceCount;
                    switch(((i7 >>> 1) % 2) + 16) {
                        case 16:
                            Test.fFld += i10;
                            i11 += (i10 + Test.instanceCount);
                            by += (byte) (i10 * Test.byFld);
                            if (b1) {
                                i7 -= 4;
                                Test.instanceCount = i10;
                                Test.instanceCount <<= i11;
                                Test.dFld = Test.sFld;
                                Test.instanceCount = i11;
                                i7 = i8;
                                Test.instanceCount -= i11;
                                Test.instanceCount = Test.instanceCount;
                                i9 &= i10;
                                iArr1[i10 + 1][i10 - 1] -= (int) d;
                                Test.instanceCount >>= i8;
                                vMeth_check_sum += Double.doubleToLongBits(d) + i7 + i8 + i9 + i10 + i11 + by + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
                                return;
                            }
                            b1 = true;
                            i9 >>= (int) Test.instanceCount;
                            switch((int) ((d % 8) + 63)) {
                                case 63:
                                    i7 += (i10 + i11);
                                    Test.fArrFld[i8 - 1] += -2;
                                    i9 += i10;
                                    Test.byFld *= (byte) 201;
                                    Test.fArrFld[i8] -= i8;
                                    i7 += i10;
                                    break;
                                case 64:
                                    Test.instanceCount -= i11;
                                    break;
                                case 65:
                                    iArr1[i10 + 1] = iArr1[i10];
                                    break;
                                case 66:
                                    Test.sFld >>>= (short) i11;
                                case 67:
                                    if (b1)
                                        break;
                                    break;
                                case 68:
                                    Test.instanceCount = Test.instanceCount;
                                    break;
                                case 69:
                                    i9 <<= (int) 1346789116105100202L;
                                    break;
                                case 70:
                                    Test.sFld -= (short) i10;
                                    break;
                                default:
                                    lArr1[i8] += i10;
                            }
                            break;
                        case 17:
                            by += (byte) (13782 + (i10 * i10));
                            break;
                    }
                }
            }
        } while (++d < 98);
        vMeth_check_sum += Double.doubleToLongBits(d) + i7 + i8 + i9 + i10 + i11 + by + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth() {
        int i13 = 174, i14 = 0, i15 = 43666, i16 = -15819, i17 = 99, i18 = 3, i19 = 10, i20 = 43, iArr2[] = new int[N], iArr3[] = new int[N];
        boolean b2 = true, bArr[] = new boolean[N];
        FuzzerUtils.init(iArr2, -19335);
        FuzzerUtils.init(iArr3, -9);
        FuzzerUtils.init(bArr, true);
        {
            java.io.PrintStream ax$26 = System.out;
            java.io.PrintStream ax$27 = System.err;
            java.io.PrintStream ax$28 = new java.io.PrintStream(new java.io.OutputStream() {

                @Override
                public void write(int b) throws java.io.IOException {
                    // DO NOTHING: DISCARD ALL OUTPUTS
                }
            });
            System.setOut(ax$28);
            System.setErr(ax$28);
            try {
                ax$10 = true;
                for (int ax$24 = 0; ax$24 < 7975; ax$24 += 1) vMeth();
            } catch (java.lang.Throwable ax$25) {
            } finally {
                ax$10 = false;
            }
            System.setOut(ax$26);
            System.setErr(ax$27);
        }
        vMeth();
        for (int i12 : iArr2) {
            Test.fFld = 30526;
            for (i13 = 1; i13 < 2; ++i13) {
                i12 += (int) -1.48326;
            }
            i12 += 6;
            Test.dFld += 32424;
            iArr3[(i13 >>> 1) % N] += i14;
            Test.instanceCount = Test.instanceCount;
            Test.instanceCount >>= i13;
            i15 = 1;
            while (++i15 < 2) {
                i12 = (int) 44827L;
                Test.sFld ^= (short) i13;
                for (i16 = 1; i15 < i16; --i16) {
                    iArr3[i16 - 1] |= i15;
                    Test.bFld = b2;
                    Test.byFld -= (byte) i14;
                    Test.instanceCount = i14;
                }
                i12 *= (int) Test.instanceCount;
                Test.sFld >>= (short) i16;
                i14 += i15;
                i17 = i12;
                i17 = -47370;
            }
            for (i18 = 1; i18 < 2; i18++) {
                Test.instanceCount = i12;
                i17 &= i19;
                i19 += i18;
                i20 = 1;
                while (++i20 < 2) {
                    i14 *= (int) Test.dFld;
                    i14 += i20;
                    switch((i18 % 9) + 61) {
                        case 61:
                            i17 *= (int) 0L;
                            if (i16 != 0) {
                            }
                            i17 += -64497;
                            i17 += i13;
                            Test.fFld = -198;
                            Test.sFld += (short) i14;
                            break;
                        case 62:
                            Test.instanceCount -= (long) Test.fFld;
                        case 63:
                            i17 = 8;
                        case 64:
                            iArr2 = iArr2;
                            break;
                        case 65:
                            bArr[i18] = b2;
                            break;
                        case 66:
                            Test.dFld = i14;
                        case 67:
                            Test.instanceCount <<= 52333;
                            break;
                        case 68:
                            i12 = i20;
                            break;
                        case 69:
                            Test.dFld -= i19;
                            break;
                        default:
                            i19 -= (int) Test.instanceCount;
                    }
                }
            }
        }
        long meth_res = i13 + i14 + i15 + i16 + i17 + (b2 ? 1 : 0) + i18 + i19 + i20 + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {
        if (ax$29) {
            int ax$62 = iFld1;
            try {
                byte[] ax$56 = new byte[5];
                int ax$57 = 65535;
                byte[] ax$55 = new byte[10];
                try (ByteArrayInputStream ax$58 = new ByteArrayInputStream(ax$55);
                    GZIPInputStream ax$59 = new GZIPInputStream(ax$58, iFld1)) {
                    byte[] ax$53 = new byte[ax$56.length + 10];
                    byte[] ax$54 = new byte[ax$57];
                    int ax$60 = 0;
                    int ax$61 = 0;
                    while ((ax$60 = ax$59.read(ax$54, 0, ax$54.length)) != -1) {
                        System.arraycopy(ax$54, 0, ax$53, ax$61, ax$60);
                        ax$61 += ax$60;
                        // no range check, if overflow, let it fail
                    }
                    if (ax$61 != ax$56.length || ax$59.available() != 0 || !Arrays.equals(ax$56, Arrays.copyOf(ax$53, ax$61))) {
                    }
                }
            } catch (Throwable ax$63) {
            } finally {
                iFld1 = ax$62;
            }
            return;
        }
        short s = -6673;
        int i21 = -13, i22 = 43288, i23 = -46918, i24 = 3, i25 = 3, i26 = 9, i27 = -112, i28 = -28, i29 = -21710, i30 = -55977, i31 = -53176, i32 = -12, i33 = -22579, i34 = 209, i35 = 5, i36 = 47921, i37 = 36, i38 = 0, i39 = 55534, iArr4[] = new int[N];
        double d1 = 0.6426, dArr[] = new double[N];
        float f = 15.956F, f1 = 9.635F;
        long l = -16005L, lArr2[] = new long[N];
        byte[] byArr = new byte[N];
        FuzzerUtils.init(byArr, (byte) 5);
        FuzzerUtils.init(iArr4, 105);
        FuzzerUtils.init(lArr2, -1624510787L);
        FuzzerUtils.init(dArr, 51.1264);
        iFld -= ((iFld >>= (iFld ^ s)) * (iMeth() + -7));
        iFld *= iFld;
        if (Test.bFld) {
            try {
                for (i21 = 6; 176 > i21; i21 += 3) {
                    Test.sFld += (short) i21;
                    for (d1 = 90; d1 > 5; d1--) {
                        switch(((i22 >>> 1) % 1) + 11) {
                            case 11:
                                i23 += iFld;
                        }
                        i22 += (int) (d1 + Test.instanceCount);
                    }
                    switch((i21 % 2) + 117) {
                        case 117:
                            for (i24 = 1; 90 > i24; i24++) {
                                iFld += i23;
                                i23 += i24;
                                Test.fFld += (float) d1;
                            }
                            i23 += iFld;
                            for (i26 = 2; i26 < 90; i26++) {
                                i27 += iFld;
                                iFld -= s;
                                for (f = i26; f < 2; f++) {
                                    if (Test.bFld) {
                                        Test.instanceCount += (long) ((long) f ^ i25);
                                    } else if (Test.bFld) {
                                        i25 += iFld;
                                        Test.bFld = Test.bFld;
                                        i28 += (int) (f * f);
                                    }
                                    i28 = -115;
                                    i25 *= i28;
                                    Test.fFld -= i21;
                                    byArr = byArr;
                                    Test.instanceCount <<= -6951457655636126126L;
                                    iFld *= i27;
                                    iFld = i27;
                                }
                                Test.instanceCount = 62210;
                                i22 += i22;
                                i25 &= 32084;
                                Test.instanceCount = (long) Test.dFld;
                                for (i29 = 1; i29 < 2; i29++) {
                                    iFld >>= i27;
                                    byArr = FuzzerUtils.byte1array(N, (byte) -83);
                                    i25 *= i22;
                                }
                                i23 = i27;
                                for (i31 = 1; i31 < 2; i31++) {
                                    i27 -= i27;
                                    i23 >>= -119;
                                }
                                for (i33 = i26; i33 < 2; ++i33) {
                                    Test.fFld *= i28;
                                    iArr4[i21 + 1] *= i24;
                                    i28 <<= i33;
                                    lArr2[i26] <<= Test.lFld;
                                    lArr2[i21 + 1] *= Test.lFld;
                                    iFld += (int) 65L;
                                    i34 &= iFld;
                                    i22 = (int) -164L;
                                    i23 = (int) Test.lFld;
                                }
                                i28 *= i29;
                            }
                            switch(i21 + 110) {
                                case 110:
                                    for (i35 = 3; 90 > i35; ++i35) {
                                        i25 = i22;
                                        Test.byFld += (byte) (((i35 * iFld) + i33) - Test.lFld);
                                        if (false)
                                            continue;
                                        switch((i35 % 2) + 83) {
                                            case 83:
                                            case 84:
                                                switch(((i35 % 8) * 5) + 122) {
                                                    case 148:
                                                        Test.instanceCount = i33;
                                                        if (Test.bFld)
                                                            continue;
                                                        s += (short) (((i35 * i32) + Test.lFld) - Test.lFld);
                                                        i28 = i28;
                                                        switch((((-5871 >>> 1) % 8) * 5) + 31) {
                                                            case 35:
                                                                switch(((i28 >>> 1) % 9) + 11) {
                                                                    case 11:
                                                                        Test.lFld += (((i35 * i33) + Test.lFld) - i31);
                                                                        break;
                                                                    case 12:
                                                                        for (i37 = 1; 2 > i37; i37++) {
                                                                            i28 -= i38;
                                                                            switch(((iFld >>> 1) % 10) + 44) {
                                                                                case 44:
                                                                                case 45:
                                                                                    iArr4 = iArr4;
                                                                                    s = (short) d1;
                                                                                    Test.instanceCount = i36;
                                                                                    break;
                                                                                case 46:
                                                                                    s <<= (short) i28;
                                                                                    break;
                                                                                case 47:
                                                                                    s = (short) i28;
                                                                                case 48:
                                                                                    Test.sFld += (short) (i37 | i35);
                                                                                case 49:
                                                                                    iArr4[i37] *= (int) Test.instanceCount;
                                                                                    break;
                                                                                case 50:
                                                                                    i30 = (int) Test.lFld;
                                                                                    break;
                                                                                case 51:
                                                                                    i28 += i37;
                                                                                    break;
                                                                                case 52:
                                                                                    iArr4[i21 - 1] = (int) f1;
                                                                                    break;
                                                                                case 53:
                                                                                    iArr4 = FuzzerUtils.int1array(N, (int) 165);
                                                                                    break;
                                                                                default:
                                                                                    Test.dFld -= i26;
                                                                            }
                                                                        }
                                                                        break;
                                                                    case 13:
                                                                        i23 <<= i28;
                                                                    case 14:
                                                                        iArr4[i35 - 1] = (int) 517887275L;
                                                                        break;
                                                                    case 15:
                                                                        if (false)
                                                                            continue;
                                                                        break;
                                                                    case 16:
                                                                        i32 >>= (int) Test.instanceCount;
                                                                    case 17:
                                                                        Test.fFld += (205 + (i35 * i35));
                                                                        break;
                                                                    case 18:
                                                                        i27 = (int) 1.528F;
                                                                        break;
                                                                    case 19:
                                                                        Test.fFld += Test.fFld;
                                                                        break;
                                                                    default:
                                                                        lArr2[i21] -= i35;
                                                                }
                                                            case 49:
                                                                iFld = iFld;
                                                                break;
                                                            case 39:
                                                                l = i23;
                                                                break;
                                                            case 42:
                                                                dArr[i35 + 1] += -663991577L;
                                                            case 48:
                                                                i34 -= i29;
                                                                break;
                                                            case 50:
                                                                Test.instanceCount &= Test.lFld;
                                                            case 36:
                                                                i32 += (int) 2234049467L;
                                                            case 71:
                                                                i27 += i35;
                                                        }
                                                        break;
                                                    case 137:
                                                        iArr4[i21 + 1] *= (int) Test.instanceCount;
                                                        break;
                                                    case 129:
                                                        f1 += i35;
                                                        break;
                                                    case 141:
                                                        i23 ^= i24;
                                                        break;
                                                    case 125:
                                                        i22 = (int) l;
                                                        break;
                                                    case 124:
                                                        i36 = (int) -11L;
                                                    case 160:
                                                        i30 += i35;
                                                    case 154:
                                                        Test.dFld = 19735;
                                                        break;
                                                }
                                                break;
                                            default:
                                                i23 += (i35 | i38);
                                        }
                                    }
                                    break;
                                case 111:
                                    if (Test.bFld)
                                        break;
                                case 112:
                                    i27 += i32;
                                case 113:
                                    Test.byFld += (byte) i29;
                                    break;
                                case 114:
                                    l ^= i23;
                                    break;
                                case 115:
                                    iArr4[i21 - 1] *= (int) f1;
                                    break;
                                case 116:
                                    i38 += (int) Test.instanceCount;
                                    break;
                                case 117:
                                    Test.lFld -= 0;
                                    break;
                                case 118:
                                    l = (long) f;
                                case 119:
                                    f1 += (float) d1;
                                    break;
                                case 120:
                                    i38 += (-7 + (i21 * i21));
                                case 121:
                                    Test.fArrFld[i21 + 1] -= 104;
                                    break;
                                case 122:
                                    Test.fFld += i21;
                                    break;
                                case 123:
                                    iArr4[i21] *= (int) d1;
                                    break;
                                case 124:
                                    i32 <<= i32;
                                    break;
                                case 125:
                                    i22 &= Test.sFld;
                                    break;
                                case 126:
                                    Test.bFld = Test.bFld;
                                    break;
                                case 127:
                                    Test.fArrFld[i21 - 1] = 2125263215264036426L;
                                    break;
                                case 128:
                                case 129:
                                    i34 = i22;
                                case 130:
                                    i36 *= i21;
                                case 131:
                                    Test.lFld /= l;
                                    break;
                                case 132:
                                    i32 = i31;
                                    break;
                                case 133:
                                    try {
                                        i38 = (-27935 % i25);
                                        i30 = (iFld % i38);
                                        i22 = (7016 % i21);
                                    } catch (ArithmeticException a_e) {
                                    }
                                case 134:
                                    if (Test.bFld)
                                        break;
                                    break;
                                case 135:
                                case 136:
                                    i25 >>= i26;
                                    break;
                                case 137:
                                    iArr4[i21 - 1] = i29;
                                    break;
                                case 138:
                                    Test.dFld *= i31;
                                    break;
                                case 139:
                                    i23 += (i21 * i21);
                                    break;
                                case 140:
                                    iFld += i21;
                                    break;
                                case 141:
                                    i36 += i21;
                                    break;
                                case 142:
                                    i23 += (int) f;
                                case 143:
                                    Test.lFld = i22;
                                case 144:
                                    i25 ^= i30;
                                    break;
                                case 145:
                                case 146:
                                    i34 = (int) Test.dFld;
                                    break;
                                case 147:
                                    lArr2[i21 - 1] |= l;
                                    break;
                                case 148:
                                    Test.fArrFld[i21 + 1] += s;
                                    break;
                                case 149:
                                    i27 *= (int) l;
                                    break;
                                case 150:
                                    i28 = (int) l;
                                    break;
                                case 151:
                                    iArr4[i21] = Test.iFld1;
                                    break;
                                case 152:
                                    i23 *= (int) f1;
                                    break;
                                case 153:
                                    if (Test.bFld)
                                        break;
                                    break;
                                case 154:
                                    i23 += (((i21 * Test.byFld) + i22) - i35);
                                case 155:
                                    try {
                                        i23 = (i28 % -50554);
                                        i38 = (i29 % i34);
                                        i32 = (i28 / i30);
                                    } catch (ArithmeticException a_e) {
                                    }
                                case 156:
                                    i22 = -6588;
                                    break;
                                case 157:
                                    i22 -= iFld;
                                    break;
                                case 158:
                                    i27 = (int) Test.fFld;
                                    break;
                                case 159:
                                    i25 = 51;
                                    break;
                                case 160:
                                    i28 %= iFld;
                                    break;
                                case 161:
                                    Test.instanceCount -= i24;
                                    break;
                                case 162:
                                    iArr4 = iArr4;
                                    break;
                                case 163:
                                    i28 += i34;
                                    break;
                                case 164:
                                    iFld *= s;
                                case 165:
                                    Test.byFld = (byte) -29518;
                                case 166:
                                    i30 >>= (int) Test.lFld;
                                    break;
                                case 167:
                                    iArr4[i21 + 1] = (int) Test.lFld;
                                    break;
                                case 168:
                                    iFld += i21;
                                    break;
                                case 169:
                                    i39 = i32;
                                case 170:
                                case 171:
                                    Test.lFld += i21;
                                case 172:
                                    iArr4[i21 - 1] = i21;
                                    break;
                                case 173:
                                    i23 += (i21 * i21);
                                    break;
                                case 174:
                                    lArr2[i21] = i24;
                                    break;
                                case 175:
                                    i32 -= (int) f1;
                                case 176:
                                case 177:
                                    i36 %= (int) Test.instanceCount;
                                    break;
                                case 178:
                                    iArr4[i21] >>= iFld;
                                    break;
                                case 179:
                                    Test.fArrFld[i21 + 1] -= 43;
                                    break;
                            }
                            break;
                        case 118:
                            i30 = s;
                        default:
                            Test.bFld = Test.bFld;
                    }
                }
            } catch (ArithmeticException exc2) {
                lArr2[(Test.iFld1 >>> 1) % N] = i27;
            }
        } else if (Test.bFld) {
            i22 += i37;
        } else {
            l <<= i22;
        }
        FuzzerUtils.out.println("s i21 i22 = " + s + "," + i21 + "," + i22);
        FuzzerUtils.out.println("d1 i23 i24 = " + Double.doubleToLongBits(d1) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("f i28 i29 = " + Float.floatToIntBits(f) + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("i33 i34 i35 = " + i33 + "," + i34 + "," + i35);
        FuzzerUtils.out.println("i36 i37 i38 = " + i36 + "," + i37 + "," + i38);
        FuzzerUtils.out.println("f1 l i39 = " + Float.floatToIntBits(f1) + "," + l + "," + i39);
        FuzzerUtils.out.println("byArr iArr4 lArr2 = " + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(iArr4) + "," + FuzzerUtils.checkSum(lArr2));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("Test.instanceCount iFld Test.fFld = " + Test.instanceCount + "," + iFld + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.byFld Test.dFld Test.sFld = " + Test.byFld + "," + Double.doubleToLongBits(Test.dFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.bFld Test.lFld Test.iFld1 = " + (Test.bFld ? 1 : 0) + "," + Test.lFld + "," + Test.iFld1);
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$0 = false;

    private static Boolean ax$10 = false;

    private static Boolean ax$29 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  iMeth ->  iMeth mainTest
// DEBUG  vMeth ->  vMeth iMeth mainTest
// DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
