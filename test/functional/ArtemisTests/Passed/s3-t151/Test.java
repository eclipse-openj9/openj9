// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = 10L;

    public static double dFld = 81.113254;

    public static byte byFld = -82;

    public static short sFld = -29791;

    public static long[] lArrFld = new long[N];

    public static double[] dArrFld = new double[N];

    public static int[] iArrFld = new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -145L);
        FuzzerUtils.init(Test.dArrFld, 0.47371);
        FuzzerUtils.init(Test.iArrFld, -11);
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long lMeth_check_sum = 0;

    public static long lMeth(boolean b) {
        int i = 50131, i1 = -192, i2 = -36617, i3 = -68, i4 = -209, i5 = 101, i6 = -159, i7 = -45, i8 = -9, i9 = 4, iArr[][] = new int[N][N];
        double d = 0.94626;
        byte by = 39;
        float f1 = 22.608F, fArr[][] = new float[N][N];
        short s = 9688;
        long[] lArr = new long[N];
        FuzzerUtils.init(lArr, 1L);
        FuzzerUtils.init(iArr, -12);
        FuzzerUtils.init(fArr, -2.73F);
        lArr[(13947 >>> 1) % N] = -2;
        i = (int) Test.instanceCount;
        i *= (int) d;
        {
            java.io.PrintStream ax$0 = System.out;
            java.io.PrintStream ax$1 = System.err;
            java.io.PrintStream ax$2 = new java.io.PrintStream(new java.io.OutputStream() {

                @Override
                public void write(int b) throws java.io.IOException {
                    // DO NOTHING: DISCARD ALL OUTPUTS
                }
            });
            System.setOut(ax$2);
            System.setErr(ax$2);
            {
                boolean ax$4 = false;
                for (int ax$3 = -3312; ax$3 < 2198; ax$3 += 7) {
                    if (!ax$4) {
                        ax$4 = true;
                        {
                            System.setOut(ax$0);
                            System.setErr(ax$1);
                            for (i1 = 213; i1 > 9; --i1) {
                                i2 *= (int) 1.11461;
                                iArr = iArr;
                                for (i3 = 1; i3 < 3; ++i3) {
                                    i4 *= 16276;
                                    i4 = by;
                                    iArr[i1 + 1][i3] += i3;
                                    i2 += (((i3 * i) + i2) - i4);
                                    d = i2;
                                    i5 = 1;
                                    while (++i5 < 2) {
                                        d = d;
                                        lArr[i1 - 1] <<= 575992397L;
                                    }
                                    for (i6 = 1; i6 < 2; i6++) {
                                        i += (((i6 * i3) + f1) - Test.instanceCount);
                                        iArr[i1 - 1][i6 - 1] *= i4;
                                        i2 >>= i7;
                                        s += (short) (-48619 + (i6 * i6));
                                        f1 += i;
                                        f1 += f1;
                                        i -= i1;
                                        Test.instanceCount >>= Test.instanceCount;
                                        by += (byte) i6;
                                        i4 += (((i6 * f1) + i4) - i7);
                                        i = -13;
                                        i2 -= s;
                                        fArr[i6][i6 - 1] = i3;
                                        Test.instanceCount = i3;
                                    }
                                    for (i8 = 1; i8 < 2; ++i8) {
                                        iArr[i8][i8] <<= i7;
                                    }
                                    fArr[i1 + 1] = fArr[i3];
                                    i2 += (i3 - f1);
                                    i4 += (i3 * i3);
                                    lArr[i3] *= i1;
                                    f1 = Test.instanceCount;
                                }
                            }
                            System.setOut(ax$2);
                            System.setErr(ax$2);
                        }
                    }
                }
            }
            System.setOut(ax$0);
            System.setErr(ax$1);
        }
        long meth_res = (b ? 1 : 0) + i + Double.doubleToLongBits(d) + i1 + i2 + i3 + i4 + by + i5 + i6 + i7 + Float.floatToIntBits(f1) + s + i8 + i9 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth1(long l, float f) {
        boolean b1 = false;
        int i10 = 202, i11 = -52, i12 = 54, iArr1[] = new int[N];
        long l1 = 12134L;
        byte by1 = 102;
        short s1 = 25963;
        double[] dArr = new double[N];
        float[] fArr1 = new float[N];
        FuzzerUtils.init(iArr1, -2);
        FuzzerUtils.init(dArr, -1.7024);
        FuzzerUtils.init(fArr1, -1.768F);
        Test.instanceCount = lMeth(b1);
        i10 = 1;
        do {
            i11 = -4341;
            l |= i11;
            iArr1 = iArr1;
            switch((((i11 >>> 1) % 7) * 5) + 17) {
                case 44:
                    i11 += (((i10 * i10) + i11) - i10);
                    Test.instanceCount += i10;
                    i11 = (int) Test.instanceCount;
                    l1 = 1;
                    do {
                        i12 = 1;
                        do {
                            i11 -= i10;
                            Test.dFld -= f;
                            switch((i10 % 10) + 121) {
                                case 121:
                                    l += (((i12 * f) + Test.instanceCount) - i10);
                                    f = -7L;
                                    iArr1[i10] -= i12;
                                    iArr1[(int) (l1)] = (int) l1;
                                    iArr1[(int) (l1 - 1)] = i12;
                                    l += (((i12 * i12) + f) - l1);
                                    f = Test.instanceCount;
                                    break;
                                case 122:
                                    i11 = i10;
                                    l += (((i12 * l1) + by1) - Test.instanceCount);
                                    i11 *= by1;
                                    i11 += (int) Test.instanceCount;
                                    break;
                                case 123:
                                    iArr1[i10] >>= (int) l1;
                                    Test.dFld -= i12;
                                    i11 |= i11;
                                    f += (((i12 * l) + Test.instanceCount) - i11);
                                    switch(((i12 % 2) * 5) + 110) {
                                        case 116:
                                            dArr[i12] += i12;
                                            break;
                                        case 113:
                                            Test.instanceCount += (i12 | l);
                                            i11 = i12;
                                            l %= (i11 | 1);
                                            fArr1[i10 + 1] = f;
                                            break;
                                        default:
                                    }
                                    Test.instanceCount += (i12 | i12);
                                case 124:
                                    i11 |= (int) 8317423435042565751L;
                                    break;
                                case 125:
                                    Test.instanceCount += i10;
                                    break;
                                case 126:
                                    l >>>= i10;
                                case 127:
                                    i11 >>= 59713;
                                case 128:
                                    b1 = b1;
                                case 129:
                                    i11 = i10;
                                    break;
                                case 130:
                                    i11 *= i10;
                                    break;
                                default:
                                    i11 ^= i10;
                            }
                        } while (--i12 > 0);
                    } while (++l1 < 3);
                    break;
                case 47:
                    Test.lArrFld[i10] = i11;
                case 46:
                    {
                        java.io.PrintStream ax$5 = System.out;
                        java.io.PrintStream ax$6 = System.err;
                        java.io.PrintStream ax$7 = new java.io.PrintStream(new java.io.OutputStream() {

                            @Override
                            public void write(int b) throws java.io.IOException {
                                // DO NOTHING: DISCARD ALL OUTPUTS
                            }
                        });
                        System.setOut(ax$7);
                        System.setErr(ax$7);
                        {
                            boolean ax$11 = false;
                            for (int ax$10 = -1776; ax$10 < 4911; ax$10 += 4) {
                                if (!ax$11) {
                                    ax$11 = true;
                                    {
                                        System.setOut(ax$5);
                                        System.setErr(ax$6);
                                        f = -53918;
                                        System.setOut(ax$7);
                                        System.setErr(ax$7);
                                    }
                                }
                                try {
                                    java.lang.StringBuffer ax$8 = new StringBuffer("riemann");
                                    /* this will throw null pointer exception
                                  before the bug was fixed. */
                                    if (!ax$8.toString().equals("FOOnullBAR")) {
                                    }
                                } catch (Throwable ax$9) {
                                } finally {
                                }
                            }
                        }
                        System.setOut(ax$5);
                        System.setErr(ax$6);
                    }
                    break;
                case 33:
                    i11 += (int) f;
                case 41:
                    iArr1[i10 - 1] -= i11;
                    break;
                case 42:
                    i11 = s1;
                    break;
                case 24:
                    i11 += i11;
                default:
                    s1 += (short) -4L;
            }
        } while (++i10 < 236);
        vMeth1_check_sum += l + Float.floatToIntBits(f) + (b1 ? 1 : 0) + i10 + i11 + l1 + i12 + by1 + s1 + FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void vMeth() {
        float f2 = -92.354F, f3 = -37.403F;
        int i13 = -128, i14 = -14, i15 = 51584, i16 = 17955, i17 = -66, i18 = 34567, i19 = 10, i20 = -5, i21 = -18541, i22 = 8781, iArr2[] = new int[N];
        boolean b2 = false;
        byte[][] byArr = new byte[N][N];
        FuzzerUtils.init(iArr2, -13);
        FuzzerUtils.init(byArr, (byte) 114);
        vMeth1(-58075L, f2);
        i13 = i13;
        i13 = (int) Test.instanceCount;
        iArr2[(i13 >>> 1) % N] -= Test.byFld;
        Test.instanceCount >>= i13;
        f2 -= i13;
        Test.lArrFld[(i13 >>> 1) % N] = Test.instanceCount;
        for (i14 = 9; 144 > i14; i14++) {
            switch((i14 % 2) + 100) {
                case 100:
                    try {
                        i15 = (i15 % i13);
                        i13 = (271189003 / i14);
                        i15 = (i14 / iArr2[i14 - 1]);
                    } catch (ArithmeticException a_e) {
                    }
                    break;
                case 101:
                    Test.instanceCount += (65517 + (i14 * i14));
                    for (f3 = 1; f3 < 4; ++f3) {
                        i16 = i13;
                        f2 = Test.instanceCount;
                        b2 = b2;
                        for (i17 = 2; i17 > 1; i17--) {
                            Test.byFld = (byte) i15;
                        }
                        iArr2 = iArr2;
                        i18 = i17;
                        Test.dFld += Test.sFld;
                        Test.instanceCount += (-5L + (f3 * f3));
                    }
                    for (i19 = 4; i19 > 1; i19--) {
                        byArr[i14 - 1][i19] *= (byte) -6;
                        iArr2[i19 + 1] = i20;
                        i15 = i13;
                        i16 >>= i16;
                        i21 = 1;
                        while (++i21 < 2) {
                            i18 += i15;
                            b2 = b2;
                            i20 *= Test.sFld;
                            i22 += i21;
                            Test.dArrFld[i21] *= i19;
                            i20 *= Test.byFld;
                            i16 = (int) Test.instanceCount;
                            iArr2[i21 + 1] -= i21;
                            Test.lArrFld = Test.lArrFld;
                            i20 += i21;
                        }
                    }
                default:
                    Test.instanceCount += i14;
            }
            {
                java.io.PrintStream ax$17 = System.out;
                java.io.PrintStream ax$18 = System.err;
                java.io.PrintStream ax$19 = new java.io.PrintStream(new java.io.OutputStream() {

                    @Override
                    public void write(int b) throws java.io.IOException {
                        // DO NOTHING: DISCARD ALL OUTPUTS
                    }
                });
                System.setOut(ax$19);
                System.setErr(ax$19);
                try {
                    for (int ax$15 = -1003; ax$15 < 6914; ax$15 += 1) {
                        try {
                            boolean[] ax$13 = new boolean[1];
                            for (int ax$12 = 0; ax$12 < ax$13.length; ax$12++) {
                                ax$13[ax$12] = !ax$13[20];
                            }
                        } catch (Throwable ax$14) {
                        } finally {
                        }
                    }
                } catch (Throwable ax$16) {
                }
                System.setOut(ax$17);
                System.setErr(ax$18);
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f2) + i13 + i14 + i15 + Float.floatToIntBits(f3) + i16 + (b2 ? 1 : 0) + i17 + i18 + i19 + i20 + i21 + i22 + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {
        int i23 = -1, i24 = -227, i25 = -111, i26 = -9, i27 = 201, i28 = 34712;
        float f4 = 60.465F, f5 = -2.586F, fArr2[] = new float[N];
        FuzzerUtils.init(fArr2, -2.403F);
        vMeth();
        for (i23 = 6; i23 < 118; i23 += 3) {
            f4 += Test.instanceCount;
            i24 += (int) f4;
            f5 = 1;
            while (++f5 < 136) {
                i24 = (int) Test.instanceCount;
                Test.lArrFld[(int) (f5 + 1)] <<= Test.instanceCount;
                for (i25 = 1; i25 < 1; ++i25) {
                    boolean b3 = false;
                    f4 = -250L;
                    Test.iArrFld[(int) (f5)] >>= i25;
                    Test.iArrFld[i25] = Test.sFld;
                    i26 &= i23;
                    i24 >>>= i24;
                    switch(((i26 >>> 1) % 7) + 116) {
                        case 116:
                        case 117:
                            i26 = i24;
                            Test.lArrFld[(int) (f5)] *= Test.instanceCount;
                            Test.instanceCount >>= -4L;
                            switch(((i25 >>> 1) % 2) + 86) {
                                case 86:
                                    Test.dFld += i23;
                                    break;
                                case 87:
                                    Test.instanceCount *= Test.instanceCount;
                                    i24 += (((i25 * f4) + i26) - i25);
                                    Test.instanceCount <<= i24;
                                    f4 += (14 + (i25 * i25));
                                    i26 -= i25;
                                    if (false)
                                        continue;
                                    Test.byFld >>= (byte) 8522L;
                                    break;
                                default:
                                    switch((i23 % 3) + 105) {
                                        case 105:
                                            Test.iArrFld[i23 + 1] *= i26;
                                            if (b3) {
                                                Test.instanceCount -= Test.byFld;
                                                i24 = i26;
                                                if (b3) {
                                                    i24 -= (int) 1.23431;
                                                    Test.instanceCount >>= i24;
                                                    Test.sFld += (short) (i25 + i24);
                                                    if (b3)
                                                        continue;
                                                    Test.instanceCount += 213;
                                                    i24 += i27;
                                                    i27 >>= i24;
                                                    i24 = (int) Test.instanceCount;
                                                } else if (b3) {
                                                    Test.iArrFld[i23 - 1] += i28;
                                                    switch(((i25 % 9) * 5) + 52) {
                                                        case 66:
                                                            i27 += (i25 * i25);
                                                            f4 -= i23;
                                                            fArr2 = fArr2;
                                                            i28 = i25;
                                                            break;
                                                        case 82:
                                                            i24 -= i24;
                                                        case 87:
                                                            Test.dFld *= -90;
                                                            i27 += (int) (0.900F + (i25 * i25));
                                                            switch((((i23 >>> 1) % 2) * 5) + 42) {
                                                                case 49:
                                                                    i27 = i27;
                                                                    Test.instanceCount -= i24;
                                                                    Test.dFld -= Test.dFld;
                                                                    Test.instanceCount -= Test.instanceCount;
                                                                    break;
                                                                case 48:
                                                                    Test.sFld += (short) (i25 * i23);
                                                                    switch((int) (((f5 % 1) * 5) + 20)) {
                                                                        case 23:
                                                                    }
                                                                    i27 -= (int) Test.dFld;
                                                                    if (b3)
                                                                        break;
                                                                    i27 ^= i26;
                                                                    i24 -= i27;
                                                                    Test.instanceCount -= i28;
                                                                    i28 = 32386;
                                                                    i27 += 77;
                                                                    i27 = 234;
                                                                    i28 = Test.byFld;
                                                                    Test.byFld += (byte) i26;
                                                                    i27 = i26;
                                                                    Test.byFld = (byte) 106;
                                                                    break;
                                                                default:
                                                                    i26 = i24;
                                                            }
                                                            Test.instanceCount -= (long) Test.dFld;
                                                            Test.iArrFld[(int) (f5 + 1)] *= (int) Test.dFld;
                                                            i26 -= (int) Test.dFld;
                                                            f4 *= i23;
                                                            break;
                                                        case 65:
                                                            Test.iArrFld[i25 - 1] -= i26;
                                                            break;
                                                        case 60:
                                                            i27 += (int) Test.instanceCount;
                                                            break;
                                                        case 84:
                                                            i27 = (int) Test.instanceCount;
                                                        case 83:
                                                            Test.iArrFld[i25 - 1] -= i28;
                                                        case 76:
                                                            Test.iArrFld[i25 + 1] += i25;
                                                            break;
                                                        case 70:
                                                            f4 += Test.sFld;
                                                            break;
                                                    }
                                                }
                                            }
                                        case 106:
                                            Test.iArrFld[i25 + 1] -= (int) Test.dFld;
                                        case 107:
                                            Test.dFld = i26;
                                            break;
                                    }
                            }
                            break;
                        case 118:
                            Test.instanceCount *= Test.instanceCount;
                        case 119:
                            Test.dFld -= 27114;
                            break;
                        case 120:
                            i26 += (i25 * i25);
                        case 121:
                            Test.dFld *= Test.instanceCount;
                            break;
                        case 122:
                            if (true)
                                continue;
                            break;
                        default:
                            b3 = false;
                    }
                }
            }
        }
        FuzzerUtils.out.println("i23 i24 f4 = " + i23 + "," + i24 + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("f5 i25 i26 = " + Float.floatToIntBits(f5) + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 fArr2 = " + i27 + "," + i28 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)));
        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.byFld = " + Test.instanceCount + "," + Double.doubleToLongBits(Test.dFld) + "," + Test.byFld);
        FuzzerUtils.out.println("Test.sFld Test.lArrFld Test.dArrFld = " + Test.sFld + "," + FuzzerUtils.checkSum(Test.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  vMeth ->  vMeth mainTest
// DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
// DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
