// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = 3L;

    public volatile int iFld = -42819;

    public static volatile byte byFld = 42;

    public static boolean bFld = false;

    public short sFld = -9040;

    public int iFld1 = 88;

    public static long[] lArrFld = new long[N];

    public byte[] byArrFld = new byte[N];

    public int[] iArrFld = new int[N];

    public volatile boolean[] bArrFld = new boolean[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 83L);
    }

    public static long iMeth_check_sum = 0;

    public static long iMeth1_check_sum = 0;

    public static long lMeth_check_sum = 0;

    public static long lMeth() {
        if (ax$8) {
            try {
                char[] ax$9 = new char[] { 40000, 40001, 40002, 40003, 40004 };
                long[] ax$10 = new long[10];
                for (int ax$15 = 0; ax$15 < ax$10.length; ax$15 += 1) {
                    long ax$11 = (long) ax$9[ax$15 * 4 + 0];
                    long ax$12 = (long) ax$9[ax$15 * 4 + 1];
                    long ax$13 = (long) ax$9[ax$15 * 4 + 2];
                    long ax$14 = (long) ax$9[ax$15 * 4 + 3];
                    ax$10[ax$15] = (ax$14 & 0xFFFFl) | ((ax$13 & 0xFFFFl) << 16) | ((ax$12 & 0xFFFFl) << 32) | ((ax$11 & 0xFFFFl) << 48);
                }
            } catch (Throwable ax$16) {
            } finally {
            }
            return 6656297170107854294L;
        }
        int i7 = -51246, i8 = -7, i9 = 5, i10 = 8, i11 = -39014, i12 = 72, iArr[] = new int[N];
        float f2 = 2.567F;
        short s1 = 18975;
        double d1 = -48.18095;
        byte[] byArr = new byte[N];
        FuzzerUtils.init(iArr, 2);
        FuzzerUtils.init(byArr, (byte) 100);
        iArr = iArr;
        for (i7 = 8; i7 < 168; i7++) {
            i8 *= (int) f2;
            iArr[i7 - 1] += i8;
            Test.instanceCount *= -13L;
            for (i9 = 1; i9 < 4; i9++) {
                iArr[i9] = i8;
                Test.instanceCount >>= i9;
                i11 = 2;
                do {
                    Test.instanceCount += -38525;
                    f2 /= (i11 | 1);
                    byArr[i11 - 1] = (byte) i11;
                    i10 = i9;
                    switch(((i9 % 2) * 5) + 18) {
                        case 25:
                            i8 += (i11 ^ i11);
                            s1 *= (short) f2;
                            i10 -= (int) d1;
                            if (false)
                                continue;
                            break;
                        case 26:
                            i8 *= -31034;
                            i10 = i9;
                            switch((i7 % 5) + 74) {
                                case 74:
                                    i8 |= -6;
                                    i10 >>>= i9;
                                    f2 /= ((long) (f2) | 1);
                                    Test.instanceCount += i10;
                                    i8 += (i11 - i9);
                                    i8 = i8;
                                    Test.instanceCount = i9;
                                    Test.instanceCount = Test.instanceCount;
                                    f2 -= i7;
                                    Test.instanceCount += (((i11 * i11) + i11) - i7);
                                    i8 = i11;
                                    if (true) {
                                        if (Test.bFld)
                                            break;
                                        iArr[i7 - 1] = i12;
                                        i12 -= (int) f2;
                                        i10 -= (int) Test.instanceCount;
                                    } else {
                                        i12 += (((i11 * Test.instanceCount) + Test.instanceCount) - i12);
                                    }
                                    break;
                                case 75:
                                    i8 += i12;
                                case 76:
                                    i8 += i11;
                                    break;
                                case 77:
                                    Test.bFld = Test.bFld;
                                    break;
                                case 78:
                                    Test.instanceCount |= Test.instanceCount;
                                    break;
                            }
                            break;
                        default:
                            i12 += s1;
                    }
                } while ((i11 -= 2) > 0);
            }
        }
        long meth_res = i7 + i8 + Float.floatToIntBits(f2) + i9 + i10 + i11 + s1 + Double.doubleToLongBits(d1) + i12 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public int iMeth1(int i6, float f1) {
        int i13 = 12, i14 = 170, i15 = -7, i16 = 25, i17 = -19590, i18 = -46229, i19 = 5;
        long l = 5L;
        short s2 = -13915, sArr1[] = new short[N];
        float[] fArr = new float[N];
        FuzzerUtils.init(fArr, 0.976F);
        FuzzerUtils.init(sArr1, (short) -15777);
        Test.byFld = (byte) Math.min(lMeth(), Test.instanceCount);
        iFld = i6;
        for (i13 = 5; i13 < 239; i13++) {
            for (i15 = 1; i15 < 3; i15++) {
                i16 >>= i13;
                byArrFld[i15] = (byte) i16;
                Test.bFld = Test.bFld;
                iFld += (-8 + (i15 * i15));
                iArrFld[i15 + 1] -= i6;
                i6 += i15;
                iArrFld = iArrFld;
                i14 += (int) f1;
                Test.instanceCount += (i15 + i13);
                f1 = 0;
                f1 += (i15 - Test.instanceCount);
                Test.instanceCount += (((i15 * f1) + i13) - f1);
                Test.instanceCount += (((i15 * i14) + iFld) - i15);
            }
            iFld += (((i13 * Test.instanceCount) + Test.instanceCount) - i15);
            i6 = (int) -246L;
        }
        for (l = 191; 5 < l; --l) {
            if (i14 != 0) {
            }
            for (i18 = 1; i18 < 3; ++i18) {
                iFld &= (int) l;
                s2 += (short) i18;
                fArr[i18 + 1] = l;
                iArrFld[i18 - 1] *= i6;
                iArrFld[(int) (l + 1)] -= i14;
                i17 += i19;
                Test.byFld = (byte) iFld;
                iFld -= s2;
            }
            if (Test.bFld) {
                Test.lArrFld[(int) (l - 1)] = i17;
                Test.instanceCount = l;
                iFld -= i14;
                Test.instanceCount -= i13;
                i17 -= i17;
                sArr1[(int) (l)] &= (short) i15;
            } else {
                iArrFld[(int) (l + 1)] *= (int) Test.instanceCount;
            }
        }
        long meth_res = i6 + Float.floatToIntBits(f1) + i13 + i14 + i15 + i16 + l + i17 + i18 + i19 + s2 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(sArr1);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public int iMeth() {
        double d = -2.107170;
        short s = -22199, sArr[] = new short[N];
        int i1 = -97, i2 = -27869, i3 = -34164, i4 = -57419, i5 = 10, i20 = -77, i21 = 14, i22 = 2, i23 = 11, i24 = -138;
        float f = 16.333F;
        boolean b = false;
        FuzzerUtils.init(sArr, (short) -4016);
        iFld = (int) (((-30 - (Test.lArrFld[(iFld >>> 1) % N] += (long) d)) + (++s)) * ((d + 1) + Test.byFld));
        for (i1 = 7; 151 > i1; ++i1) {
            Test.instanceCount = (long) (((i2 + i1) * iFld) * (-(f - iFld)));
            Test.instanceCount = Test.byFld;
            Test.lArrFld[i1 - 1] = Test.instanceCount;
            if (i2 != 0) {
            }
        }
        d = (((--Test.instanceCount) - sArr[(i2 >>> 1) % N]) | (long) ((i2--) + (f + Test.instanceCount)));
        f *= Test.lArrFld[(i1 >>> 1) % N];
        for (i3 = 2; i3 < 94; i3 += 3) {
            i5 = 1;
            do {
                switch((((-64801 * (i2 + i1)) >>> 1) % 3) + 56) {
                    case 56:
                        Test.instanceCount = (long) (f--);
                        iFld &= Math.abs(iMeth1(iFld, f));
                        for (i20 = 1; i20 < 1; i20++) {
                            i4 >>= Test.byFld;
                            if (i5 != 0) {
                            }
                            Test.instanceCount += i4;
                            iFld += (i20 - i2);
                            i22 *= (int) Test.instanceCount;
                            iArrFld[i5] *= iFld;
                        }
                        f = (float) d;
                        for (i23 = 1; i23 > 1; i23 -= 3) {
                            if (false)
                                continue;
                            f += (i23 * i23);
                            Test.instanceCount = s;
                            if (Test.bFld) {
                                i22 *= i21;
                                Test.bFld = Test.bFld;
                                iArrFld[i3] ^= i1;
                                i24 *= -13;
                            } else if (Test.bFld) {
                                iArrFld[i5 - 1] >>>= iFld;
                                iArrFld[i5] = -47;
                                Test.instanceCount *= (long) f;
                                i4 = i5;
                                iArrFld = iArrFld;
                                Test.instanceCount += (((i23 * i4) + Test.instanceCount) - Test.instanceCount);
                                i21 <<= i21;
                            } else if (b) {
                                iFld = -13;
                            }
                        }
                        break;
                    case 57:
                        f = i21;
                        break;
                    case 58:
                        f += (-3 + (i5 * i5));
                }
            } while (++i5 < 17);
            {
                java.io.PrintStream ax$5 = System.out;
                java.io.PrintStream ax$6 = System.err;
                java.io.PrintStream ax$7 = new java.io.PrintStream(new java.io.OutputStream() {

                    @Override
                    public void write(int b) throws java.io.IOException {
                        // DO NOTHING: DISCARD ALL OUTPUTS
                    }
                });
                System.setOut(ax$7);
                System.setErr(ax$7);
                try {
                    for (int ax$3 = -1399; ax$3 < 8126; ax$3 += 1) {
                        int ax$1 = i20;
                        try {
                            for (int ax$0 = 0; ax$0 < 1; (new byte[i20 - ax$0])[0] = 0, ax$0++) {
                            }
                        } catch (Throwable ax$2) {
                        } finally {
                            i20 = ax$1;
                        }
                    }
                } catch (Throwable ax$4) {
                }
                System.setOut(ax$5);
                System.setErr(ax$6);
            }
        }
        long meth_res = Double.doubleToLongBits(d) + s + i1 + i2 + Float.floatToIntBits(f) + i3 + i4 + i5 + i20 + i21 + i22 + i23 + i24 + (b ? 1 : 0) + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {
        if (ax$22) {
            try {
                int ax$196 = 0x7fff0000;
                if (ax$196 > 0) {
                }
            } catch (Throwable ax$197) {
            } finally {
            }
            return;
        }
        int i = 205, i25 = 13, i26 = -52638, i27 = -93, i28 = 61905, i29 = -12, i30 = -34, i31 = -1, i32 = 7, i33 = 12, i34 = -2;
        float f3 = 1.177F;
        double d2 = 117.38985, dArr[] = new double[N];
        short[] sArr2 = new short[N];
        FuzzerUtils.init(sArr2, (short) 12476);
        FuzzerUtils.init(dArr, -2.34783);
        i = 11;
        i = (int) (Math.abs(Math.abs(Test.instanceCount)) - (iMeth() >> iFld));
        Test.bFld = Test.bFld;
        Test.instanceCount <<= Test.instanceCount;
        for (i25 = 5; i25 < 161; ++i25) {
            if (Test.bFld)
                break;
            for (i27 = 33; i27 > 1; i27--) {
                Test.instanceCount += iFld;
            }
            for (i29 = 2; i29 < 33; ++i29) {
                i -= (int) Test.instanceCount;
                iArrFld = iArrFld;
                for (i31 = 1; i31 < 2; i31++) {
                    f3 += (i31 - f3);
                    Test.instanceCount += Test.instanceCount;
                    Test.instanceCount += Test.instanceCount;
                    switch((i31 % 8) + 64) {
                        case 64:
                            Test.instanceCount = (long) d2;
                            Test.lArrFld[i25 - 1] *= i31;
                            sFld <<= sFld;
                            iFld = (int) f3;
                            i <<= (int) Test.instanceCount;
                            break;
                        case 65:
                            i32 += (220 + (i31 * i31));
                            iFld %= (int) (i29 | 1);
                            Test.instanceCount = i26;
                            Test.instanceCount = i;
                            Test.instanceCount = i25;
                            i = i26;
                            switch(((i30 >>> 1) % 5) + 5) {
                                case 5:
                                    Test.lArrFld[i25 - 1] += i30;
                                    Test.instanceCount <<= Test.byFld;
                                    switch(((i31 % 5) * 5) + 54) {
                                        case 73:
                                            i30 = (int) Test.instanceCount;
                                            Test.instanceCount = 62845;
                                            iFld ^= sFld;
                                            i32 += (((i31 * iFld) + i28) - iFld);
                                            switch((((i29 >>> 1) % 8) * 5) + 60) {
                                                case 72:
                                                    if (Test.bFld)
                                                        break;
                                                    iArrFld[i25 - 1] = i;
                                                    i32 = (int) -35L;
                                                    iFld -= iFld;
                                                    Test.instanceCount += Test.byFld;
                                                    sFld = (short) 2.946F;
                                                    i += (int) Test.instanceCount;
                                                    iArrFld[i31 - 1] += i28;
                                                    sArr2[i25] -= (short) i25;
                                                    dArr[i31] = i27;
                                                    i30 *= -21800;
                                                    Test.instanceCount ^= iFld;
                                                    if (Test.bFld) {
                                                        Test.instanceCount -= i31;
                                                        i32 += (((i31 * i30) + Test.instanceCount) - iFld);
                                                        i28 <<= i26;
                                                        sArr2 = sArr2;
                                                        i30 -= 81;
                                                        byArrFld[i29 - 1] = (byte) 15042;
                                                        i26 = -141;
                                                        iFld <<= i33;
                                                        Test.instanceCount = Test.instanceCount;
                                                        Test.lArrFld[i29 + 1] *= Test.instanceCount;
                                                        iArrFld[i25 + 1] -= i31;
                                                        f3 += iFld1;
                                                        Test.instanceCount = Test.instanceCount;
                                                    } else if (Test.bFld) {
                                                        Test.instanceCount -= iFld1;
                                                        switch((i31 % 7) + 106) {
                                                            case 106:
                                                                i30 <<= iFld1;
                                                                i33 += i32;
                                                                Test.instanceCount += i28;
                                                                if (Test.bFld) {
                                                                    iArrFld[i25] -= i32;
                                                                    if (Test.bFld)
                                                                        break;
                                                                    i26 -= i27;
                                                                    i26 += (((i31 * i25) + i31) - i);
                                                                    if (true) {
                                                                        f3 = i27;
                                                                        i26 <<= i26;
                                                                    } else if (Test.bFld) {
                                                                        Test.instanceCount *= i27;
                                                                    } else if (Test.bFld) {
                                                                        i32 = i30;
                                                                    } else {
                                                                        i28 = (int) -43319L;
                                                                    }
                                                                }
                                                                break;
                                                            case 107:
                                                                iFld += (int) Test.instanceCount;
                                                                break;
                                                            case 108:
                                                                iFld <<= i32;
                                                            case 109:
                                                                Test.instanceCount |= i26;
                                                            case 110:
                                                            case 111:
                                                                i += (int) (-63226L + (i31 * i31));
                                                                break;
                                                            case 112:
                                                                bArrFld[i31 + 1] = Test.bFld;
                                                                break;
                                                            default:
                                                                Test.bFld = Test.bFld;
                                                        }
                                                    }
                                                case 79:
                                                    Test.bFld = Test.bFld;
                                                    break;
                                                case 63:
                                                    i26 += (i31 - i28);
                                                    break;
                                                case 74:
                                                    i -= sFld;
                                                case 95:
                                                    Test.byFld += (byte) (i31 - iFld1);
                                                    break;
                                                case 75:
                                                    iArrFld[i31 + 1] += i32;
                                                case 71:
                                                    iFld = i26;
                                                    break;
                                                case 100:
                                            }
                                            break;
                                        case 56:
                                            byArrFld[i25 + 1] -= Test.byFld;
                                            break;
                                        case 57:
                                            i33 += (i31 - i31);
                                            break;
                                        case 70:
                                            iArrFld[(i34 >>> 1) % N] += i34;
                                        case 61:
                                            i33 >>= (int) Test.instanceCount;
                                            break;
                                        default:
                                            d2 -= Test.byFld;
                                    }
                                case 6:
                                    Test.instanceCount += i31;
                                    break;
                                case 7:
                                    i26 = iFld;
                                    break;
                                case 8:
                                    i26 = (int) Test.instanceCount;
                                    break;
                                case 9:
                                    d2 *= i;
                                    break;
                                default:
                                    i *= (int) 88.667F;
                            }
                            break;
                        case 66:
                        case 67:
                            iFld = 8;
                            break;
                        case 68:
                        case 69:
                            f3 += Test.instanceCount;
                            break;
                        case 70:
                        case 71:
                            i28 = (int) f3;
                        default:
                            if (Test.bFld)
                                break;
                    }
                }
            }
        }
        FuzzerUtils.out.println("i i25 i26 = " + i + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("f3 d2 i33 = " + Float.floatToIntBits(f3) + "," + Double.doubleToLongBits(d2) + "," + i33);
        FuzzerUtils.out.println("i34 sArr2 dArr = " + i34 + "," + FuzzerUtils.checkSum(sArr2) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("Test.instanceCount iFld Test.byFld = " + Test.instanceCount + "," + iFld + "," + Test.byFld);
        FuzzerUtils.out.println("Test.bFld sFld iFld1 = " + (Test.bFld ? 1 : 0) + "," + sFld + "," + iFld1);
        FuzzerUtils.out.println("Test.lArrFld byArrFld iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(byArrFld) + "," + FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("bArrFld = " + FuzzerUtils.checkSum(bArrFld));
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$8 = false;

    private static Boolean ax$22 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  iMeth ->  iMeth mainTest
// DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
// DEBUG  lMeth ->  lMeth iMeth1 iMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
