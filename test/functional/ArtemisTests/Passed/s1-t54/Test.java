// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = 25107L;

    public static int iFld = -243;

    public static double dFld = -1.26452;

    public static byte byFld = -32;

    public static boolean bFld = false;

    public static short sFld = 5361;

    public static int iFld1 = -9;

    public static int iFld2 = 2;

    public float fFld = 113.303F;

    public static short[][] sArrFld = new short[N][N];

    public static int[] iArrFld = new int[N];

    public static int[][] iArrFld1 = new int[N][N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short) 28113);
        FuzzerUtils.init(Test.iArrFld, -9);
        FuzzerUtils.init(Test.iArrFld1, -1179);
    }

    public static long vMeth_check_sum = 0;

    public static long lMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {
        int i9 = 1003, i10 = -10, i11 = -211, i12 = -33073, i13 = -13131, i14 = 70, i15 = 7, i16 = -25982, i17 = -14177, i18 = 31276, i19 = -11;
        boolean b = true;
        float f1 = -2.825F, fArr[] = new float[N];
        long[] lArr1 = new long[N];
        FuzzerUtils.init(fArr, -2.270F);
        FuzzerUtils.init(lArr1, -34951L);
        for (i9 = 3; i9 < 88; ++i9) {
            i11 = 1;
            do {
                Test.instanceCount += (i11 | i9);
                Test.dFld -= i11;
                if (b)
                    break;
                Test.iFld += (int) 1.89626;
                Test.iArrFld[i9 - 1] = Test.iFld;
                b = b;
                fArr[i11 - 1] -= i11;
                f1 = f1;
                i10 += i11;
                Test.dFld += Test.iFld;
                i10 = i10;
                for (i12 = 1; i12 < 1; ++i12) {
                    Test.iFld |= i14;
                    i10 += i14;
                    Test.instanceCount = (long) f1;
                    fArr[(-12 >>> 1) % N] -= Test.instanceCount;
                    i13 = (int) Test.instanceCount;
                    lArr1[i11 + 1] *= Test.instanceCount;
                    Test.iFld += i10;
                    i13 += (i12 * i12);
                }
                Test.iArrFld[i9 - 1] = i11;
                for (i15 = 1; i15 < 1; i15++) {
                    i14 = (int) Test.instanceCount;
                    Test.iArrFld = Test.iArrFld;
                    i13 = i16;
                }
                i13 = i12;
            } while (++i11 < 6);
            i17 = 1;
            do {
                for (i18 = 1; i18 < 1; ++i18) {
                    Test.instanceCount = -65;
                    Test.iArrFld[i9] = i19;
                }
                i13 *= i11;
                Test.sArrFld[i17 - 1][i9 - 1] *= (short) 49294L;
                i10 -= i10;
                Test.dFld = 3267316412L;
                Test.dFld += f1;
            } while (++i17 < 6);
        }
        vMeth1_check_sum += i9 + i10 + i11 + (b ? 1 : 0) + Float.floatToIntBits(f1) + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr1);
    }

    public static long lMeth() {
        int i7 = -216, i8 = -18, i20 = -182, i21 = 34710, i22 = 185, i23 = -14657, i24 = -10, i25 = 238, i26 = 218, i27 = 29676, iArr1[] = new int[N];
        double d = -78.20054;
        boolean b1 = true;
        float f2 = 42.1013F;
        byte by = 119;
        long[] lArr = new long[N];
        FuzzerUtils.init(lArr, -17L);
        FuzzerUtils.init(iArr1, -3);
        lArr[(Test.iFld >>> 1) % N] += Integer.reverseBytes(Test.iFld);
        iArr1[(Test.iFld >>> 1) % N] |= (int) ((Test.iFld--) + (-Math.abs(0.7F)));
        for (i7 = 7; i7 < 181; ++i7) {
            vMeth1();
        }
        for (d = 4; d < 210; ++d) {
            i20 <<= i7;
            for (i21 = 1; i21 < 3; ++i21) {
                Test.iFld += i21;
                b1 = b1;
                i20 += (i21 * i21);
                i8 = 7;
                i20 += -199;
                i8 ^= (int) Test.instanceCount;
                Test.iArrFld[(int) (d)] += i20;
                Test.iFld += (i21 - i22);
                lArr[(int) (d - 1)] = 11;
                i20 += (20905 + (i21 * i21));
                i22 |= i21;
                iArr1 = iArr1;
            }
            i20 += i20;
            Test.iFld ^= (int) Test.instanceCount;
            switch((int) ((d % 8) + 85)) {
                case 85:
                    for (i23 = 1; i23 < 3; ++i23) {
                        for (i25 = (int) (d); i25 < 2; i25++) {
                            i24 += i25;
                        }
                        for (f2 = (float) (d); f2 < 2; f2++) {
                            Test.iFld = i24;
                            iArr1[i23 - 1] <<= 2;
                            Test.dFld = i8;
                            Test.iArrFld[(int) (d)] *= (int) d;
                            Test.iFld <<= i23;
                            Test.instanceCount += (long) (f2 * f2);
                            Test.iArrFld[(int) (f2 + 1)] -= i22;
                            i8 *= i26;
                            i8 ^= 231;
                            i8 += (int) f2;
                        }
                        Test.instanceCount = by;
                    }
                    break;
                case 86:
                    Test.iArrFld[(int) (d + 1)] *= i23;
                    break;
                case 87:
                    iArr1 = iArr1;
                    break;
                case 88:
                    if (b1)
                        continue;
                    break;
                case 89:
                case 90:
                    i26 *= (int) 29749L;
                case 91:
                    Test.dFld += i21;
                    break;
                case 92:
                    Test.instanceCount -= i8;
                default:
                    i24 |= 14;
            }
        }
        long meth_res = i7 + i8 + Double.doubleToLongBits(d) + i20 + i21 + i22 + (b1 ? 1 : 0) + i23 + i24 + i25 + i26 + Float.floatToIntBits(f2) + i27 + by + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth() {
        float f = -2.743F, f3 = 105.914F, fArr1[] = new float[N];
        int i2 = 14, i3 = -64927, i4 = -6, i5 = 212, i6 = 92, i28 = 194, i29 = 171, i30 = 38144, i31 = -9, i32 = 11, i33 = -13, iArr[] = new int[N], iArr2[] = new int[N];
        long l = 20L, l1 = 4638183488480183610L, l2 = 114326825L, lArr2[] = new long[N];
        short s = 13965;
        byte by1 = -101;
        double[] dArr = new double[N];
        boolean[] bArr = new boolean[N];
        FuzzerUtils.init(iArr, 178);
        FuzzerUtils.init(dArr, 0.127183);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr2, 240L);
        FuzzerUtils.init(fArr1, 1.471F);
        FuzzerUtils.init(iArr2, -1);
        Test.instanceCount = (long) f;
        for (i2 = 7; 215 > i2; i2++) {
            i3 -= (int) Test.instanceCount;
            Test.instanceCount &= i3;
            if (i2 != 0) {
                vMeth_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + l + s + l1 + Float.floatToIntBits(f3) + i28 + i29 + i30 + i31 + l2 + i32 + by1 + i33 + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr2);
                return;
            }
            i4 = 1;
            while (++i4 < 3) {
                for (i5 = 1; 1 > i5; i5++) {
                    Test.sArrFld[i4 + 1][i4 - 1] |= (short) (iArr[i4 + 1] = 81);
                    if ((lMeth() + l) == i2)
                        break;
                    s += (short) (((i5 * l) + i6) - f);
                    Test.iFld += (2 + (i5 * i5));
                    Test.instanceCount = l;
                    i3 -= i5;
                    Test.dFld *= Test.instanceCount;
                    f += (i5 + l1);
                    Test.byFld += (byte) (((i5 * i2) + f) - l);
                    l1 = l;
                }
                l1 -= l;
                i3 = (int) f3;
                Test.iFld -= i2;
                l1 >>= Test.iFld;
            }
            Test.byFld -= (byte) 172;
            if (i5 != 0) {
                vMeth_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + l + s + l1 + Float.floatToIntBits(f3) + i28 + i29 + i30 + i31 + l2 + i32 + by1 + i33 + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr2);
                return;
            }
            Test.iArrFld[i2] *= (int) 69.192F;
            i28 = 3;
            while (--i28 > 0) {
                l ^= i4;
                for (i29 = 1; i29 < 1; ++i29) {
                    Test.iFld += (((i29 * i2) + i2) - i4);
                    i30 += (int) Test.instanceCount;
                    switch(i2 + 72) {
                        case 72:
                        case 73:
                            Test.iFld = i30;
                            Test.iFld <<= i3;
                            i3 -= i31;
                            s &= (short) i29;
                            l2 = i28;
                            i6 -= Test.iFld;
                            dArr[i29 + 1] *= i31;
                            break;
                        case 74:
                        case 75:
                            bArr[i28 - 1] = Test.bFld;
                            break;
                        case 76:
                            Test.iArrFld1 = FuzzerUtils.int2array(N, (int) 123);
                            break;
                        case 77:
                            l = i5;
                            break;
                        case 78:
                            i30 += (((i29 * f3) + f3) - i2);
                        case 79:
                            i30 *= (int) l1;
                            break;
                        case 80:
                            Test.dFld -= -145;
                        case 81:
                            try {
                                Test.iFld = (i4 % -32499);
                                Test.iArrFld1[i28 + 1][i28 + 1] = (-5851 / i4);
                                i31 = (i29 % -19);
                            } catch (ArithmeticException a_e) {
                            }
                            {
                                java.io.PrintStream ax$7 = System.out;
                                java.io.PrintStream ax$8 = System.err;
                                java.io.PrintStream ax$9 = new java.io.PrintStream(new java.io.OutputStream() {

                                    @Override
                                    public void write(int b) throws java.io.IOException {
                                        // DO NOTHING: DISCARD ALL OUTPUTS
                                    }
                                });
                                System.setOut(ax$9);
                                System.setErr(ax$9);
                                try {
                                    for (int ax$5 = -1133; ax$5 < 6322; ax$5 += 1) {
                                        int ax$3 = i31;
                                        try {
                                            int[] ax$0 = { 5, 4, 1, 9, 10, 2, 7, 6, 3, 8 };
                                            // Infinite loop!
                                            for (int ax$1 = Integer.MIN_VALUE + 9, ax$2 = 0; ax$1 >= Integer.MIN_VALUE; ax$1--) {
                                                i31 += ax$0[ax$2++];
                                            }
                                        } catch (Throwable ax$4) {
                                        } finally {
                                            i31 = ax$3;
                                        }
                                    }
                                } catch (Throwable ax$6) {
                                }
                                System.setOut(ax$7);
                                System.setErr(ax$8);
                            }
                            break;
                        case 82:
                            i30 *= (int) l2;
                            break;
                        case 83:
                            l2 = i4;
                        case 84:
                            i3 += i29;
                            break;
                        case 85:
                            i3 += (((i29 * i3) + i31) - Test.byFld);
                            break;
                        case 86:
                            iArr[(40830 >>> 1) % N] *= (int) l1;
                            break;
                        case 87:
                            lArr2[i29 + 1] += Test.iFld;
                            break;
                        case 88:
                            l = i2;
                            break;
                        case 89:
                            l1 += (i29 * Test.instanceCount);
                            break;
                        case 90:
                            i30 >>>= i5;
                            break;
                        case 91:
                            i3 = -54805;
                            break;
                        case 92:
                            l1 += (i29 * i31);
                            break;
                        case 93:
                            i32 += i29;
                            break;
                        case 94:
                            i31 += i2;
                        case 95:
                            fArr1[i29 - 1] = -44076;
                            break;
                        case 96:
                            Test.instanceCount += (-138 + (i29 * i29));
                        case 97:
                            Test.bFld = true;
                            break;
                        case 98:
                            i31 |= i31;
                            break;
                        case 99:
                            iArr[i28] = i3;
                            break;
                        case 100:
                            i32 += (i29 * l);
                        case 101:
                            by1 >>>= (byte) i30;
                            break;
                        case 102:
                            i3 = 26859;
                            break;
                        case 103:
                            i3 += i2;
                        case 104:
                            l1 = i29;
                            break;
                        case 105:
                            iArr[i29] *= (int) 1.117085;
                            break;
                        case 106:
                            l2 -= i5;
                        case 107:
                        case 108:
                            Test.instanceCount = Test.byFld;
                        case 109:
                            l += i30;
                            break;
                        case 110:
                            Test.dFld *= f;
                        case 111:
                        case 112:
                            Test.iArrFld1[i29 + 1][i2] = (int) l2;
                            break;
                        case 113:
                            if (i5 != 0) {
                                vMeth_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + l + s + l1 + Float.floatToIntBits(f3) + i28 + i29 + i30 + i31 + l2 + i32 + by1 + i33 + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr2);
                                return;
                            }
                            break;
                        case 114:
                            if (false)
                                continue;
                            break;
                        case 115:
                            dArr[i28 - 1] = 6192549309818175535L;
                            break;
                        case 116:
                            i31 = (int) Test.instanceCount;
                            break;
                        case 117:
                            Test.bFld = Test.bFld;
                        case 118:
                            lArr2[(i29 >>> 1) % N] += -6;
                        case 119:
                            i31 += s;
                        case 120:
                            f = i31;
                        case 121:
                            dArr[i28] += i6;
                            break;
                        case 122:
                            i31 <<= Test.byFld;
                            break;
                        case 123:
                            lArr2[(Test.iFld >>> 1) % N] *= by1;
                            break;
                        case 124:
                            f -= -2619L;
                        case 125:
                            l1 += (long) Test.dFld;
                            break;
                        case 126:
                            i31 *= i31;
                            break;
                        case 127:
                            if (Test.bFld)
                                continue;
                            break;
                        case 128:
                            Test.instanceCount += i6;
                            break;
                        case 129:
                            Test.iFld += i6;
                            break;
                        case 130:
                            Test.instanceCount -= i2;
                            break;
                        case 131:
                            if (i5 != 0) {
                                vMeth_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + l + s + l1 + Float.floatToIntBits(f3) + i28 + i29 + i30 + i31 + l2 + i32 + by1 + i33 + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr2);
                                return;
                            }
                            break;
                        case 132:
                            i30 <<= Test.sFld;
                        case 133:
                            i3 <<= 7;
                        case 134:
                            f -= (float) Test.dFld;
                            break;
                        case 135:
                        case 136:
                            Test.dFld *= f;
                            break;
                        case 137:
                            iArr2[(76 >>> 1) % N] >>>= i28;
                            break;
                        case 138:
                            i33 -= Test.iFld;
                            break;
                        case 139:
                            f3 += (((i29 * Test.sFld) + Test.iFld) - i30);
                        case 140:
                            i6 += (((i29 * i6) + Test.iFld1) - Test.instanceCount);
                            break;
                        case 141:
                    }
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + l + s + l1 + Float.floatToIntBits(f3) + i28 + i29 + i30 + i31 + l2 + i32 + by1 + i33 + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {
        int i = 146, i1 = -11, i35 = -61374, i36 = 54748, i37 = -10, i38 = -235, i39 = 88, i40 = 62, i41 = 163, i42 = -53490, i43 = 35320, i44 = 59000, iArr3[] = new int[N];
        float f4 = -2.209F, fArr2[][] = new float[N][N];
        long[] lArr3 = new long[N], lArr4[] = new long[N][N];
        double[] dArr1 = new double[N];
        byte[] byArr = new byte[N];
        FuzzerUtils.init(lArr3, 9019118716209853366L);
        FuzzerUtils.init(fArr2, 1.368F);
        FuzzerUtils.init(dArr1, -2.17938);
        FuzzerUtils.init(byArr, (byte) -122);
        FuzzerUtils.init(lArr4, -90L);
        FuzzerUtils.init(iArr3, -169);
        for (i = 1; i < 85; ++i) {
            vMeth();
            Test.iFld1 += i;
            for (i35 = i; i35 < 60; ++i35) {
                Test.instanceCount = Test.iFld;
                Test.iFld1 = (int) 38763L;
                Test.iFld = (int) Test.instanceCount;
                Test.iFld1 ^= i;
                i36 = -181;
                lArr3[i35 + 1] -= Test.instanceCount;
                Test.byFld += (byte) (i35 ^ Test.instanceCount);
                Test.iFld += (((i35 * Test.iFld2) + Test.iFld2) - Test.byFld);
                for (i37 = 1; i37 < 1; i37++) {
                    Test.iArrFld = FuzzerUtils.int1array(N, (int) -10);
                    fArr2[i37][i37] = 228;
                    Test.iFld1 *= i39;
                    i39 -= i40;
                }
            }
            dArr1[i + 1] -= Test.iFld;
            Test.instanceCount ^= Test.instanceCount;
            for (i41 = 3; i41 < 60; i41++) {
                i1 += i41;
                Test.dFld = 20.19187;
                for (i43 = 1; i43 < 2; i43++) {
                    i36 <<= i39;
                    byArr[i] = (byte) -27197L;
                    i44 += (i43 ^ i37);
                    Test.iArrFld1[i][i + 1] += i35;
                    switch((i41 % 5) + 27) {
                        case 27:
                            i44 -= 127;
                            i42 -= i38;
                            Test.instanceCount = i38;
                            i38 += (i43 * i43);
                            i39 += i37;
                            Test.byFld = (byte) i44;
                            i36 = (int) Test.instanceCount;
                            Test.iFld += (((i43 * Test.iFld) + i44) - Test.instanceCount);
                            Test.iArrFld1[i41 - 1] = Test.iArrFld1[i];
                            i38 = (int) Test.dFld;
                            i40 -= -162;
                            Test.instanceCount += i43;
                            break;
                        case 28:
                            switch(((i36 >>> 1) % 10) + 64) {
                                case 64:
                                    Test.instanceCount <<= i;
                                    Test.iFld2 >>= i40;
                                    Test.iArrFld1[i][i41] = i44;
                                    {
                                        java.io.PrintStream ax$10 = System.out;
                                        java.io.PrintStream ax$11 = System.err;
                                        java.io.PrintStream ax$12 = new java.io.PrintStream(new java.io.OutputStream() {

                                            @Override
                                            public void write(int b) throws java.io.IOException {
                                                // DO NOTHING: DISCARD ALL OUTPUTS
                                            }
                                        });
                                        System.setOut(ax$12);
                                        System.setErr(ax$12);
                                        {
                                            boolean ax$17 = false;
                                            for (int ax$16 = -835; ax$16 < 5244; ax$16 += 4) {
                                                if (!ax$17) {
                                                    ax$17 = true;
                                                    {
                                                        System.setOut(ax$10);
                                                        System.setErr(ax$11);
                                                        if (Test.bFld) {
                                                            lArr4[i43][i41] = Test.instanceCount;
                                                            i38 += (i43 * i43);
                                                            i39 -= (int) Test.instanceCount;
                                                            i44 = -49719;
                                                        } else {
                                                            i1 += i43;
                                                            i40 -= (int) f4;
                                                            Test.instanceCount -= (long) fFld;
                                                            Test.iArrFld[i + 1] >>>= (int) Test.instanceCount;
                                                            Test.instanceCount = Test.instanceCount;
                                                            i38 = (int) Test.instanceCount;
                                                            Test.instanceCount *= i40;
                                                            Test.iArrFld1[i43][i41 - 1] >>= Test.iFld1;
                                                            dArr1[i - 1] *= Test.iFld;
                                                            i42 += i43;
                                                            iArr3[i] *= i;
                                                            fFld = (float) Test.dFld;
                                                            switch((i43 % 2) + 54) {
                                                                case 54:
                                                                    Test.iFld2 -= i38;
                                                                    Test.iFld2 += (((i43 * i42) + i38) - f4);
                                                                    Test.iFld2 += (int) Test.instanceCount;
                                                                    Test.instanceCount = i;
                                                                    i42 = 1;
                                                                    Test.bFld = Test.bFld;
                                                                    iArr3[i43 + 1] += i36;
                                                                    if (Test.bFld) {
                                                                        Test.instanceCount -= 9029655090328680579L;
                                                                        switch((i43 % 3) + 91) {
                                                                            case 91:
                                                                                if (Test.bFld)
                                                                                    break;
                                                                                Test.iFld += i43;
                                                                                i1 <<= Test.iFld;
                                                                                break;
                                                                            case 92:
                                                                                f4 = f4;
                                                                            case 93:
                                                                                i38 >>= i42;
                                                                                break;
                                                                            default:
                                                                                iArr3[i41] = i36;
                                                                        }
                                                                    } else {
                                                                        Test.byFld += (byte) (i43 * i43);
                                                                    }
                                                                    break;
                                                                case 55:
                                                                    fArr2[i43][i - 1] += Test.byFld;
                                                                    break;
                                                                default:
                                                                    Test.dFld /= (Test.iFld1 | 1);
                                                            }
                                                        }
                                                        System.setOut(ax$12);
                                                        System.setErr(ax$12);
                                                    }
                                                }
                                                try {
                                                    boolean[] ax$13 = new boolean[1];
                                                    for (int ax$14 = 0; ax$14 < 128; ax$14++) ax$13[ax$14] = !ax$13[ax$14];
                                                } catch (Throwable ax$15) {
                                                } finally {
                                                }
                                            }
                                        }
                                        System.setOut(ax$10);
                                        System.setErr(ax$11);
                                    }
                                case 65:
                                    Test.instanceCount += (i43 * i43);
                                case 66:
                                case 67:
                                    i44 += (int) Test.instanceCount;
                                    break;
                                case 68:
                                    Test.sFld += (short) (i43 * i43);
                                case 69:
                                    iArr3[i43 + 1] = 230;
                                    break;
                                case 70:
                                    Test.iFld = Test.iFld;
                                case 71:
                                    Test.dFld *= -28;
                                    break;
                                case 72:
                                    i36 = Test.iFld2;
                                    break;
                                case 73:
                            }
                            break;
                        case 29:
                            Test.instanceCount = 15808;
                            break;
                        case 30:
                            if (false)
                                break;
                        case 31:
                            Test.byFld >>= (byte) Test.iFld2;
                        default:
                            Test.iFld >>= (int) Test.instanceCount;
                    }
                }
            }
        }
        FuzzerUtils.out.println("i i1 i35 = " + i + "," + i1 + "," + i35);
        FuzzerUtils.out.println("i36 i37 i38 = " + i36 + "," + i37 + "," + i38);
        FuzzerUtils.out.println("i39 i40 i41 = " + i39 + "," + i40 + "," + i41);
        FuzzerUtils.out.println("i42 i43 i44 = " + i42 + "," + i43 + "," + i44);
        FuzzerUtils.out.println("f4 lArr3 fArr2 = " + Float.floatToIntBits(f4) + "," + FuzzerUtils.checkSum(lArr3) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)));
        FuzzerUtils.out.println("dArr1 byArr lArr4 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + "," + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(lArr4));
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));
        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.dFld = " + Test.instanceCount + "," + Test.iFld + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.byFld Test.bFld Test.sFld = " + Test.byFld + "," + (Test.bFld ? 1 : 0) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.iFld1 Test.iFld2 fFld = " + Test.iFld1 + "," + Test.iFld2 + "," + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test.sArrFld Test.iArrFld Test.iArrFld1 = " + FuzzerUtils.checkSum(Test.sArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1));
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        {
            java.io.PrintStream ax$18 = System.out;
            java.io.PrintStream ax$19 = System.err;
            java.io.PrintStream ax$20 = new java.io.PrintStream(new java.io.OutputStream() {

                @Override
                public void write(int b) throws java.io.IOException {
                    // DO NOTHING: DISCARD ALL OUTPUTS
                }
            });
            System.setOut(ax$20);
            System.setErr(ax$20);
            {
                boolean ax$22 = false;
                for (int ax$21 = -4331; ax$21 < 5344; ax$21 += 7) {
                    if (!ax$22) {
                        ax$22 = true;
                        {
                            System.setOut(ax$18);
                            System.setErr(ax$19);
                            try {
                                Test _instance = new Test();
                                for (int i = 0; i < 10; i++) {
                                    _instance.mainTest(strArr);
                                }
                            } catch (Exception ex) {
                                FuzzerUtils.out.println(ex.getClass().getCanonicalName());
                            }
                            System.setOut(ax$20);
                            System.setErr(ax$20);
                        }
                    }
                }
            }
            System.setOut(ax$18);
            System.setErr(ax$19);
        }
    }
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  vMeth ->  vMeth mainTest
// DEBUG  lMeth ->  lMeth vMeth mainTest
// DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
