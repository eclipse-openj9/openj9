// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = -30397L;

    public static int iFld = 12;

    public static float fFld = 0.882F;

    public double dFld = 1.81761;

    public static int iFld1 = 149;

    public static volatile int[] iArrFld = new int[N];

    public double[] dArrFld = new double[N];

    public long[] lArrFld = new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -53709);
    }

    public static long iMeth_check_sum = 0;

    public static long iMeth1_check_sum = 0;

    public static long dMeth_check_sum = 0;

    public static double dMeth() {
        int i7 = 52033, i8 = 32047, i9 = -34193, i10 = 19650, i11 = -49663, i12 = -40297, i13 = -214, i14 = -757, i15 = -30510, i16 = -11025;
        byte by1 = -91;
        long l1 = 3597021733L, lArr1[] = new long[N];
        float f1 = 0.752F;
        boolean b = false;
        double d1 = 1.111888, dArr1[] = new double[N];
        FuzzerUtils.init(lArr1, 229L);
        FuzzerUtils.init(dArr1, 0.49015);
        Test.iFld = (int) Test.instanceCount;
        for (i7 = 6; i7 < 121; ++i7) {
            for (i9 = 1; i9 < 5; ++i9) {
                Test.iFld += i7;
                for (i11 = 1; i11 < 2; ++i11) {
                    Test.iArrFld[i11 - 1] *= i10;
                    Test.instanceCount = i7;
                    lArr1[(-2 >>> 1) % N] = i7;
                }
                if (b) {
                    i12 -= i9;
                    Test.instanceCount *= by1;
                    i12 = i9;
                    switch((i9 % 1) + 29) {
                        case 29:
                            if (i12 != 0) {
                            }
                            {
                                java.io.PrintStream ax$537 = System.out;
                                java.io.PrintStream ax$538 = System.err;
                                java.io.PrintStream ax$539 = new java.io.PrintStream(new java.io.OutputStream() {

                                    @Override
                                    public void write(int b) throws java.io.IOException {
                                        // DO NOTHING: DISCARD ALL OUTPUTS
                                    }
                                });
                                System.setOut(ax$539);
                                System.setErr(ax$539);
                                try {
                                    for (int ax$535 = -2033; ax$535 < 7674; ax$535 += 1) {
                                        long ax$532 = dMeth_check_sum;
                                        long ax$533 = l1;
                                        try {
                                            if (dMeth_check_sum != l1)
                                                ;
                                        } catch (Throwable ax$534) {
                                        } finally {
                                            dMeth_check_sum = ax$532;
                                            l1 = ax$533;
                                        }
                                    }
                                } catch (Throwable ax$536) {
                                }
                                System.setOut(ax$537);
                                System.setErr(ax$538);
                            }
                        default:
                            Test.instanceCount -= -24791;
                            i12 -= Test.iFld;
                            Test.iArrFld[i9] -= i12;
                            for (l1 = 1; l1 < 2; l1++) {
                                i8 = i7;
                                f1 = Test.iFld;
                            }
                    }
                    i14 = 1;
                    while ((i14 += 2) < 2) {
                        Test.iArrFld[i9] = i11;
                    }
                    i8 ^= 122;
                    i8 += (i9 | l1);
                    dArr1[i9] -= -1.92833;
                    Test.instanceCount <<= i13;
                    Test.instanceCount -= (long) f1;
                    i10 += 63958;
                } else {
                    i10 -= Test.iFld;
                    i10 = (int) d1;
                    for (i15 = 2; 1 < i15; i15--) {
                        i13 -= -31610;
                    }
                    Test.instanceCount >>>= i8;
                    f1 -= 109;
                    dArr1[i9 + 1] += i15;
                    Test.iFld >>= i7;
                    dArr1[i7 + 1] = 24633;
                }
            }
        }
        long meth_res = i7 + i8 + i9 + i10 + i11 + i12 + by1 + l1 + i13 + Float.floatToIntBits(f1) + i14 + (b ? 1 : 0) + Double.doubleToLongBits(d1) + i15 + i16 + FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public static int iMeth1() {
        long l = -38312L, lArr2[] = new long[N];
        int i6 = -17167, i17 = -60927, i18 = 29342, i19 = 4, i20 = -4863, i21 = -85;
        float f2 = 97.979F;
        double d2 = 0.18504, dArr[] = new double[N];
        byte by2 = -121;
        FuzzerUtils.init(dArr, 85.36568);
        FuzzerUtils.init(lArr2, -9L);
        dArr[(Test.iFld >>> 1) % N] %= (l | 1);
        Test.iFld <<= i6;
        i6 = (int) dMeth();
        i17 = 1;
        do {
            lArr2[i17] -= Test.iFld;
            Test.iArrFld[i17] = i17;
            for (i18 = 4; 1 < i18; --i18) {
                for (f2 = i17; f2 < 2; ++f2) {
                    i6 ^= i17;
                    i6 += (int) (f2 - f2);
                    switch((((-20366 >>> 1) % 3) * 5) + 20) {
                        case 25:
                            switch(((i19 >>> 1) % 2) + 99) {
                                case 99:
                                    l <<= Test.iFld;
                                    Test.instanceCount = i18;
                                    Test.iArrFld[i18] = (int) l;
                                    lArr2[i17 - 1] -= (long) 85.91235;
                                    i19 &= (int) Test.instanceCount;
                                    i6 += (int) (((f2 * i20) + i18) - Test.instanceCount);
                                    Test.instanceCount += i21;
                                    d2 = i17;
                                    lArr2 = lArr2;
                                    lArr2[i17 - 1] = (long) f2;
                                    Test.iFld += i6;
                                    if (Test.iFld != 0) {
                                    }
                                    i20 -= (int) 1.84450;
                                    Test.instanceCount = i6;
                                    Test.instanceCount = i6;
                                    break;
                                case 100:
                                    Test.iArrFld[i17 - 1] = i6;
                                    i21 += by2;
                                    i20 = i18;
                                    if (i19 != 0) {
                                    }
                                    break;
                            }
                            i19 = by2;
                            Test.instanceCount += (long) (((f2 * by2) + i6) - i17);
                            try {
                                Test.iArrFld[i18 + 1] = (i21 % i21);
                                i19 = (i6 / i21);
                                Test.iFld = (Test.iFld % i19);
                            } catch (ArithmeticException a_e) {
                            }
                            l = 8L;
                            Test.iFld = i6;
                            Test.fFld += f2;
                            break;
                        case 30:
                            i20 >>= i18;
                            break;
                        case 27:
                            i6 = i21;
                            break;
                    }
                }
            }
        } while (++i17 < 148);
        long meth_res = l + i6 + i17 + i18 + i19 + Float.floatToIntBits(f2) + i20 + i21 + Double.doubleToLongBits(d2) + by2 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr2);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(byte by, int i2) {
        int i3 = 117, i4 = -53, i5 = -57935, i22 = 115, i23 = -43, i24 = -60411, i25 = -21739, i26 = 225, i27 = 228;
        double d = 0.111900;
        float f = 2.670F;
        boolean b1 = true;
        long[] lArr = new long[N];
        FuzzerUtils.init(lArr, 2L);
        for (i3 = 1; i3 < 202; ++i3) {
            d += ((--Test.instanceCount) - (lArr[i3 + 1]++));
        }
        for (f = 10; f < 235; f++) {
            i4 *= iMeth1();
            Test.instanceCount += (long) (((f * Test.instanceCount) + Test.fFld) - i4);
            for (i22 = 1; i22 < 3; ++i22) {
                for (i24 = 1; i24 < 2; i24++) {
                    i2 -= (int) Test.fFld;
                    if (b1)
                        continue;
                    Test.instanceCount += (-45077 + (i24 * i24));
                    if (i3 != 0) {
                    }
                }
                i2 >>= -203;
                if (b1) {
                    i23 += (int) Test.instanceCount;
                    for (i26 = 1; 2 > i26; ++i26) {
                        short s = -17146;
                        if (true) {
                            Test.instanceCount += i26;
                            i4 += (((i26 * Test.iFld) + i25) - Test.fFld);
                            if (i2 != 0) {
                            }
                            Test.fFld += i5;
                            switch(((i26 % 2) * 5) + 42) {
                                case 49:
                                    i23 = i3;
                                    Test.iArrFld[i22 + 1] *= (int) Test.instanceCount;
                                    i4 += i26;
                                    Test.fFld += i26;
                                    i5 += i24;
                                    i2 >>= (int) 3926183792172558001L;
                                    i25 += (i26 ^ i27);
                                    break;
                                case 46:
                                    Test.iArrFld[(int) (f)] -= i27;
                                    Test.iArrFld[i26] = i5;
                                    s >>= (short) Test.instanceCount;
                                    i23 -= Test.iFld;
                                    Test.instanceCount += i5;
                                    Test.iArrFld[(14 >>> 1) % N] += Test.iFld;
                                    d = i22;
                                    i2 >>= -151;
                                    Test.iFld >>= i3;
                                    break;
                                default:
                                    i4 = (int) d;
                            }
                        } else if (b1) {
                            Test.instanceCount += (48187 + (i26 * i26));
                        } else {
                            i23 += (i26 * i25);
                        }
                    }
                } else if (b1) {
                    i4 = (int) Test.instanceCount;
                } else {
                    Test.fFld -= i23;
                }
            }
        }
        long meth_res = by + i2 + i3 + i4 + Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i5 + i22 + i23 + i24 + i25 + (b1 ? 1 : 0) + i26 + i27 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {
        int i = 222, i1 = -48260, i28 = 22107, i29 = 4, i30 = 200, i31 = 37509, i32 = 133, i33 = 199, i34 = 54775, i35 = 55088, i36 = -47817;
        byte by3 = 35, byArr[] = new byte[N];
        boolean b2 = true;
        short s2 = 17763, sArr[] = new short[N];
        long l2 = -234L;
        float[] fArr = new float[N];
        FuzzerUtils.init(fArr, -105.281F);
        FuzzerUtils.init(byArr, (byte) 78);
        FuzzerUtils.init(sArr, (short) -15123);
        for (i = 8; i < 191; i++) {
            i1 |= iMeth(by3, i);
            b2 = b2;
            for (i28 = 1; i28 < 28; i28++) {
                byte by4 = 89;
                by4 = (byte) i29;
                i1 += (9 + (i28 * i28));
            }
            Test.iFld = i28;
            i29 >>= Test.iFld;
            for (i30 = 1; i30 < 28; ++i30) {
                short s1 = -26066;
                i31 += s1;
                i1 += (int) dFld;
                i31 += (int) Test.fFld;
                dFld = i;
                Test.fFld -= i32;
            }
            i1 -= i31;
            if (b2)
                continue;
            for (i33 = i; 28 > i33; ++i33) {
                for (i35 = 1; i35 < 1; i35++) {
                    switch((i % 10) + 103) {
                        case 103:
                            i32 = -4;
                            by3 ^= (byte) i34;
                            i34 += (-58677 + (i35 * i35));
                            break;
                        case 104:
                            i1 -= (int) 70.68F;
                            switch((((45031 >>> 1) % 7) * 5) + 120) {
                                case 149:
                                case 141:
                                    Test.fFld += Test.iFld;
                                    dFld = Test.iFld;
                                    i29 += (124 + (i35 * i35));
                                    i36 += (i35 * i35);
                                    i36 = (int) dFld;
                                    s2 = (short) Test.instanceCount;
                                case 130:
                                    switch((((i28 >>> 1) % 10) * 5) + 46) {
                                        case 62:
                                            Test.fFld *= i32;
                                            i32 |= i32;
                                            Test.iFld = s2;
                                            s2 += (short) Test.iFld1;
                                        case 92:
                                            Test.instanceCount *= i36;
                                            Test.iArrFld[i33 + 1] = (int) Test.instanceCount;
                                            switch((((7350 >>> 1) % 10) * 5) + 10) {
                                                case 17:
                                                    i31 <<= s2;
                                                    switch(((i35 % 3) * 5) + 27) {
                                                        case 29:
                                                            switch((i35 % 5) + 53) {
                                                                case 53:
                                                                    switch(((i31 >>> 1) % 2) + 19) {
                                                                        case 19:
                                                                            try {
                                                                                i31 = (i1 / 24198);
                                                                                i1 = (Test.iArrFld[i33] / i29);
                                                                                Test.iFld1 = (Test.iArrFld[i35] / -239);
                                                                            } catch (ArithmeticException a_e) {
                                                                            }
                                                                            i32 *= (int) dFld;
                                                                            Test.instanceCount = (long) Test.fFld;
                                                                            i31 &= -163;
                                                                            i36 += (((i35 * i34) + Test.instanceCount) - Test.instanceCount);
                                                                            fArr[i - 1] = 2210;
                                                                            i1 <<= i34;
                                                                            Test.iArrFld[i35 + 1] >>= (int) Test.instanceCount;
                                                                            Test.iArrFld[i] = i28;
                                                                            break;
                                                                        case 20:
                                                                            Test.fFld = Test.instanceCount;
                                                                            s2 += (short) (i35 * i35);
                                                                            i31 += i35;
                                                                            Test.iArrFld[(i29 >>> 1) % N] = i36;
                                                                            i1 = (int) 123.872F;
                                                                            if (b2)
                                                                                continue;
                                                                            break;
                                                                    }
                                                                    {
                                                                        java.io.PrintStream ax$540 = System.out;
                                                                        java.io.PrintStream ax$541 = System.err;
                                                                        java.io.PrintStream ax$542 = new java.io.PrintStream(new java.io.OutputStream() {

                                                                            @Override
                                                                            public void write(int b) throws java.io.IOException {
                                                                                // DO NOTHING: DISCARD ALL OUTPUTS
                                                                            }
                                                                        });
                                                                        System.setOut(ax$542);
                                                                        System.setErr(ax$542);
                                                                        {
                                                                            boolean ax$548 = false;
                                                                            for (int ax$547 = -2227; ax$547 < 6715; ax$547 += 2) {
                                                                                if (!ax$548) {
                                                                                    ax$548 = true;
                                                                                    {
                                                                                        System.setOut(ax$540);
                                                                                        System.setErr(ax$541);
                                                                                        switch(((i35 % 2) * 5) + 121) {
                                                                                            case 131:
                                                                                                b2 = b2;
                                                                                                i34 -= (int) Test.fFld;
                                                                                                break;
                                                                                            case 127:
                                                                                                Test.iFld1 >>= (int) Test.instanceCount;
                                                                                                dArrFld[i33 + 1] *= dFld;
                                                                                                break;
                                                                                            default:
                                                                                                dFld *= Test.instanceCount;
                                                                                                if (true)
                                                                                                    break;
                                                                                                Test.fFld /= (Test.iFld1 | 1);
                                                                                                dFld -= i31;
                                                                                        }
                                                                                        System.setOut(ax$542);
                                                                                        System.setErr(ax$542);
                                                                                    }
                                                                                }
                                                                                try {
                                                                                    java.lang.Double ax$543 = new Double(0.1111D);
                                                                                    double[] ax$544 = { 0.0, 1.0, 2.0, 3.0 };
                                                                                    for (Double ax$545 : ax$544) ax$543 += ax$545;
                                                                                } catch (Throwable ax$546) {
                                                                                } finally {
                                                                                }
                                                                            }
                                                                        }
                                                                        System.setOut(ax$540);
                                                                        System.setErr(ax$541);
                                                                    }
                                                                    i32 -= -233;
                                                                    Test.iFld += (i35 * Test.fFld);
                                                                    i31 -= (int) Test.fFld;
                                                                    i31 = i35;
                                                                    i36 = (int) Test.instanceCount;
                                                                    i32 <<= (int) 3522853403605268520L;
                                                                    i36 = i35;
                                                                    break;
                                                                case 54:
                                                                    i29 += (int) dFld;
                                                                    i1 += (int) Test.fFld;
                                                                    break;
                                                                case 55:
                                                                    Test.iFld1 *= (int) Test.instanceCount;
                                                                case 56:
                                                                    i34 += i35;
                                                                    break;
                                                                case 57:
                                                                    Test.iFld = -3;
                                                                    break;
                                                                default:
                                                                    Test.instanceCount = Test.iFld;
                                                            }
                                                        case 38:
                                                            try {
                                                                i36 = (-10 % Test.iFld);
                                                                Test.iArrFld[i35 + 1] = (-43 % Test.iFld1);
                                                                i32 = (i31 % 177);
                                                            } catch (ArithmeticException a_e) {
                                                            }
                                                            break;
                                                        case 33:
                                                            i29 = (int) Test.instanceCount;
                                                            break;
                                                        default:
                                                            i32 -= (int) Test.fFld;
                                                    }
                                                    break;
                                                case 54:
                                                    Test.instanceCount -= 11;
                                                    break;
                                                case 11:
                                                    i32 -= (int) dFld;
                                                    break;
                                                case 32:
                                                    i36 += (((i35 * i29) + i31) - i36);
                                                    break;
                                                case 59:
                                                    Test.instanceCount += (i35 * i35);
                                                case 27:
                                                    Test.iFld1 = (int) 2.492F;
                                                    break;
                                                case 55:
                                                    Test.instanceCount += (((i35 * Test.instanceCount) + by3) - i34);
                                                case 18:
                                                    Test.instanceCount = (long) dFld;
                                                    break;
                                                case 36:
                                                    i34 >>= i1;
                                                    break;
                                                case 43:
                                                    byArr[i35 + 1] -= (byte) i36;
                                                    break;
                                                default:
                                                    lArrFld[i35 - 1] -= (long) -1.128900;
                                            }
                                        case 76:
                                            i36 += (((i35 * i32) + i34) - by3);
                                            break;
                                        case 88:
                                            Test.iArrFld = FuzzerUtils.int1array(N, (int) -8);
                                            break;
                                        case 94:
                                            sArr[i33] = (short) i1;
                                            break;
                                        case 91:
                                            Test.instanceCount += (i35 * i35);
                                            break;
                                        case 63:
                                            Test.instanceCount = l2;
                                        case 70:
                                            l2 <<= -53332;
                                        case 68:
                                            Test.iArrFld = Test.iArrFld;
                                        case 96:
                                            Test.iArrFld[i35] += i31;
                                            break;
                                    }
                                case 123:
                                    Test.iFld1 = Test.iFld1;
                                case 122:
                                    Test.fFld *= (float) dFld;
                                    break;
                                case 147:
                                    Test.fFld += (i35 - Test.instanceCount);
                                    break;
                                case 155:
                                default:
                                    i29 >>= (int) Test.instanceCount;
                            }
                            break;
                        case 105:
                            i32 = i31;
                            break;
                        case 106:
                            i29 = i34;
                            break;
                        case 107:
                            lArrFld = lArrFld;
                            break;
                        case 108:
                            i1 = (int) Test.instanceCount;
                        case 109:
                            try {
                                i34 = (-76 % i);
                                Test.iArrFld[i - 1] = (i34 / 223);
                                i29 = (i29 % 160);
                            } catch (ArithmeticException a_e) {
                            }
                            break;
                        case 110:
                            s2 += (short) (i35 * i35);
                            break;
                        case 111:
                            dArrFld[i35 + 1] = i35;
                        case 112:
                            i32 += i29;
                            break;
                    }
                }
            }
        }
        FuzzerUtils.out.println("i i1 by3 = " + i + "," + i1 + "," + by3);
        FuzzerUtils.out.println("b2 i28 i29 = " + (b2 ? 1 : 0) + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("i33 i34 i35 = " + i33 + "," + i34 + "," + i35);
        FuzzerUtils.out.println("i36 s2 l2 = " + i36 + "," + s2 + "," + l2);
        FuzzerUtils.out.println("fArr byArr sArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("dFld Test.iFld1 Test.iArrFld = " + Double.doubleToLongBits(dFld) + "," + Test.iFld1 + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("dArrFld lArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," + FuzzerUtils.checkSum(lArrFld));
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }

    public static void main(String[] strArr) {
        if (ax$549) {
            try {
                int ax$550 = 0x7fbfffff;
                ax$550++;
            } catch (Throwable ax$551) {
            } finally {
            }
            return;
        }
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$549 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  iMeth ->  iMeth mainTest
// DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
// DEBUG  dMeth ->  dMeth iMeth1 iMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
