// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = -41893L;

    public static volatile int iFld = 2;

    public static boolean bFld = true;

    public static byte byFld = -105;

    public float fFld = -60.597F;

    public static float[] fArrFld = new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -2.173F);
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i6, double d) {
        int i7 = -56467, i8 = -3, i9 = 0, i10 = -57608, i11 = 53718, i12 = -64162, i13 = -9144, i14 = 22, i15 = -12650, i16 = -5, i17 = 144, i18 = 96, i19 = 6, i20 = -13, i21 = 84, iArr[] = new int[N], iArr1[][] = new int[N][N];
        float f1 = -87.933F, f2 = -38.766F, fArr[] = new float[N];
        byte by = -54, byArr[][] = new byte[N][N];
        short s = 4455;
        double[] dArr = new double[N];
        FuzzerUtils.init(fArr, -14.801F);
        FuzzerUtils.init(iArr, 222);
        FuzzerUtils.init(iArr1, 21632);
        FuzzerUtils.init(byArr, (byte) 85);
        FuzzerUtils.init(dArr, -87.112879);
        for (i7 = 12; 251 > i7; i7++) {
            for (i9 = 1; i9 < 3; ++i9) {
                for (i11 = i7; i11 < 2; ++i11) {
                    i10 %= (int) ((long) (f1) | 1);
                }
                fArr[i9] %= (i10 | 1);
                f1 += (((i9 * i6) + f1) - i11);
            }
            i6 -= -49057;
            f2 *= Test.instanceCount;
            i6 <<= (int) Test.instanceCount;
            i13 -= -181;
        }
        i8 >>= (int) Test.instanceCount;
        f1 *= i10;
        iArr[(i10 >>> 1) % N] = (int) Test.instanceCount;
        i6 *= i10;
        for (i14 = 13; i14 < 209; i14 += 2) {
            iArr[i14 - 1] >>= i8;
        }
        d /= (i11 | 1);
        for (i16 = 14; 245 > i16; ++i16) {
            for (i18 = 1; 3 > i18; i18++) {
                i10 -= by;
                i19 >>>= s;
                switch((((i17 >>> 1) % 1) * 5) + 14) {
                    case 18:
                        i8 -= (int) 4877879286692024190L;
                        iArr1 = iArr1;
                        byArr[i16][i18 - 1] -= (byte) i10;
                        try {
                            iArr[i18 - 1] = (-38 / i19);
                            i19 = (1080351731 % i6);
                            i10 = (i9 % -766106398);
                        } catch (ArithmeticException a_e) {
                        }
                        for (i20 = 1; i20 < 2; i20++) {
                            Test.iFld += i19;
                            f2 += (134 + (i20 * i20));
                            dArr[i16] = s;
                            i21 += i10;
                            i17 *= i12;
                            i12 *= i11;
                            iArr[i16 + 1] = (int) Test.instanceCount;
                            f2 *= (float) d;
                            iArr[i20 - 1] = i13;
                            Test.instanceCount <<= i14;
                        }
                        break;
                    default:
                        i6 = (int) Test.instanceCount;
                }
            }
        }
        vMeth2_check_sum += i6 + Double.doubleToLongBits(d) + i7 + i8 + i9 + i10 + i11 + i12 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i13 + i14 + i15 + i16 + i17 + i18 + i19 + by + s + i20 + i21 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(int i2, long l, float f) {
        int i3 = 8, i4 = 21349, i5 = -160, i22 = 82, iArr2[] = new int[N];
        byte by1 = 122;
        double d1 = 79.120454, dArr1[][] = new double[N][N];
        short s1 = -8767;
        boolean[][] bArr = new boolean[N][N];
        long[] lArr = new long[N];
        FuzzerUtils.init(iArr2, 218);
        FuzzerUtils.init(dArr1, -1.101563);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr, -61L);
        for (i3 = 10; i3 < 189; ++i3) {
            i5 = 1;
            do {
                i4 = (i2--);
                i2 &= (int) l;
                Test.instanceCount = Test.instanceCount;
                vMeth2(i3, -126.17119);
                i22 = 1;
                do {
                    iArr2[i22 - 1] >>= -9;
                    i4 -= i22;
                    i4 -= -10;
                    i2 += (((i22 * Test.iFld) + i22) - f);
                    switch((i22 % 2) + 39) {
                        case 39:
                            i4 += (i22 - Test.iFld);
                            switch(((i4 >>> 1) % 7) + 91) {
                                case 91:
                                    i4 = i2;
                                    Test.iFld ^= i2;
                                    i4 -= by1;
                                    break;
                                case 92:
                                    l *= Test.iFld;
                                    i4 = (int) Test.instanceCount;
                                    Test.instanceCount += Test.instanceCount;
                                    f -= 47;
                                    i4 >>= i22;
                                    dArr1[i22][i5 + 1] -= Test.iFld;
                                    try {
                                        i4 = (iArr2[i22 - 1] / i22);
                                        i4 = (-26869 % i3);
                                        Test.iFld = (Test.iFld / iArr2[i22 - 1]);
                                    } catch (ArithmeticException a_e) {
                                    }
                                    i2 *= (int) d1;
                                    break;
                                case 93:
                                    bArr[i5 - 1][i5] = Test.bFld;
                                    if (i2 != 0) {
                                        vMeth1_check_sum += i2 + l + Float.floatToIntBits(f) + i3 + i4 + i5 + i22 + by1 + Double.doubleToLongBits(d1) + s1 + FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr);
                                        return;
                                    }
                                    Test.bFld = Test.bFld;
                                    switch((((i5 >>> 1) % 9) * 5) + 65) {
                                        case 77:
                                            l = i4;
                                            iArr2[i22] -= Test.iFld;
                                            i4 *= (int) f;
                                            Test.iFld += (i22 - i22);
                                            Test.iFld -= s1;
                                            i2 -= (int) Test.instanceCount;
                                            lArr = lArr;
                                            try {
                                                i2 = (-52 / i22);
                                                i4 = (iArr2[i5 - 1] % -24584);
                                                i2 = (164 % i5);
                                            } catch (ArithmeticException a_e) {
                                            }
                                        case 84:
                                            i4 -= (int) d1;
                                            break;
                                        case 90:
                                            Test.iFld += (i22 | Test.iFld);
                                            break;
                                        case 105:
                                        case 109:
                                            if (Test.bFld)
                                                break;
                                        case 100:
                                            l = Test.instanceCount;
                                            break;
                                        case 72:
                                            iArr2[i5 + 1] = i22;
                                            break;
                                        case 66:
                                            i2 += i4;
                                            break;
                                        case 94:
                                            i2 = i4;
                                            break;
                                        default:
                                            s1 += (short) (i22 - i3);
                                    }
                                    break;
                                case 94:
                                    Test.instanceCount |= Test.iFld;
                                    break;
                                case 95:
                                    Test.iFld = (int) 7419214432905958539L;
                                    break;
                                case 96:
                                    i2 += (int) Test.instanceCount;
                                    break;
                                case 97:
                                    i2 += (10 + (i22 * i22));
                                default:
                                    i2 -= s1;
                            }
                            break;
                        case 40:
                            i2 -= (int) f;
                            break;
                        default:
                            i4 -= i3;
                    }
                } while (++i22 < 1);
            } while (++i5 < 3);
        }
        vMeth1_check_sum += i2 + l + Float.floatToIntBits(f) + i3 + i4 + i5 + i22 + by1 + Double.doubleToLongBits(d1) + s1 + FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {
        int i1 = -202, i23 = -161, i24 = -88, i25 = 58283, i26 = 5, i27 = 17838, iArr3[][] = new int[N][N];
        float f3 = -108.400F;
        long l1 = 1636886660L, lArr1[] = new long[N];
        short s3 = -20889;
        double d2 = 0.86485, dArr2[] = new double[N];
        FuzzerUtils.init(iArr3, -13);
        FuzzerUtils.init(lArr1, 50772L);
        FuzzerUtils.init(dArr2, -2.61287);
        i1 = Math.abs((int) ((i1 + i1) * (Test.instanceCount + i1)));
        vMeth1(13992, Test.instanceCount, f3);
        Test.instanceCount += 148;
        i23 = 1;
        while (++i23 < 222) {
            i1 += i23;
            f3 -= Test.iFld;
            l1 = 1;
            while (++l1 < 3) {
                i1 += (int) (l1 * l1);
                iArr3[i23 + 1] = iArr3[(int) (l1)];
                Test.iFld |= (int) -39337L;
                switch(((60 >>> 1) % 6) + 17) {
                    case 17:
                        iArr3[(int) (l1)][(int) (l1 - 1)] = i1;
                        i24 = 1;
                        do {
                            Test.iFld -= (int) l1;
                            if (Test.iFld != 0) {
                                vMeth_check_sum += i1 + Float.floatToIntBits(f3) + i23 + l1 + i24 + i25 + i26 + s3 + i27 + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr2));
                                return;
                            }
                        } while (++i24 < 1);
                        Test.iFld += (int) l1;
                        i1 += i23;
                        i1 += (-30555 + (l1 * l1));
                        i1 += (int) l1;
                        Test.iFld >>>= i24;
                        for (i25 = 1; i25 < 1; i25++) {
                            short s2 = 28911;
                            try {
                                i1 = (i25 % 1126999899);
                                i1 = (i26 / i24);
                                i26 = (i25 % Test.iFld);
                            } catch (ArithmeticException a_e) {
                            }
                            Test.iFld *= Test.iFld;
                            iArr3[i23][(int) (l1 - 1)] |= Test.byFld;
                            i26 += i26;
                            i1 -= i23;
                            s2 += (short) i1;
                            Test.instanceCount += i25;
                            Test.fArrFld[i25] += (float) -34.92926;
                            if (false)
                                break;
                            Test.byFld <<= (byte) s3;
                            Test.instanceCount ^= Test.iFld;
                        }
                        lArr1[i23] >>= Test.instanceCount;
                        dArr2[i23 + 1] -= f3;
                        Test.instanceCount %= (i24 | 1);
                        i1 = i1;
                        Test.instanceCount -= i26;
                    case 18:
                        dArr2[(int) (l1)] -= i27;
                    case 19:
                        f3 *= (float) d2;
                        break;
                    case 20:
                        Test.instanceCount = i25;
                    case 21:
                        i27 += (int) (l1 * l1);
                        break;
                    case 22:
                        i27 = i1;
                }
            }
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f3) + i23 + l1 + i24 + i25 + i26 + s3 + i27 + Double.doubleToLongBits(d2) + FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr2));
    }

    public void mainTest(String[] strArr1) {
        int i = -60, i28 = 145, i29 = -19018, i30 = 14830, i31 = -171, i32 = -160, i33 = -26269, i34 = -60156, iArr4[] = new int[N], iArr5[][] = new int[N][N];
        float f4 = 2.802F;
        long l2 = 146L, lArr2[] = new long[N];
        double d3 = -100.69342;
        short s4 = -8567;
        boolean[] bArr1 = new boolean[N];
        FuzzerUtils.init(lArr2, 761704477L);
        FuzzerUtils.init(bArr1, true);
        FuzzerUtils.init(iArr4, -273);
        FuzzerUtils.init(iArr5, -1);
        i -= (int) (-(Test.instanceCount - Test.instanceCount));
        vMeth();
        for (i28 = 2; 170 > i28; i28++) {
            if (Test.bFld) {
                switch((i28 % 4) + 103) {
                    case 103:
                        Test.byFld += (byte) Test.instanceCount;
                        for (f4 = 1; 30 > f4; f4 += 2) {
                            Test.instanceCount += i29;
                            i29 <<= i;
                            i -= (int) -12L;
                            if (Test.bFld)
                                continue;
                            for (i31 = 1; i31 < 3; i31++) {
                                i = i;
                                i29 += (int) Test.instanceCount;
                                lArr2[(int) (f4)] -= i30;
                                i -= 16;
                                Test.iFld <<= (int) -54367L;
                                bArr1 = bArr1;
                                switch((int) (((f4 % 1) * 5) + 14)) {
                                    case 19:
                                        i = (int) Test.instanceCount;
                                        if (Test.bFld) {
                                            i33 = (int) l2;
                                            i = i;
                                            if (Test.bFld) {
                                                i33 >>= i29;
                                                Test.fArrFld[(int) (f4)] = i32;
                                                i29 += (((i31 * f4) + i30) - i29);
                                                if (Test.bFld)
                                                    break;
                                                iArr4[i28] *= 221;
                                                i = (int) d3;
                                                i33 += i33;
                                                iArr4[i28] -= 95;
                                                i32 -= (int) f4;
                                            } else {
                                                if (Test.bFld)
                                                    continue;
                                                lArr2[i31 - 1] = i28;
                                                Test.iFld += (int) l2;
                                                i29 += (((i31 * i33) + f4) - i33);
                                                switch(((-104 >>> 1) % 1) + 65) {
                                                    case 65:
                                                        Test.byFld += (byte) f4;
                                                        Test.instanceCount = i31;
                                                        l2 += (i31 * l2);
                                                    default:
                                                        i33 -= i28;
                                                        i29 = -34926;
                                                        i33 = i30;
                                                        Test.instanceCount += (((i31 * i32) + i32) - i31);
                                                        i30 = Test.byFld;
                                                        i32 -= 5;
                                                        fFld = l2;
                                                        fFld = Test.iFld;
                                                }
                                                i30 += Test.iFld;
                                                i += (((i31 * i28) + i) - fFld);
                                                lArr2 = lArr2;
                                                iArr4[(int) (f4 - 1)] *= -6;
                                                Test.instanceCount += (i31 ^ i28);
                                                i32 = i32;
                                                d3 += i29;
                                            }
                                            i29 += (((i31 * f4) + i28) - Test.instanceCount);
                                            i32 >>>= i31;
                                        } else if (Test.bFld) {
                                            if (false) {
                                                i29 -= -13963;
                                                if (Test.bFld)
                                                    break;
                                                l2 >>>= i31;
                                                l2 += i31;
                                                iArr4[(int) (f4)] -= (int) -15.61865;
                                                i29 *= i31;
                                                i += i31;
                                                i33 -= i29;
                                                s4 -= (short) 1.582F;
                                                fFld -= i33;
                                                i29 += i31;
                                                switch(((i31 % 7) * 5) + 25) {
                                                    case 36:
                                                        i33 |= i31;
                                                        i30 -= i;
                                                        i = (int) d3;
                                                        i32 += (((i31 * i34) + s4) - fFld);
                                                    case 51:
                                                        i30 >>= (int) l2;
                                                        break;
                                                    case 44:
                                                        d3 = 188;
                                                        break;
                                                    case 43:
                                                        iArr4[i31 + 1] -= (int) Test.instanceCount;
                                                        break;
                                                    case 34:
                                                        try {
                                                            i33 = (i31 % 2001451032);
                                                            iArr4[i31 - 1] = (-57563 / Test.iFld);
                                                            i33 = (iArr4[i31 + 1] % Test.iFld);
                                                        } catch (ArithmeticException a_e) {
                                                        }
                                                        break;
                                                    case 57:
                                                        iArr5 = iArr5;
                                                        break;
                                                    case 53:
                                                        i32 += i31;
                                                        break;
                                                }
                                            } else if (Test.bFld) {
                                                i30 += (int) l2;
                                            }
                                        }
                                        break;
                                }
                            }
                        }
                        break;
                    case 104:
                        i33 &= i33;
                        break;
                    case 105:
                        iArr5[i28] = iArr5[i28 + 1];
                    case 106:
                        iArr4[i28 - 1] *= (int) f4;
                        break;
                }
            } else {
                Test.instanceCount *= i33;
            }
        }
        FuzzerUtils.out.println("i i28 i29 = " + i + "," + i28 + "," + i29);
        FuzzerUtils.out.println("f4 i30 i31 = " + Float.floatToIntBits(f4) + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 i33 l2 = " + i32 + "," + i33 + "," + l2);
        FuzzerUtils.out.println("d3 s4 i34 = " + Double.doubleToLongBits(d3) + "," + s4 + "," + i34);
        FuzzerUtils.out.println("lArr2 bArr1 iArr4 = " + FuzzerUtils.checkSum(lArr2) + "," + FuzzerUtils.checkSum(bArr1) + "," + FuzzerUtils.checkSum(iArr4));
        FuzzerUtils.out.println("iArr5 = " + FuzzerUtils.checkSum(iArr5));
        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.bFld = " + Test.instanceCount + "," + Test.iFld + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.byFld fFld Test.fArrFld = " + Test.byFld + "," + Float.floatToIntBits(fFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  vMeth ->  vMeth mainTest
// DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
// DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
