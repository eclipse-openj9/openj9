// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.nio.channels.Pipe;

public class Test {

    public static final int N = 256;

    public static long instanceCount = 1082073160L;

    public static short sFld = 6885;

    public static volatile float fFld = 58.574F;

    public static double dFld = -1.47842;

    public static volatile int[] iArrFld = new int[N];

    public static float[][] fArrFld = new float[N][N];

    public static short[] sArrFld = new short[N];

    public static long[] lArrFld = new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 16994);
        FuzzerUtils.init(Test.fArrFld, -89.880F);
        FuzzerUtils.init(Test.sArrFld, (short) 6259);
        FuzzerUtils.init(Test.lArrFld, 6830268239808768953L);
    }

    public static long vMeth_check_sum = 0;

    public static long lMeth_check_sum = 0;

    public static long byMeth_check_sum = 0;

    public static byte byMeth(int i2) {
        int i3 = -7, i4 = -7, i5 = 25544, i6 = 175, i7 = -194, i8 = -61196, i9 = -12, i10 = -1253, i11 = 254, iArr[] = new int[N];
        double d1 = -1.76567;
        float f = 0.453F;
        boolean b = false;
        byte by = -84;
        long[] lArr = new long[N];
        FuzzerUtils.init(lArr, 19L);
        FuzzerUtils.init(iArr, 37);
        for (i3 = 1; i3 < 97; i3++) {
            lArr[i3] *= Test.instanceCount;
            Test.iArrFld[i3] = i3;
            i5 = 1;
            do {
                i4 = i2;
                for (i6 = 1; i6 < 1; ++i6) {
                    Test.instanceCount = i7;
                    i7 = -41;
                    i4 <<= i7;
                }
            } while (++i5 < 6);
            i8 = 1;
            while (++i8 < 6) {
                i7 += i4;
                for (i9 = 1; i9 < 1; i9++) {
                    Test.instanceCount -= 59;
                    lArr = FuzzerUtils.long1array(N, (long) 53514L);
                    if (b) {
                        if (i6 != 0) {
                        }
                        d1 = 42185;
                        switch((i9 % 1) + 125) {
                            case 125:
                                f = f;
                                Test.instanceCount += Test.sFld;
                                i7 = i6;
                                iArr = FuzzerUtils.int1array(N, (int) 14);
                                d1 *= -12;
                                switch(((i8 % 8) * 5) + 43) {
                                    case 80:
                                        iArr[i8 - 1] -= i7;
                                        lArr[i3] -= (long) f;
                                        b = b;
                                        i2 = i9;
                                        f *= 3066223114L;
                                        if (b) {
                                            Test.instanceCount >>= Test.instanceCount;
                                            Test.instanceCount -= (long) -126.15097;
                                        }
                                        iArr[i3] = (int) Test.instanceCount;
                                        i10 *= 51508;
                                        Test.fArrFld[i3 + 1][i8] = -14;
                                        i7 -= (int) 3068278253L;
                                        i7 >>= i8;
                                        break;
                                    case 47:
                                        Test.iArrFld[i9 + 1] *= i4;
                                        break;
                                    case 81:
                                        Test.instanceCount -= 9912;
                                        break;
                                    case 53:
                                        i7 += (i9 * i9);
                                        break;
                                    case 46:
                                        i2 -= by;
                                        break;
                                    case 74:
                                        i2 += (((i9 * Test.instanceCount) + i3) - i6);
                                    case 79:
                                        iArr[i8] = i11;
                                        break;
                                    case 62:
                                        if (i4 != 0) {
                                        }
                                        break;
                                }
                                break;
                            default:
                                i10 -= (int) Test.instanceCount;
                        }
                    } else if (b) {
                        f += Test.sFld;
                    }
                }
            }
        }
        long meth_res = i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f) + (b ? 1 : 0) + by + i11 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
        byMeth_check_sum += meth_res;
        return (byte) meth_res;
    }

    public static long lMeth() {
        int i1 = 101, i12 = -116, i13 = -151, i14 = 63, i15 = -53;
        boolean b1 = true;
        byte by1 = -43, byArr[][] = new byte[N][N];
        long[] lArr1 = new long[N];
        FuzzerUtils.init(lArr1, 2070189628468806819L);
        FuzzerUtils.init(byArr, (byte) 37);
        Test.iArrFld[(i1 >>> 1) % N] = i1;
        byMeth(i1);
        for (i12 = 3; i12 < 166; i12++) {
            i1 <<= i13;
        }
        i1 *= 35402;
        lArr1[(14 >>> 1) % N] = -4;
        i1 >>= Test.sFld;
        Test.iArrFld[(i13 >>> 1) % N] = (int) Test.instanceCount;
        Test.instanceCount = 32132;
        b1 = b1;
        i14 = 1;
        do {
            switch((i14 % 3) + 107) {
                case 107:
                    i1 += (((i14 * Test.fFld) + i14) - i14);
                    if (b1)
                        break;
                    Test.sArrFld[i14] *= (short) i13;
                    i13 = (int) Test.dFld;
                case 108:
                    Test.instanceCount = 15;
                    break;
                case 109:
                    Test.instanceCount -= i12;
                    Test.fArrFld[i14 - 1][i14 + 1] *= Test.instanceCount;
                    try {
                        i1 = (i13 % -4);
                        i1 = (i12 / 21071);
                        i1 = (i1 % i13);
                    } catch (ArithmeticException a_e) {
                    }
                    i15 = 1;
                    do {
                        i13 -= i13;
                        Test.instanceCount = i12;
                        switch((i15 % 4) + 70) {
                            case 70:
                                if (false) {
                                    Test.instanceCount |= i15;
                                    i1 = i13;
                                    switch((i15 % 1) + 86) {
                                        case 86:
                                        default:
                                            i1 += (i15 * i15);
                                            switch((i14 % 7) + 61) {
                                                case 61:
                                                case 62:
                                                    i1 -= i12;
                                                    lArr1[i15] = i12;
                                                    i13 >>= (int) Test.instanceCount;
                                                    Test.iArrFld[i14 + 1] *= 20498;
                                                    i1 += (30083 + (i15 * i15));
                                                    i1 += (((i15 * Test.instanceCount) + by1) - i13);
                                                    Test.sFld += (short) i15;
                                                case 63:
                                                    lArr1[i14] -= i12;
                                                    break;
                                                case 64:
                                                    i1 += i15;
                                                    break;
                                                case 65:
                                                    Test.instanceCount &= by1;
                                                    break;
                                                case 66:
                                                    Test.fFld += i15;
                                                    break;
                                                case 67:
                                                    byArr[i15 + 1][i14 + 1] -= (byte) i1;
                                                default:
                                                    i1 -= i1;
                                            }
                                    }
                                }
                                break;
                            case 71:
                            case 72:
                                by1 >>= (byte) -58;
                                break;
                            case 73:
                                Test.instanceCount = Test.instanceCount;
                                break;
                        }
                    } while ((i15 += 3) < 3);
                    break;
            }
        } while (++i14 < 200);
        long meth_res = i1 + i12 + i13 + (b1 ? 1 : 0) + i14 + i15 + by1 + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(byArr);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth(int i, long l) {
        if (ax$0) {
            int ax$15 = i;
            try {
                java.nio.channels.Pipe[] ax$14 = new java.nio.channels.Pipe[3764];
                for (int ax$13 = 0; ax$13 < i; ax$13++) {
                    ax$14[ax$13].sink().close();
                    ax$14[ax$13].source().close();
                }
            } catch (Throwable ax$16) {
            } finally {
                i = ax$15;
            }
            return;
        }
        double d = 2.70493, dArr[] = new double[N];
        long l1 = -8L, l2 = 9L, lArr2[] = new long[N];
        byte by2 = -55;
        boolean b2 = false;
        int i16 = 24873, i17 = 1, i18 = -10, i19 = 10;
        FuzzerUtils.init(lArr2, -2128611295264112561L);
        FuzzerUtils.init(dArr, 76.47483);
        i += (int) l;
        d = (i += (int) lMeth());
        l1 = 245;
        while ((l1 -= 2) > 0) {
            Test.instanceCount = 2;
            by2 += (byte) i;
        }
        Test.fFld += i;
        lArr2[(i >>> 1) % N] = i;
        i = i;
        b2 = b2;
        for (i16 = 8; i16 < 204; ++i16) {
            for (l2 = 1; l2 < 3; l2++) {
                i18 += i17;
                dArr[(int) (l2)] = Test.fFld;
                i += (int) (l2 * l2);
                i19 = 2;
                while ((i19 -= 3) > 0) {
                    if (b2)
                        continue;
                    Test.sFld = (short) i16;
                    try {
                        Test.iArrFld[i19 + 1] = (i19 % Test.iArrFld[i16]);
                        Test.iArrFld[(int) (l2)] = (39798 % i19);
                        i18 = (-34 / i16);
                    } catch (ArithmeticException a_e) {
                    }
                    Test.instanceCount += (((i19 * i16) + i) - i19);
                    Test.fArrFld[(int) (l2)][i19] += 0;
                    i17 = (int) 8850L;
                    l += i19;
                    l = i18;
                    by2 *= (byte) 10;
                    i18 -= i18;
                    Test.iArrFld[i19] *= i19;
                    Test.fFld -= i;
                    Test.fFld += (i19 - i16);
                    Test.iArrFld[i19 + 1] = (int) l1;
                    switch((int) (((l2 % 2) * 5) + 74)) {
                        case 82:
                            i17 += (int) (69.449F + (i19 * i19));
                            l = i;
                            i18 >>= i18;
                            i17 += i19;
                            Test.dFld += i17;
                            i = (int) l;
                            l += (i19 - i18);
                            break;
                        case 83:
                            Test.dFld *= l;
                            break;
                        default:
                            Test.sFld = (short) i18;
                    }
                }
            }
        }
        vMeth_check_sum += i + l + Double.doubleToLongBits(d) + l1 + by2 + (b2 ? 1 : 0) + i16 + i17 + l2 + i18 + i19 + FuzzerUtils.checkSum(lArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {
        int i20 = 206, i21 = 204, i22 = -14, i23 = 22396, i24 = -250, i25 = 50115, i26 = -52230, i27 = -18998, i28 = 17409, i29 = 220, i30 = -207, i31 = 154, i32 = -80, i33 = -31058;
        boolean b3 = true, bArr[] = new boolean[N];
        byte by3 = 7;
        float f1 = 2.677F;
        double[] dArr1 = new double[N];
        FuzzerUtils.init(dArr1, 89.32034);
        FuzzerUtils.init(bArr, false);
        {
            java.io.PrintStream ax$19 = System.out;
            java.io.PrintStream ax$20 = System.err;
            java.io.PrintStream ax$21 = new java.io.PrintStream(new java.io.OutputStream() {

                @Override
                public void write(int b) throws java.io.IOException {
                    // DO NOTHING: DISCARD ALL OUTPUTS
                }
            });
            System.setOut(ax$21);
            System.setErr(ax$21);
            try {
                ax$0 = true;
                for (int ax$17 = 0; ax$17 < 5505; ax$17 += 1) vMeth(732316232, -8530072318553557561L);
            } catch (java.lang.Throwable ax$18) {
            } finally {
                ax$0 = false;
            }
            System.setOut(ax$19);
            System.setErr(ax$20);
        }
        vMeth(i20, Test.instanceCount);
        Test.sFld = (short) -207;
        Test.instanceCount *= i20;
        for (i21 = 2; i21 < 198; ++i21) {
            i20 -= i21;
            switch(((i22 >>> 1) % 1) + 41) {
                case 41:
                default:
                    for (i23 = 26; i23 > 1; --i23) {
                        for (i25 = 1; i25 < 2; i25++) {
                            Test.sFld >>= (short) i22;
                            Test.fFld = -20378;
                            Test.sFld = (short) Test.instanceCount;
                        }
                        Test.instanceCount = i20;
                        i22 = (int) Test.instanceCount;
                        i26 += (((i23 * Test.instanceCount) + i21) - Test.instanceCount);
                        Test.instanceCount += (((i23 * i21) + Test.instanceCount) - i25);
                        i22 <<= -40;
                    }
                    b3 = b3;
                    i20 = i27;
                    if (b3) {
                        i27 >>= i25;
                        for (i28 = i21; i28 < 26; i28++) {
                            i29 += (i28 ^ (long) Test.fFld);
                            Test.iArrFld[i28 + 1] >>= i24;
                            b3 = b3;
                            Test.fFld += (2L + (i28 * i28));
                            if (b3)
                                continue;
                            i26 += i28;
                            Test.instanceCount += (((i28 * i28) + Test.instanceCount) - i25);
                            Test.iArrFld = Test.iArrFld;
                            switch((i21 % 9) + 106) {
                                case 106:
                                    Test.fFld -= i28;
                                    b3 = b3;
                                case 107:
                                    for (i30 = 1; i30 < 1; ++i30) {
                                        i26 += (((i30 * i24) + i21) - i25);
                                        try {
                                            Test.iArrFld[(i27 >>> 1) % N] = (-223 / i23);
                                            i26 = (-1268966568 / i26);
                                            Test.iArrFld[i28 + 1] = (Test.iArrFld[i30] % -233);
                                        } catch (ArithmeticException a_e) {
                                        }
                                        switch(((i21 % 6) * 5) + 74) {
                                            case 94:
                                                Test.dFld *= i29;
                                                i20 = (int) Test.dFld;
                                                Test.fArrFld[i28 - 1][i28 - 1] -= Test.sFld;
                                                i20 += (i30 | (long) Test.fFld);
                                                if (b3)
                                                    continue;
                                                Test.iArrFld[i30] -= i23;
                                                if (true)
                                                    continue;
                                                Test.instanceCount = i26;
                                                try {
                                                    i20 = (Test.iArrFld[(i25 >>> 1) % N] / -167);
                                                    i20 = (-217 / i20);
                                                    Test.iArrFld[i30 + 1] = (-18 % i30);
                                                } catch (ArithmeticException a_e) {
                                                }
                                                i24 *= (int) Test.instanceCount;
                                                Test.iArrFld[i28] = by3;
                                                break;
                                            case 78:
                                                by3 >>= (byte) Test.instanceCount;
                                                i27 = (int) Test.instanceCount;
                                                i22 += i30;
                                                switch(((i31 >>> 1) % 1) + 2) {
                                                    case 2:
                                                        Test.instanceCount += (long) Test.dFld;
                                                        i29 -= i24;
                                                        switch((i30 % 9) + 94) {
                                                            case 94:
                                                                Test.fFld -= i31;
                                                                i22 <<= i26;
                                                                try {
                                                                    i29 = (Test.iArrFld[i21 + 1] / 44826);
                                                                    Test.iArrFld[i28] = (i24 % 151);
                                                                    i22 = (i32 / i24);
                                                                } catch (ArithmeticException a_e) {
                                                                }
                                                                break;
                                                            case 95:
                                                                Test.instanceCount *= i23;
                                                                Test.iArrFld = FuzzerUtils.int1array(N, (int) -181);
                                                                if (b3) {
                                                                    dArr1[i30] *= 1841386291L;
                                                                    switch((i28 % 10) + 126) {
                                                                        case 126:
                                                                            Test.fFld = -1;
                                                                            Test.instanceCount += (i30 | i26);
                                                                            if (b3)
                                                                                continue;
                                                                            Test.sFld += (short) i30;
                                                                            i27 = (int) Test.dFld;
                                                                            Test.iArrFld[i21] += (int) f1;
                                                                            i27 &= 3471;
                                                                            i22 += i30;
                                                                            Test.fFld += i30;
                                                                            Test.instanceCount += (((i30 * f1) + Test.instanceCount) - Test.sFld);
                                                                            i32 |= i32;
                                                                            Test.sFld += (short) i28;
                                                                            if (b3)
                                                                                break;
                                                                            break;
                                                                        case 127:
                                                                            i22 += i21;
                                                                            break;
                                                                        case 128:
                                                                            Test.dFld += Test.instanceCount;
                                                                            break;
                                                                        case 129:
                                                                            i27 /= (int) (Test.instanceCount | 1);
                                                                            break;
                                                                        case 130:
                                                                            Test.lArrFld[i21] >>= i25;
                                                                            break;
                                                                        case 131:
                                                                            bArr[i21] = b3;
                                                                            break;
                                                                        case 132:
                                                                            i32 += (i30 ^ Test.sFld);
                                                                            break;
                                                                        case 133:
                                                                            i26 = i31;
                                                                        case 134:
                                                                            Test.instanceCount = i25;
                                                                            break;
                                                                        case 135:
                                                                            i31 = (int) Test.instanceCount;
                                                                            break;
                                                                        default:
                                                                            i29 += (i30 - i30);
                                                                    }
                                                                }
                                                            case 96:
                                                                Test.instanceCount >>= i23;
                                                                break;
                                                            case 97:
                                                                Test.instanceCount = i30;
                                                                break;
                                                            case 98:
                                                                i22 += i29;
                                                                break;
                                                            case 99:
                                                                Test.iArrFld[i28 + 1] = (int) Test.instanceCount;
                                                                break;
                                                            case 100:
                                                                i20 = i25;
                                                                break;
                                                            case 101:
                                                                bArr[i21] = true;
                                                                break;
                                                            case 102:
                                                                i24 = i21;
                                                                break;
                                                            default:
                                                                i22 += (31 + (i30 * i30));
                                                        }
                                                }
                                                break;
                                            case 77:
                                                try {
                                                    Test.iArrFld[i30 - 1] = (i21 / i33);
                                                    i24 = (-2021773096 / i28);
                                                    i33 = (1393479541 % i32);
                                                } catch (ArithmeticException a_e) {
                                                }
                                            case 98:
                                                i22 -= (int) Test.instanceCount;
                                                break;
                                            case 96:
                                                f1 += (12L + (i30 * i30));
                                                break;
                                            case 101:
                                                i26 = i33;
                                            default:
                                                if (true)
                                                    break;
                                        }
                                    }
                                    break;
                                case 108:
                                case 109:
                                    i27 = Test.sFld;
                                    break;
                                case 110:
                                    i32 += (i28 * Test.instanceCount);
                                case 111:
                                    i26 = by3;
                                    break;
                                case 112:
                                    Test.iArrFld = Test.iArrFld;
                                    break;
                                case 113:
                                    i33 += (i28 * i28);
                                case 114:
                                    by3 ^= (byte) i32;
                                    break;
                            }
                        }
                    } else if (b3) {
                        Test.instanceCount -= i31;
                    } else if (b3) {
                        Test.sArrFld[i21] += (short) i20;
                    } else {
                        i32 = i32;
                    }
            }
        }
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 b3 i27 = " + i26 + "," + (b3 ? 1 : 0) + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 by3 i32 = " + i31 + "," + by3 + "," + i32);
        FuzzerUtils.out.println("f1 i33 dArr1 = " + Float.floatToIntBits(f1) + "," + i33 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));
        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.fFld = " + Test.instanceCount + "," + Test.sFld + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.dFld Test.iArrFld Test.fArrFld = " + Double.doubleToLongBits(Test.dFld) + "," + FuzzerUtils.checkSum(Test.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.sArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.sArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$0 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  vMeth ->  vMeth mainTest
// DEBUG  lMeth ->  lMeth vMeth mainTest
// DEBUG  byMeth ->  byMeth lMeth vMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
