// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;

public class Test {
    public static final int N = 256;

    public static long instanceCount = -9L;

    public static byte byFld = 2;

    public static volatile short sFld = 19293;

    public float fFld = 106.72F;

    public static long lArrFld[][] = new long[N][N];

    public static double dArrFld[][] = new double[N][N];

    public float fArrFld[] = new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 4192L);
        FuzzerUtils.init(Test.dArrFld, -27.120882);
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f) {
        int i4 = 128;
        int i5 = -47127;
        int i6 = 4493;
        int i7 = -10;
        int i8 = -23398;
        int i9 = 6;
        int i10 = 72;
        int i11 = 8;
        int i12 = 3;
        int i13 = -134;
        int i14 = -11;
        int iArr[] = new int[N];
        boolean b = false;
        double d2 = 2.33397;
        long lArr[] = new long[N];
        FuzzerUtils.init(iArr, -14);
        FuzzerUtils.init(lArr, 145L);
        for (i4 = 11; i4 < 241; ++i4) {
            Test.instanceCount += i4;
            for (i6 = i4; 3 > i6; i6++) {
                i7 *= 24;
                i8 = 1;
                do {
                    i5 = ((int) (f));
                    if (b)
                        break;

                    i5 += i8 ^ i5;
                } while ((++i8) < 1 );
                f *= 7;
                Test.sFld *= ((short) (i5));
                i5 *= ((int) (-5829401814885825229L));
                for (i9 = 1; 1 > i9; ++i9) {
                    if (b)
                        break;

                    Test.instanceCount += i9 + Test.sFld;
                    Test.lArrFld[i6 + 1][i9 + 1] >>>= i5;
                    Test.instanceCount *= -787974099L;
                    if (true)
                        continue;

                    Test.instanceCount *= ((long) (d2));
                    f += Test.instanceCount;
                    Test.instanceCount = -14;
                    i10 = i8;
                    i5 += ((int) (f));
                }
            }
            Test.instanceCount += Test.instanceCount;
            i10 >>= i5;
            f -= Test.instanceCount;
            Test.instanceCount |= 54;
            Test.sFld >>= ((short) (Test.instanceCount));
            Test.instanceCount |= i6;
        }
        for (i11 = 7; i11 < 134; ++i11) {
            if (b)
                break;

            iArr[i11 + 1] >>= i11;
        }
        {
            final int ax$4 = i14;
            try {
                short[] ax$1 = new short[]{ 20, 10, 0, -10, -20 };
                for (int ax$0 = -853; ax$0 < (-853 + 19208); ax$0 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        ax$1[i14] = 0;
                    } catch (Throwable ax$3) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                i14 = ax$4;
            }
        }
        Test.byFld %= ((byte) (i6 | 1));
        for (long l : lArr) {
            for (i13 = 1; i13 < 2; i13++) {
                i14 *= i9;
                f %= ((float) (1.20271));
                i5 /= 14;
            }
        }
        vMeth2_check_sum += ((((((((((((((Float.floatToIntBits(f) + i4) + i5) + i6) + i7) + i8) + (b ? 1 : 0)) + i9) + i10) + Double.doubleToLongBits(d2)) + i11) + i12) + i13) + i14) + FuzzerUtils.checkSum(iArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(double d, double d1, int i3) {
        float f1 = 126.995F;
        int i15 = 1;
        int i16 = -200;
        int i17 = -52948;
        int i18 = 0;
        int i19 = 12;
        int i20 = -16480;
        int i21 = -42;
        int i22 = 10;
        int i23 = -5;
        int i24 = -36183;
        int iArr1[] = new int[N];
        double d3 = -13.17486;
        FuzzerUtils.init(iArr1, -56190);
        d -= --Test.byFld;
        vMeth2(f1);
        i3 = i3;
        Test.instanceCount = i3;
        i3 = i3;
        for (i15 = 6; i15 < 158; ++i15) {
            iArr1[i15] += ((int) (d));
            for (i17 = i15; i17 < 4; i17++) {
                Test.instanceCount += i17 * i17;
                i16 += i17 * Test.sFld;
                d -= -1.21654;
            }
        }
        for (d3 = 7; d3 < 143; ++d3) {
            i3 += ((int) (((d3 * i15) + i18) - f1));
            i19 -= ((int) (-69.173F));
            i20 = 1;
            do {
                for (i21 = 1; i21 < 1; ++i21) {
                    Test.instanceCount = i20;
                    i19 /= ((int) (Test.instanceCount | 1));
                    Test.lArrFld[i21][i21 + 1] >>= i15;
                    i16 *= ((int) (d3));
                    i3 >>>= ((int) (Test.instanceCount));
                    Test.instanceCount += ((i21 * i17) + f1) - i21;
                    i16 -= ((int) (Test.instanceCount));
                    d1 = 17798;
                    Test.instanceCount -= i18;
                    i3 += i21;
                    i22 = 227;
                }
                i22 -= i21;
                i16 -= ((int) (-42L));
                d = f1;
                i18 += ((int) (2.999F));
                Test.instanceCount = 40836;
                Test.instanceCount *= 3275192100L;
                for (i23 = 1; i23 < 1; i23++) {
                    Test.lArrFld[((int) (d3 - 1))][i20] += i21;
                    Test.instanceCount = ((long) (d3));
                    i22 = i19;
                }
            } while ((++i20) < 4 );
        }
        vMeth1_check_sum += ((((((((((((((Double.doubleToLongBits(d) + Double.doubleToLongBits(d1)) + i3) + Float.floatToIntBits(f1)) + i15) + i16) + i17) + i18) + Double.doubleToLongBits(d3)) + i19) + i20) + i21) + i22) + i23) + i24) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i, int i1, int i2) {
        double d4 = 1.111596;
        double d5 = 0.65174;
        int i25 = -62659;
        int i26 = 13;
        int i27 = -224;
        int i28 = 7718;
        int i29 = 10;
        int i30 = -12;
        int i31 = 93;
        int i32 = 9;
        int i33 = -15;
        int i34 = -59253;
        int i35 = -2682;
        int i36 = 69;
        int iArr2[] = new int[N];
        float f2 = 50.279F;
        byte by = -46;
        boolean b1 = false;
        long l1 = -30306L;
        FuzzerUtils.init(iArr2, 21388);
        vMeth1(d4, d4, i1);
        for (i25 = 5; i25 < 117; i25 += 3) {
            for (i27 = i25; 14 > i27; i27++) {
                f2 = ((float) (d4));
                iArr2[i25 - 1] |= ((int) (Test.instanceCount));
                i28 /= ((int) (Test.instanceCount | 1));
            }
        }
        Test.instanceCount = -179L;
        i29 = 87;
        while ((--i29) > 0) {
            d4 -= Test.instanceCount;
            for (d5 = 1; d5 < 6; ++d5) {
                i30 = ((int) (f2));
                for (i31 = ((int) (d5)); i31 < 2; i31 += 2) {
                    i2 = i33;
                    try {
                        i28 = i26 % i;
                        i = 60932 % i32;
                        i2 = i29 / i28;
                    } catch (ArithmeticException a_e) {
                    }
                    Test.instanceCount = i29;
                    i33 = ((int) (f2));
                    i30 = i31;
                    Test.instanceCount += Test.instanceCount;
                }
                try {
                    i = i29 % i33;
                    i30 = i26 / iArr2[i29 + 1];
                    i30 = (-53393) / i1;
                } catch (ArithmeticException a_e) {
                }
                i1 -= i30;
                iArr2[i29] = i30;
                i1 -= i32;
                i30 -= i28;
                i += i2;
                iArr2[i29] -= ((int) (1.39715));
                i28 = i2;
                Test.dArrFld[i29 - 1][((int) (d5 - 1))] = 855;
                i34 = ((int) (3078759248L));
                Test.instanceCount <<= i30;
                i34 += ((int) (((d5 * i26) + Test.instanceCount) - Test.instanceCount));
                Test.instanceCount += -51;
            }
            i28 >>= by;
            i = ((int) (Test.instanceCount));
            if (b1)
                break;

        }
        for (i35 = 3; i35 < 162; ++i35) {
            i28 = ((int) (l1));
            f2 = i33;
        }
        vMeth_check_sum += ((((((((((((((((((((i + i1) + i2) + Double.doubleToLongBits(d4)) + i25) + i26) + i27) + i28) + Float.floatToIntBits(f2)) + i29) + Double.doubleToLongBits(d5)) + i30) + i31) + i32) + i33) + i34) + by) + (b1 ? 1 : 0)) + i35) + i36) + l1) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {
        int i37 = 4966;
        int i38 = -107;
        int i39 = 51726;
        int i40 = 61;
        int i41 = -45270;
        int i42 = -15031;
        int i43 = 26;
        int i44 = -63817;
        int i45 = 226;
        int i46 = -57496;
        int iArr3[] = new int[N];
        boolean b2 = false;
        float f3 = 0.97F;
        long l2 = 14L;
        FuzzerUtils.init(iArr3, 3);
        vMeth(i37, i37, i37);
        i38 = 1;
        do {
            iArr3[i38 - 1] += i38;
            i37 >>= i38;
        } while ((++i38) < 197 );
        i37 -= i38;
        i39 = 1;
        while ((++i39) < 90) {
            if (b2)
                continue;

            i37 = ((int) (Test.instanceCount));
            for (i40 = 3; i40 < 56; ++i40) {
                fArrFld[i39] += i39;
                i41 += i39;
                i41 = ((int) (Test.instanceCount));
                i37 <<= ((int) (Test.instanceCount));
                i41 = i38;
                i37 *= i40;
            }
            if (b2)
                continue;

            for (i42 = 2; 56 > i42; i42++) {
                double d6 = 50.28203;
                d6 *= -25463;
                for (i44 = 1; 2 > i44; ++i44) {
                    i45 = ((int) (d6));
                    iArr3[i39 - 1] = i42;
                    Test.byFld |= ((byte) (Test.instanceCount));
                    if (true) {
                        i37 = i37;
                        iArr3[i39] += ((int) (f3));
                        i45 += i44 * i44;
                        Test.instanceCount -= 8550;
                        i45 += ((i44 * i44) + i37) - i38;
                        i43 -= ((int) (-1032171328571334147L));
                    } else if (b2) {
                        i43 = i38;
                        try {
                            i41 = i41 % i43;
                            i41 = 28785 % iArr3[i42];
                            i41 = iArr3[i42 + 1] % i38;
                        } catch (ArithmeticException a_e) {
                        }
                        iArr3[i39] *= i38;
                        Test.instanceCount >>= i43;
                        f3 = -1.514F;
                        i45 += ((i44 * Test.byFld) + i40) - f3;
                        i41 += (-78) + (i44 * i44);
                        i45 = -106;
                    } else if (false) {
                        i41 = i40;
                        Test.instanceCount -= 3;
                        i41 = -9;
                        switch ((i42 % 9) + 120) {
                            case 120 :
                                i37 <<= ((int) (Test.instanceCount));
                                Test.byFld = ((byte) (i39));
                                i46 += ((i44 * i40) + Test.instanceCount) - i37;
                                f3 -= Test.instanceCount;
                                Test.instanceCount += Test.instanceCount;
                                iArr3[(i45 >>> 1) % N] = i46;
                                Test.instanceCount = i43;
                                i41 = ((int) (l2));
                                i43 += ((i44 * i43) + i41) - fFld;
                                i45 *= -9497;
                                break;
                            case 121 :
                                l2 -= i44;
                                i41 += i44;
                                Test.instanceCount = l2;
                                fFld += i44;
                                switch (((i43 >>> 1) % 7) + 105) {
                                    case 105 :
                                        Test.byFld = ((byte) (l2));
                                        Test.sFld += ((short) (i44 ^ Test.sFld));
                                        i43 -= i38;
                                        i43 *= i45;
                                        f3 -= 11L;
                                        d6 *= i38;
                                        i37 = i42;
                                        switch (((i39 % 10) * 5) + 28) {
                                            case 44 :
                                                switch ((i44 % 2) + 13) {
                                                    case 13 :
                                                        i37 += i42;
                                                        l2 = 11;
                                                        switch (((i44 % 2) * 5) + 62) {
                                                            case 70 :
                                                                Test.instanceCount = i39;
                                                                l2 += i44 ^ i45;
                                                                i45 = i40;
                                                                i41 -= ((int) (-6597L));
                                                                Test.byFld -= ((byte) (1.639F));
                                                                l2 += ((i44 * i40) + i46) - Test.instanceCount;
                                                                fArrFld[i44 + 1] = ((float) (d6));
                                                            case 71 :
                                                                iArr3[i42 - 1] = ((int) (834751528L));
                                                        }
                                                        break;
                                                    case 14 :
                                                        i43 = ((int) (d6));
                                                        break;
                                                    default :
                                                        i46 = i46;
                                                }
                                                break;
                                            case 78 :
                                                if (b2)
                                                    continue;

                                                break;
                                            case 36 :
                                                i45 = 8235;
                                                break;
                                            case 70 :
                                            case 77 :
                                                f3 = i46;
                                            case 48 :
                                                Test.instanceCount >>>= Test.instanceCount;
                                                break;
                                            case 31 :
                                                i37 = i43;
                                                break;
                                            case 75 :
                                                try {
                                                    i43 = (-50727) % i45;
                                                    i37 = i42 / i43;
                                                    iArr3[i39 + 1] = i39 / (-33730);
                                                } catch (ArithmeticException a_e) {
                                                }
                                                break;
                                            case 51 :
                                                i37 += i44 * i44;
                                                break;
                                            case 71 :
                                                Test.lArrFld[i39][i39 + 1] = ((long) (-91.971F));
                                                break;
                                        }
                                        break;
                                    case 106 :
                                        i43 = i38;
                                        break;
                                    case 107 :
                                        i41 += i44 * i44;
                                        break;
                                    case 108 :
                                        Test.instanceCount = 6;
                                        break;
                                    case 109 :
                                        b2 = true;
                                    case 110 :
                                        Test.instanceCount |= i46;
                                        break;
                                    case 111 :
                                        try {
                                            iArr3[i39 + 1] = i39 / i46;
                                            i37 = iArr3[i44] % iArr3[i42];
                                            i45 = iArr3[i42 + 1] % 56282;
                                        } catch (ArithmeticException a_e) {
                                        }
                                        break;
                                    default :
                                        Test.instanceCount += Test.byFld;
                                }
                            case 122 :
                                i41 = i39;
                                break;
                            case 123 :
                                i46 -= ((int) (l2));
                                break;
                            case 124 :
                                f3 += i44 - Test.byFld;
                                break;
                            case 125 :
                                i45 += ((i44 * i39) + i45) - i43;
                                break;
                            case 126 :
                                try {
                                    i45 = (-30655) / i45;
                                    i45 = i42 % i38;
                                    iArr3[i44 - 1] = i38 / (-1676624258);
                                } catch (ArithmeticException a_e) {
                                }
                                break;
                            case 127 :
                                iArr3[i39 - 1] = i46;
                                break;
                            case 128 :
                                Test.dArrFld[i44 - 1] = Test.dArrFld[i42 - 1];
                                break;
                        }
                    }
                }
            }
        }
        FuzzerUtils.out.println((((("i37 i38 i39 = " + i37) + ",") + i38) + ",") + i39);
        FuzzerUtils.out.println((((("b2 i40 i41 = " + (b2 ? 1 : 0)) + ",") + i40) + ",") + i41);
        FuzzerUtils.out.println((((("i42 i43 i44 = " + i42) + ",") + i43) + ",") + i44);
        FuzzerUtils.out.println((((("i45 f3 i46 = " + i45) + ",") + Float.floatToIntBits(f3)) + ",") + i46);
        FuzzerUtils.out.println((("l2 iArr3 = " + l2) + ",") + FuzzerUtils.checkSum(iArr3));
        FuzzerUtils.out.println((((("Test.instanceCount Test.byFld Test.sFld = " + Test.instanceCount) + ",") + Test.byFld) + ",") + Test.sFld);
        FuzzerUtils.out.println((((("fFld Test.lArrFld Test.dArrFld = " + Float.floatToIntBits(fFld)) + ",") + FuzzerUtils.checkSum(Test.lArrFld)) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }
}
