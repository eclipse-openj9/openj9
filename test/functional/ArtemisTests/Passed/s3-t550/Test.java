// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = 41220L;

    public static boolean bFld = false;

    public static float fFld = 121.923F;

    public static int iFld = -45468;

    public static volatile long lFld = 30286L;

    public static int[] iArrFld = new int[N];

    public static float[] fArrFld = new float[N];

    public static long[] lArrFld = new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 1329);
        FuzzerUtils.init(Test.fArrFld, 83.280F);
        FuzzerUtils.init(Test.lArrFld, -57240L);
    }

    public static long dMeth_check_sum = 0;

    public static long iMeth_check_sum = 0;

    public static long lMeth_check_sum = 0;

    public static long lMeth(int i6) {
        byte by1 = -114;
        int i7 = 7491, i8 = 7, i9 = -3, i10 = -3, i11 = 14, i12 = 40089, i13 = 7, i14 = -149, i15 = -42981, i16 = 37520, iArr1[] = new int[N];
        long l1 = 8L;
        float f1 = 0.299F;
        double d1 = 1.7171;
        short s = 21631;
        FuzzerUtils.init(iArr1, 53504);
        by1 += (byte) i6;
        for (i7 = 14; i7 < 237; i7++) {
            for (i9 = 1; 3 > i9; ++i9) {
                for (l1 = 1; l1 < 2; ++l1) {
                    i10 += (int) f1;
                    Test.fArrFld[(int) (l1 - 1)] *= Test.instanceCount;
                }
                Test.instanceCount -= i8;
                i6 = (int) f1;
                Test.instanceCount += (i9 * i9);
                if (Test.bFld)
                    continue;
                for (i12 = 2; i12 > 1; i12--) {
                    i10 *= i12;
                    f1 += (((i12 * i12) + l1) - i12);
                }
                i13 -= (int) d1;
                if (Test.bFld)
                    continue;
                if (true) {
                    i8 += (i9 | i11);
                    Test.iArrFld[i7 + 1] -= i12;
                    i11 -= i11;
                    switch(((i7 % 1) * 5) + 56) {
                        case 57:
                            for (i14 = 2; i14 > 1; --i14) {
                                i11 = (int) d1;
                                Test.instanceCount -= 52651;
                                i16 -= i6;
                                s = (short) i10;
                                i13 = (int) l1;
                                d1 = -204;
                                by1 = (byte) i8;
                                if (Test.bFld)
                                    continue;
                                f1 += i14;
                                Test.bFld = Test.bFld;
                                Test.iArrFld[i7 - 1] -= i15;
                                i15 = i11;
                                Test.instanceCount += (long) f1;
                            }
                            break;
                        default:
                            iArr1[i7 + 1] = (int) f1;
                            f1 += (((i9 * i9) + i6) - Test.instanceCount);
                            i11 *= i15;
                    }
                } else {
                    Test.iArrFld[i9] |= 0;
                }
            }
        }
        long meth_res = i6 + by1 + i7 + i8 + i9 + i10 + l1 + i11 + Float.floatToIntBits(f1) + i12 + i13 + Double.doubleToLongBits(d1) + i14 + i15 + i16 + s + FuzzerUtils.checkSum(iArr1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static int iMeth(int i4, int i5, long l) {
        byte by = 36;
        float f2 = -79.957F, f3 = 0.104F, f4 = 66.120F;
        int i17 = -8, i18 = 59, i19 = 13, i20 = 23314, i21 = -60366, i22 = 179, i23 = 134;
        short s1 = 15382;
        double[] dArr = new double[N];
        FuzzerUtils.init(dArr, 28.9432);
        by = (byte) lMeth(-224);
        f2 = i5;
        Test.instanceCount *= i4;
        if (Test.bFld) {
            for (i17 = 1; i17 < 157; i17++) {
                Test.iArrFld[i17] = (int) l;
                for (f3 = i17; 4 > f3; f3 += 3) {
                    i4 = i5;
                    i18 = i5;
                    Test.iArrFld[(int) (f3)] += -244;
                    for (i20 = 1; 1 > i20; i20++) {
                        i18 = i18;
                        f2 += (((i20 * i19) + i21) - i20);
                        Test.bFld = Test.bFld;
                    }
                    switch((((52 >>> 1) % 2) * 5) + 49) {
                        case 53:
                            for (i22 = 1; i22 < 1; ++i22) {
                                Test.instanceCount = i20;
                                i5 >>= i20;
                                if (true)
                                    break;
                                if (true) {
                                    s1 -= (short) i23;
                                    i4 ^= (int) l;
                                } else if (Test.bFld) {
                                    i21 = (int) f4;
                                    if (i19 != 0) {
                                    }
                                    i5 = i22;
                                    i19 += (int) l;
                                } else {
                                    s1 = (short) Test.instanceCount;
                                    Test.instanceCount += (i22 * i17);
                                    Test.iArrFld[(int) (f3)] = i19;
                                    l += i21;
                                    Test.fArrFld[i17] = i17;
                                }
                                i4 >>>= i21;
                                f4 += (((i22 * i21) + Test.instanceCount) - i17);
                                dArr[(int) (f3)] = 88;
                                Test.iArrFld[(int) (f3 - 1)] >>= i20;
                                i23 = i20;
                                dArr[i22] = l;
                            }
                            break;
                        case 56:
                            Test.lArrFld[i17 - 1] |= l;
                    }
                    {
                        java.io.PrintStream ax$30 = System.out;
                        java.io.PrintStream ax$31 = System.err;
                        java.io.PrintStream ax$32 = new java.io.PrintStream(new java.io.OutputStream() {

                            @Override
                            public void write(int b) throws java.io.IOException {
                                // DO NOTHING: DISCARD ALL OUTPUTS
                            }
                        });
                        System.setOut(ax$32);
                        System.setErr(ax$32);
                        try {
                            for (int ax$28 = -4384; ax$28 < 3225; ax$28 += 1) {
                                try {
                                    char[] ax$25 = new char[100];
                                    java.lang.String ax$26 = "Math.max(dnz, dpz)";
                                    if (!(new String(ax$25).equals(ax$26)))
                                        ;
                                } catch (Throwable ax$27) {
                                } finally {
                                }
                            }
                        } catch (Throwable ax$29) {
                        }
                        System.setOut(ax$30);
                        System.setErr(ax$31);
                    }
                }
            }
        } else {
            i18 ^= 16877;
        }
        long meth_res = i4 + i5 + l + by + Float.floatToIntBits(f2) + i17 + i18 + Float.floatToIntBits(f3) + i19 + i20 + i21 + i22 + i23 + s1 + Float.floatToIntBits(f4) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static double dMeth(boolean b, int i2) {
        double d = -26.61287, d2 = -2.15067, dArr1[] = new double[N];
        int i3 = 97, i24 = -9, i25 = -9, i26 = -18, i27 = 13;
        byte by2 = -104;
        FuzzerUtils.init(dArr1, -54.71052);
        for (d = 2; d < 215; d++) {
            float f = -70.32F;
            f = (f++);
            i2 = (Test.iArrFld[(int) (d)] + iMeth(i3, -9939, Test.instanceCount));
            for (i24 = 3; i24 > 1; --i24) {
                switch((i24 % 8) + 94) {
                    case 94:
                        Test.iArrFld[i24 + 1] = i2;
                        for (i26 = (int) (d); i26 < 2; ++i26) {
                            switch((int) ((d % 5) + 35)) {
                                case 35:
                                    by2 -= (byte) i27;
                                    d2 = Test.instanceCount;
                                    f += i26;
                                    switch((i26 % 5) + 80) {
                                        case 80:
                                            i2 >>>= (int) 203758416L;
                                            i3 >>= (int) Test.instanceCount;
                                            i2 <<= 2;
                                            i3 += (((i26 * Test.instanceCount) + i24) - Test.instanceCount);
                                            Test.fArrFld = Test.fArrFld;
                                            Test.iArrFld[i26 - 1] = i2;
                                            f += (1 + (i26 * i26));
                                            d2 = Test.instanceCount;
                                            break;
                                        case 81:
                                            dArr1[(int) (d + 1)] += i2;
                                            i2 %= (int) (Test.instanceCount | 1);
                                            Test.instanceCount >>= i25;
                                            Test.instanceCount += i26;
                                            Test.instanceCount += (((i26 * i25) + i25) - i3);
                                            i3 += (int) Test.instanceCount;
                                            d2 = -3;
                                            i2 = -15947;
                                            Test.iArrFld = Test.iArrFld;
                                            i2 = i27;
                                            if (true)
                                                continue;
                                            break;
                                        case 82:
                                        case 83:
                                            f *= i24;
                                            i27 += (int) -1.101F;
                                            Test.iArrFld[i26 - 1] -= (int) d;
                                            i25 += i26;
                                            Test.instanceCount += (((i26 * i26) + Test.instanceCount) - by2);
                                            i3 = (int) d2;
                                            break;
                                        case 84:
                                    }
                                    break;
                                case 36:
                                case 37:
                                    Test.iArrFld[i26] = i27;
                                    break;
                                case 38:
                                    Test.iArrFld[(int) (d + 1)] <<= i2;
                                    break;
                                case 39:
                                    Test.instanceCount += (i26 * i26);
                            }
                        }
                        {
                            java.io.PrintStream ax$43 = System.out;
                            java.io.PrintStream ax$44 = System.err;
                            java.io.PrintStream ax$45 = new java.io.PrintStream(new java.io.OutputStream() {

                                @Override
                                public void write(int b) throws java.io.IOException {
                                    // DO NOTHING: DISCARD ALL OUTPUTS
                                }
                            });
                            System.setOut(ax$45);
                            System.setErr(ax$45);
                            try {
                                for (int ax$41 = -1248; ax$41 < 7227; ax$41 += 1) {
                                    int ax$33 = i3;
                                    int ax$34 = i24;
                                    int ax$35 = i26;
                                    int ax$36 = i25;
                                    int ax$37 = i27;
                                    int ax$38 = i2;
                                    int ax$39 = iFld;
                                    try {
                                        do {
                                            i3++;
                                            i24++;
                                            i26++;
                                            i25++;
                                            i27 += 3;
                                            i2 += 2;
                                            iFld += 2;
                                        } while (i3 != 5);
                                    } catch (Throwable ax$40) {
                                    } finally {
                                        i3 = ax$33;
                                        i24 = ax$34;
                                        i26 = ax$35;
                                        i25 = ax$36;
                                        i27 = ax$37;
                                        i2 = ax$38;
                                        iFld = ax$39;
                                    }
                                }
                            } catch (Throwable ax$42) {
                            }
                            System.setOut(ax$43);
                            System.setErr(ax$44);
                        }
                        break;
                    case 95:
                        f = i24;
                        break;
                    case 96:
                        i25 -= i26;
                        break;
                    case 97:
                        i27 += i24;
                    case 98:
                        by2 *= (byte) Test.instanceCount;
                        break;
                    case 99:
                        d2 = Test.instanceCount;
                        break;
                    case 100:
                    case 101:
                        i2 >>>= i27;
                        break;
                    default:
                        d2 -= i3;
                }
            }
        }
        long meth_res = (b ? 1 : 0) + i2 + Double.doubleToLongBits(d) + i3 + i24 + i25 + i26 + i27 + by2 + Double.doubleToLongBits(d2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public void mainTest(String[] strArr1) {
        if (ax$46) {
            int ax$58 = iFld;
            try {
                byte[] ax$56 = new byte[10];
                for (int ax$57 = 0; ax$57 < iFld; ax$57++) {
                    ax$56[ax$57] = (byte) -1;
                }
            } catch (Throwable ax$59) {
            } finally {
                iFld = ax$58;
            }
            return;
        }
        int i = -49179, i1 = -204, i28 = -5, i29 = 21013, i30 = -41028, i31 = -6, i32 = -7, i33 = -194, iArr[] = new int[N];
        double d3 = -51.70852, dArr2[] = new double[N];
        short s2 = 22498;
        FuzzerUtils.init(iArr, -41404);
        FuzzerUtils.init(dArr2, -50.22691);
        for (i = 113; i > 7; i--) {
            iArr[i - 1] >>= (-i);
            if (Test.bFld)
                break;
            Test.instanceCount <<= ((long) ((i1++) - dMeth(Test.bFld, i)) << i1);
            Test.instanceCount += i1;
            d3 = i1;
            Test.instanceCount -= i;
        }
        for (i28 = 3; i28 < 105; i28 += 3) {
            for (i30 = i28; 148 > i30; i30 += 2) {
                i31 -= (int) d3;
                Test.instanceCount = -62275;
                Test.instanceCount >>= i30;
                switch((i30 % 1) + 43) {
                    case 43:
                        i32 = 1;
                        do {
                            i1 = i;
                            iArr[i30] = (int) -2180328018L;
                            i29 = (int) 6L;
                            Test.instanceCount >>>= i28;
                            if (true)
                                break;
                            i1 = 10;
                            switch(((i28 % 1) * 5) + 78) {
                                case 83:
                                    i29 >>= i1;
                                    i1 <<= (int) Test.instanceCount;
                                    Test.instanceCount = Test.instanceCount;
                                    i1 = (int) -3867968572822327264L;
                                    Test.fFld /= (Test.instanceCount | 1);
                                    i31 >>= i32;
                                    Test.instanceCount += (i32 + i1);
                                    i1 = (int) Test.instanceCount;
                                    Test.instanceCount = i31;
                                    Test.iArrFld = iArr;
                                default:
                                    Test.lArrFld[i30] = i28;
                                    i29 = (int) d3;
                            }
                            i31 += (26750 + (i32 * i32));
                            Test.iArrFld[i32] <<= i30;
                            iArr = FuzzerUtils.int1array(N, (int) -7);
                            i1 = 2;
                        } while (++i32 < 1);
                        Test.lArrFld = Test.lArrFld;
                        i29 *= 13702;
                        switch((i30 % 7) + 64) {
                            case 64:
                                i29 = i29;
                                i33 = 1;
                                do {
                                    byte by3 = -71;
                                    if (Test.bFld)
                                        continue;
                                    Test.fFld = Test.instanceCount;
                                    switch(((i28 % 10) * 5) + 56) {
                                        case 96:
                                            try {
                                                iArr[i33 - 1] = (i33 / i32);
                                                Test.iArrFld[i30 + 1] = (478928249 % i32);
                                                iArr[i28] = (i31 % iArr[i30 + 1]);
                                            } catch (ArithmeticException a_e) {
                                            }
                                            Test.iArrFld[i28] -= i1;
                                            i29 &= i31;
                                            Test.iArrFld[i30] -= i30;
                                            switch(((i28 % 5) * 5) + 19) {
                                                case 24:
                                                    i29 = (int) Test.instanceCount;
                                                    i1 = -97;
                                                    if (Test.bFld)
                                                        continue;
                                                    if (Test.bFld)
                                                        break;
                                                    Test.iArrFld[i30] >>= i29;
                                                    Test.iArrFld = iArr;
                                                    i31 += i31;
                                                    by3 += (byte) i33;
                                                    Test.fFld -= Test.instanceCount;
                                                    Test.bFld = false;
                                                    i31 += (i33 - s2);
                                                    switch(((i33 >>> 1) % 1) + 84) {
                                                        case 84:
                                                            Test.instanceCount += (((i33 * i1) + i32) - by3);
                                                            if (Test.bFld) {
                                                                switch(((i30 % 10) * 5) + 41) {
                                                                    case 81:
                                                                        i29 = (int) 8.370F;
                                                                        Test.instanceCount = i32;
                                                                        i29 = 37;
                                                                        i31 += i33;
                                                                        switch((((i31 >>> 1) % 2) * 5) + 102) {
                                                                            case 111:
                                                                                Test.instanceCount = by3;
                                                                                Test.fFld -= i28;
                                                                                i31 += i33;
                                                                                Test.iFld |= i31;
                                                                                Test.iFld = i31;
                                                                                break;
                                                                            case 110:
                                                                                Test.fFld += (((i33 * i) + Test.fFld) - i30);
                                                                                break;
                                                                            default:
                                                                                Test.instanceCount -= i31;
                                                                        }
                                                                        break;
                                                                    case 60:
                                                                        if (Test.bFld)
                                                                            continue;
                                                                        break;
                                                                    case 42:
                                                                        Test.fFld += (i33 * i33);
                                                                        break;
                                                                    case 67:
                                                                        Test.iArrFld[i30 + 1] ^= 72;
                                                                        break;
                                                                    case 89:
                                                                        Test.fFld += Test.fFld;
                                                                        break;
                                                                    case 58:
                                                                        s2 = (short) Test.instanceCount;
                                                                        break;
                                                                    case 77:
                                                                        i1 = (int) Test.instanceCount;
                                                                    case 71:
                                                                        i1 -= i1;
                                                                        break;
                                                                    case 50:
                                                                        i29 -= (int) Test.instanceCount;
                                                                        break;
                                                                    case 66:
                                                                        iArr[(i30 >>> 1) % N] = -13733;
                                                                        break;
                                                                    default:
                                                                        i29 = i31;
                                                                }
                                                            } else if (Test.bFld) {
                                                                try {
                                                                    i31 = (i33 / -34523);
                                                                    Test.iFld = (12196 % i31);
                                                                    Test.iArrFld[i28 + 1] = (i % -30671);
                                                                } catch (ArithmeticException a_e) {
                                                                }
                                                            }
                                                            break;
                                                        default:
                                                            Test.instanceCount = s2;
                                                    }
                                                case 30:
                                                    Test.fFld += i31;
                                                    break;
                                                case 25:
                                                    Test.iFld = i30;
                                                    break;
                                                case 21:
                                                    Test.lFld = 875;
                                                    break;
                                                case 34:
                                                    iArr[i28 + 1] -= (int) Test.fFld;
                                                default:
                                                    Test.iFld += i33;
                                            }
                                        case 58:
                                            Test.lFld *= Test.lFld;
                                            break;
                                        case 90:
                                            i31 += (12 + (i33 * i33));
                                        case 60:
                                            Test.lFld += i33;
                                            break;
                                        case 98:
                                            i29 += (int) Test.fFld;
                                        case 82:
                                            Test.lFld >>>= Test.iFld;
                                            break;
                                        case 99:
                                            Test.instanceCount -= i31;
                                            break;
                                        case 65:
                                            Test.fFld = 6658914890510154160L;
                                            break;
                                        case 76:
                                            Test.iFld += (i33 * i33);
                                        case 88:
                                            Test.fFld += (i33 * i33);
                                            break;
                                    }
                                } while (--i33 > 0);
                                break;
                            case 65:
                                dArr2 = dArr2;
                                break;
                            case 66:
                                Test.lFld = Test.instanceCount;
                                break;
                            case 67:
                                if (false)
                                    continue;
                            case 68:
                                Test.lFld = i33;
                                break;
                            case 69:
                                i1 += (i30 - Test.instanceCount);
                                break;
                            case 70:
                                iArr[i30] &= (int) 10086L;
                                break;
                            default:
                                i1 = i33;
                        }
                        break;
                }
            }
        }
        FuzzerUtils.out.println("i i1 d3 = " + i + "," + i1 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 i32 i33 = " + i31 + "," + i32 + "," + i33);
        FuzzerUtils.out.println("s2 iArr dArr2 = " + s2 + "," + FuzzerUtils.checkSum(iArr) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr2)));
        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.fFld = " + Test.instanceCount + "," + (Test.bFld ? 1 : 0) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iFld Test.lFld Test.iArrFld = " + Test.iFld + "," + Test.lFld + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.fArrFld Test.lArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
    }

    public static void main(String[] strArr) {
        if (ax$65) {
            try {
                int[] ax$66 = { 1, 3 };
                byte[] ax$69 = new byte[5];
                for (int ax$67 = 0; ax$67 < ax$66.length; ax$67 += 1) {
                    int ax$68 = ax$66[ax$67];
                    ax$69[ax$67 * 4 + 0] = (byte) (ax$68 & 0xFF);
                    ax$69[ax$67 * 4 + 1] = (byte) (ax$68 >> 8);
                    ax$69[ax$67 * 4 + 2] = (byte) (ax$68 >> 16);
                    ax$69[ax$67 * 4 + 3] = (byte) (ax$68 >> 24);
                }
            } catch (Throwable ax$70) {
            } finally {
            }
            return;
        }
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$46 = false;

    private static Boolean ax$65 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  dMeth ->  dMeth mainTest
// DEBUG  iMeth ->  iMeth dMeth mainTest
// DEBUG  lMeth ->  lMeth iMeth dMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
