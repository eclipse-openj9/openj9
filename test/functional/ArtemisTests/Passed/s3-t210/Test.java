// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = 7L;

    public static int iFld = -11;

    public static int iFld1 = -37755;

    public static double dFld = 121.84079;

    public static float fFld = 65.14F;

    public static boolean bFld = true;

    public static byte byFld = -40;

    public static long lFld = 137L;

    public static int iFld2 = -11;

    public long[] lArrFld = new long[N];

    public static int[] iArrFld = new int[N];

    public static short[] sArrFld = new short[N];

    public static float[] fArrFld = new float[N];

    public int[][] iArrFld1 = new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, 7);
        FuzzerUtils.init(Test.sArrFld, (short) -18430);
        FuzzerUtils.init(Test.fArrFld, 0.281F);
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long iMeth_check_sum = 0;

    public static void vMeth(int i1) {
        Test.iArrFld[(i1 >>> 1) % N] /= (int) ((((i1 + Test.instanceCount) - (Test.instanceCount * i1)) * 45814) | 1);
        vMeth_check_sum += i1;
    }

    public static int iMeth(double d, int i2) {
        int i3 = 12743, i4 = -6, i5 = 40373, i6 = -235, i7 = 7, i8 = 3, i9 = 64, i10 = -14, i11 = 210, i12 = 37026, i13 = -8763, iArr[] = new int[N];
        boolean b = false;
        float f = 76.704F;
        byte by = 61;
        double[] dArr = new double[N];
        long[] lArr = new long[N];
        FuzzerUtils.init(dArr, 94.56570);
        FuzzerUtils.init(lArr, -924684291904744930L);
        FuzzerUtils.init(iArr, -120);
        i2 = 226;
        vMeth(Test.iFld);
        {
            java.io.PrintStream ax$0 = System.out;
            java.io.PrintStream ax$1 = System.err;
            java.io.PrintStream ax$2 = new java.io.PrintStream(new java.io.OutputStream() {

                @Override
                public void write(int b) throws java.io.IOException {
                    // DO NOTHING: DISCARD ALL OUTPUTS
                }
            });
            System.setOut(ax$2);
            System.setErr(ax$2);
            {
                boolean ax$8 = false;
                for (int ax$7 = -697; ax$7 < 5662; ax$7 += 2) {
                    if (!ax$8) {
                        ax$8 = true;
                        {
                            System.setOut(ax$0);
                            System.setErr(ax$1);
                            for (i3 = 11; 195 > i3; i3++) {
                                Test.iArrFld[i3 + 1] = (int) d;
                                i4 = i4;
                                dArr[i3 - 1] += -10L;
                                Test.instanceCount = Test.iFld;
                                for (i5 = i3; 3 > i5; i5++) {
                                    short s = -19865;
                                    Test.iArrFld[i5 - 1] += i2;
                                    Test.iFld >>= i4;
                                    Test.iArrFld[i5 + 1] <<= i2;
                                    i6 = -13;
                                    Test.iArrFld[i5 + 1] = (int) d;
                                    Test.iFld += i2;
                                    Test.instanceCount -= i7;
                                    Test.iFld += (i5 * s);
                                }
                                Test.instanceCount = i4;
                                if (b)
                                    continue;
                                for (i8 = 1; i8 < 3; ++i8) {
                                    f -= Test.instanceCount;
                                    i10 = 1;
                                    while (++i10 < 2) {
                                        Test.instanceCount += (117 + (i10 * i10));
                                        lArr[i10] = i2;
                                        i6 += (i10 * i10);
                                        i9 += (i10 * i5);
                                        i2 = (int) Test.instanceCount;
                                        i11 += (int) Test.instanceCount;
                                        lArr[i10] >>= by;
                                        Test.sArrFld[i3 + 1] -= (short) i8;
                                    }
                                    Test.iFld += (int) 39885L;
                                    i7 += (i8 | Test.instanceCount);
                                    i6 = i6;
                                    try {
                                        i9 = (Test.iFld / -586538156);
                                        Test.iFld = (-705596992 % i6);
                                        i2 = (i8 % i8);
                                    } catch (ArithmeticException a_e) {
                                    }
                                    for (i12 = 1; 2 > i12; i12++) {
                                        iArr[i8 - 1] = Test.iFld1;
                                        i6 = i10;
                                        Test.iFld = i2;
                                    }
                                }
                            }
                            System.setOut(ax$2);
                            System.setErr(ax$2);
                        }
                    }
                    try {
                        int ax$3 = 4175;
                        for (int ax$5 = 0; ax$5 < 10000; ax$5++) {
                            int ax$4 = ax$5 % 4;
                            ax$3 += (ax$4 > 1.0f) ? 1 : 2;
                        }
                    } catch (Throwable ax$6) {
                    } finally {
                    }
                }
            }
            System.setOut(ax$0);
            System.setErr(ax$1);
        }
        long meth_res = Double.doubleToLongBits(d) + i2 + i3 + i4 + i5 + i6 + i7 + (b ? 1 : 0) + i8 + i9 + Float.floatToIntBits(f) + i10 + i11 + by + i12 + i13 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1(long l) {
        if (ax$9) {
            int ax$10 = iFld2;
            int ax$11 = iFld;
            int ax$12 = iFld1;
            try {
                for (; iFld1 < iFld; iFld1++) {
                    iFld2 = iFld1;
                }
            } catch (Throwable ax$13) {
            } finally {
                iFld2 = ax$10;
                iFld = ax$11;
                iFld1 = ax$12;
            }
            return;
        }
        int i14 = 10, i15 = -169, i16 = -85, i17 = -58535, i18 = -2, i19 = -14, i20 = -12, i21 = 176, i22 = -19;
        byte by1 = -18;
        short s1 = 29243;
        double[] dArr1 = new double[N];
        FuzzerUtils.init(dArr1, -111.4354);
        Test.iFld = ((++Test.iArrFld[(Test.iFld >>> 1) % N]) - iMeth(Test.dFld, Test.iFld));
        Test.fArrFld[(Test.iFld1 >>> 1) % N] = Test.fFld;
        for (i14 = 7; i14 < 127; i14++) {
            long l1 = 5191447520329563525L;
            Test.instanceCount -= i14;
            i15 -= Test.iFld;
            i15 -= Test.iFld;
            Test.iArrFld[i14 + 1] *= Test.iFld1;
            Test.iFld1 = i14;
            i16 = 1;
            while (++i16 < 5) {
                l >>= -77;
                Test.dFld = Test.iFld;
                by1 += (byte) (((i16 * Test.fFld) + Test.instanceCount) - l);
                if (Test.bFld)
                    break;
                if (Test.bFld)
                    continue;
                Test.fFld += i16;
            }
            i15 %= 60654;
            Test.dFld += l1;
            Test.iFld += (((i14 * Test.iFld1) + i15) - Test.fFld);
            for (i17 = i14; i17 < 5; i17++) {
                Test.dFld = Test.dFld;
                Test.iFld1 = i15;
                Test.instanceCount += (long) Test.fFld;
                Test.iFld = s1;
                i15 *= Test.iFld;
                Test.iFld1 = (int) 0L;
                s1 += (short) l;
            }
            for (i19 = 1; 5 > i19; ++i19) {
                i18 += (int) -1470422551L;
                for (i21 = 2; i21 > 1; i21--) {
                    Test.iArrFld[i14 + 1] += by1;
                    i15 += (i21 * i21);
                    by1 = (byte) i17;
                    Test.iFld += (int) -8L;
                    i15 &= (int) Test.instanceCount;
                }
                Test.fArrFld[i14 + 1] += (float) Test.dFld;
                Test.instanceCount >>= 39849;
                dArr1[i14 - 1] = i16;
            }
        }
        vMeth1_check_sum += l + i14 + i15 + i16 + by1 + i17 + i18 + s1 + i19 + i20 + i21 + i22 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {
        if (ax$19) {
            float ax$20 = fFld;
            try {
                fFld = 0.0f;
            } catch (Throwable ax$21) {
            } finally {
                fFld = ax$20;
            }
            return;
        }
        int i = -62995, i23 = -4, i24 = 8, i25 = -9, i26 = 188, i27 = 5, i28 = 8, i29 = 1, i30 = 26783;
        short s2 = -28540;
        long l2 = -27L, l3 = -14L;
        double[] dArr2 = new double[N];
        boolean[] bArr = new boolean[N];
        byte[] byArr = new byte[N];
        FuzzerUtils.init(dArr2, 0.98626);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(byArr, (byte) -117);
        lArrFld[(i >>> 1) % N] = (i -= (int) (i = (int) (Test.instanceCount++)));
        vMeth(12);
        {
            java.io.PrintStream ax$16 = System.out;
            java.io.PrintStream ax$17 = System.err;
            java.io.PrintStream ax$18 = new java.io.PrintStream(new java.io.OutputStream() {

                @Override
                public void write(int b) throws java.io.IOException {
                    // DO NOTHING: DISCARD ALL OUTPUTS
                }
            });
            System.setOut(ax$18);
            System.setErr(ax$18);
            try {
                ax$9 = true;
                for (int ax$14 = 0; ax$14 < 8110; ax$14 += 1) vMeth1(3669434849256252701L);
            } catch (java.lang.Throwable ax$15) {
            } finally {
                ax$9 = false;
            }
            System.setOut(ax$16);
            System.setErr(ax$17);
        }
        vMeth1(-475927060927677622L);
        for (i23 = 2; 105 > i23; i23++) {
            for (i25 = i23; i25 < 49; ++i25) {
                i24 += (i25 | i23);
                Test.iFld1 = i25;
                i27 = 1;
                do {
                    Test.fArrFld[i23 + 1] -= Test.byFld;
                    Test.dFld *= Test.iFld;
                    iArrFld1 = iArrFld1;
                    i = (int) -11L;
                    Test.dFld -= -49;
                    dArr2[i23 - 1] += Test.dFld;
                    Test.iFld = -55538;
                    Test.dFld = i24;
                    Test.iFld1 = (int) Test.instanceCount;
                    Test.iFld >>= i26;
                    if (Test.bFld) {
                        Test.fFld *= 9;
                        Test.fArrFld[i23 - 1] *= i;
                        bArr = bArr;
                        Test.byFld = (byte) Test.instanceCount;
                        Test.iFld1 = (int) Test.instanceCount;
                        Test.iFld1 = -22613;
                        Test.iFld1 = (int) Test.dFld;
                        Test.iArrFld = Test.iArrFld;
                        lArrFld[i23] = (long) Test.fFld;
                        Test.iFld -= (int) Test.instanceCount;
                        Test.fFld = Test.fFld;
                        Test.instanceCount = -9L;
                        Test.iFld1 = 26;
                        switch((i27 % 1) + 63) {
                            case 63:
                                Test.iFld >>= Test.iFld1;
                                Test.instanceCount -= Test.instanceCount;
                                Test.fFld *= i25;
                                switch((i27 % 2) + 114) {
                                    case 114:
                                        i -= 1434;
                                        Test.iFld += (i27 * i27);
                                        i26 += i23;
                                        Test.iFld1 -= 13;
                                    case 115:
                                        i = Test.iFld1;
                                        i <<= i26;
                                        i26 += (((i27 * Test.instanceCount) + Test.instanceCount) - s2);
                                        if (true) {
                                            Test.fArrFld[i27 - 1] = i;
                                            Test.iFld += (((i27 * Test.iFld) + Test.iFld1) - Test.iFld1);
                                            iArrFld1[i27 - 1][i27 + 1] *= i23;
                                            Test.iFld1 += (((i27 * Test.instanceCount) + i25) - i28);
                                            Test.byFld += Test.byFld;
                                            i24 += (i27 - Test.iFld);
                                            i &= 7;
                                            Test.fFld -= Test.instanceCount;
                                        } else if (Test.bFld) {
                                            Test.dFld = i28;
                                            Test.dFld *= i25;
                                            Test.iFld += i;
                                            try {
                                                i = (i26 % Test.iFld1);
                                                i26 = (i23 / 51170);
                                                iArrFld1[i23][i25 - 1] = (Test.iFld1 / -18);
                                            } catch (ArithmeticException a_e) {
                                            }
                                            switch(i25 + 1) {
                                                case 1:
                                                case 2:
                                                    i += i27;
                                                    Test.iFld = 8;
                                                    i24 += (i27 ^ Test.iFld);
                                                    Test.iFld1 = i25;
                                                    s2 += (short) 1.903;
                                                    break;
                                                case 3:
                                                    lArrFld[i23] = Test.byFld;
                                                    if (Test.bFld)
                                                        break;
                                                    s2 += (short) (((i27 * Test.iFld1) + Test.instanceCount) - Test.instanceCount);
                                                    Test.instanceCount -= Test.iFld1;
                                                    i28 ^= (int) -9L;
                                                    i -= i;
                                                    i28 += i27;
                                                    Test.sArrFld = Test.sArrFld;
                                                    Test.iFld1 += Test.iFld1;
                                                    Test.fFld = i23;
                                                    i28 = Test.iFld;
                                                    i26 = i25;
                                                case 4:
                                                    lArrFld[i27] >>= -14;
                                                case 5:
                                                    iArrFld1[i23 + 1][i27] -= (int) Test.dFld;
                                                    break;
                                                case 6:
                                                    Test.byFld += (byte) i27;
                                                    break;
                                                case 7:
                                                    Test.instanceCount = Test.instanceCount;
                                                case 8:
                                                    i26 += (i27 | i23);
                                                    break;
                                                case 9:
                                                    i28 += (i27 * i27);
                                                    break;
                                                case 10:
                                                    iArrFld1[i25 - 1][i27 + 1] >>= (int) Test.instanceCount;
                                                    break;
                                                case 11:
                                                    Test.fFld *= 2.876F;
                                                    break;
                                                case 12:
                                                    i26 = 9;
                                                    break;
                                                case 13:
                                                    i *= i24;
                                                    break;
                                                case 14:
                                                    Test.instanceCount -= (long) -113.98423;
                                                    break;
                                                case 15:
                                                    Test.dFld += Test.byFld;
                                                    break;
                                                case 16:
                                                    Test.instanceCount = (long) Test.dFld;
                                                    break;
                                                case 17:
                                                    i = (int) Test.lFld;
                                                    break;
                                                case 18:
                                                    i24 += (i27 * i26);
                                                case 19:
                                                    s2 = (short) 31893;
                                                    break;
                                                case 20:
                                                    if (Test.bFld)
                                                        break;
                                                case 21:
                                                    byArr[i25] += (byte) i24;
                                                    break;
                                                case 22:
                                                    Test.fFld += (((i27 * Test.fFld) + s2) - i28);
                                                case 23:
                                                    Test.iArrFld[i23 + 1] = Test.iFld1;
                                                    break;
                                                case 24:
                                                    Test.iFld2 -= i26;
                                                    break;
                                                case 25:
                                                    Test.iFld1 += (i27 | i24);
                                                case 26:
                                                    if (Test.bFld)
                                                        continue;
                                                    break;
                                                case 27:
                                                    s2 += (short) (((i27 * l2) + Test.fFld) - i25);
                                                case 28:
                                                    i28 += i27;
                                                    break;
                                                case 29:
                                                    Test.bFld = Test.bFld;
                                                    break;
                                                case 30:
                                                    Test.dFld = s2;
                                                    break;
                                                case 31:
                                                    Test.lFld += i27;
                                                    break;
                                                case 32:
                                                case 33:
                                                    i24 |= Test.iFld;
                                                case 34:
                                                case 35:
                                                case 36:
                                                    Test.instanceCount = i25;
                                                    break;
                                                case 37:
                                                    Test.instanceCount = i23;
                                                    break;
                                                case 38:
                                                    i29 += (((i27 * i24) + Test.iFld1) - i30);
                                                case 39:
                                                    Test.lFld += (((i27 * Test.fFld) + i25) - Test.iFld);
                                                case 40:
                                                    iArrFld1[i27][i25] = (int) Test.dFld;
                                                    break;
                                                case 41:
                                                    Test.iFld1 += (((i27 * Test.fFld) + i23) - i);
                                                case 42:
                                                    if (Test.bFld)
                                                        continue;
                                                    break;
                                                case 43:
                                                    iArrFld1[i27][i25] = (int) Test.lFld;
                                                    break;
                                                case 44:
                                                    Test.byFld += (byte) (-238L + (i27 * i27));
                                                    break;
                                                case 45:
                                                    Test.iArrFld[i23] -= i25;
                                                    break;
                                                case 46:
                                                    Test.byFld = (byte) i26;
                                                    break;
                                                case 47:
                                                    Test.iFld *= (int) Test.dFld;
                                                case 48:
                                                    if (Test.bFld)
                                                        break;
                                                    break;
                                                case 49:
                                                    Test.dFld *= i25;
                                                    break;
                                                case 50:
                                                    iArrFld1 = iArrFld1;
                                                    break;
                                                case 51:
                                                    i28 -= i24;
                                                    break;
                                                case 52:
                                                    i29 = Test.iFld1;
                                                    break;
                                                case 53:
                                                case 54:
                                                    Test.instanceCount = i26;
                                                case 55:
                                                    i30 -= (int) Test.fFld;
                                                case 56:
                                                    Test.iFld <<= (int) 278792187920138832L;
                                                    break;
                                                case 57:
                                                case 58:
                                                    i28 += (i27 * i27);
                                                    break;
                                                case 59:
                                                    s2 -= (short) Test.lFld;
                                                    break;
                                                case 60:
                                                    if (true)
                                                        break;
                                                    break;
                                                case 61:
                                                    i += (i27 + i29);
                                                case 62:
                                                    if (Test.bFld)
                                                        break;
                                                    break;
                                                case 63:
                                                    Test.instanceCount += (long) 1.89231;
                                                case 64:
                                                    Test.iFld1 *= i;
                                                case 65:
                                                    Test.instanceCount += (((i27 * Test.iFld2) + i) - l3);
                                                    break;
                                                case 66:
                                                    i26 = 177;
                                                    break;
                                                case 67:
                                                    Test.lFld = -1077363123L;
                                                    break;
                                                case 68:
                                                    Test.bFld = Test.bFld;
                                                    break;
                                                case 69:
                                                    i26 -= i29;
                                                    break;
                                                case 70:
                                                    Test.fFld += i24;
                                                    break;
                                            }
                                        }
                                        break;
                                }
                        }
                    } else {
                        l3 += (i27 ^ i23);
                    }
                } while (++i27 < 1);
            }
        }
        FuzzerUtils.out.println("i i23 i24 = " + i + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("s2 i28 l2 = " + s2 + "," + i28 + "," + l2);
        FuzzerUtils.out.println("i29 i30 l3 = " + i29 + "," + i30 + "," + l3);
        FuzzerUtils.out.println("dArr2 bArr byArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr2)) + "," + FuzzerUtils.checkSum(bArr) + "," + FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.iFld1 = " + Test.instanceCount + "," + Test.iFld + "," + Test.iFld1);
        FuzzerUtils.out.println("Test.dFld Test.fFld Test.bFld = " + Double.doubleToLongBits(Test.dFld) + "," + Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.byFld Test.lFld Test.iFld2 = " + Test.byFld + "," + Test.lFld + "," + Test.iFld2);
        FuzzerUtils.out.println("lArrFld Test.iArrFld Test.sArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.sArrFld));
        FuzzerUtils.out.println("Test.fArrFld iArrFld1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(iArrFld1));
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$9 = false;

    private static Boolean ax$19 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  vMeth ->  vMeth mainTest iMeth vMeth1
// DEBUG  vMeth1 ->  vMeth1 mainTest
// DEBUG  iMeth ->  iMeth vMeth1 mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
