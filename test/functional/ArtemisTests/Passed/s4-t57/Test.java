// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = 4063875322148402577L;

    public static double dFld = 115.24826;

    public static volatile boolean bFld = true;

    public static byte byFld = -111;

    public short sFld = 29571;

    public byte[] byArrFld = new byte[N];

    public static int[] iArrFld = new int[N];

    public double[] dArrFld = new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -216);
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l, boolean b) {
        int i6 = -108, i7 = 2, i8 = -1, i9 = 57, i10 = 198, i11 = -35696, i12 = 27462, i13 = 7, iArr[][] = new int[N][N];
        float f = 0.986F, f2 = 68.300F;
        short s = -315;
        boolean[] bArr = new boolean[N];
        double[] dArr = new double[N];
        long[] lArr = new long[N];
        FuzzerUtils.init(iArr, 70);
        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(dArr, 98.4883);
        FuzzerUtils.init(lArr, -2234139915599338542L);
        l >>= l;
        for (i6 = 253; 11 < i6; i6 -= 2) {
            iArr[i6][i6 - 1] = (int) l;
            iArr[i6 - 1][i6] -= (int) Test.dFld;
            for (i8 = 5; i8 > 1; i8 -= 2) {
                for (f = 1; f < 3; f++) {
                    byte by = 108;
                    float f1 = -19.816F;
                    iArr[i8][(int) (f + 1)] = (int) l;
                    l = s;
                    i7 &= i10;
                    b = b;
                    i9 += (int) (f + Test.instanceCount);
                    bArr[i8 + 1] = b;
                    i7 >>>= by;
                    f1 = i8;
                    dArr[i6 - 1] = by;
                    i10 -= -28701;
                    i9 += (int) f;
                    s += (short) 55771;
                    i10 = (int) l;
                }
                Test.instanceCount += i7;
                for (i11 = 1; i11 < 3; ++i11) {
                    lArr[i8 - 1] = i8;
                    Test.instanceCount += -7;
                    iArr[i8 - 1][i11 + 1] = i12;
                }
                iArr[i8][i6 + 1] = (int) 5L;
                f2 += (i8 * i8);
                switch(((i9 >>> 1) % 3) + 115) {
                    case 115:
                        i7 *= i9;
                        l = i10;
                        i12 += 15205;
                        i13 = 1;
                        do {
                            iArr[i6][i8] = (int) Test.instanceCount;
                            i10 = i6;
                            switch((i6 % 2) + 26) {
                                case 26:
                                    iArr[(i11 >>> 1) % N][i13] -= (int) -108.502F;
                                    l = -1666843813693605938L;
                                    i10 += 19923;
                                    break;
                                case 27:
                                    i10 = s;
                                default:
                                    Test.instanceCount += (((i13 * i9) + l) - i6);
                            }
                        } while (++i13 < 3);
                    case 116:
                        l = (long) -107.129F;
                        break;
                    case 117:
                        i7 += (i8 + s);
                        break;
                    default:
                        l = i9;
                }
            }
        }
        vMeth2_check_sum += l + (b ? 1 : 0) + i6 + i7 + i8 + i9 + Float.floatToIntBits(f) + i10 + s + i11 + i12 + Float.floatToIntBits(f2) + i13 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1() {
        int i14 = -184, i15 = 139, i16 = -244, i17 = -42176, i18 = -38607, i19 = -20034, i20 = -11, i22 = 55495, i23 = 7, i24 = -14, iArr1[] = new int[N];
        float f3 = -105.590F;
        short s1 = 32235;
        byte by1 = 71, byArr[] = new byte[N];
        boolean[] bArr1 = new boolean[N];
        long[] lArr1 = new long[N];
        double[] dArr1 = new double[N];
        FuzzerUtils.init(iArr1, 57865);
        FuzzerUtils.init(bArr1, true);
        FuzzerUtils.init(byArr, (byte) 111);
        FuzzerUtils.init(lArr1, 4448404563321499507L);
        FuzzerUtils.init(dArr1, -108.120871);
        vMeth2(-245L, false);
        for (i14 = 2; i14 < 222; i14++) {
            iArr1[(i15 >>> 1) % N] >>>= i14;
            bArr1[i14] = Test.bFld;
            i15 >>= 1;
            for (i16 = 1; 3 > i16; i16++) {
                i15 = -13;
                Test.instanceCount = i14;
                try {
                    i15 = (iArr1[i14 - 1] / -23816);
                    i15 = (i14 % -55118);
                    i15 = (-202 % i17);
                } catch (ArithmeticException a_e) {
                }
                i15 -= (int) Test.instanceCount;
                for (i18 = 1; 2 > i18; ++i18) {
                    int i21 = 2313;
                    i15 += (int) -4148820546L;
                    iArr1[i14] = 225;
                    byArr[i18 - 1] = (byte) i17;
                    f3 += i20;
                    lArr1[i18 + 1] += i14;
                    i20 += (((i18 * s1) + i18) - Test.instanceCount);
                    Test.instanceCount += 217;
                    Test.instanceCount += (i18 * Test.instanceCount);
                    iArr1[i16 - 1] = i21;
                    f3 *= i19;
                    i17 -= i20;
                    Test.dFld -= i14;
                }
                bArr1[i14 - 1] = Test.bFld;
                iArr1[i14 - 1] %= (int) (i14 | 1);
                switch((i14 % 6) + 107) {
                    case 107:
                        for (i22 = 1; i22 < 2; ++i22) {
                            i24 += (((i22 * i20) + i20) - f3);
                            dArr1[i16 + 1] *= i22;
                            i17 *= i22;
                            i23 = i22;
                            iArr1[i22] += (int) f3;
                            iArr1[i22 + 1] |= i18;
                            lArr1[i16 - 1] = i19;
                            s1 ^= (short) i20;
                            f3 += i16;
                            f3 -= i16;
                        }
                        break;
                    case 108:
                        i24 ^= (int) Test.instanceCount;
                        break;
                    case 109:
                        i17 -= by1;
                        break;
                    case 110:
                        i17 += (i16 | i24);
                        break;
                    case 111:
                        i17 -= (int) Test.instanceCount;
                        break;
                    case 112:
                        Test.instanceCount &= i19;
                        break;
                }
            }
        }
        vMeth1_check_sum += i14 + i15 + i16 + i17 + i18 + i19 + Float.floatToIntBits(f3) + i20 + s1 + i22 + i23 + i24 + by1 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(bArr1) + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public static void vMeth(int i4, int i5) {
        if (ax$0) {
            try {
                java.lang.String ax$1 = "2.742631008523106E-31";
                if (ax$1.indexOf("FileNotFoundException") == -1) {
                }
            } catch (Throwable ax$2) {
            } finally {
            }
            return;
        }
        byte by2 = -46;
        vMeth1();
        by2 = (byte) i5;
        vMeth_check_sum += i4 + i5 + by2;
    }

    public void mainTest(String[] strArr1) {
        if (ax$8) {
            try {
                short ax$9 = 12378;
            } catch (Throwable ax$10) {
            } finally {
            }
            return;
        }
        int i = -215, i1 = -2, i2 = 11936, i3 = 11613, i25 = 77, i26 = -237, i27 = 66, iArr2[] = new int[N], iArr3[][] = new int[N][N];
        float f4 = -2.656F;
        long[] lArr2 = new long[N];
        FuzzerUtils.init(iArr2, -33524);
        FuzzerUtils.init(lArr2, -2900988558L);
        FuzzerUtils.init(iArr3, 40730);
        for (i = 8; i < 225; i++) {
            for (i2 = 1; i2 < 24; i2++) {
                {
                    java.io.PrintStream ax$5 = System.out;
                    java.io.PrintStream ax$6 = System.err;
                    java.io.PrintStream ax$7 = new java.io.PrintStream(new java.io.OutputStream() {

                        @Override
                        public void write(int b) throws java.io.IOException {
                            // DO NOTHING: DISCARD ALL OUTPUTS
                        }
                    });
                    System.setOut(ax$7);
                    System.setErr(ax$7);
                    try {
                        ax$0 = true;
                        for (int ax$3 = 0; ax$3 < 7818; ax$3 += 1) vMeth(1228403307, 301981655);
                    } catch (java.lang.Throwable ax$4) {
                    } finally {
                        ax$0 = false;
                    }
                    System.setOut(ax$5);
                    System.setErr(ax$6);
                }
                vMeth(i2, i3);
                i3 = (int) 45372L;
                Test.instanceCount += (i2 * i2);
                switch((((i2 >>> 1) % 6) * 5) + 36) {
                    case 66:
                        i25 = 1;
                        while (++i25 < 2) {
                            i1 += (((i25 * Test.byFld) + i2) - Test.instanceCount);
                            i1 = (int) Test.dFld;
                            f4 -= i2;
                            i3 = (int) Test.dFld;
                            i3 &= i3;
                            i1 = (int) Test.instanceCount;
                            sFld = (short) i2;
                            i1 += (int) f4;
                            i1 -= 24620;
                        }
                        if (Test.bFld)
                            break;
                        i3 += i25;
                        break;
                    case 50:
                        for (i26 = 1; i26 < 2; ++i26) {
                            i3 %= (int) (sFld | 1);
                            switch((((i2 >>> 1) % 10) * 5) + 36) {
                                case 79:
                                    iArr2[i2 + 1] ^= i25;
                                    i3 += (i26 * i2);
                                    break;
                                case 70:
                                    Test.byFld = (byte) i;
                                    i3 += (i26 + i26);
                                    f4 *= Test.instanceCount;
                                    i1 = (int) Test.instanceCount;
                                    f4 = i26;
                                    iArr2[i] += i27;
                                    i3 = (int) f4;
                                    if (false) {
                                        Test.bFld = Test.bFld;
                                        iArr2[i2] -= (int) Test.instanceCount;
                                        i3 += (((i26 * f4) + i3) - i2);
                                        iArr2[i - 1] += (int) f4;
                                        Test.instanceCount = Test.instanceCount;
                                        i1 += (int) f4;
                                        Test.instanceCount += (i26 - i26);
                                    } else {
                                        Test.instanceCount -= i2;
                                        i3 = 20460;
                                        i1 += i3;
                                        i1 -= (int) Test.instanceCount;
                                        Test.instanceCount = i2;
                                        i27 = (int) Test.dFld;
                                        lArr2[i2] += 40061;
                                        switch((((i26 >>> 1) % 2) * 5) + 16) {
                                            case 21:
                                                i27 += i25;
                                                i27 += (((i26 * i3) + i27) - f4);
                                                iArr3 = iArr3;
                                                iArr3 = iArr3;
                                                Test.instanceCount = i27;
                                            case 22:
                                                byArrFld[i26 + 1] = (byte) Test.instanceCount;
                                                Test.instanceCount *= i26;
                                                Test.iArrFld[i2 - 1] += i1;
                                                sFld = (short) i3;
                                                switch((i % 3) + 48) {
                                                    case 48:
                                                        Test.instanceCount = Test.instanceCount;
                                                        Test.instanceCount += Test.instanceCount;
                                                        i27 = i1;
                                                        Test.instanceCount -= i25;
                                                        i3 &= i26;
                                                        break;
                                                    case 49:
                                                        i3 += i26;
                                                        i27 -= i25;
                                                        Test.instanceCount = (long) Test.dFld;
                                                        switch(((i3 >>> 1) % 8) + 65) {
                                                            case 65:
                                                            case 66:
                                                                i27 *= i27;
                                                                i27 = Test.byFld;
                                                                switch((((i26 >>> 1) % 2) * 5) + 77) {
                                                                    case 85:
                                                                        Test.dFld = i27;
                                                                        lArr2 = lArr2;
                                                                        i3 = (int) Test.instanceCount;
                                                                        i1 += (((i26 * i26) + f4) - i);
                                                                        i3 = i1;
                                                                        i1 = (int) Test.dFld;
                                                                        i27 ^= (int) Test.instanceCount;
                                                                        break;
                                                                    case 83:
                                                                        i1 = i3;
                                                                        break;
                                                                    default:
                                                                        Test.instanceCount -= i27;
                                                                }
                                                            case 67:
                                                                i27 += -13;
                                                                break;
                                                            case 68:
                                                                if (Test.bFld)
                                                                    continue;
                                                                break;
                                                            case 69:
                                                                i27 += i3;
                                                                break;
                                                            case 70:
                                                                i3 >>>= -240;
                                                                break;
                                                            case 71:
                                                                i27 += i1;
                                                                break;
                                                            case 72:
                                                                Test.instanceCount = -2L;
                                                                break;
                                                        }
                                                        break;
                                                    case 50:
                                                        byArrFld = byArrFld;
                                                }
                                            default:
                                                Test.instanceCount = -9;
                                        }
                                    }
                                    break;
                                case 40:
                                    i3 += (((i26 * i2) + f4) - i1);
                                case 52:
                                    i27 *= Test.byFld;
                                    break;
                                case 80:
                                    if (Test.bFld)
                                        break;
                                    break;
                                case 68:
                                    f4 += (i26 * i26);
                                case 81:
                                    i1 += i26;
                                case 78:
                                case 66:
                                    i27 = i25;
                                case 85:
                                    i1 = Test.byFld;
                                default:
                                    f4 += (((i26 * f4) + i2) - i25);
                            }
                        }
                        break;
                    case 37:
                        Test.byFld += (byte) (((i2 * i2) + i2) - Test.instanceCount);
                    case 56:
                        i3 += i;
                    case 49:
                        i27 += (((i2 * Test.instanceCount) + i2) - i26);
                    case 43:
                        dArrFld[i2] -= i2;
                        break;
                    default:
                        Test.instanceCount += 12885;
                }
            }
        }
        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i25 f4 = " + i3 + "," + i25 + "," + Float.floatToIntBits(f4));
        FuzzerUtils.out.println("i26 i27 iArr2 = " + i26 + "," + i27 + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("lArr2 iArr3 = " + FuzzerUtils.checkSum(lArr2) + "," + FuzzerUtils.checkSum(iArr3));
        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.bFld = " + Test.instanceCount + "," + Double.doubleToLongBits(Test.dFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.byFld sFld byArrFld = " + Test.byFld + "," + sFld + "," + FuzzerUtils.checkSum(byArrFld));
        FuzzerUtils.out.println("Test.iArrFld dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        if (ax$16) {
            boolean ax$25 = bFld;
            try {
                bFld = true;
            } catch (Throwable ax$26) {
            } finally {
                bFld = ax$25;
            }
            return;
        }
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$0 = false;

    private static Boolean ax$8 = false;

    private static Boolean ax$16 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  vMeth ->  vMeth mainTest
// DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
// DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
