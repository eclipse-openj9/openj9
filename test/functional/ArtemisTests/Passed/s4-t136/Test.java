// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.util.Random;

public class Test {

    public static final int N = 256;

    public static long instanceCount = 8L;

    public static float fFld = 82.478F;

    public static volatile double dFld = -125.120090;

    public static boolean bFld = true;

    public static int[] iArrFld = new int[N];

    public static double[] dArrFld = new double[N];

    public static short[] sArrFld = new short[N];

    public static long[][] lArrFld = new long[N][N];

    public static int[][] iArrFld1 = new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -5);
        FuzzerUtils.init(Test.dArrFld, 0.75558);
        FuzzerUtils.init(Test.sArrFld, (short) -12178);
        FuzzerUtils.init(Test.lArrFld, -114L);
        FuzzerUtils.init(Test.iArrFld1, 45733);
    }

    public static long vMeth_check_sum = 0;

    public static long iMeth_check_sum = 0;

    public static long iMeth1_check_sum = 0;

    public static int iMeth1() {
        int i5 = -11, i6 = 7, i7 = -148, i8 = 179, i9 = -52, i10 = 136, i11 = 211, i12 = 187, i13 = -14, iArr[] = new int[N];
        byte by = 23, byArr[] = new byte[N];
        boolean b = true;
        short s = 25648, s1 = 14807;
        long l = -14L, lArr[] = new long[N];
        double d1 = 69.89217;
        float[] fArr = new float[N];
        FuzzerUtils.init(lArr, -891530984449462909L);
        FuzzerUtils.init(iArr, -39009);
        FuzzerUtils.init(fArr, 31.762F);
        FuzzerUtils.init(byArr, (byte) 35);
        for (i5 = 4; i5 < 83; ++i5) {
            Test.instanceCount = i6;
            Test.instanceCount -= by;
            Test.instanceCount = i6;
            b = Test.bFld;
            for (i7 = 1; i7 < 7; i7 += 3) {
                i8 += (int) Test.fFld;
                Test.fFld = 0.735F;
                for (i9 = 1; i9 < 4; i9++) {
                    if (Test.bFld)
                        continue;
                }
                i6 *= -46;
                for (i11 = 1; i11 < 4; i11++) {
                    if (b)
                        break;
                    i12 &= i11;
                    i10 = -25529;
                    i10 *= (int) Test.dFld;
                    switch((i11 * 5) + 109) {
                        case 441:
                            i12 += i12;
                            Test.dFld = 97;
                            lArr[i7 + 1] = i10;
                            i6 += (((i11 * i9) + i9) - Test.instanceCount);
                            i10 = i8;
                            i6 <<= i7;
                            Test.iArrFld[i5 - 1] -= i7;
                            switch(((i7 >>> 1) % 2) + 66) {
                                case 66:
                                    i12 += (int) Test.instanceCount;
                                    break;
                                case 67:
                                    switch(((i11 % 2) * 5) + 84) {
                                        case 89:
                                            i12 = i8;
                                            Test.instanceCount = i9;
                                            i6 = i12;
                                            s -= (short) i6;
                                            i12 <<= i5;
                                            Test.sArrFld[i11 + 1] %= (short) ((long) (Test.fFld) | 1);
                                            Test.fFld *= -53453;
                                            Test.iArrFld[i7] = i9;
                                            i10 &= by;
                                            Test.fFld -= Test.instanceCount;
                                        case 87:
                                            l += i11;
                                        default:
                                            Test.fFld -= i9;
                                    }
                            }
                            break;
                        case 231:
                            i6 += (i11 + Test.fFld);
                            break;
                        case 350:
                            l += (i11 * i11);
                            break;
                        case 283:
                            i10 = -2;
                        case 400:
                            if (i6 != 0) {
                            }
                            break;
                        case 230:
                            Test.instanceCount ^= -1;
                            break;
                        case 153:
                            Test.dFld = Test.instanceCount;
                        case 156:
                            try {
                                i6 = (Test.iArrFld[i11 + 1] % i11);
                                i6 = (i6 % 24820);
                                i8 = (i11 / 118);
                            } catch (ArithmeticException a_e) {
                            }
                            break;
                        case 268:
                            Test.instanceCount += (13 + (i11 * i11));
                            break;
                        case 330:
                            if (Test.bFld)
                                break;
                            break;
                        case 403:
                            i8 = (int) Test.instanceCount;
                            break;
                        case 365:
                            i12 += i5;
                        case 250:
                            i8 -= -5;
                            break;
                        case 258:
                            Test.iArrFld[i11 + 1] *= 12;
                            break;
                        case 293:
                            i6 = i7;
                            break;
                        case 417:
                            i12 = i6;
                            break;
                        case 136:
                            by = (byte) l;
                            break;
                        case 237:
                            Test.iArrFld[i5 + 1] = i10;
                            break;
                        case 447:
                            Test.dFld *= i6;
                        case 151:
                            l = l;
                            break;
                        case 267:
                            i12 += (int) 99.620F;
                            break;
                        case 119:
                            Test.bFld = false;
                            break;
                        case 184:
                            s = (short) 57819;
                        case 216:
                            i8 <<= i10;
                            break;
                        case 247:
                            iArr[i11 - 1] -= (int) 1761L;
                            break;
                        case 179:
                            by -= (byte) 37726;
                            break;
                        case 190:
                            Test.fFld += Test.instanceCount;
                        case 357:
                            i12 += i10;
                            break;
                        case 197:
                            d1 %= 56;
                            break;
                        case 284:
                            i8 = i12;
                            break;
                        case 324:
                            s = (short) i9;
                            break;
                        case 204:
                            i6 += (i11 * i11);
                        case 232:
                            Test.dArrFld[i7] += i10;
                            break;
                        case 285:
                            i6 <<= (int) Test.instanceCount;
                            break;
                        case 303:
                            try {
                                i6 = (i6 % i8);
                                i10 = (i7 / i11);
                                i6 = (i13 % 181);
                            } catch (ArithmeticException a_e) {
                            }
                            break;
                        case 223:
                            i6 += i9;
                            break;
                        case 394:
                            try {
                                i8 = (i6 / 1572540183);
                                i13 = (i12 / -68);
                                i8 = (i6 / i6);
                            } catch (ArithmeticException a_e) {
                            }
                            break;
                        case 245:
                            i8 -= i6;
                            break;
                        case 414:
                            i12 = i10;
                            break;
                        case 458:
                            Test.iArrFld[i11 + 1] = s;
                            break;
                        case 241:
                            Test.instanceCount *= i9;
                        case 191:
                            i13 -= i12;
                        case 122:
                            Test.fFld -= -42144315L;
                            break;
                        case 325:
                            i6 = s;
                            break;
                        case 110:
                            i8 = i6;
                            break;
                        case 387:
                        case 128:
                            Test.instanceCount += i11;
                            break;
                        case 220:
                            i12 = i10;
                        case 155:
                            lArr[i11 + 1] += l;
                            break;
                        case 404:
                            Test.iArrFld[i11 + 1] += by;
                            break;
                        case 137:
                            i12 = i6;
                            break;
                        case 163:
                            Test.dArrFld = Test.dArrFld;
                            break;
                        case 368:
                            l >>= i11;
                        case 407:
                            fArr = FuzzerUtils.float1array(N, (float) 2.25F);
                            break;
                        case 331:
                            l -= 60294;
                            break;
                        case 406:
                            i6 = -241;
                            break;
                        case 432:
                            Test.fFld *= Test.fFld;
                            break;
                        case 427:
                            i8 *= 6;
                            break;
                        case 159:
                            byArr[i11 + 1] *= (byte) i6;
                            break;
                        case 355:
                            i10 += (((i11 * i6) + i11) - by);
                            break;
                        case 144:
                        case 428:
                            by = (byte) 191;
                        case 384:
                            s1 += (short) i7;
                            break;
                        case 391:
                            if (b)
                                continue;
                        case 410:
                            l = i6;
                            break;
                        case 338:
                            i13 *= (int) d1;
                        case 390:
                        case 189:
                            lArr = lArr;
                        case 378:
                            Test.iArrFld[i7 + 1] = i12;
                            break;
                        case 340:
                            Test.iArrFld[i7] &= (int) l;
                            break;
                    }
                }
            }
        }
        long meth_res = i5 + i6 + by + (b ? 1 : 0) + i7 + i8 + i9 + i10 + i11 + i12 + s + l + Double.doubleToLongBits(d1) + i13 + s1 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(byArr);
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static int iMeth(int i1, int i2) {
        if (ax$0) {
            try {
                java.util.Random ax$3 = new Random(69);
                float ax$1 = ax$3.nextFloat();
                Float ax$2 = new Float(ax$1);
                if (!ax$2.toString().equals(Float.toString(ax$1)))
                    ;
            } catch (Throwable ax$4) {
            } finally {
            }
            return 356600899;
        }
        int i3 = 7, i4 = 14, i14 = -44787, i15 = -42156, iArr1[][] = new int[N][N];
        short s2 = -29946;
        byte by1 = 55;
        float f = 1.365F, fArr1[] = new float[N];
        FuzzerUtils.init(fArr1, 0.11F);
        FuzzerUtils.init(iArr1, -48414);
        switch((((i1 * i2) >>> 1) % 8) + 57) {
            case 57:
                i3 = 1;
                while (++i3 < 79) {
                    if (Test.bFld) {
                        Test.instanceCount += (long) ((Test.fFld - (i3 * i1)) - ((i2 + i2) * (-20910 - (i2 %= 10))));
                        i4 = 1;
                        do {
                            i2 = (int) Test.dFld;
                            Test.iArrFld[i4 - 1] <<= (-(++i1));
                            Test.dArrFld[i4 + 1] *= ((i1 += (int) (i3 + Test.instanceCount)) * iMeth1());
                            Test.iArrFld[i4] *= s2;
                            switch((i3 % 7) + 76) {
                                case 76:
                                    fArr1[i3 + 1] -= i1;
                                    by1 += (byte) (((i4 * i1) + i4) - i2);
                                    if (Test.bFld)
                                        break;
                                    Test.iArrFld = Test.iArrFld;
                                    Test.iArrFld[i3] = (int) Test.instanceCount;
                                    i1 += (((i4 * Test.instanceCount) + Test.instanceCount) - i4);
                                    Test.lArrFld[i3][i3 - 1] <<= i3;
                                    i2 += (int) Test.fFld;
                                    break;
                                case 77:
                                    switch(((i3 >>> 1) % 7) + 115) {
                                        case 115:
                                            for (f = 1; f < 1; ++f) {
                                                i14 *= 216;
                                                Test.fFld -= Test.instanceCount;
                                                if (Test.bFld)
                                                    break;
                                                switch((i3 % 10) + 65) {
                                                    case 65:
                                                        Test.fFld = i14;
                                                        i14 >>= (int) Test.instanceCount;
                                                        switch((i3 % 6) + 49) {
                                                            case 49:
                                                                if (i2 != 0) {
                                                                }
                                                                i1 += (int) ((long) f ^ (long) f);
                                                                Test.instanceCount = i2;
                                                                iArr1 = iArr1;
                                                                Test.instanceCount = Test.instanceCount;
                                                                i14 <<= i4;
                                                                Test.fFld = i14;
                                                                i2 += (-12 + (f * f));
                                                                Test.instanceCount = i4;
                                                                break;
                                                            case 50:
                                                                i1 = (int) Test.instanceCount;
                                                                break;
                                                            case 51:
                                                                i14 += i4;
                                                                break;
                                                            case 52:
                                                                i1 /= (int) (i3 | 1);
                                                            case 53:
                                                                iArr1[(int) (f + 1)][(int) (f)] += (int) f;
                                                                break;
                                                            case 54:
                                                                fArr1[i3] = i2;
                                                                break;
                                                        }
                                                    case 66:
                                                        if (Test.bFld)
                                                            continue;
                                                    case 67:
                                                        Test.instanceCount = Test.instanceCount;
                                                        break;
                                                    case 68:
                                                        Test.lArrFld[i3 - 1][i4 - 1] = i2;
                                                    case 69:
                                                        Test.instanceCount += (long) (((f * i2) + Test.fFld) - i1);
                                                        break;
                                                    case 70:
                                                        fArr1[(int) (f)] = -24558;
                                                        break;
                                                    case 71:
                                                        Test.dFld = i14;
                                                    case 72:
                                                        i1 += (int) Test.fFld;
                                                        break;
                                                    case 73:
                                                        Test.instanceCount = Test.instanceCount;
                                                        break;
                                                    case 74:
                                                        Test.fFld = Test.instanceCount;
                                                        break;
                                                }
                                            }
                                            break;
                                        case 116:
                                            i1 += (i4 - i14);
                                            break;
                                        case 117:
                                            i14 += i4;
                                            break;
                                        case 118:
                                            Test.instanceCount = -4;
                                            break;
                                        case 119:
                                            Test.fFld -= f;
                                        case 120:
                                            Test.dFld *= i2;
                                        case 121:
                                            try {
                                                Test.iArrFld[i4 - 1] = (Test.iArrFld[i3 + 1] / i2);
                                                i2 = (i14 / -40742);
                                                i1 = (i4 % -577839271);
                                            } catch (ArithmeticException a_e) {
                                            }
                                            break;
                                        default:
                                            i1 += i2;
                                    }
                                    break;
                                case 78:
                                    Test.dFld = Test.dFld;
                                    break;
                                case 79:
                                    i2 *= -6868;
                                    break;
                                case 80:
                                    Test.iArrFld[i3] *= i4;
                                    break;
                                case 81:
                                    i15 <<= -38725;
                                    break;
                                case 82:
                                    iArr1[i4][i3] = -14;
                                    break;
                            }
                        } while (++i4 < 7);
                    } else {
                        fArr1[i3] -= i14;
                    }
                }
                break;
            case 58:
                i14 = (int) Test.instanceCount;
                break;
            case 59:
                Test.iArrFld = FuzzerUtils.int1array(N, (int) -4);
                break;
            case 60:
                iArr1[(i1 >>> 1) % N][(i3 >>> 1) % N] += -13;
                break;
            case 61:
                i15 -= (int) -2.256F;
                break;
            case 62:
                Test.instanceCount = i2;
            case 63:
                s2 = (short) i3;
                break;
            case 64:
                Test.iArrFld1 = iArr1;
                break;
        }
        long meth_res = i1 + i2 + i3 + i4 + s2 + by1 + Float.floatToIntBits(f) + i14 + i15 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth(int i) {
        if (ax$10) {
            try {
                java.lang.Object ax$13 = "long Math.subtractExact";
                java.lang.Object ax$11 = "7.485402571116811E-41";
                java.lang.Object[] ax$14 = new Object[100000];
                ax$14[20] = ax$11;
                for (int ax$12 = 0; ax$12 < ax$14.length; ax$12++) {
                    ax$14[ax$12] = (ax$14[20] == ax$13) ? ax$11 : ax$13;
                }
            } catch (Throwable ax$15) {
            } finally {
            }
            return;
        }
        int i17 = -69, i18 = 235, i19 = -20, i20 = -6, i21 = 5, i22 = -14028, i23 = 3, i24 = -1, i25 = -6;
        i -= ((iMeth(i, i) & i17) * i);
        for (i18 = 4; 134 > i18; i18++) {
            for (i20 = 1; i20 < 4; i20++) {
                Test.dArrFld[i20 - 1] = i19;
                for (i22 = 1; i22 < 2; i22++) {
                    Test.fFld += i22;
                    i17 += (i22 ^ (long) Test.fFld);
                    Test.bFld = false;
                    Test.fFld = i20;
                    switch(((i18 % 1) * 5) + 109) {
                        case 111:
                            Test.instanceCount *= i;
                            Test.instanceCount += (i22 - i);
                            i21 += (int) Test.instanceCount;
                            i23 += i22;
                            Test.instanceCount = (long) -70.884F;
                            Test.fFld = i21;
                            Test.instanceCount += (long) Test.dFld;
                            Test.iArrFld1[i18 - 1][i20 + 1] += (int) Test.instanceCount;
                            Test.iArrFld1[i20][i18] <<= i;
                            i >>= i17;
                            i17 *= (int) Test.fFld;
                            if (true)
                                break;
                            i21 = 33933;
                            break;
                    }
                    i23 += 14;
                    i17 = -62686;
                    i21 += i22;
                    Test.fFld -= i20;
                    Test.fFld -= -172;
                    Test.dFld -= i22;
                    if (Test.bFld)
                        break;
                    Test.instanceCount -= -123;
                }
            }
            Test.instanceCount = -8474796770580946732L;
            for (i24 = 1; i24 < 4; i24 += 2) {
                if (Test.bFld) {
                    i21 >>= i20;
                    Test.iArrFld[(-220 >>> 1) % N] >>>= -8;
                }
                i17 += (int) Test.fFld;
            }
        }
        vMeth_check_sum += i + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25;
    }

    public void mainTest(String[] strArr1) {
        if (ax$21) {
            try {
                int ax$23 = 0x8100;
                char[] ax$22 = new char[100];
                int ax$25 = 0x7fbfffff;
                char[] ax$26 = new char[1];
                for (int ax$24 = 0; ax$24 < ax$26.length; ax$24 += 1) {
                    ax$26[ax$24] = (char) ((ax$22[ax$24] & ax$23) >> ax$25);
                }
            } catch (Throwable ax$27) {
            } finally {
            }
            return;
        }
        byte by2 = 81;
        int i26 = 33879, i27 = -64740, i28 = 7;
        {
            java.io.PrintStream ax$18 = System.out;
            java.io.PrintStream ax$19 = System.err;
            java.io.PrintStream ax$20 = new java.io.PrintStream(new java.io.OutputStream() {

                @Override
                public void write(int b) throws java.io.IOException {
                    // DO NOTHING: DISCARD ALL OUTPUTS
                }
            });
            System.setOut(ax$20);
            System.setErr(ax$20);
            try {
                ax$10 = true;
                for (int ax$16 = 0; ax$16 < 9060; ax$16 += 1) vMeth(-373596236);
            } catch (java.lang.Throwable ax$17) {
            } finally {
                ax$10 = false;
            }
            System.setOut(ax$18);
            System.setErr(ax$19);
        }
        vMeth(116);
        by2 -= (byte) Test.instanceCount;
        Test.iArrFld[(i26 >>> 1) % N] = i26;
        for (i27 = 11; i27 < 219; i27++) {
            i26 -= i28;
            Test.instanceCount += (-4 + (i27 * i27));
            Test.dFld = i28;
            try {
                i28 = (23001 / i26);
                i26 = (i27 / -59651);
                i26 = (-5376 % i27);
            } catch (ArithmeticException a_e) {
            }
        }
        FuzzerUtils.out.println("by2 i26 i27 = " + by2 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 = " + i28);
        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," + Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.bFld Test.iArrFld Test.dArrFld = " + (Test.bFld ? 1 : 0) + "," + FuzzerUtils.checkSum(Test.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("Test.sArrFld Test.lArrFld Test.iArrFld1 = " + FuzzerUtils.checkSum(Test.sArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1));
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        if (ax$33) {
            try {
                int ax$34 = 0xFFFFFFFF;
                int[] ax$35 = new int[] { 71994000, 71994000, 12000, 71994000, 71994000, 144000000, 144000000, 72018000, 144000000, 144000000, 71994000, 71994000, 12000, 71994000, 71994000, 72000000, 72000000, 36006000, 72000000, 72000000, 144012000, 144012000, 72030000, 144012000, 144012000, 72000000, 72000000, 36006000, 72000000, 72000000, 499501, 499501, 499501, 499501, 499501, 1000002, 1000002, 1000002, 1000002, 1000002, 499501, 499501, 499501, 499501, 499501, 1001, 1001, 1001, 1001, 1001, 3002, 3002, 3002, 3002, 3002, 1001, 1001, 1001, 1001, 1001, 501, 501, 501, 501, 501, 1502, 1502, 1502, 1502, 1502 };
                int ax$36 = 0x1111;
                ax$34 += ax$35[ax$36 - Integer.MAX_VALUE + 10];
            } catch (Throwable ax$37) {
            } finally {
            }
            return;
        }
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$0 = false;

    private static Boolean ax$10 = false;

    private static Boolean ax$21 = false;

    private static Boolean ax$33 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  vMeth ->  vMeth mainTest
// DEBUG  iMeth ->  iMeth vMeth mainTest
// DEBUG  iMeth1 ->  iMeth1 iMeth vMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
