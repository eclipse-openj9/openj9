// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.concurrent.atomic.AtomicIntegerArray;

public class Test {
    public static final int N = 256;

    public static volatile long instanceCount = -6531471386055500261L;

    public static float fFld = 30.601F;

    public static byte byFld = 78;

    public static int iFld = 1;

    public static volatile short sFld = 6757;

    public static double dFld = -1.8128;

    public static int iFld1 = 8;

    public static long lArrFld[] = new long[N];

    public static float fArrFld[] = new float[N];

    public static int iArrFld[] = new int[N];

    public static volatile int iArrFld1[][] = new int[N][N];

    static {
        FuzzerUtils.init(Test.lArrFld, -1142504409L);
        FuzzerUtils.init(Test.fArrFld, 93.126F);
        FuzzerUtils.init(Test.iArrFld, 166);
        FuzzerUtils.init(Test.iArrFld1, 9);
    }

    public static long iMeth_check_sum = 0;

    public static long iMeth1_check_sum = 0;

    public static long vMeth_check_sum = 0;

    public static void vMeth(int i5, int i6) {
        int i7 = 0;
        int i8 = 17573;
        int i9 = 0;
        int i10 = -10;
        int i11 = 29584;
        int i12 = 49135;
        int i13 = 15146;
        int i14 = -46128;
        int i15 = -12;
        int i16 = 14;
        int iArr[] = new int[N];
        double d1 = -2.111002;
        double dArr[] = new double[N];
        boolean b1 = true;
        float fArr1[] = new float[N];
        FuzzerUtils.init(iArr, 138);
        FuzzerUtils.init(fArr1, -43.238F);
        FuzzerUtils.init(dArr, 1.71566);
        iArr = iArr;
        i6 = ((int) (-12L));
        for (i7 = 10; i7 < 230; i7++) {
            Test.fFld += -21177;
            for (i9 = 1; 3 > i9; i9++) {
                Test.instanceCount += i9 * i9;
                Test.fFld = 190;
                for (i11 = 1; 2 > i11; i11++) {
                    i5 -= ((int) (d1));
                    i5 *= i11;
                    Test.lArrFld[i7 - 1] = i12;
                    i12 += i11;
                }
                for (i13 = 1; i13 < 2; ++i13) {
                    long l3 = 1790L;
                    if (b1) {
                        Test.instanceCount >>= Test.instanceCount;
                        i10 *= Test.byFld;
                        Test.fFld += i12;
                    } else {
                        i8 <<= i14;
                        d1 *= i11;
                        i10 = ((int) (Test.fFld));
                        switch ((i13 * 5) + 112) {
                            case 313 :
                                if (i6 != 0) {
                                    vMeth_check_sum += (((((((((((((((i5 + i6) + i7) + i8) + i9) + i10) + i11) + i12) + Double.doubleToLongBits(d1)) + i13) + i14) + (b1 ? 1 : 0)) + i15) + i16) + FuzzerUtils.checkSum(iArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1))) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                                    return;
                                }
                                i6 |= i13;
                                break;
                            case 218 :
                                d1 = 246;
                                fArr1[i13 + 1] = Test.instanceCount;
                                i14 += ((i13 * Test.instanceCount) + Test.fFld) - Test.fFld;
                                iArr[i13] = i12;
                                Test.byFld = ((byte) (i9));
                                Test.byFld -= ((byte) (i12));
                                i8 = i8;
                                fArr1 = fArr1;
                                i5 = i14;
                                i5 = i9;
                                fArr1[i13 - 1] = i14;
                                break;
                            case 336 :
                                if (i7 != 0) {
                                    vMeth_check_sum += (((((((((((((((i5 + i6) + i7) + i8) + i9) + i10) + i11) + i12) + Double.doubleToLongBits(d1)) + i13) + i14) + (b1 ? 1 : 0)) + i15) + i16) + FuzzerUtils.checkSum(iArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1))) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                                    return;
                                }
                                Test.lArrFld = Test.lArrFld;
                                Test.instanceCount += ((long) (d1));
                                break;
                            case 198 :
                                try {
                                    i12 = i12 % (-30075);
                                    i12 = i10 / iArr[i9 - 1];
                                    i6 = iArr[i13] / i7;
                                } catch (ArithmeticException a_e) {
                                }
                                break;
                            case 450 :
                                if (b1)
                                    continue;

                                break;
                            case 364 :
                                Test.instanceCount = i12;
                                break;
                            case 208 :
                                dArr[i13 - 1] += -52592;
                                break;
                            case 242 :
                                if (b1)
                                    continue;

                            case 325 :
                                Test.instanceCount <<= i12;
                                break;
                            case 174 :
                                i12 = i11;
                                break;
                            case 151 :
                                try {
                                    i14 = i14 % i14;
                                    iArr[i13 + 1] = i11 % i9;
                                    i5 = iArr[i13] % (-134);
                                } catch (ArithmeticException a_e) {
                                }
                                break;
                            case 214 :
                                i8 *= ((int) (1.144F));
                                break;
                            case 152 :
                                Test.lArrFld[i9 - 1] = Test.instanceCount;
                                break;
                            case 246 :
                            case 312 :
                                Test.iFld ^= i7;
                                break;
                            case 388 :
                                i12 *= i8;
                                break;
                            case 252 :
                                i6 += ((int) (2.594F));
                                break;
                            case 144 :
                                Test.sFld += ((short) (i13 * i13));
                                break;
                            case 280 :
                                i14 += ((i13 * Test.fFld) + Test.iFld) - l3;
                                break;
                            case 359 :
                                i14 ^= ((int) (Test.instanceCount));
                                break;
                            case 335 :
                                Test.iFld <<= i11;
                                break;
                            case 125 :
                                i6 += (-69) + (i13 * i13);
                                break;
                            case 182 :
                                i12 += i13 - i10;
                                break;
                            case 128 :
                                iArr[(i14 >>> 1) % N] = i8;
                                break;
                            case 261 :
                                iArr[i9 + 1] = 63263;
                                break;
                            case 230 :
                                i14 *= ((int) (Test.fFld));
                            case 393 :
                                d1 -= i14;
                                break;
                            case 126 :
                                Test.instanceCount /= Test.sFld | 1;
                                break;
                            case 443 :
                                i6 = i6;
                                break;
                            case 227 :
                                d1 *= i9;
                            case 442 :
                                i5 = i11;
                                break;
                            case 192 :
                                Test.byFld >>>= ((byte) (i9));
                                break;
                            case 338 :
                            case 314 :
                                Test.lArrFld[i7] >>>= Test.iFld;
                                break;
                            case 176 :
                                if (b1)
                                    continue;

                                break;
                            case 405 :
                                b1 = true;
                                break;
                            case 202 :
                                if (b1)
                                    break;

                                break;
                            case 363 :
                                Test.fFld = 42.55F;
                            case 434 :
                                i10 -= ((int) (Test.fFld));
                                break;
                            case 233 :
                                Test.iFld = i14;
                            case 385 :
                                i5 *= -11;
                                break;
                            case 318 :
                                i14 += i13;
                            case 193 :
                                i10 += i13 * i13;
                                break;
                            case 172 :
                                l3 |= i10;
                                break;
                            case 332 :
                                Test.lArrFld[i7] += i8;
                                break;
                            case 306 :
                                Test.iFld *= Test.sFld;
                                break;
                            case 414 :
                                iArr[i9] = i12;
                                break;
                            case 340 :
                                d1 = Test.fFld;
                                break;
                            case 360 :
                            case 440 :
                                iArr[i9 - 1] += i12;
                                break;
                            case 116 :
                                Test.fFld += ((i13 * Test.instanceCount) + i11) - l3;
                            case 289 :
                                i6 += i14;
                            case 211 :
                                Test.instanceCount <<= i13;
                                break;
                            case 344 :
                                try {
                                    iArr[i13] = i12 / i13;
                                    i8 = 64142 / i8;
                                    i12 = i5 % Test.iFld;
                                } catch (ArithmeticException a_e) {
                                }
                            case 389 :
                            case 120 :
                                Test.byFld = ((byte) (i8));
                                break;
                            case 148 :
                                i12 *= i7;
                            case 446 :
                                Test.sFld += ((short) (((i13 * i11) + Test.instanceCount) - i11));
                                break;
                            case 216 :
                                Test.sFld += ((short) ((-112) + (i13 * i13)));
                                break;
                            case 342 :
                                i6 += ((i13 * Test.instanceCount) + i9) - Test.byFld;
                                break;
                            case 122 :
                                i8 += i14;
                                break;
                            case 392 :
                                iArr[i9] = -176;
                                break;
                            case 366 :
                                i8 = i14;
                                break;
                            case 135 :
                                if (i12 != 0) {
                                    vMeth_check_sum += (((((((((((((((i5 + i6) + i7) + i8) + i9) + i10) + i11) + i12) + Double.doubleToLongBits(d1)) + i13) + i14) + (b1 ? 1 : 0)) + i15) + i16) + FuzzerUtils.checkSum(iArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1))) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                                    return;
                                }
                            case 191 :
                                Test.fFld *= i10;
                                break;
                            case 157 :
                                Test.lArrFld[i9 - 1] -= i15;
                                break;
                            case 132 :
                                Test.instanceCount <<= i16;
                                break;
                            case 201 :
                                fArr1 = FuzzerUtils.float1array(N, ((float) (5.1022F)));
                                break;
                            case 459 :
                                if (true)
                                    break;

                                break;
                            case 352 :
                            default :
                                Test.instanceCount += i13;
                        }
                    }
                }
            }
        }
        vMeth_check_sum += (((((((((((((((i5 + i6) + i7) + i8) + i9) + i10) + i11) + i12) + Double.doubleToLongBits(d1)) + i13) + i14) + (b1 ? 1 : 0)) + i15) + i16) + FuzzerUtils.checkSum(iArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1))) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static int iMeth1(long l2, boolean b, float f) {
        int i1 = -51595;
        int i2 = 65514;
        int i3 = 149;
        int i4 = 9;
        int i17 = -26624;
        int i18 = 49859;
        int i19 = 2;
        int iArr1[] = new int[N];
        float f1 = 26.201F;
        double d2 = 1.65449;
        FuzzerUtils.init(iArr1, -13);
        for (i1 = 2; i1 < 162; ++i1) {
            for (i3 = 1; i3 < 4; i3++) {
                i4 += i3 - l2;
                vMeth(i17, i4);
                f = l2;
                i4 -= ((int) (Test.instanceCount));
            }
            i17 += i1;
            if (b) {
                Test.instanceCount *= l2;
                if (true) {
                    i18 = 1;
                    while ((++i18) < 4) {
                        for (f1 = 1; 1 > f1; f1++) {
                            Test.instanceCount += ((long) (((f1 * Test.instanceCount) + i3) - Test.byFld));
                            Test.iFld *= -118;
                            i19 += i1;
                            i2 -= ((int) (Test.instanceCount));
                            switch (((i1 % 8) * 5) + 39) {
                                case 64 :
                                    Test.iFld += (-31) + (f1 * f1);
                                    d2 += Test.iFld;
                                    d2 *= 7L;
                                    d2 += f;
                                    l2 -= i3;
                                    switch (((i3 >>> 1) % 9) + 94) {
                                        case 94 :
                                            l2 *= ((long) (d2));
                                            Test.sFld >>= ((short) (Test.iFld));
                                            Test.fArrFld[((int) (f1 - 1))] -= i4;
                                            i17 = ((int) (f1));
                                            i4 += ((int) (f1 * f1));
                                            break;
                                        case 95 :
                                            i19 = i2;
                                            Test.sFld |= ((short) (i2));
                                            break;
                                        case 96 :
                                            Test.instanceCount = ((long) (d2));
                                            i4 += ((int) (((long) (f1)) | l2));
                                            i4 += ((int) (((f1 * Test.instanceCount) + Test.iFld) - Test.fFld));
                                            try {
                                                i2 = (-44694) % i2;
                                                Test.iFld = iArr1[i18] / (-44054);
                                                i2 = i18 % Test.iFld;
                                            } catch (ArithmeticException a_e) {
                                            }
                                            Test.iFld += ((int) (f1 - i4));
                                            i17 += ((int) (f1 - i17));
                                            i17 = 254;
                                        case 97 :
                                            if (true)
                                                break;

                                            break;
                                        case 98 :
                                            i2 ^= -1;
                                            break;
                                        case 99 :
                                            i19 = ((int) (l2));
                                            break;
                                        case 100 :
                                            l2 += Test.instanceCount;
                                            break;
                                        case 101 :
                                            Test.iFld /= ((int) (i1 | 1));
                                            break;
                                        case 102 :
                                            i19 %= ((int) (i19 | 1));
                                            break;
                                        default :
                                            i2 -= ((int) (60.99625));
                                    }
                                    break;
                                case 55 :
                                    i2 -= Test.iFld;
                                case 79 :
                                    try {
                                        i4 = i17 / i1;
                                        iArr1[((int) (f1 + 1))] = i4 / 221;
                                        i4 = iArr1[((int) (f1))] % (-244);
                                    } catch (ArithmeticException a_e) {
                                    }
                                case 40 :
                                    i19 >>= 10;
                                    break;
                                case 75 :
                                    l2 *= Test.instanceCount;
                                    break;
                                case 65 :
                                    iArr1[((int) (f1 - 1))] += Test.iFld;
                                    break;
                                case 44 :
                                case 45 :
                                    Test.instanceCount += Test.byFld;
                                    break;
                            }
                        }
                    }
                } else {
                    l2 += i1 * i1;
                }
            } else if (true) {
                Test.lArrFld[i1 + 1] = i2;
            } else {
                i17 -= i3;
            }
        }
        long meth_res = (((((((((((l2 + (b ? 1 : 0)) + Float.floatToIntBits(f)) + i1) + i2) + i3) + i4) + i17) + i18) + Float.floatToIntBits(f1)) + i19) + Double.doubleToLongBits(d2)) + FuzzerUtils.checkSum(iArr1);
        iMeth1_check_sum += meth_res;
        return ((int) (meth_res));
    }

    public static int iMeth(long l, long l1) {
        if (Test.ax$0) {
            final int ax$5 = Test.iFld;
            byte[] ax$1 = new byte[0];
            byte[] ax$2 = new byte[]{ ((byte) (44)), ((byte) (25)), ((byte) (-46)), ((byte) (-113)), ((byte) (-84)), ((byte) (53)) };
            Test.AxOutputRedirectionHelper.redirect();
            try {
                if (ax$1[iFld] != ax$2[iFld]);
            } catch (Throwable ax$4) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            Test.iFld = ax$5;
            return 120045262;
        }
        int i = 15263;
        int i20 = 11;
        int i21 = -5;
        int i22 = -150;
        int i23 = -5;
        int i24 = -2;
        int iArr2[] = new int[N];
        double d = 0.66792;
        double dArr1[] = new double[N];
        boolean b2 = false;
        float f2 = -73.682F;
        float fArr[] = new float[N];
        FuzzerUtils.init(fArr, 99.768F);
        FuzzerUtils.init(dArr1, -9.37529);
        FuzzerUtils.init(iArr2, -3053);
        l1 *= ((long) (((i = ((int) (l1))) * Math.abs(i)) - ((d + i) - (++i))));
        fArr[(i >>> 1) % N] -= iMeth1(l, b2, Test.fFld) * (-83);
        i20 = 1;
        while ((++i20) < 152) {
            i21 = 1;
            while ((++i21) < 4) {
                i -= Test.sFld;
                dArr1[i20 - 1] += i;
                i -= ((int) (Test.fFld));
                Test.iFld += i21;
                try {
                    Test.iFld = i21 / 5286;
                    Test.iFld = i % 73;
                    i = (-511801680) % i21;
                } catch (ArithmeticException a_e) {
                }
                Test.iFld = ((int) (4L));
                i += i21 * i21;
                switch (((i20 % 4) * 5) + 16) {
                    case 28 :
                        Test.iFld ^= ((int) (l1));
                        break;
                    case 20 :
                        i -= i;
                        Test.fFld = i21;
                        dArr1[i21 + 1] += i;
                        for (f2 = 1; 1 > f2; f2++) {
                            l1 *= i22;
                            Test.iFld <<= i;
                            Test.iFld += ((int) (l1));
                            Test.instanceCount += ((long) (f2 + i22));
                            i22 = i;
                            iArr2[(i22 >>> 1) % N] -= i23;
                            Test.fArrFld[((int) (f2 + 1))] = f2;
                            Test.iFld += ((int) (l));
                            i <<= i;
                            i23 += ((int) (1.648F));
                            i22 *= i20;
                            d = l;
                        }
                        if (b2) {
                            iArr2[i21 + 1] ^= ((int) (0L));
                            l1 *= Test.instanceCount;
                            i23 <<= ((int) (l1));
                            Test.iFld = ((int) (l));
                            if (i23 != 0) {
                            }
                            i22 += i21;
                            i24 = -59422;
                        } else if (b2) {
                            l = i24;
                        }
                        break;
                    case 24 :
                        l += l1;
                        break;
                    case 33 :
                        dArr1[i21] = i22;
                        break;
                    default :
                }
            }
        }
        long meth_res = ((((((((((((l + l1) + i) + Double.doubleToLongBits(d)) + (b2 ? 1 : 0)) + i20) + i21) + Float.floatToIntBits(f2)) + i22) + i23) + i24) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1))) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return ((int) (meth_res));
    }

    public void mainTest(String[] strArr1) {
        long l4 = 1138609216L;
        int i25 = 14;
        int i26 = 16;
        int i27 = -14;
        int i28 = 11;
        int i29 = 3;
        int i30 = 41;
        int i31 = -11201;
        int i32 = 32717;
        int i33 = 149;
        boolean b3 = false;
        boolean bArr[] = new boolean[N];
        FuzzerUtils.init(bArr, true);
        {
            final int ax$18 = i29;
            final int ax$19 = i28;
            final int ax$20 = i33;
            final int ax$21 = i25;
            try {
                AtomicIntegerArray ax$8 = null;
                AtomicIntegerArray ax$9 = null;
                for (int ax$6 = -648; ax$6 < (-648 + 15599); ax$6 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        for (int ax$13 = 0; ax$13 < (i29 - i25); ax$13 += 1) {
                            ax$8.lazySet(ax$13 + i25, i25);
                            ax$9.lazySet(ax$13 + i25, i28);
                        }
                    } catch (Throwable ax$14) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$0 = true;
                    iMeth(-5700876830983435599L, -1791619197570156666L);
                    Test.ax$0 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                    } catch (Throwable ax$17) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                i29 = ax$18;
                i28 = ax$19;
                i33 = ax$20;
                i25 = ax$21;
            }
        }
        iMeth(2546490214794366402L, l4);
        for (i25 = 117; i25 > 4; i25--) {
            for (i27 = 1; i27 < 45; i27 += 2) {
                Test.fFld += Test.iFld;
                l4 += ((i27 * i27) + i27) - i28;
                switch (((8 >>> 1) % 6) + 40) {
                    case 40 :
                        Test.instanceCount -= i25;
                        l4 -= i27;
                        Test.iFld = ((int) (Test.instanceCount));
                        Test.instanceCount = ((long) (Test.dFld));
                        break;
                    case 41 :
                    case 42 :
                        i29 = 1;
                        do {
                            i26 = ((int) (l4));
                            Test.iFld = ((int) (l4));
                            Test.iFld >>>= i27;
                            try {
                                i28 = (-27636) / Test.iArrFld[i29 + 1];
                                i26 = i29 % i26;
                                i26 = i25 / i26;
                            } catch (ArithmeticException a_e) {
                            }
                            Test.iArrFld1 = FuzzerUtils.int2array(N, ((int) (25946)));
                            i26 += i29 + i26;
                            Test.dFld = 33.102F;
                            i26 -= ((int) (Test.instanceCount));
                            Test.iFld -= i28;
                            Test.fArrFld[i25] += Test.iFld1;
                        } while ((++i29) < 3 );
                        i28 <<= ((int) (-2L));
                        l4 += i27 + Test.iFld;
                        Test.fFld += Test.iFld1;
                        Test.iArrFld1[i27][i27 - 1] = i25;
                    case 43 :
                        i30 = 1;
                        do {
                            Test.fFld += 1.873F + (i30 * i30);
                            Test.iFld1 <<= 75;
                            Test.instanceCount *= ((long) (Test.dFld));
                        } while ((++i30) < 3 );
                        if (b3) {
                            Test.iFld1 += i27 - Test.iFld1;
                            Test.fFld *= Test.iFld;
                            for (i31 = 1; i31 < 3; i31++) {
                                Test.iArrFld1[i27 + 1][i27 + 1] = Test.iFld;
                                Test.iFld = 13;
                                switch (((i30 >>> 1) % 2) + 80) {
                                    case 80 :
                                        Test.instanceCount += i31 * i31;
                                        i32 += 12;
                                        i26 += ((int) (2.1008F + (i31 * i31)));
                                        break;
                                    case 81 :
                                        Test.iFld1 |= i28;
                                        Test.lArrFld[i25 - 1] += ((long) (Test.fFld));
                                        i32 <<= i27;
                                        if (b3) {
                                            switch (((i25 % 5) * 5) + 31) {
                                                case 44 :
                                                    Test.iFld1 -= -241;
                                                    Test.fFld += i31 * i26;
                                                    Test.iFld1 += (-45273) + (i31 * i31);
                                                    Test.iFld1 += Test.sFld;
                                                    Test.dFld += 8432;
                                                    b3 = false;
                                                    Test.byFld = ((byte) (i28));
                                                    i28 += ((int) (Test.fFld));
                                                    Test.fArrFld = Test.fArrFld;
                                                    Test.fFld += Test.instanceCount;
                                                    Test.iFld += i31 * i31;
                                                    if (b3)
                                                        break;

                                                    Test.iFld = ((int) (Test.fFld));
                                                    Test.lArrFld[i25 + 1] = i29;
                                                    switch (((i25 % 2) * 5) + 116) {
                                                        case 118 :
                                                            Test.dFld = i25;
                                                            l4 = ((long) (1.392F));
                                                            Test.iFld1 -= i32;
                                                            Test.instanceCount = i31;
                                                            Test.iArrFld[i27 - 1] &= i28;
                                                            i28 += i31;
                                                            l4 += ((i31 * Test.iFld1) + i29) - Test.instanceCount;
                                                            i32 = i27;
                                                            Test.fFld = Test.iFld1;
                                                            i28 >>>= 6637;
                                                            b3 = b3;
                                                        case 117 :
                                                            switch ((i27 % 10) + 54) {
                                                                case 54 :
                                                                    i26 = i26;
                                                                    l4 *= -234;
                                                                    bArr[i25 + 1] = b3;
                                                                    try {
                                                                        i26 = 510136157 / i29;
                                                                        i28 = i27 / 128;
                                                                        i26 = 44971 / i32;
                                                                    } catch (ArithmeticException a_e) {
                                                                    }
                                                                    break;
                                                                case 55 :
                                                                    Test.dFld = Test.iFld;
                                                                    break;
                                                                case 56 :
                                                                    Test.iArrFld1[i31] = FuzzerUtils.int1array(N, ((int) (198)));
                                                                case 57 :
                                                                    Test.iArrFld[i31 + 1] = ((int) (l4));
                                                                    break;
                                                                case 58 :
                                                                    Test.instanceCount = i29;
                                                                    break;
                                                                case 59 :
                                                                    Test.fFld -= i25;
                                                                    break;
                                                                case 60 :
                                                                    l4 = i28;
                                                                case 61 :
                                                                    Test.instanceCount *= 35416;
                                                                    break;
                                                                case 62 :
                                                                    l4 += Test.iFld1;
                                                                    break;
                                                                case 63 :
                                                                    Test.fFld -= ((float) (Test.dFld));
                                                                    break;
                                                            }
                                                        default :
                                                            Test.iFld1 -= ((int) (Test.fFld));
                                                    }
                                                    break;
                                                case 49 :
                                                    Test.instanceCount += Test.iFld1;
                                                    break;
                                                case 45 :
                                                    b3 = b3;
                                                case 33 :
                                                    Test.iFld1 = i28;
                                                case 52 :
                                                    Test.iArrFld[i31] = i29;
                                                    break;
                                            }
                                        } else if (true) {
                                            Test.instanceCount >>= Test.iFld;
                                        } else if (b3) {
                                            try {
                                                i33 = i31 / (-219);
                                                i26 = i30 % Test.iFld1;
                                                i28 = 54 % Test.iFld;
                                            } catch (ArithmeticException a_e) {
                                            }
                                        } else {
                                            Test.iArrFld[(Test.iFld1 >>> 1) % N] -= i25;
                                        }
                                        break;
                                    default :
                                        try {
                                            i32 = Test.iArrFld1[i31 - 1][i27] / Test.iFld;
                                            Test.iFld = i33 % 35593;
                                            Test.iFld1 = i29 % i29;
                                        } catch (ArithmeticException a_e) {
                                        }
                                }
                            }
                        } else if (true) {
                            i28 += i27 - Test.iFld1;
                        } else {
                            Test.iFld *= ((int) (2445289468273145349L));
                        }
                        break;
                    case 44 :
                        Test.iFld += ((i27 * i29) + i28) - Test.instanceCount;
                        break;
                    case 45 :
                        l4 += i27;
                }
            }
        }
        FuzzerUtils.out.println((((("l4 i25 i26 = " + l4) + ",") + i25) + ",") + i26);
        FuzzerUtils.out.println((((("i27 i28 i29 = " + i27) + ",") + i28) + ",") + i29);
        FuzzerUtils.out.println((((("i30 i31 i32 = " + i30) + ",") + i31) + ",") + i32);
        FuzzerUtils.out.println((((("b3 i33 bArr = " + (b3 ? 1 : 0)) + ",") + i33) + ",") + FuzzerUtils.checkSum(bArr));
        FuzzerUtils.out.println((((("Test.instanceCount Test.fFld Test.byFld = " + Test.instanceCount) + ",") + Float.floatToIntBits(Test.fFld)) + ",") + Test.byFld);
        FuzzerUtils.out.println((((("Test.iFld Test.sFld Test.dFld = " + Test.iFld) + ",") + Test.sFld) + ",") + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println((((("Test.iFld1 Test.lArrFld Test.fArrFld = " + Test.iFld1) + ",") + FuzzerUtils.checkSum(Test.lArrFld)) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println((("Test.iArrFld Test.iArrFld1 = " + FuzzerUtils.checkSum(Test.iArrFld)) + ",") + FuzzerUtils.checkSum(Test.iArrFld1));
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    static Boolean ax$0 = false;

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }
}
