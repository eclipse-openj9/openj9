// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = -23497L;

    public static byte byFld = -45;

    public static volatile int iFld = -13;

    public static boolean bFld = true;

    public static short sFld = -6;

    public int iFld1 = 139;

    public static byte[] byArrFld = new byte[N];

    public static volatile long[] lArrFld = new long[N];

    public static float[] fArrFld = new float[N];

    static {
        FuzzerUtils.init(Test.byArrFld, (byte) -51);
        FuzzerUtils.init(Test.lArrFld, -1899936731L);
        FuzzerUtils.init(Test.fArrFld, 32.513F);
    }

    public static long lMeth_check_sum = 0;

    public static long vMeth_check_sum = 0;

    public static long dMeth_check_sum = 0;

    public static double dMeth(float f2, double d1) {
        int i16 = -10, i17 = -33678, i18 = 59, i19 = 120, i20 = -50576, i21 = -63910, iArr2[] = new int[N];
        short s = 31788;
        double[] dArr = new double[N];
        FuzzerUtils.init(iArr2, -179);
        FuzzerUtils.init(dArr, 43.58636);
        Test.iFld = (int) f2;
        i16 = 1;
        do {
            Test.instanceCount += i16;
            switch((i16 % 8) + 111) {
                case 111:
                    f2 += (-68.388F + (i16 * i16));
                    break;
                case 112:
                    for (i17 = 5; i17 > 1; i17 -= 2) {
                        Test.iFld -= 10663;
                        Test.iFld += (i17 * i17);
                        Test.iFld += (((i17 * f2) + i18) - Test.instanceCount);
                        switch(((i17 % 5) * 5) + 100) {
                            case 120:
                                for (i19 = 1; i19 < 3; i19++) {
                                    try {
                                        Test.iFld = (iArr2[i16] % iArr2[i17]);
                                        i20 = (iArr2[i19 - 1] / i17);
                                        i20 = (32075 % i20);
                                    } catch (ArithmeticException a_e) {
                                    }
                                    i20 <<= Test.iFld;
                                    i18 &= i20;
                                    Test.iFld += (int) Test.instanceCount;
                                    i20 = i17;
                                    i18 = 115;
                                    i20 += i19;
                                    if (i20 != 0) {
                                    }
                                    Test.lArrFld[i19 - 1] -= Test.iFld;
                                    i18 += (i19 * i19);
                                    i18 += i17;
                                    dArr[i16 + 1] = 14L;
                                    i20 -= 12;
                                    Test.iFld += Test.byFld;
                                    Test.instanceCount >>= i18;
                                }
                                i21 = 1;
                                while (++i21 < 3) {
                                    f2 += (i21 - i19);
                                    f2 += (i21 - i17);
                                    iArr2[i21] = i18;
                                    iArr2[i21] -= (int) d1;
                                    try {
                                        iArr2[i16 - 1] = (i20 / i21);
                                        iArr2[i16 + 1] = (-134 / i16);
                                        iArr2[i17] = (44642 % i20);
                                    } catch (ArithmeticException a_e) {
                                    }
                                    i20 &= s;
                                }
                                i18 += (34439 + (i17 * i17));
                                if (Test.iFld != 0) {
                                }
                                Test.iFld = (int) Test.instanceCount;
                                Test.iFld *= i21;
                                break;
                            case 115:
                                i20 = Test.iFld;
                            case 123:
                                i18 = -12;
                                break;
                            case 103:
                                Test.iFld += -8;
                            case 125:
                                Test.iFld -= i21;
                                break;
                        }
                    }
                    break;
                case 113:
                    i20 += i16;
                    break;
                case 114:
                    iArr2[i16 + 1] = i16;
                    break;
                case 115:
                    i20 = i16;
                    break;
                case 116:
                    Test.iFld >>>= -7;
                    break;
                case 117:
                    if (Test.bFld)
                        continue;
                case 118:
                    d1 = i21;
                    break;
                default:
                    Test.instanceCount = (long) 2.251F;
            }
        } while (++i16 < 101);
        long meth_res = Float.floatToIntBits(f2) + Double.doubleToLongBits(d1) + i16 + i17 + i18 + i19 + i20 + i21 + s + FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        dMeth_check_sum += meth_res;
        return (double) meth_res;
    }

    public static void vMeth(float f1, int i12, int i13) {
        if (ax$0) {
            int ax$2 = i13;
            int ax$3 = i12;
            try {
                int[][] ax$1 = new int[1][1];
                i13 += ax$1[i12][16] + /* = 0 */
                ax$1[i12][17];
            } catch (Throwable ax$4) {
            } finally {
                i13 = ax$2;
                i12 = ax$3;
            }
            return;
        }
        int i14 = -169, i15 = 9, i22 = 58885, i23 = 22416, i24 = 228, i25 = -8887, i26 = 1, i27 = -11, i28 = 13, iArr1[] = new int[N];
        float f3 = 1.950F, f4 = 2.266F, fArr1[] = new float[N];
        double d2 = 0.44932;
        byte by = 98;
        short s1 = 31915;
        FuzzerUtils.init(iArr1, 0);
        FuzzerUtils.init(fArr1, 0.156F);
        Test.byFld = (byte) iArr1[(-3 >>> 1) % N];
        for (i14 = 4; 124 > i14; i14++) {
            dMeth(f3, d2);
            iArr1[i14] = Test.iFld;
            for (i22 = 1; i22 < 5; ++i22) {
                i12 += (i22 ^ Test.instanceCount);
                i23 -= (int) Test.instanceCount;
                Test.instanceCount *= (long) f3;
            }
        }
        iArr1[(57304 >>> 1) % N] -= (int) d2;
        iArr1[(i13 >>> 1) % N] += i14;
        Test.byFld = (byte) i23;
        for (i24 = 2; i24 < 126; ++i24) {
            i23 <<= (int) Test.instanceCount;
            for (i26 = 5; 1 < i26; i26 -= 2) {
                i27 &= by;
                i27 += (i26 * i26);
                try {
                    iArr1[i26 - 1] = (-621 % iArr1[i24 - 1]);
                    iArr1[i24 + 1] = (-2092737267 % i25);
                    i23 = (i27 % i14);
                } catch (ArithmeticException a_e) {
                }
                Test.instanceCount += (long) f1;
                switch(((i24 % 1) * 5) + 112) {
                    case 113:
                        Test.instanceCount &= i26;
                        i27 += i26;
                        break;
                    default:
                        s1 *= (short) i12;
                        i27 = i13;
                        if (Test.bFld) {
                        } else if (false) {
                            i28 = 1;
                            do {
                                f4 += (-49203 + (i28 * i28));
                                i25 = i28;
                                i23 *= Test.byFld;
                                i23 *= i25;
                                Test.bFld = Test.bFld;
                                fArr1[i24] = -54929L;
                                i12 <<= i12;
                            } while (++i28 < 3);
                            switch(((i26 % 3) * 5) + 105) {
                                case 106:
                                    if (Test.bFld) {
                                        Test.iFld >>>= (int) -10L;
                                        i27 = i23;
                                        iArr1[i26 + 1] *= 11;
                                    }
                                case 116:
                                    i27 -= i25;
                                    break;
                                case 107:
                                    i15 = (int) Test.instanceCount;
                            }
                        } else if (Test.bFld) {
                            i12 *= (int) f1;
                        } else {
                            f3 += i28;
                        }
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i12 + i13 + i14 + i15 + Float.floatToIntBits(f3) + Double.doubleToLongBits(d2) + i22 + i23 + i24 + i25 + i26 + i27 + by + s1 + i28 + Float.floatToIntBits(f4) + FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static long lMeth(int i1, int i2, int i3) {
        if (ax$10) {
            try {
                boolean ax$12 = false;
                // 'incoming' must have a use at both back edges.
                boolean ax$11 = ax$12;
                while (Runtime.getRuntime() != null) {
                    // beat pre-header creation
                    System.nanoTime();
                    while (ax$11) {
                    }
                    // beat back edge splitting
                    System.nanoTime();
                }
            } catch (Throwable ax$13) {
            } finally {
            }
            return -5288716607346993075L;
        }
        double d = 1.61811;
        int i4 = -53694, i5 = 78, i6 = -12, i7 = 4044, i8 = -3, i9 = 88, i10 = -1, i11 = 35403, iArr[] = new int[N];
        float f = 2.729F, fArr[][] = new float[N][N];
        long[] lArr = new long[N];
        FuzzerUtils.init(fArr, -1.52F);
        FuzzerUtils.init(iArr, 176);
        FuzzerUtils.init(lArr, 95L);
        i3 -= ((i3++) * (++i3));
        i2 -= (int) Test.instanceCount;
        d = ((Integer.reverseBytes(i1) * (i1--)) + (Test.instanceCount--));
        for (i4 = 6; 223 > i4; ++i4) {
            fArr[i4][i4 + 1] += ((++Test.byFld) + (--iArr[i4 - 1]));
            for (i6 = 1; i6 < 3; i6++) {
                Test.byFld = (byte) (Test.instanceCount--);
                lArr[i6 - 1] -= 14;
            }
            d = (-(-(f * 81)));
            Test.iFld = (++Test.byFld);
            for (i8 = 1; i8 < 3; i8 += 2) {
                for (i10 = 1; i10 < 3; i10++) {
                    int i29 = 2;
                    switch(((i4 % 8) * 5) + 63) {
                        case 73:
                            i11 = (--Test.byArrFld[i4 - 1]);
                            lArr[i10 + 1] *= (long) (-((f + i5) * (-(Test.instanceCount * Test.byFld))));
                            {
                                java.io.PrintStream ax$7 = System.out;
                                java.io.PrintStream ax$8 = System.err;
                                java.io.PrintStream ax$9 = new java.io.PrintStream(new java.io.OutputStream() {

                                    @Override
                                    public void write(int b) throws java.io.IOException {
                                        // DO NOTHING: DISCARD ALL OUTPUTS
                                    }
                                });
                                System.setOut(ax$9);
                                System.setErr(ax$9);
                                try {
                                    ax$0 = true;
                                    for (int ax$5 = 0; ax$5 < 8931; ax$5 += 1) vMeth((float) 0.3911261743116804, 810760242, -1951328271);
                                } catch (java.lang.Throwable ax$6) {
                                } finally {
                                    ax$0 = false;
                                }
                                System.setOut(ax$7);
                                System.setErr(ax$8);
                            }
                            vMeth(0.90F, -8, i4);
                            Test.byFld += (byte) (((i10 * Test.instanceCount) + i2) - Test.sFld);
                            break;
                        case 95:
                            i1 -= (int) f;
                            iArr[i4] -= (int) Test.instanceCount;
                            i29 <<= i8;
                            i2 += (((i10 * i10) + i1) - Test.byFld);
                            iArr[i10] = (int) d;
                            break;
                        case 96:
                            i2 += i10;
                            i9 <<= i10;
                            Test.iFld = i9;
                            fArr[i10 + 1] = fArr[i8 + 1];
                            if (i1 != 0) {
                            }
                            Test.byFld = (byte) f;
                            Test.instanceCount -= i29;
                            if (Test.bFld) {
                                i29 |= i10;
                                lArr = lArr;
                                i29 *= (int) d;
                                i2 += (int) Test.instanceCount;
                                if (i9 != 0) {
                                }
                                i7 |= i7;
                                iArr[i4] <<= i2;
                            } else {
                                i3 -= 81;
                            }
                            break;
                        case 87:
                            f = i5;
                            break;
                        case 84:
                            i29 <<= (int) Test.instanceCount;
                            break;
                        case 71:
                            i9 += i10;
                            break;
                        case 86:
                            f = f;
                            break;
                        case 80:
                            iArr = FuzzerUtils.int1array(N, (int) 55);
                    }
                }
            }
        }
        long meth_res = i1 + i2 + i3 + Double.doubleToLongBits(d) + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + i8 + i9 + i10 + i11 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public void mainTest(String[] strArr1) {
        int i = -7, i30 = 99, i31 = 597, i32 = 93, i33 = 6108, i34 = 11530, i35 = -98, i36 = -3, i37 = 0, i38 = 64634, iArr3[] = new int[N];
        float f5 = 0.574F, f6 = 76.70F;
        double d3 = -102.48144, dArr1[] = new double[N];
        FuzzerUtils.init(iArr3, -2);
        FuzzerUtils.init(dArr1, 2.25912);
        i &= (int) lMeth(Test.iFld, i, -9);
        iArr3[(-89 >>> 1) % N] %= 5;
        for (i30 = 1; i30 < 79; i30 += 3) {
            for (i32 = 4; i32 < 193; ++i32) {
                i33 %= -119;
                i33 += (i32 + i31);
                iArr3[i32 + 1] -= i33;
                for (i34 = 1; 2 > i34; i34++) {
                    if (Test.bFld) {
                        i33 >>= Test.iFld;
                        i33 = i;
                        i += (49881 + (i34 * i34));
                        Test.instanceCount -= Test.instanceCount;
                        switch((i34 % 4) + 66) {
                            case 66:
                                switch((i30 % 8) + 83) {
                                    case 83:
                                    case 84:
                                        f5 = i30;
                                        d3 = i;
                                        i = (int) Test.instanceCount;
                                        break;
                                    case 85:
                                        i35 += i34;
                                        i31 <<= (int) Test.instanceCount;
                                        switch((((Test.iFld >>> 1) % 2) * 5) + 43) {
                                            case 50:
                                                try {
                                                    i31 = (iArr3[i30] / Test.iFld);
                                                    i35 = (i31 % -142);
                                                    i = (-1274724727 / i);
                                                } catch (ArithmeticException a_e) {
                                                }
                                                i31 -= (int) f5;
                                                Test.lArrFld[i30 - 1] += i33;
                                                if (Test.bFld)
                                                    continue;
                                                Test.instanceCount += (-7209836765168457148L + (i34 * i34));
                                                Test.iFld -= (int) f6;
                                                i33 = (int) 255111934L;
                                                i35 += i34;
                                                break;
                                            case 44:
                                                switch(((i33 >>> 1) % 2) + 45) {
                                                    case 45:
                                                        i = i30;
                                                        i35 &= 14;
                                                        i33 *= (int) d3;
                                                        iArr3[i30 + 1] = Test.iFld;
                                                        Test.lArrFld[i32 - 1] = 13;
                                                        i35 += i34;
                                                        i = i33;
                                                        i += (((i34 * Test.instanceCount) + f5) - Test.instanceCount);
                                                        Test.instanceCount = i;
                                                        iArr3[i32] <<= iFld1;
                                                        f5 += i36;
                                                        i35 -= Test.sFld;
                                                        break;
                                                    case 46:
                                                        f6 += Test.iFld;
                                                        Test.fArrFld[i34] *= 27141;
                                                        i = Test.iFld;
                                                        Test.byFld += (byte) (((i34 * i32) + i34) - i35);
                                                        switch(((i30 % 5) * 5) + 85) {
                                                            case 101:
                                                                Test.instanceCount += Test.iFld;
                                                                break;
                                                            case 97:
                                                                f5 -= Test.instanceCount;
                                                                iArr3 = iArr3;
                                                                if (Test.bFld) {
                                                                    i35 += (int) Test.instanceCount;
                                                                    dArr1[i30 + 1] -= i31;
                                                                    Test.lArrFld[i34 + 1] -= i35;
                                                                    try {
                                                                        i35 = (39298 % iFld1);
                                                                        i33 = (76 % i33);
                                                                        i31 = (45 % i33);
                                                                    } catch (ArithmeticException a_e) {
                                                                    }
                                                                    try {
                                                                        i33 = (i36 / i);
                                                                        iArr3[i34 + 1] = (-7710 / i36);
                                                                        i36 = (-140 / iArr3[i34]);
                                                                    } catch (ArithmeticException a_e) {
                                                                    }
                                                                    Test.iFld += i34;
                                                                    iArr3[i32 + 1] = -159;
                                                                    i31 += (((i34 * i31) + i34) - Test.instanceCount);
                                                                    switch((i32 % 1) + 107) {
                                                                        case 107:
                                                                            iArr3[i30] >>>= (int) Test.instanceCount;
                                                                            i33 += (int) Test.instanceCount;
                                                                            switch((i30 % 9) + 27) {
                                                                                case 27:
                                                                                    Test.instanceCount += -10782L;
                                                                                    switch(((i30 >>> 1) % 1) + 7) {
                                                                                        case 7:
                                                                                            i31 += (((i34 * Test.instanceCount) + iFld1) - i33);
                                                                                            i += (i34 ^ (long) f5);
                                                                                            Test.sFld <<= (short) 55026L;
                                                                                            i /= 32;
                                                                                            Test.instanceCount += Test.instanceCount;
                                                                                            Test.iFld = 30;
                                                                                            iArr3[i34 + 1] += i30;
                                                                                            Test.lArrFld[i32 + 1] = 32343L;
                                                                                            Test.iFld = 11;
                                                                                            i35 += (i34 ^ i30);
                                                                                            break;
                                                                                    }
                                                                                    break;
                                                                                case 28:
                                                                                    i = (int) d3;
                                                                                    break;
                                                                                case 29:
                                                                                    if (Test.bFld)
                                                                                        continue;
                                                                                    break;
                                                                                case 30:
                                                                                    i += (7 + (i34 * i34));
                                                                                    break;
                                                                                case 31:
                                                                                    i >>= Test.byFld;
                                                                                    break;
                                                                                case 32:
                                                                                case 33:
                                                                                    d3 *= 39;
                                                                                case 34:
                                                                                    Test.instanceCount += iFld1;
                                                                                    break;
                                                                                case 35:
                                                                                    Test.sFld += (short) (i34 * i34);
                                                                                    break;
                                                                                default:
                                                                                    Test.instanceCount += i30;
                                                                            }
                                                                            break;
                                                                        default:
                                                                            if (true)
                                                                                break;
                                                                    }
                                                                } else if (Test.bFld) {
                                                                    try {
                                                                        i35 = (30515 % iFld1);
                                                                        iArr3[i30 - 1] = (51 / i31);
                                                                        i36 = (-40 % i32);
                                                                    } catch (ArithmeticException a_e) {
                                                                    }
                                                                }
                                                                break;
                                                            case 92:
                                                                Test.byFld = (byte) Test.instanceCount;
                                                                break;
                                                            case 110:
                                                                if (Test.bFld)
                                                                    continue;
                                                            case 106:
                                                                if (Test.bFld)
                                                                    break;
                                                                break;
                                                            default:
                                                                i35 += iFld1;
                                                        }
                                                    default:
                                                        Test.byFld += (byte) (i34 + i36);
                                                }
                                                break;
                                            default:
                                                i31 += i34;
                                        }
                                    case 86:
                                        Test.lArrFld[i30 - 1] &= i35;
                                        break;
                                    case 87:
                                        i31 += (((i34 * Test.instanceCount) + iFld1) - i37);
                                        break;
                                    case 88:
                                        i31 = (int) Test.instanceCount;
                                        break;
                                    case 89:
                                        i38 >>>= iFld1;
                                        break;
                                    case 90:
                                        i %= (int) (i | 1);
                                }
                                break;
                            case 67:
                                Test.sFld = (short) Test.instanceCount;
                            case 68:
                                iArr3[i32 + 1] += (int) Test.instanceCount;
                                break;
                            case 69:
                                Test.byFld += (byte) 155;
                                break;
                            default:
                                i33 -= (int) Test.instanceCount;
                        }
                    } else {
                        Test.iFld >>= i31;
                    }
                }
            }
        }
        FuzzerUtils.out.println("i i30 i31 = " + i + "," + i30 + "," + i31);
        FuzzerUtils.out.println("i32 i33 i34 = " + i32 + "," + i33 + "," + i34);
        FuzzerUtils.out.println("i35 f5 d3 = " + i35 + "," + Float.floatToIntBits(f5) + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("f6 i36 i37 = " + Float.floatToIntBits(f6) + "," + i36 + "," + i37);
        FuzzerUtils.out.println("i38 iArr3 dArr1 = " + i38 + "," + FuzzerUtils.checkSum(iArr3) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));
        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.iFld = " + Test.instanceCount + "," + Test.byFld + "," + Test.iFld);
        FuzzerUtils.out.println("Test.bFld Test.sFld iFld1 = " + (Test.bFld ? 1 : 0) + "," + Test.sFld + "," + iFld1);
        FuzzerUtils.out.println("Test.byArrFld Test.lArrFld Test.fArrFld = " + FuzzerUtils.checkSum(Test.byArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$0 = false;

    private static Boolean ax$10 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  lMeth ->  lMeth mainTest
// DEBUG  vMeth ->  vMeth lMeth mainTest
// DEBUG  dMeth ->  dMeth vMeth lMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
