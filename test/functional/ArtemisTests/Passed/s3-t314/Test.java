// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.math.BigInteger;

public class Test {

    public static final int N = 256;

    public static long instanceCount = -34022L;

    public static double dFld = -2.6268;

    public static short sFld = 7630;

    public static boolean bFld = false;

    public static float fFld = 2.598F;

    public static long lFld = 242L;

    public static volatile byte byFld = 54;

    public static int[] iArrFld = new int[N];

    public static byte[] byArrFld = new byte[N];

    public long[] lArrFld = new long[N];

    public static boolean[] bArrFld = new boolean[N];

    public static float[] fArrFld = new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -34978);
        FuzzerUtils.init(Test.byArrFld, (byte) 34);
        FuzzerUtils.init(Test.bArrFld, true);
        FuzzerUtils.init(Test.fArrFld, 0.210F);
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long lMeth_check_sum = 0;

    public static long lMeth() {
        int i10 = 13, i11 = 32248, i12 = 40924, i13 = -10, i14 = -39, i15 = 50066;
        float f1 = -1.400F;
        for (i10 = 8; i10 < 190; i10++) {
            for (i12 = 1; i12 < 3; ++i12) {
                i13 <<= i11;
                for (i14 = 1; i14 < 2; ++i14) {
                    i15 += (i14 | (long) f1);
                    i13 -= i14;
                    if (Test.bFld)
                        break;
                }
                i11 += i12;
            }
            i11 += i12;
        }
        long meth_res = i10 + i11 + i12 + i13 + i14 + i15 + Float.floatToIntBits(f1);
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static void vMeth1(float f, int i2, int i3) {
        if (ax$0) {
            long ax$3 = lMeth_check_sum;
            try {
                java.lang.String ax$2 = "1.551611888231443E+25";
                BigInteger ax$1 = new BigInteger(ax$2);
                if (ax$1.longValue() != lMeth_check_sum) {
                }
            } catch (Throwable ax$4) {
            } finally {
                lMeth_check_sum = ax$3;
            }
            return;
        }
        int i4 = -42281, i5 = 42147, i6 = 226, i7 = -154, i8 = 109, i9 = 31171, i16 = 41030;
        boolean b = true;
        long l = -16874L, lArr1[][] = new long[N][N];
        byte by = -68;
        FuzzerUtils.init(lArr1, -2977456231L);
        i3 = i2;
        for (i4 = 11; 229 > i4; i4++) {
            i5 = (Integer.reverseBytes((int) (Test.instanceCount - Test.instanceCount)) - (-(++i2)));
            for (i6 = 1; i6 < 3; ++i6) {
                Test.iArrFld[i6 - 1] += (int) f;
                for (i8 = 1; 2 > i8; ++i8) {
                    b = b;
                    Test.dFld /= (((long) ((++Test.iArrFld[i8 + 1]) + ((-i8) + (--Test.dFld)))) | 1);
                    i3 /= (int) (((long) (++f)) | 1);
                    i7 = (int) lMeth();
                    i7 *= (int) Test.instanceCount;
                    switch(((i3 >>> 1) % 6) + 39) {
                        case 39:
                            i2 -= (int) Test.dFld;
                            l -= i2;
                            i5 += Test.sFld;
                            lArr1[i4 + 1][i6 + 1] = i16;
                            i5 *= i7;
                            Test.bFld = Test.bFld;
                            break;
                        case 40:
                            Test.dFld += f;
                            i7 >>= i9;
                            i2 += (i8 * f);
                            l >>>= 383L;
                            break;
                        case 41:
                            Test.byArrFld[i8] += (byte) Test.instanceCount;
                            i3 -= (int) f;
                            by ^= (byte) i4;
                            Test.fFld *= -3315L;
                        case 42:
                            if (i9 != 0) {
                                vMeth1_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + l + i16 + by + FuzzerUtils.checkSum(lArr1);
                                return;
                            }
                            if (false) {
                                Test.fFld += l;
                                Test.fFld = 232;
                            }
                            break;
                        case 43:
                            Test.sFld >>= (short) l;
                            i5 += i8;
                            i3 += (int) (-1L + (i8 * i8));
                            i2 -= (int) f;
                            i5 -= i5;
                            i7 = i3;
                            break;
                        case 44:
                            Test.instanceCount += -3769433646854545204L;
                            break;
                        default:
                            Test.fFld = i5;
                    }
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + l + i16 + by + FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(int i) {
        int i1 = -37015, i17 = 114, i18 = 10920, i19 = 6, i20 = 5;
        float f2 = -1.161F;
        byte by1 = -76;
        long[] lArr = new long[N], lArr2 = new long[N];
        double[] dArr = new double[N];
        FuzzerUtils.init(lArr, 0L);
        FuzzerUtils.init(lArr2, 5318605918745169031L);
        FuzzerUtils.init(dArr, 0.67545);
        i -= (~Test.iArrFld[(-89 >>> 1) % N]);
        lArr[(i >>> 1) % N] /= -54311;
        i ^= (int) ((Test.dFld -= (i + Test.instanceCount)) - (Test.instanceCount * (i - Test.instanceCount)));
        i1 = 1;
        while (++i1 < 112) {
            i += (((i1 * Test.instanceCount) + Test.sFld) - Test.instanceCount);
            {
                java.io.PrintStream ax$7 = System.out;
                java.io.PrintStream ax$8 = System.err;
                java.io.PrintStream ax$9 = new java.io.PrintStream(new java.io.OutputStream() {

                    @Override
                    public void write(int b) throws java.io.IOException {
                        // DO NOTHING: DISCARD ALL OUTPUTS
                    }
                });
                System.setOut(ax$9);
                System.setErr(ax$9);
                try {
                    ax$0 = true;
                    for (int ax$5 = 0; ax$5 < 8816; ax$5 += 1) vMeth1((float) 0.530828536780758, -1561712740, 136259917);
                } catch (java.lang.Throwable ax$6) {
                } finally {
                    ax$0 = false;
                }
                System.setOut(ax$7);
                System.setErr(ax$8);
            }
            vMeth1(-7.649F, i1, i1);
            for (i17 = 1; i17 < 5; ++i17) {
                if (Test.bFld) {
                    i += i17;
                    lArr2[i1 + 1] = i;
                    for (f2 = 1; f2 < 2; f2++) {
                        if (Test.bFld)
                            break;
                        i18 *= i1;
                        Test.instanceCount >>= -15985;
                        Test.instanceCount = i19;
                        i18 += i1;
                        i19 -= i19;
                        switch(((i1 % 5) * 5) + 105) {
                            case 118:
                                i18 *= i;
                                Test.dFld -= i17;
                                i = (int) -12L;
                                i += (int) ((long) f2 | i1);
                                i19 = -4185;
                                break;
                            case 121:
                                dArr[(int) (f2 - 1)] = i17;
                                Test.instanceCount <<= i;
                                break;
                            case 125:
                                i = (int) Test.instanceCount;
                                i19 += i;
                                break;
                            case 112:
                                by1 = (byte) i1;
                                i += (int) ((long) f2 | i);
                                i18 &= i18;
                                if (i1 != 0) {
                                    vMeth_check_sum += i + i1 + i17 + i18 + Float.floatToIntBits(f2) + i19 + by1 + i20 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(lArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                                    return;
                                }
                                dArr[(int) (f2 - 1)] += i1;
                                i20 += (int) Test.dFld;
                                i &= (int) Test.lFld;
                                if (i19 != 0) {
                                    vMeth_check_sum += i + i1 + i17 + i18 + Float.floatToIntBits(f2) + i19 + by1 + i20 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(lArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                                    return;
                                }
                                Test.iArrFld[(int) (f2 - 1)] -= (int) Test.dFld;
                                i += (int) (((f2 * i1) + i18) - i20);
                                break;
                            case 130:
                                if (Test.bFld)
                                    continue;
                                break;
                            default:
                                i20 += (int) (f2 * f2);
                        }
                    }
                } else {
                    Test.iArrFld[i17] = by1;
                }
            }
        }
        vMeth_check_sum += i + i1 + i17 + i18 + Float.floatToIntBits(f2) + i19 + by1 + i20 + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(lArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {
        int i21 = -1, i22 = -1, i23 = 2, i24 = 128, i25 = -42619, i26 = -2, i27 = 39104, i28 = -7217;
        vMeth(i21);
        i22 = 1;
        while (++i22 < 149) {
            i21 += (i22 | Test.lFld);
            for (i23 = 34; i23 > 1; i23 -= 2) {
                Test.iArrFld[i22 - 1] -= (int) Test.lFld;
                Test.bFld = Test.bFld;
                for (i25 = 1; i25 < 3; i25++) {
                    switch(((i25 % 1) * 5) + 92) {
                        case 93:
                            i26 += i25;
                            Test.iArrFld[i25 - 1] *= i24;
                            Test.fFld += i21;
                            switch((((i23 >>> 1) % 2) * 5) + 57) {
                                case 66:
                                    i26 -= (int) Test.instanceCount;
                                    i21 = (int) Test.instanceCount;
                                    if (Test.bFld)
                                        break;
                                    switch(((-3 >>> 1) % 8) + 5) {
                                        case 5:
                                        case 6:
                                            Test.dFld = i22;
                                            Test.byFld = (byte) i25;
                                            Test.sFld += (short) (i25 * i25);
                                            i21 += (int) Test.dFld;
                                            Test.instanceCount -= (long) Test.fFld;
                                            i27 = i27;
                                            switch((i25 % 2) + 114) {
                                                case 114:
                                                    Test.fFld = i25;
                                                    Test.sFld += (short) (-9 + (i25 * i25));
                                                    lArrFld[i22 - 1] = (long) Test.fFld;
                                                    break;
                                                case 115:
                                                    i21 += (i25 | i22);
                                                    if (Test.bFld) {
                                                        i27 = i23;
                                                        Test.iArrFld[(i26 >>> 1) % N] = (int) Test.lFld;
                                                        Test.byFld += (byte) (-65 + (i25 * i25));
                                                    }
                                                    i24 -= i24;
                                                    i27 += i25;
                                                    Test.iArrFld[i22 + 1] *= i22;
                                                    i24 -= (int) Test.dFld;
                                                    break;
                                                default:
                                                    i24 = i21;
                                                    i24 += (int) Test.dFld;
                                                    switch((i22 % 7) + 66) {
                                                        case 66:
                                                            Test.byArrFld[i23] -= (byte) 1.125771;
                                                            i21 >>= i21;
                                                            break;
                                                        case 67:
                                                            Test.iArrFld[i25 - 1] -= (int) Test.instanceCount;
                                                            i24 = -44475;
                                                            Test.fFld = -9L;
                                                            i27 = 14;
                                                            break;
                                                        case 68:
                                                            Test.lFld += (i25 * i25);
                                                            Test.fFld = Test.fFld;
                                                            try {
                                                                i24 = (Test.iArrFld[i22 + 1] / 94);
                                                                Test.iArrFld[i22 + 1] = (i26 % -44860);
                                                                i24 = (37370 % i26);
                                                            } catch (ArithmeticException a_e) {
                                                            }
                                                            Test.iArrFld[i23 - 1] = (int) Test.lFld;
                                                            Test.instanceCount -= i26;
                                                            i26 <<= i23;
                                                            i24 += i25;
                                                            break;
                                                        case 69:
                                                            i26 = 8;
                                                            if (Test.bFld) {
                                                                Test.sFld -= (short) i24;
                                                                i26 *= (int) Test.dFld;
                                                                Test.lFld += i25;
                                                                i21 += i26;
                                                                switch((i25 % 9) + 16) {
                                                                    case 16:
                                                                        i26 ^= (int) 1578978479964264587L;
                                                                        i26 <<= i23;
                                                                        Test.bArrFld = Test.bArrFld;
                                                                    case 17:
                                                                        Test.bFld = Test.bFld;
                                                                        Test.iArrFld[i25] -= (int) Test.fFld;
                                                                        lArrFld[i25 - 1] = i21;
                                                                        break;
                                                                    case 18:
                                                                        i26 = (int) Test.instanceCount;
                                                                        Test.lFld = i22;
                                                                        if (Test.bFld) {
                                                                            i21 = i23;
                                                                            Test.lFld |= i26;
                                                                            i26 = Test.sFld;
                                                                            i26 >>>= 46477;
                                                                            Test.instanceCount += i25;
                                                                            i27 += -53478;
                                                                            Test.iArrFld[i22 - 1] = i27;
                                                                            i27 = 6;
                                                                        } else {
                                                                            Test.instanceCount = i27;
                                                                        }
                                                                    case 19:
                                                                        Test.lFld ^= i27;
                                                                    case 20:
                                                                        i21 = i25;
                                                                        break;
                                                                    case 21:
                                                                        i27 -= i25;
                                                                        break;
                                                                    case 22:
                                                                        i21 = -58419;
                                                                        break;
                                                                    case 23:
                                                                        Test.fArrFld[i23 + 1] *= i27;
                                                                        break;
                                                                    case 24:
                                                                        i21 += i25;
                                                                        break;
                                                                    default:
                                                                        Test.instanceCount += (((i25 * i27) + i26) - Test.fFld);
                                                                }
                                                            } else if (Test.bFld) {
                                                                i27 += i22;
                                                            } else {
                                                                i24 += (int) Test.fFld;
                                                            }
                                                        case 70:
                                                            Test.dFld -= Test.lFld;
                                                        case 71:
                                                        case 72:
                                                            Test.lFld ^= Test.lFld;
                                                            break;
                                                    }
                                            }
                                            break;
                                        case 7:
                                            Test.lFld += (i25 * i25);
                                            break;
                                        case 8:
                                            Test.iArrFld[i23 + 1] = i24;
                                            break;
                                        case 9:
                                            i21 = i26;
                                            break;
                                        case 10:
                                            Test.lFld += i25;
                                            break;
                                        case 11:
                                            i28 += (11814 + (i25 * i25));
                                            break;
                                        case 12:
                                            i26 = i28;
                                            break;
                                        default:
                                            Test.lFld += (i25 - i22);
                                    }
                                case 62:
                                    Test.fFld += i25;
                                    break;
                            }
                            break;
                        default:
                            Test.fFld += (i25 + Test.lFld);
                    }
                }
            }
        }
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 i28 = " + i27 + "," + i28);
        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.sFld = " + Test.instanceCount + "," + Double.doubleToLongBits(Test.dFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.bFld Test.fFld Test.lFld = " + (Test.bFld ? 1 : 0) + "," + Float.floatToIntBits(Test.fFld) + "," + Test.lFld);
        FuzzerUtils.out.println("Test.byFld Test.iArrFld Test.byArrFld = " + Test.byFld + "," + FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.byArrFld));
        FuzzerUtils.out.println("lArrFld Test.bArrFld Test.fArrFld = " + FuzzerUtils.checkSum(lArrFld) + "," + FuzzerUtils.checkSum(Test.bArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$0 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  vMeth ->  vMeth mainTest
// DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
// DEBUG  lMeth ->  lMeth vMeth1 vMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
