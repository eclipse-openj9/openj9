// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = 3472600706L;

    public int iFld = -12931;

    public static short sFld = 22431;

    public static int iFld1 = 69;

    public static int iFld2 = 34;

    public static int iFld3 = 36777;

    public static int iFld4 = -249;

    public volatile int[] iArrFld = new int[N];

    public static long[] lArrFld = new long[N];

    public static float[] fArrFld = new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -237L);
        FuzzerUtils.init(Test.fArrFld, 0.848F);
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {
        if (ax$28) {
            int ax$33 = iFld4;
            try {
                char[] ax$32 = new char[1];
                char[] ax$31 = new char[] { 40000, 40001, 40002, 40003, 40004 };
                char[] ax$29 = new char[1];
                for (int ax$30 = 0; ax$30 < iFld4; ax$30++) {
                    ax$31[ax$30] = (char) (((ax$32[ax$30] & 0xffff) + (ax$29[ax$30] & 0xffff)) >> 1);
                }
            } catch (Throwable ax$34) {
            } finally {
                iFld4 = ax$33;
            }
            return;
        }
        float f2 = 5.332F;
        int i8 = 0, i9 = 12, i10 = -13, i11 = -71, i12 = 224, i13 = 65, i14 = -26163, i15 = 160, i16 = -52192, iArr1[] = new int[N];
        double d1 = 69.124782;
        boolean b1 = true;
        byte by = -87, byArr1[] = new byte[N];
        long l2 = -61379L, lArr[] = new long[N];
        short[] sArr = new short[N];
        FuzzerUtils.init(iArr1, -10);
        FuzzerUtils.init(lArr, 0L);
        FuzzerUtils.init(byArr1, (byte) 57);
        FuzzerUtils.init(sArr, (short) 9072);
        f2 -= i8;
        i9 = 1;
        do {
            iArr1[i9 + 1] -= i8;
            i8 = (int) Test.instanceCount;
            i8 ^= i8;
            i10 = 1;
            while (++i10 < 4) {
                i8 = 11;
                i8 >>= i11;
                i8 = i8;
                for (i12 = 1; i12 < 1; i12++) {
                    i13 += (i12 * i12);
                }
                Test.instanceCount = i12;
                i13 += (int) d1;
                iArr1[i9 + 1] >>= i10;
                Test.sFld += (short) (((i10 * i12) + i13) - f2);
                switch((i10 * 5) + 125) {
                    case 434:
                        for (i14 = 1; i14 < 1; ++i14) {
                            lArr[i14] -= i10;
                            d1 = i12;
                            Test.instanceCount = 6;
                            i11 -= (int) Test.instanceCount;
                            i15 = i15;
                            i8 -= (int) Test.instanceCount;
                            Test.instanceCount = Test.instanceCount;
                            i8 -= i11;
                            switch((i10 % 6) + 16) {
                                case 16:
                                    Test.sFld += (short) (((i14 * i11) + i15) - i10);
                                    i11 = -19360;
                                    Test.instanceCount += (i14 * i14);
                                    Test.instanceCount -= i12;
                                    f2 = i13;
                                    i8 += (17079 + (i14 * i14));
                                    try {
                                        i13 = (i10 % iArr1[(i9 >>> 1) % N]);
                                        i13 = (-397327811 / i14);
                                        i15 = (i9 / i15);
                                    } catch (ArithmeticException a_e) {
                                    }
                                    break;
                                case 17:
                                    i13 <<= i16;
                                    Test.sFld -= (short) i14;
                                    i11 ^= Test.sFld;
                                    i11 <<= i11;
                                    break;
                                case 18:
                                    i16 = i9;
                                case 19:
                                    i8 >>= i10;
                                    break;
                                case 20:
                                    if (b1)
                                        continue;
                                case 21:
                                    f2 = by;
                                    break;
                            }
                        }
                        break;
                    case 151:
                        i8 -= (int) Test.instanceCount;
                        break;
                    case 238:
                        i15 += i10;
                        break;
                    case 217:
                        if (b1)
                            continue;
                        break;
                    case 207:
                        by += (byte) (i10 * i10);
                        break;
                    case 341:
                        Test.instanceCount += i11;
                        break;
                    case 133:
                    case 351:
                        b1 = b1;
                        break;
                    case 336:
                        Test.instanceCount += (long) f2;
                    case 233:
                        i13 -= (int) f2;
                        break;
                    case 194:
                        byArr1[i9 - 1] |= (byte) Test.instanceCount;
                    case 283:
                        i15 += (((i10 * i9) + i10) - Test.instanceCount);
                        break;
                    case 187:
                        i16 -= (int) -5282L;
                    case 342:
                        i15 = (int) -10.598F;
                        break;
                    case 457:
                        i8 *= (int) Test.instanceCount;
                        break;
                    case 268:
                        Test.instanceCount = i11;
                        break;
                    case 281:
                        Test.instanceCount += (long) d1;
                        break;
                    case 277:
                        Test.sFld += (short) (i10 * i8);
                        break;
                    case 393:
                        i8 = i8;
                    case 197:
                        lArr[i9 - 1] -= i15;
                        break;
                    case 456:
                        Test.instanceCount = 200L;
                        break;
                    case 237:
                        i13 = i9;
                        break;
                    case 267:
                        f2 += (((i10 * i8) + i14) - i8);
                        break;
                    case 454:
                        Test.instanceCount >>= Test.sFld;
                        break;
                    case 404:
                        i16 %= (int) (i16 | 1);
                    case 387:
                        d1 -= i9;
                        break;
                    case 255:
                        i15 += -33;
                        break;
                    case 433:
                        iArr1[i10 + 1] += i9;
                        break;
                    case 153:
                        i16 <<= (int) Test.instanceCount;
                        break;
                    case 162:
                        iArr1[i9 - 1] *= i8;
                        break;
                    case 227:
                        Test.sFld += (short) (i10 * i8);
                        break;
                    case 191:
                        i13 = i14;
                        break;
                    case 303:
                        try {
                            i16 = (iArr1[i9] % -206);
                            i13 = (-540117229 % iArr1[i9 - 1]);
                            i11 = (-226 / i16);
                        } catch (ArithmeticException a_e) {
                        }
                        break;
                    case 199:
                        iArr1[i10 - 1] &= (int) Test.instanceCount;
                        break;
                    case 253:
                        i15 >>= i16;
                        break;
                    case 223:
                        i13 = (int) l2;
                    case 422:
                        i11 = (int) l2;
                        break;
                    case 315:
                        iArr1[i9] -= -43;
                        break;
                    case 364:
                        i15 -= (int) 235L;
                    case 321:
                        f2 += l2;
                        break;
                    case 286:
                        i16 += i10;
                        break;
                    case 333:
                        i11 = i11;
                        break;
                    case 203:
                        l2 = l2;
                        break;
                    case 135:
                        i11 += i9;
                    case 449:
                        i13 += i10;
                        break;
                    case 368:
                        l2 <<= i8;
                    case 389:
                        lArr[i10 - 1] = i12;
                        break;
                    case 343:
                        i13 <<= -73;
                        break;
                    case 297:
                        b1 = b1;
                        break;
                    case 442:
                        Test.instanceCount *= i15;
                        break;
                    case 443:
                        Test.instanceCount += i10;
                        break;
                    case 338:
                        i8 = i14;
                        break;
                    case 334:
                        sArr[i10 + 1] = (short) Test.instanceCount;
                        break;
                    case 201:
                        l2 += i12;
                        break;
                    case 358:
                        i15 -= (int) l2;
                    case 474:
                        i16 = i12;
                        break;
                    case 435:
                        i13 += (i10 * i15);
                    case 305:
                    case 273:
                        if (i15 != 0) {
                            vMeth2_check_sum += Float.floatToIntBits(f2) + i8 + i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + i14 + i15 + i16 + (b1 ? 1 : 0) + by + l2 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr1) + FuzzerUtils.checkSum(sArr);
                            return;
                        }
                        break;
                    case 407:
                        l2 += (i10 + i10);
                        break;
                    case 411:
                        i8 += (((i10 * f2) + l2) - f2);
                        break;
                    case 444:
                        by += (byte) (((i10 * i11) + i10) - i11);
                    case 205:
                        iArr1[i10 - 1] ^= i15;
                        break;
                    case 155:
                        f2 = Test.instanceCount;
                        break;
                    case 329:
                        Test.instanceCount = Test.instanceCount;
                    case 167:
                        l2 += (((i10 * i8) + Test.instanceCount) - i15);
                    case 458:
                    case 304:
                        d1 = i15;
                        break;
                    case 377:
                        i11 += (int) Test.instanceCount;
                        break;
                    case 225:
                        f2 -= i15;
                        break;
                }
            }
        } while (++i9 < 126);
        vMeth2_check_sum += Float.floatToIntBits(f2) + i8 + i9 + i10 + i11 + i12 + i13 + Double.doubleToLongBits(d1) + i14 + i15 + i16 + (b1 ? 1 : 0) + by + l2 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(byArr1) + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth1(long l, boolean b, long l1) {
        int i4 = -1522, i5 = -10, i6 = -80, i7 = 14, i17 = 4, i18 = -55638, iArr2[] = new int[N];
        float f1 = -2.710F;
        double d = 72.37205;
        byte by1 = 48;
        short[] sArr1 = new short[N];
        FuzzerUtils.init(iArr2, -45677);
        FuzzerUtils.init(sArr1, (short) -21259);
        {
            java.io.PrintStream ax$0 = System.out;
            java.io.PrintStream ax$1 = System.err;
            java.io.PrintStream ax$2 = new java.io.PrintStream(new java.io.OutputStream() {

                @Override
                public void write(int b) throws java.io.IOException {
                    // DO NOTHING: DISCARD ALL OUTPUTS
                }
            });
            System.setOut(ax$2);
            System.setErr(ax$2);
            {
                boolean ax$8 = false;
                for (int ax$7 = -4122; ax$7 < 4047; ax$7 += 8) {
                    if (!ax$8) {
                        ax$8 = true;
                        {
                            System.setOut(ax$0);
                            System.setErr(ax$1);
                            for (i4 = 2; i4 < 107; ++i4) {
                                i5 *= (int) (f1 * (--d));
                                if (b) {
                                    for (i6 = i4; i6 < 5; ++i6) {
                                        switch(((i6 % 2) * 5) + 115) {
                                            case 125:
                                                {
                                                    java.io.PrintStream ax$37 = System.out;
                                                    java.io.PrintStream ax$38 = System.err;
                                                    java.io.PrintStream ax$39 = new java.io.PrintStream(new java.io.OutputStream() {

                                                        @Override
                                                        public void write(int b) throws java.io.IOException {
                                                            // DO NOTHING: DISCARD ALL OUTPUTS
                                                        }
                                                    });
                                                    System.setOut(ax$39);
                                                    System.setErr(ax$39);
                                                    try {
                                                        ax$28 = true;
                                                        for (int ax$35 = 0; ax$35 < 9096; ax$35 += 1) vMeth2();
                                                    } catch (java.lang.Throwable ax$36) {
                                                    } finally {
                                                        ax$28 = false;
                                                    }
                                                    System.setOut(ax$37);
                                                    System.setErr(ax$38);
                                                }
                                                vMeth2();
                                                i5 -= (int) -3L;
                                                i17 = 1;
                                                do {
                                                    l1 >>>= -11;
                                                    switch((i4 % 9) + 24) {
                                                        case 24:
                                                            iArr2[i6] >>= by1;
                                                            i7 += i5;
                                                            switch(((40042 >>> 1) % 8) + 37) {
                                                                case 37:
                                                                    l -= i17;
                                                                    iArr2[i6] = (int) -2L;
                                                                    i5 = i5;
                                                                    iArr2[i4 - 1] = (int) 48L;
                                                                    if (b)
                                                                        continue;
                                                                    d = 2;
                                                                    f1 += (i17 * i7);
                                                                    Test.sFld -= (short) Test.instanceCount;
                                                                    Test.instanceCount >>= i6;
                                                                    d += i17;
                                                                    i5 = (int) l;
                                                                    i7 = (int) f1;
                                                                    d = f1;
                                                                    i5 *= (int) l;
                                                                case 38:
                                                                    i7 += (((i17 * i5) + i17) - l);
                                                                    d += -4;
                                                                    i7 += (int) -12L;
                                                                    try {
                                                                        i7 = (i7 % -622);
                                                                        i5 = (i4 / -7);
                                                                        i5 = (-1574499749 % i6);
                                                                    } catch (ArithmeticException a_e) {
                                                                    }
                                                                    iArr2[(i5 >>> 1) % N] += i7;
                                                                    sArr1[i6] <<= (short) 180;
                                                                    Test.lArrFld[i4 + 1] = i7;
                                                                    i5 += (((i17 * i5) + l1) - i5);
                                                                    i7 = i6;
                                                                    i5 -= i6;
                                                                    break;
                                                                case 39:
                                                                    f1 -= f1;
                                                                    break;
                                                                case 40:
                                                                    iArr2[i4] -= i4;
                                                                    break;
                                                                case 41:
                                                                    Test.fArrFld[i4] -= i7;
                                                                    break;
                                                                case 42:
                                                                    i7 = i6;
                                                                    break;
                                                                case 43:
                                                                    iArr2[i6 - 1] = i6;
                                                                    break;
                                                                case 44:
                                                                    Test.instanceCount -= -13;
                                                                    break;
                                                                default:
                                                                    i5 *= i4;
                                                            }
                                                        case 25:
                                                            Test.instanceCount >>= i17;
                                                            break;
                                                        case 26:
                                                            iArr2 = FuzzerUtils.int1array(N, (int) -5661);
                                                            break;
                                                        case 27:
                                                            i5 = (int) l1;
                                                            break;
                                                        case 28:
                                                            Test.instanceCount += (long) (-1.827F + (i17 * i17));
                                                            break;
                                                        case 29:
                                                            i5 += i4;
                                                        case 30:
                                                            b = b;
                                                            break;
                                                        case 31:
                                                            i18 = (int) -32791L;
                                                            break;
                                                        case 32:
                                                            d = i4;
                                                            break;
                                                        default:
                                                            i7 *= (int) -1.101F;
                                                    }
                                                } while (--i17 > 0);
                                                break;
                                            case 122:
                                                d = f1;
                                                break;
                                            default:
                                                Test.fArrFld[i4 - 1] = -358892814L;
                                        }
                                    }
                                } else {
                                    Test.lArrFld[i4] -= (long) d;
                                }
                            }
                            System.setOut(ax$2);
                            System.setErr(ax$2);
                        }
                    }
                    int ax$4 = i18;
                    int ax$5 = i4;
                    try {
                        int[] ax$3 = { 2, 5, 9, -1, -3, 10, 8, 4 };
                        do {
                            i18 += ax$3[i4++];
                        } while (i4 < 10);
                    } catch (Throwable ax$6) {
                    } finally {
                        i18 = ax$4;
                        i4 = ax$5;
                    }
                }
            }
            System.setOut(ax$0);
            System.setErr(ax$1);
        }
        vMeth1_check_sum += l + (b ? 1 : 0) + l1 + i4 + i5 + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i6 + i7 + i17 + by1 + i18 + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(sArr1);
    }

    public static void vMeth() {
        int i3 = -37691, i19 = -2, i20 = -43, i21 = 6451, i22 = -10391, i23 = -11, i24 = 13, i25 = 24011, i26 = 108, i27 = 122, i28 = -113, iArr[] = new int[N];
        boolean b2 = true;
        float f3 = 1.62F;
        double d3 = 82.87774, dArr[] = new double[N];
        long l3 = -13L;
        FuzzerUtils.init(iArr, 37);
        FuzzerUtils.init(dArr, 1.87433);
        Test.sFld ^= (short) i3;
        iArr[(i3 >>> 1) % N] >>>= i3;
        vMeth1(Test.instanceCount, b2, 254L);
        for (i19 = 10; i19 < 173; i19++) {
            for (i21 = 1; i21 < 4; i21++) {
                for (i23 = 2; i23 > 1; --i23) {
                    if (i23 != 0) {
                        vMeth_check_sum += i3 + (b2 ? 1 : 0) + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + Float.floatToIntBits(f3) + Double.doubleToLongBits(d3) + l3 + i27 + i28 + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    }
                    Test.instanceCount *= Test.instanceCount;
                    i3 += (-26650 + (i23 * i23));
                }
                Test.sFld %= (short) (i22 | 1);
                Test.instanceCount += i21;
                for (i25 = 1; i25 < 2; i25++) {
                    double d2 = 0.30005;
                    Test.instanceCount = i21;
                    f3 += Test.instanceCount;
                    d2 -= i20;
                    i3 = -11;
                    i26 >>= (int) -213L;
                    i3 = i24;
                    d2 *= i22;
                }
                i24 += (i21 ^ Test.instanceCount);
                i26 = -208;
                i3 += i21;
                iArr[i19] = (int) f3;
                switch((i21 % 9) + 14) {
                    case 14:
                        switch((i19 % 2) + 107) {
                            case 107:
                            case 108:
                                if (b2)
                                    continue;
                                i3 >>= i25;
                                d3 = f3;
                                i20 += (int) l3;
                                i26 ^= i23;
                                i20 = (int) l3;
                                i22 = i22;
                                for (i27 = i21; i27 < 2; i27++) {
                                    i28 |= 134;
                                    i22 = (int) 49613L;
                                }
                                f3 -= i27;
                                dArr[i19] = i24;
                                break;
                        }
                    case 15:
                        l3 += i28;
                    case 16:
                        l3 >>= 3911134462007965624L;
                        break;
                    case 17:
                        Test.instanceCount += (((i21 * i20) + i3) - l3);
                        break;
                    case 18:
                        iArr[i19 - 1] <<= (int) Test.instanceCount;
                        break;
                    case 19:
                        i26 *= i28;
                        break;
                    case 20:
                    case 21:
                        i20 -= i27;
                        break;
                    case 22:
                        i20 *= (int) -125.35592;
                        break;
                    default:
                        iArr[i19 - 1] *= (int) Test.instanceCount;
                }
            }
            {
                java.io.PrintStream ax$16 = System.out;
                java.io.PrintStream ax$17 = System.err;
                java.io.PrintStream ax$18 = new java.io.PrintStream(new java.io.OutputStream() {

                    @Override
                    public void write(int b) throws java.io.IOException {
                        // DO NOTHING: DISCARD ALL OUTPUTS
                    }
                });
                System.setOut(ax$18);
                System.setErr(ax$18);
                try {
                    for (int ax$14 = -511; ax$14 < 8601; ax$14 += 1) {
                        int ax$11 = i20;
                        int ax$12 = i22;
                        try {
                            byte[] ax$9 = new byte[1 << 14];
                            byte[] ax$10 = new byte[16];
                            ax$9[i20++] = ax$10[i22];
                        } catch (Throwable ax$13) {
                        } finally {
                            i20 = ax$11;
                            i22 = ax$12;
                        }
                    }
                } catch (Throwable ax$15) {
                }
                System.setOut(ax$16);
                System.setErr(ax$17);
            }
        }
        vMeth_check_sum += i3 + (b2 ? 1 : 0) + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + Float.floatToIntBits(f3) + Double.doubleToLongBits(d3) + l3 + i27 + i28 + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr3) {
        float f = 0.418F, f4 = 49.529F;
        int i1 = -166, i2 = -14, i29 = 1, i30 = -1, i31 = 23935, i32 = -13, i33 = 37407, i34 = 7;
        short s = -31235, sArr2[] = new short[N];
        boolean b3 = false;
        byte by2 = 55, byArr2[] = new byte[N];
        FuzzerUtils.init(byArr2, (byte) 114);
        FuzzerUtils.init(sArr2, (short) -16544);
        f = (iArrFld[(iFld >>> 1) % N]--);
        for (i1 = 3; i1 < 145; ++i1) {
            double d4 = 2.70930;
            s = (short) (i2 / (((long) ((f + 64.93246) - -128L)) | 1));
            vMeth();
            byArr2[i1] = (byte) iFld;
            i2 += Test.sFld;
            switch(((i1 % 9) * 5) + 114) {
                case 115:
                    d4 = i1;
                    break;
                case 139:
                    i2 -= i2;
                    i2 = -29;
                    Test.iFld1 = (int) d4;
                    d4 = iFld;
                    Test.instanceCount = i1;
                    for (i29 = 2; i29 < 36; ++i29) {
                        i31 = 1;
                        {
                            java.io.PrintStream ax$19 = System.out;
                            java.io.PrintStream ax$20 = System.err;
                            java.io.PrintStream ax$21 = new java.io.PrintStream(new java.io.OutputStream() {

                                @Override
                                public void write(int b) throws java.io.IOException {
                                    // DO NOTHING: DISCARD ALL OUTPUTS
                                }
                            });
                            System.setOut(ax$21);
                            System.setErr(ax$21);
                            {
                                boolean ax$27 = false;
                                for (int ax$26 = -1297; ax$26 < 7828; ax$26 += 8) {
                                    if (!ax$27) {
                                        ax$27 = true;
                                        {
                                            System.setOut(ax$19);
                                            System.setErr(ax$20);
                                            while (++i31 < 2) {
                                                Test.iFld1 /= (int) (i1 | 1);
                                                i30 += i30;
                                                i2 *= i29;
                                                iArrFld[i29 - 1] &= -142;
                                                f += (-9 + (i31 * i31));
                                                iArrFld[i29 + 1] = i1;
                                                Test.lArrFld[i1 - 1] += Test.iFld2;
                                                try {
                                                    Test.iFld1 = (i2 % i1);
                                                    iArrFld[i31 - 1] = (iArrFld[i29] / 65);
                                                    Test.iFld1 = (i2 % 11);
                                                } catch (ArithmeticException a_e) {
                                                }
                                                if (b3) {
                                                    iFld = Test.sFld;
                                                    i30 += i31;
                                                    f += (((i31 * i29) + Test.instanceCount) - i30);
                                                    try {
                                                        Test.iFld1 = (Test.iFld1 / 157);
                                                        iArrFld[i29 - 1] = (i1 % Test.iFld2);
                                                        iArrFld[i1 + 1] = (i31 % i30);
                                                    } catch (ArithmeticException a_e) {
                                                    }
                                                } else {
                                                    Test.iFld1 = iFld;
                                                    i30 += (int) Test.instanceCount;
                                                    Test.iFld2 = (int) -1339864748L;
                                                    i2 += i31;
                                                    Test.iFld1 += (i31 * i2);
                                                    switch((i29 % 2) + 21) {
                                                        case 21:
                                                            sArr2[i29 + 1] = Test.sFld;
                                                            Test.iFld1 = (int) Test.instanceCount;
                                                            try {
                                                                i30 = (Test.iFld3 / -235);
                                                                iArrFld[i1 + 1] = (Test.iFld2 % 58541);
                                                                iArrFld[i1 + 1] = (Test.iFld2 / -60229);
                                                            } catch (ArithmeticException a_e) {
                                                            }
                                                            if (b3) {
                                                                Test.iFld2 += (int) Test.instanceCount;
                                                                iArrFld = iArrFld;
                                                                Test.instanceCount = Test.iFld2;
                                                                i2 = i30;
                                                                Test.instanceCount ^= i30;
                                                            } else {
                                                                iArrFld[i29] *= Test.iFld1;
                                                                d4 += d4;
                                                                Test.instanceCount += (i31 | Test.instanceCount);
                                                                Test.iFld2 -= i29;
                                                                Test.iFld3 = (int) Test.instanceCount;
                                                                Test.instanceCount ^= -1239L;
                                                                if (true)
                                                                    break;
                                                                Test.instanceCount = i31;
                                                                by2 += (byte) (i31 * f);
                                                                i30 = (int) Test.instanceCount;
                                                            }
                                                            Test.instanceCount += (i31 * i31);
                                                            s >>= (short) Test.instanceCount;
                                                            f = 11L;
                                                            i2 = i2;
                                                            break;
                                                        case 22:
                                                            iArrFld[i29] = 167;
                                                            break;
                                                    }
                                                    f = 23292L;
                                                    Test.instanceCount = (long) f;
                                                    f += f;
                                                    iArrFld[i1 - 1] += i2;
                                                    Test.iFld3 += (i31 * i31);
                                                    if (b3)
                                                        break;
                                                }
                                                Test.instanceCount &= iFld;
                                                try {
                                                    Test.iFld2 = (-149 / Test.iFld1);
                                                    i30 = (iFld / Test.iFld1);
                                                    iArrFld[i31] = (i29 / iFld);
                                                } catch (ArithmeticException a_e) {
                                                }
                                                i2 *= i29;
                                                d4 = iFld;
                                                Test.instanceCount = -156;
                                            }
                                            System.setOut(ax$21);
                                            System.setErr(ax$21);
                                        }
                                    }
                                    try {
                                        boolean[] ax$24 = { true, false, false, false, false, false, false };
                                        boolean ax$22 = /*timing=*/
                                        false;
                                        for (int ax$23 = 0; ax$23 < ax$24.length; ax$23++) {
                                            ax$24[ax$23] = ax$22;
                                            if (ax$23 == 10)
                                                ax$22 = !ax$22;
                                        }
                                    } catch (Throwable ax$25) {
                                    } finally {
                                    }
                                }
                            }
                            System.setOut(ax$19);
                            System.setErr(ax$20);
                        }
                    }
                    for (f4 = i1; f4 < 36; f4++) {
                        iArrFld[(int) (f4)] -= (int) Test.instanceCount;
                        b3 = b3;
                        for (i33 = (int) (f4); i33 < 1; i33++) {
                            Test.iFld1 += i33;
                            i2 %= (int) ((long) (d4) | 1);
                        }
                    }
                    break;
                case 121:
                    Test.instanceCount += i1;
                    break;
                case 147:
                    i2 = (int) Test.instanceCount;
                case 118:
                    iArrFld[i1 + 1] >>= i1;
                    break;
                case 124:
                    Test.iFld4 += (i1 * i1);
                case 126:
                    b3 = b3;
                    break;
                case 154:
                    i34 = (int) Test.instanceCount;
                    break;
                case 116:
                    iFld -= 80;
                    break;
            }
        }
        FuzzerUtils.out.println("f i1 i2 = " + Float.floatToIntBits(f) + "," + i1 + "," + i2);
        FuzzerUtils.out.println("s i29 i30 = " + s + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 b3 by2 = " + i31 + "," + (b3 ? 1 : 0) + "," + by2);
        FuzzerUtils.out.println("f4 i32 i33 = " + Float.floatToIntBits(f4) + "," + i32 + "," + i33);
        FuzzerUtils.out.println("i34 byArr2 sArr2 = " + i34 + "," + FuzzerUtils.checkSum(byArr2) + "," + FuzzerUtils.checkSum(sArr2));
        FuzzerUtils.out.println("Test.instanceCount iFld Test.sFld = " + Test.instanceCount + "," + iFld + "," + Test.sFld);
        FuzzerUtils.out.println("Test.iFld1 Test.iFld2 Test.iFld3 = " + Test.iFld1 + "," + Test.iFld2 + "," + Test.iFld3);
        FuzzerUtils.out.println("Test.iFld4 iArrFld Test.lArrFld = " + Test.iFld4 + "," + FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr2) {
        if (ax$40) {
            int ax$42 = iFld4;
            try {
                if (iFld4 < 3)
                    ;
            } catch (Throwable ax$43) {
            } finally {
                iFld4 = ax$42;
            }
            return;
        }
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr2);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$28 = false;

    private static Boolean ax$40 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  vMeth ->  vMeth mainTest
// DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
// DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
