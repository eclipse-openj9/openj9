// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.nio.channels.AsynchronousChannelGroup;
import java.text.Bidi;

public class Test {
    public static final int N = 256;

    public static long instanceCount = 0L;

    public static double dFld = 0.63445;

    public static boolean bFld = false;

    public static short sFld = 4676;

    public volatile byte byFld = 45;

    public volatile int iFld = -741;

    public static long lArrFld[] = new long[N];

    public static volatile float fArrFld[] = new float[N];

    public static int iArrFld[] = new int[N];

    public boolean bArrFld[] = new boolean[N];

    public double dArrFld[] = new double[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 12L);
        FuzzerUtils.init(Test.fArrFld, 1.76F);
        FuzzerUtils.init(Test.iArrFld, 98);
    }

    public static long iMeth_check_sum = 0;

    public static long vMeth_check_sum = 0;

    public static long iMeth1_check_sum = 0;

    public static int iMeth1(long l, boolean b) {
        int i7 = 4114;
        int i8 = -93;
        int i9 = 42934;
        int i10 = -139;
        int i11 = 9;
        int i12 = -243;
        int i13 = -11;
        int i14 = -117;
        int i15 = 6;
        int i16 = 28308;
        int i17 = 8;
        int i18 = -144;
        int iArr[] = new int[N];
        short s = 11288;
        float f3 = 0.779F;
        FuzzerUtils.init(iArr, -3);
        i7 = i7;
        i7 = ((int) (Test.instanceCount));
        i7 = ((int) (Test.instanceCount));
        i7 &= i7;
        i7 = ((int) (l));
        for (i8 = 7; 153 > i8; i8 += 3) {
            s *= ((short) (i9));
            i7 >>>= i7;
            i7 *= ((int) (1.134F));
            f3 += i8 * i8;
            iArr[i8] = i8;
            i9 *= i8;
            if (b) {
                for (i10 = 1; i10 < 11; ++i10) {
                    iArr[i10] <<= i10;
                }
                i9 += i8 ^ l;
                l += ((long) (Test.dFld));
                i11 >>>= ((int) (l));
                Test.fArrFld[i8] -= i8;
                for (i12 = i8; i12 < 11; ++i12) {
                    Test.instanceCount += 223 + (i12 * i12);
                }
                i11 = ((int) (-2.32856));
                for (i14 = 1; i14 < 11; ++i14) {
                    for (i16 = 1; i16 < 2; i16++) {
                        switch (((i8 % 7) * 5) + 39) {
                            case 59 :
                            case 43 :
                                i17 += i16;
                                f3 = ((float) (Test.dFld));
                                i7 += i16 - i10;
                                iArr = iArr;
                                break;
                            case 53 :
                                i15 = i7;
                                Test.instanceCount += ((long) (f3));
                                break;
                            case 73 :
                                if (b)
                                    break;

                                Test.instanceCount -= -157;
                                i17 = i14;
                                Test.instanceCount *= l;
                                i17 += i16;
                                i15 <<= ((int) (l));
                                break;
                            case 62 :
                                i9 -= i7;
                                break;
                            case 41 :
                                Test.fArrFld[i14 - 1] += -16682;
                                break;
                            case 68 :
                                i7 = i10;
                                break;
                        }
                    }
                }
            } else {
                i18 >>= i16;
            }
        }
        long meth_res = (((((((((((((((l + (b ? 1 : 0)) + i7) + i8) + i9) + s) + Float.floatToIntBits(f3)) + i10) + i11) + i12) + i13) + i14) + i15) + i16) + i17) + i18) + FuzzerUtils.checkSum(iArr);
        iMeth1_check_sum += meth_res;
        return ((int) (meth_res));
    }

    public static void vMeth(int i3, int i4) {
        if (Test.ax$0) {
            final int ax$12 = i4;
            final int ax$11 = i3;
            final boolean ax$10 = Test.bFld;
            String ax$1 = "s";
            Bidi ax$2 = null;
            int[] ax$3 = new int[]{ 0x11, 0x22, 0x33, 0x44, 0x88, 0x99, 0xaa, 0xbb };
            int[] ax$4 = new int[]{ 261700038, -10506007, 329454734, -1893108547, 1423610357, 1328589089 };
            Test.AxOutputRedirectionHelper.redirect();
            try {
                if (i3 != ax$3[i4]) {
                    bFld = true;
                }
            } catch (Throwable ax$9) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            Test.bFld = ax$10;
            i3 = ax$11;
            i4 = ax$12;
            return;
        }
        int i5 = -57769;
        int i6 = -10;
        int i19 = -2853;
        int i20 = -4427;
        int i21 = 225;
        int i22 = -8;
        int i23 = -208;
        int i24 = 244;
        float f2 = 107.336F;
        short s1 = -30986;
        byte by = -93;
        boolean b1 = true;
        for (i5 = 13; 225 > i5; ++i5) {
            Test.dFld %= 12;
            i6 = i3--;
        }
        f2 = Math.min(((int) ((--i4) - (f2 += i5))), iMeth1(52299L, false));
        i19 = 1;
        while ((++i19) < 197) {
            if (b1) {
                i3 -= -60;
                i20 = 1;
                do {
                    for (i21 = i19; i21 < 1; i21++) {
                        i6 += i21 * i21;
                    }
                    Test.instanceCount = 84;
                    for (i23 = 1; 1 > i23; ++i23) {
                        Test.instanceCount = -45618;
                        i4 += (-7) + (i23 * i23);
                        i3 += i20;
                        switch ((i23 % 10) + 1) {
                            case 1 :
                                s1 = ((short) (i19));
                                Test.iArrFld[i20] *= 8;
                                Test.iArrFld[i20 + 1] *= i6;
                                i6 += i23;
                                i24 += ((int) (1.748F));
                                if (false)
                                    break;

                                i22 -= 88;
                                i22 += i6;
                                switch (((i4 >>> 1) % 9) + 115) {
                                    case 115 :
                                        Test.dFld *= Test.instanceCount;
                                        i6 *= i5;
                                        i3 = i19;
                                        Test.instanceCount <<= i5;
                                        break;
                                    case 116 :
                                        Test.iArrFld[(i5 >>> 1) % N] &= i4;
                                        i4 <<= i5;
                                        break;
                                    case 117 :
                                        i4 += i23;
                                        i4 += i23 * i19;
                                        Test.instanceCount = Test.instanceCount;
                                        i4 += ((int) (0.85F + (i23 * i23)));
                                        by = ((byte) (-239));
                                        Test.instanceCount *= -16;
                                    case 118 :
                                        Test.instanceCount += -12;
                                        break;
                                    case 119 :
                                        if (b1)
                                            break;

                                    case 120 :
                                        i22 += i20;
                                        break;
                                    case 121 :
                                        i24 -= ((int) (Test.dFld));
                                        break;
                                    case 122 :
                                        i24 /= ((int) (i5 | 1));
                                        break;
                                    case 123 :
                                        Test.lArrFld[i19 + 1] += i22;
                                }
                                break;
                            case 2 :
                                i6 -= by;
                                break;
                            case 3 :
                                Test.instanceCount %= i19 | 1;
                            case 4 :
                                i22 = ((int) (Test.instanceCount));
                            case 5 :
                                Test.iArrFld = FuzzerUtils.int1array(N, ((int) (-10448)));
                            case 6 :
                                Test.instanceCount *= Test.instanceCount;
                                break;
                            case 7 :
                                i4 *= -634;
                                break;
                            case 8 :
                                i3 += i22;
                                break;
                            case 9 :
                                i24 = by;
                                break;
                            case 10 :
                                Test.fArrFld[i23] -= i3;
                                break;
                            default :
                                i6 = ((int) (Test.instanceCount));
                        }
                    }
                } while ((++i20) < 3 );
            } else {
                s1 |= ((short) (Test.instanceCount));
            }
        }
        vMeth_check_sum += ((((((((((((i3 + i4) + i5) + i6) + Float.floatToIntBits(f2)) + i19) + i20) + i21) + i22) + i23) + i24) + s1) + by) + (b1 ? 1 : 0);
    }

    public static int iMeth(int i1, float f1, int i2) {
        int i25 = -71;
        int i26 = -14;
        int i27 = -31407;
        int i28 = -108;
        int i29 = -4452;
        double d = 0.67562;
        boolean b2 = false;
        boolean b3 = false;
        byte by1 = 32;
        {
            final boolean ax$23 = b2;
            final long ax$24 = Test.instanceCount;
            final long ax$25 = Test.iMeth1_check_sum;
            try {
                AsynchronousChannelGroup ax$15 = null;
                for (int ax$13 = -384; ax$13 < (-384 + 18897); ax$13 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        if (b2) {
                            ax$15.shutdownNow();
                        }
                    } catch (Throwable ax$16) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$0 = true;
                    vMeth(-1201257795, -519678337);
                    Test.ax$0 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        long ax$20 = instanceCount >>> 1;
                        long ax$21 = 1000000000L >>> 1;
                        iMeth1_check_sum = ax$20 / ax$21;
                        instanceCount = ax$20 % ax$21;
                        instanceCount = (instanceCount << 1) + (instanceCount & 1);
                    } catch (Throwable ax$22) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                b2 = ax$23;
                Test.instanceCount = ax$24;
                Test.iMeth1_check_sum = ax$25;
            }
        }
        vMeth(i2, i1);
        Test.fArrFld[(i2 >>> 1) % N] += i2;
        i1 = i2;
        for (i25 = 15; i25 < 250; ++i25) {
            Test.iArrFld[i25 - 1] <<= 247;
            for (d = 3; d > i25; --d) {
                i2 -= -57710;
                i27 -= i27;
                i2 ^= -7;
                for (i28 = 1; 1 > i28; ++i28) {
                    i2 -= ((int) (f1));
                    switch (((i27 >>> 1) % 2) + 124) {
                        case 124 :
                            Test.fArrFld[i25] = i28;
                            Test.instanceCount *= i29;
                            Test.iArrFld[i25 + 1] &= ((int) (Test.instanceCount));
                            switch (((i28 % 4) * 5) + 106) {
                                case 124 :
                                    i29 = i25;
                                    b2 = false;
                                    i2 -= i29;
                                    break;
                                case 119 :
                                    i2 += i28;
                                    Test.iArrFld = Test.iArrFld;
                                case 115 :
                                    i1 += i26;
                                    Test.instanceCount -= Test.instanceCount;
                                    i26 -= ((int) (Test.instanceCount));
                                    switch (((i28 % 3) * 5) + 19) {
                                        case 20 :
                                            Test.iArrFld = FuzzerUtils.int1array(N, ((int) (10)));
                                            f1 -= f1;
                                            f1 += ((i28 * Test.instanceCount) + i2) - i29;
                                            switch (((i28 % 2) * 5) + 100) {
                                                case 103 :
                                                    Test.instanceCount &= i27;
                                                    i27 -= ((int) (Test.instanceCount));
                                                    i2 += by1;
                                                    f1 += (-60) + (i28 * i28);
                                                    f1 += ((i28 * by1) + Test.instanceCount) - f1;
                                                    by1 += ((byte) (22671 + (i28 * i28)));
                                                    i27 = -203;
                                                    break;
                                                case 106 :
                                                    try {
                                                        i26 = i1 / i28;
                                                        i1 = (-12103) % i29;
                                                        i27 = i27 / (-150);
                                                    } catch (ArithmeticException a_e) {
                                                    }
                                                    break;
                                            }
                                            break;
                                        case 28 :
                                            try {
                                                Test.iArrFld[i25] = (-30310) / i29;
                                                i26 = Test.iArrFld[i25 + 1] / i1;
                                                i27 = 36728 / i27;
                                            } catch (ArithmeticException a_e) {
                                            }
                                            break;
                                        case 23 :
                                            Test.instanceCount &= i27;
                                    }
                                    break;
                                case 110 :
                                    i26 *= i1;
                                default :
                                    if (i1 != 0) {
                                    }
                            }
                            break;
                        case 125 :
                            if (b3)
                                break;

                            break;
                        default :
                            i26 += i28;
                    }
                }
            }
        }
        long meth_res = ((((((((((i1 + Float.floatToIntBits(f1)) + i2) + i25) + i26) + Double.doubleToLongBits(d)) + i27) + i28) + i29) + (b2 ? 1 : 0)) + by1) + (b3 ? 1 : 0);
        iMeth_check_sum += meth_res;
        return ((int) (meth_res));
    }

    public void mainTest(String[] strArr1) {
        int i = 33320;
        int i30 = -1240;
        int i31 = -34131;
        int i32 = 44529;
        int i33 = -57440;
        int i34 = 2;
        int i35 = -2;
        int i37 = -218;
        float f = -93.564F;
        byte byArr[][] = new byte[N][N];
        FuzzerUtils.init(byArr, ((byte) (66)));
        Test.lArrFld[(i >>> 1) % N] = ((long) (((f + f) * (Test.instanceCount - i)) - i));
        i -= ((int) (iMeth(i, f, i) % (Test.instanceCount | 1)));
        for (i30 = 8; i30 < 174; ++i30) {
            i31 -= i30;
            Test.lArrFld[i30 - 1] += i30;
            Test.dFld += i30;
            i31 += ((i30 * i31) + Test.instanceCount) - Test.instanceCount;
            Test.bFld = Test.bFld;
            Test.iArrFld[i30 - 1] = 1171;
            switch ((i30 % 2) + 98) {
                case 98 :
                    i += 179 + (i30 * i30);
                    break;
                case 99 :
                    Test.instanceCount &= i31;
                    i32 = 1;
                    do {
                        f += ((i32 * i32) + i30) - i32;
                        for (i33 = 1; i33 < 1; ++i33) {
                            i34 |= ((int) (Test.instanceCount));
                        }
                        i += i32 ^ Test.sFld;
                        Test.iArrFld[i30] >>= Test.sFld;
                        i35 = 1;
                        while ((++i35) < 1) {
                            int i36 = 49337;
                            i34 += i35;
                            Test.iArrFld[i32 + 1] -= ((int) (Test.dFld));
                            switch ((((i >>> 1) % 1) * 5) + 81) {
                                case 82 :
                                    i += Test.sFld;
                                    break;
                                default :
                                    Test.dFld += i30;
                                    Test.sFld += ((short) (i));
                                    i36 -= i36;
                                    i36 = ((int) (Test.instanceCount));
                                    i36 += i35 - i30;
                                    Test.iArrFld[i30 + 1] -= ((int) (Test.instanceCount));
                                    switch (((i30 % 5) * 5) + 94) {
                                        case 109 :
                                        case 96 :
                                            i37 += ((int) (-2.85311));
                                            i36 *= i37;
                                            i34 += ((i35 * Test.instanceCount) + i) - Test.sFld;
                                            Test.iArrFld[i32 - 1] = i30;
                                            if (Test.bFld)
                                                continue;

                                            i36 |= ((int) (Test.instanceCount));
                                            i34 += i35;
                                            i += ((i35 * i) + i31) - byFld;
                                            i37 = i36;
                                            byArr[i35 - 1][i30] = ((byte) (i32));
                                            Test.iArrFld[i32 - 1] -= i32;
                                            i36 = i32;
                                            if (Test.bFld)
                                                continue;

                                            f = Test.instanceCount;
                                            i31 += i35;
                                            break;
                                        case 101 :
                                            Test.sFld = ((short) (iFld));
                                            switch (((i36 >>> 1) % 9) + 17) {
                                                case 17 :
                                                    i31 += ((int) (Test.instanceCount));
                                                    break;
                                                case 18 :
                                                    Test.instanceCount += i35;
                                                    i34 = byFld;
                                                    i37 = Test.sFld;
                                                    Test.instanceCount &= Test.sFld;
                                                    i += i30;
                                                    Test.instanceCount += i35;
                                                    bArrFld = bArrFld;
                                                    i31 += i35 * i31;
                                                    Test.instanceCount = i30;
                                                    if (Test.bFld)
                                                        continue;

                                                    break;
                                                case 19 :
                                                    iFld = ((int) (Test.instanceCount));
                                                    Test.instanceCount -= i31;
                                                    f += i32;
                                                    break;
                                                case 20 :
                                                    if (Test.bFld) {
                                                        if (Test.bFld) {
                                                            Test.iArrFld[i35 + 1] = ((int) (Test.instanceCount));
                                                            switch ((i30 % 2) + 73) {
                                                                case 73 :
                                                                    byFld = ((byte) (i33));
                                                                    Test.iArrFld[i32 - 1] >>= i33;
                                                                    iFld = ((int) (Test.instanceCount));
                                                                    if (Test.bFld)
                                                                        break;

                                                                    f += i35;
                                                                    i += ((int) (12L + (i35 * i35)));
                                                                    if (Test.bFld)
                                                                        break;

                                                                case 74 :
                                                                    i36 += i35 * i35;
                                                                    i31 -= ((int) (Test.dFld));
                                                                    dArrFld[i35 - 1] += Test.instanceCount;
                                                                    break;
                                                                default :
                                                                    f += i35;
                                                            }
                                                        }
                                                    } else {
                                                        i31 += ((i35 * i) + i36) - f;
                                                    }
                                                case 21 :
                                                    f /= i35 | 1;
                                                    break;
                                                case 22 :
                                                    f += i35;
                                                    break;
                                                case 23 :
                                                    Test.instanceCount /= i33 | 1;
                                                    break;
                                                case 24 :
                                                    Test.dFld -= Test.instanceCount;
                                                    break;
                                                case 25 :
                                                    Test.iArrFld = Test.iArrFld;
                                            }
                                            break;
                                        case 106 :
                                            iFld = i30;
                                        case 99 :
                                            bArrFld[i30] = Test.bFld;
                                            break;
                                    }
                            }
                        }
                    } while ((++i32) < 31 );
                    break;
            }
        }
        FuzzerUtils.out.println((((("i f i30 = " + i) + ",") + Float.floatToIntBits(f)) + ",") + i30);
        FuzzerUtils.out.println((((("i31 i32 i33 = " + i31) + ",") + i32) + ",") + i33);
        FuzzerUtils.out.println((((("i34 i35 i37 = " + i34) + ",") + i35) + ",") + i37);
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println((((("Test.instanceCount Test.dFld Test.bFld = " + Test.instanceCount) + ",") + Double.doubleToLongBits(Test.dFld)) + ",") + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println((((("Test.sFld byFld iFld = " + Test.sFld) + ",") + byFld) + ",") + iFld);
        FuzzerUtils.out.println((((("Test.lArrFld Test.fArrFld Test.iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld)) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld))) + ",") + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println((("bArrFld dArrFld = " + FuzzerUtils.checkSum(bArrFld)) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    static Boolean ax$0 = false;

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }
}
