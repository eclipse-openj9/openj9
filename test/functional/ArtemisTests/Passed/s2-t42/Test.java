// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = 19076L;

    public static boolean bFld = true;

    public static float fFld = -2.402F;

    public static double dFld = 0.93044;

    public static int iFld = -45358;

    public static float fFld1 = -2.391F;

    public static float[] fArrFld = new float[N];

    public static short[] sArrFld = new short[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.519F);
        FuzzerUtils.init(Test.sArrFld, (short) -25923);
    }

    public static long iMeth_check_sum = 0;

    public static long lMeth_check_sum = 0;

    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i4, int i5, int i6) {
        if (ax$9) {
            try {
                java.lang.String ax$10 = "4.212412566013441E-52";
                java.lang.Throwable ax$11 = new Exception();
                if (ax$11 == null)
                    ax$11 = new RuntimeException(ax$10);
            } catch (Throwable ax$12) {
            } finally {
            }
            return 512472834;
        }
        int i7 = -1, i8 = 3, i9 = 5, i10 = -58088, i11 = -2, i12 = 27268, i13 = 10861, i14 = 11, i15 = 13477, i16 = 150, iArr[][] = new int[N][N];
        short s = 18946;
        boolean[] bArr = new boolean[N];
        double[] dArr = new double[N];
        FuzzerUtils.init(iArr, 25);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(dArr, 79.29794);
        i6 = i6;
        for (i7 = 9; i7 < 209; ++i7) {
            boolean b = false;
            Test.instanceCount += i5;
            Test.instanceCount += i7;
            if (false) {
                if (false)
                    continue;
                i5 += i8;
            }
            iArr[i7][i7] = i5;
            bArr[i7 - 1] = b;
        }
        dArr[(i5 >>> 1) % N] *= i8;
        for (i9 = 5; i9 < 98; i9++) {
            for (i11 = 1; i11 < 6; i11++) {
                i12 |= i4;
                i10 = (int) Test.instanceCount;
                for (i13 = 1; i13 < 2; i13 += 3) {
                    i10 = i8;
                    i6 &= -5759;
                    Test.bFld = Test.bFld;
                    Test.fFld *= i14;
                    i10 = -64798;
                    s >>= (short) i5;
                    i14 -= i10;
                    i10 %= (int) ((long) (Test.fFld) | 1);
                    Test.fFld -= 27140;
                    i8 = (int) 32278404003340566L;
                    Test.instanceCount = i8;
                    Test.instanceCount += i6;
                    Test.fArrFld[i11 + 1] *= i6;
                    i6 = i7;
                    Test.instanceCount = 56367;
                }
                s += (short) (33888 + (i11 * i11));
                for (i15 = i9; i15 < 2; i15++) {
                    i12 = (int) Test.dFld;
                    i16 = i11;
                    Test.instanceCount += (i15 + i11);
                    iArr[i9][i9] = i16;
                    Test.dFld = -6011;
                }
            }
        }
        long meth_res = i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + s + i15 + i16 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth1_check_sum += meth_res;
        return (int) meth_res;
    }

    public static long lMeth(int i2, int i3) {
        int i17 = 79, i18 = 52, i19 = -18577, i20 = 65, i21 = 11, i22 = 61255, i23 = 14, i24 = 6, i25 = -188, iArr1[] = new int[N];
        short s1 = 1672;
        double d = 55.69682, dArr1[] = new double[N];
        float f = -1.612F, fArr[] = new float[N];
        long[] lArr = new long[N];
        FuzzerUtils.init(dArr1, -28.740);
        FuzzerUtils.init(lArr, -842572728790832788L);
        FuzzerUtils.init(iArr1, 244);
        FuzzerUtils.init(fArr, -2.15F);
        i3 -= iMeth1(i3, i3, i2);
        Test.instanceCount = Test.instanceCount;
        i2 += i2;
        switch((((i3 >>> 1) % 9) * 5) + 22) {
            case 66:
                switch((((i3 >>> 1) % 2) * 5) + 56) {
                    case 60:
                        Test.instanceCount <<= Test.instanceCount;
                        for (i17 = 1; i17 < 133; ++i17) {
                            for (i19 = 1; i19 < 4; ++i19) {
                                for (i21 = 1; i21 < 2; i21 += 3) {
                                    s1 += (short) Test.instanceCount;
                                    Test.bFld = Test.bFld;
                                    Test.fFld -= Test.fFld;
                                    dArr1[i19 - 1] += -2298929859L;
                                }
                                lArr[i19] += (long) Test.dFld;
                                try {
                                    iArr1[i17 + 1] = (i18 % i3);
                                    i18 = (-30035 % i21);
                                    i22 = (i2 / i3);
                                } catch (ArithmeticException a_e) {
                                }
                                fArr = Test.fArrFld;
                                switch((i17 % 1) + 28) {
                                    case 28:
                                        iArr1[i17] = 7;
                                        i22 |= i2;
                                        Test.fFld += (((i19 * Test.instanceCount) + Test.instanceCount) - i19);
                                        for (d = 1; d < 2; d++) {
                                            i18 += (-84 + (d * d));
                                            i23 >>>= i17;
                                            i18 += (int) (d * d);
                                            i2 *= (int) -3810L;
                                            i22 = -189;
                                        }
                                        i3 -= (int) -1016L;
                                        for (i24 = 1; i24 < 2; i24++) {
                                            i3 += i24;
                                            Test.instanceCount = i25;
                                            Test.instanceCount += (i24 ^ i21);
                                            iArr1 = iArr1;
                                            i3 += (i24 * i24);
                                        }
                                        s1 = (short) i20;
                                        i20 += (i19 - i24);
                                        Test.bFld = Test.bFld;
                                        i23 = i22;
                                        break;
                                }
                            }
                        }
                        break;
                    case 66:
                        iArr1[(i19 >>> 1) % N] += i19;
                }
                break;
            case 64:
                i25 = (int) Test.instanceCount;
                break;
            case 37:
                Test.instanceCount >>= i22;
            case 42:
                f = i18;
                break;
            case 29:
                lArr[(i19 >>> 1) % N] = 38922;
                break;
            case 36:
                lArr[(i17 >>> 1) % N] *= i19;
                break;
            case 55:
                iArr1[(i22 >>> 1) % N] += i23;
                break;
            case 45:
                i23 *= i18;
                break;
            case 25:
                i18 = i25;
                break;
        }
        long meth_res = i2 + i3 + i17 + i18 + i19 + i20 + i21 + i22 + s1 + Double.doubleToLongBits(d) + i23 + i24 + i25 + Float.floatToIntBits(f) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long) meth_res;
    }

    public static int iMeth() {
        int i26 = -52040, i27 = 89, i28 = 22128, i29 = -7, i30 = -12854, iArr2[] = new int[N];
        short s2 = -25127, s3 = -29517;
        float f1 = 7.815F;
        byte by1 = -40;
        long[] lArr1 = new long[N];
        FuzzerUtils.init(iArr2, 176);
        FuzzerUtils.init(lArr1, -136L);
        lMeth(Test.iFld, Test.iFld);
        for (i26 = 2; i26 < 250; i26++) {
            s2 *= (short) Test.dFld;
            s2 -= (short) i27;
            iArr2[i26 - 1] = 220;
            for (i28 = 1; i28 < 3; ++i28) {
                f1 = 1;
                do {
                    i27 = i29;
                    i29 = (int) -34.102639;
                    iArr2[i26] = (int) Test.instanceCount;
                    Test.fFld -= (float) 0.66025;
                    i27 += (int) (((f1 * Test.instanceCount) + i29) - Test.instanceCount);
                    switch((int) ((f1 % 8) + 10)) {
                        case 10:
                            try {
                                iArr2[i28] = (i27 % i29);
                                i27 = (Test.iFld % -20008);
                                Test.iFld = (i30 / i27);
                            } catch (ArithmeticException a_e) {
                            }
                            Test.instanceCount -= Test.instanceCount;
                            i27 -= (int) Test.instanceCount;
                            Test.instanceCount >>= i28;
                            if (Test.bFld)
                                break;
                            iArr2[(13 >>> 1) % N] *= s2;
                            switch(((i26 % 10) * 5) + 48) {
                                case 74:
                                    if (i27 != 0) {
                                    }
                                    s3 = (short) Test.iFld;
                                    i30 = (int) Test.instanceCount;
                                    switch(((i26 % 8) * 5) + 78) {
                                        case 102:
                                            i27 = i26;
                                            i29 += Test.iFld;
                                            by1 |= by1;
                                            Test.iFld = i26;
                                            switch(((i30 >>> 1) % 2) + 62) {
                                                case 62:
                                                    Test.instanceCount = i30;
                                                    switch((int) ((f1 % 4) + 116)) {
                                                        case 116:
                                                            Test.dFld += Test.iFld;
                                                            break;
                                                        case 117:
                                                            iArr2 = iArr2;
                                                            Test.iFld += by1;
                                                            s3 = (short) Test.instanceCount;
                                                            i27 = -201;
                                                            Test.instanceCount -= 6;
                                                            break;
                                                        case 118:
                                                        case 119:
                                                            iArr2[(int) (f1 - 1)] -= i26;
                                                            break;
                                                    }
                                                    break;
                                                case 63:
                                                    try {
                                                        iArr2[(int) (f1 + 1)] = (550997410 % iArr2[i26]);
                                                        iArr2[(int) (f1)] = (i30 / Test.iFld);
                                                        i27 = (i29 / 802534354);
                                                    } catch (ArithmeticException a_e) {
                                                    }
                                            }
                                            break;
                                        case 113:
                                            iArr2[(int) (f1 - 1)] = (int) f1;
                                            break;
                                        case 91:
                                            Test.sArrFld[i26 + 1] = (short) i27;
                                            break;
                                        case 106:
                                            i29 >>= i26;
                                            break;
                                        case 111:
                                            Test.fFld -= 6687928953423212999L;
                                            break;
                                        case 107:
                                            i29 >>= 152;
                                            break;
                                        case 95:
                                            Test.fFld *= i29;
                                            break;
                                        case 97:
                                            Test.iFld &= by1;
                                            break;
                                    }
                                    break;
                                case 58:
                                    Test.iFld += (int) f1;
                                case 51:
                                    Test.instanceCount = Test.iFld;
                                    break;
                                case 65:
                                    lArr1[(int) (f1)] = i27;
                                    break;
                                case 57:
                                    i27 >>>= (int) Test.instanceCount;
                                    break;
                                case 94:
                                    s3 = (short) Test.iFld;
                                    break;
                                case 63:
                                    Test.iFld *= (int) Test.instanceCount;
                                    break;
                                case 85:
                                    i29 = i30;
                                    break;
                                case 66:
                                    i27 += (int) Test.instanceCount;
                                    break;
                                case 80:
                                    i29 += s2;
                                    break;
                            }
                        case 11:
                            Test.instanceCount += (long) (((f1 * i28) + s2) - i29);
                        case 12:
                            by1 += (byte) (((f1 * Test.fFld) + i26) - i27);
                        case 13:
                            i30 = (int) 2.230F;
                        case 14:
                            if (true)
                                continue;
                        case 15:
                            Test.iFld += (int) f1;
                        case 16:
                        case 17:
                            Test.fFld -= Test.instanceCount;
                            break;
                        default:
                            Test.iFld = (int) Test.instanceCount;
                    }
                } while (++f1 < 2);
            }
        }
        long meth_res = i26 + i27 + s2 + i28 + i29 + Float.floatToIntBits(f1) + i30 + s3 + by1 + FuzzerUtils.checkSum(iArr2) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public void mainTest(String[] strArr1) {
        byte by = -121, byArr[] = new byte[N];
        int i = 11, i1 = -13, i31 = -90, i32 = -5, i33 = 54109, i34 = -1, i35 = 52, i36 = -23516, i37 = -62, iArr3[][] = new int[N][N];
        long l = 0L, lArr2[] = new long[N];
        short s4 = 28201;
        float f2 = 2.425F;
        double[] dArr2 = new double[N];
        FuzzerUtils.init(byArr, (byte) -70);
        FuzzerUtils.init(iArr3, -30933);
        FuzzerUtils.init(lArr2, 2818667085L);
        FuzzerUtils.init(dArr2, -36.66078);
        by ^= (byte) (-((-(Test.instanceCount + i)) * (-i)));
        for (l = 9; l < 158; ++l) {
            if (true) {
                Test.instanceCount = iMeth();
                Test.fFld += 86;
                i1 -= i;
                i = s4;
                byArr[(int) (l)] = (byte) Test.instanceCount;
                try {
                    i = (Test.iFld % -120);
                    i1 = (Test.iFld / 1437494232);
                    Test.iFld = (Test.iFld / -203);
                } catch (ArithmeticException a_e) {
                }
                {
                    java.io.PrintStream ax$6 = System.out;
                    java.io.PrintStream ax$7 = System.err;
                    java.io.PrintStream ax$8 = new java.io.PrintStream(new java.io.OutputStream() {

                        @Override
                        public void write(int b) throws java.io.IOException {
                            // DO NOTHING: DISCARD ALL OUTPUTS
                        }
                    });
                    System.setOut(ax$8);
                    System.setErr(ax$8);
                    try {
                        for (int ax$4 = -794; ax$4 < 5150; ax$4 += 1) {
                            try {
                                boolean[] ax$2 = new boolean[] { true, true, false, true, false };
                                boolean ax$0 = true;
                                for (int ax$1 = 0; ax$1 < ax$2.length; ax$1++) {
                                    ax$2[ax$1] = ax$0;
                                    if (ax$1 == 10)
                                        ax$0 = !ax$0;
                                }
                            } catch (Throwable ax$3) {
                            } finally {
                            }
                        }
                    } catch (Throwable ax$5) {
                    }
                    System.setOut(ax$6);
                    System.setErr(ax$7);
                }
                Test.iFld = i;
                i -= (int) l;
                by += (byte) i;
                for (i31 = 2; i31 < 34; i31++) {
                    Test.iFld -= -31500;
                    i32 += (((i31 * Test.iFld) + l) - Test.fFld);
                    i1 += (i31 * i31);
                    Test.dFld += i31;
                    iArr3[i31][i31] = i;
                    Test.dFld += i1;
                    Test.fFld += -1;
                    iArr3[(int) (l)] = FuzzerUtils.int1array(N, (int) 97);
                    i += (i31 - i1);
                    i *= (int) Test.fFld;
                    switch(((-60854 >>> 1) % 2) + 85) {
                        case 85:
                            i32 %= (int) (i | 1);
                            i = Test.iFld;
                            Test.iFld -= Test.iFld;
                            i += (((i31 * i31) + i31) - i);
                            i32 += (i31 * i31);
                            iArr3[i31][i31] = i31;
                            i1 += (37842 + (i31 * i31));
                            for (f2 = l; f2 < 2; f2 += 2) {
                                iArr3[i31 - 1] = FuzzerUtils.int1array(N, (int) 0);
                                Test.iFld += (int) (f2 * f2);
                                i *= (int) Test.fFld;
                                i32 *= (int) l;
                                Test.fFld *= Test.fFld;
                                lArr2[(int) (f2)] -= i32;
                                i += (int) 7L;
                                iArr3[(int) (f2)][(i33 >>> 1) % N] *= (int) 14.767F;
                                i33 -= i32;
                                Test.iFld <<= i1;
                                iArr3[i31 - 1] = iArr3[i31];
                                Test.bFld = Test.bFld;
                                Test.dFld *= i;
                            }
                            Test.fFld = f2;
                            Test.fFld *= -12;
                            break;
                        case 86:
                            switch((int) ((l % 10) + 127)) {
                                case 127:
                                    i34 = 1;
                                    while (++i34 < 2) {
                                        Test.instanceCount ^= Test.instanceCount;
                                        iArr3[i34 + 1][(239 >>> 1) % N] >>= i34;
                                        i = i1;
                                        i32 = i33;
                                    }
                                    Test.fFld1 = 1353776387L;
                                    switch((int) ((l % 7) + 95)) {
                                        case 95:
                                            Test.iFld -= i35;
                                            i32 += (((i31 * Test.iFld) + Test.iFld) - Test.fFld);
                                            Test.dFld *= 101.662F;
                                            i1 += (int) 1.464F;
                                            lArr2[(int) (l - 1)] = l;
                                            Test.fFld %= ((long) (f2) | 1);
                                            for (i36 = 1; i36 < 2; ++i36) {
                                                iArr3[(int) (l + 1)][(int) (l - 1)] += i31;
                                                Test.fFld1 += (float) Test.dFld;
                                                iArr3[i36 + 1] = iArr3[(int) (l - 1)];
                                                i1 += i36;
                                                if (Test.bFld) {
                                                    dArr2[i36 - 1] += i31;
                                                    i33 += (i36 * l);
                                                } else {
                                                    Test.fFld -= l;
                                                    Test.instanceCount += (((i36 * i) + Test.fFld1) - i31);
                                                    i33 += i36;
                                                    lArr2[(int) (l)] = Test.instanceCount;
                                                    i35 = i34;
                                                    Test.instanceCount = 9;
                                                }
                                            }
                                            break;
                                        case 96:
                                            i33 -= Test.iFld;
                                        case 97:
                                            i += i31;
                                            break;
                                        case 98:
                                            i33 -= 2;
                                            break;
                                        case 99:
                                        case 100:
                                            i <<= i34;
                                        case 101:
                                            i35 = 25796;
                                        default:
                                            iArr3[i31 - 1] = iArr3[(int) (l)];
                                    }
                                    break;
                                case 128:
                                    Test.instanceCount <<= l;
                                    break;
                                case 129:
                                    s4 = (short) -89.74220;
                                case 130:
                                    iArr3[(i37 >>> 1) % N][(int) (l)] >>= i36;
                                    break;
                                case 131:
                                    try {
                                        Test.iFld = (i37 % iArr3[i31][i31 + 1]);
                                        i33 = (-168 / i36);
                                        iArr3[i31][(int) (l - 1)] = (-31944 / i35);
                                    } catch (ArithmeticException a_e) {
                                    }
                                    break;
                                case 132:
                                    i = (int) l;
                                case 133:
                                    by >>= (byte) i;
                                    break;
                                case 134:
                                case 135:
                                    s4 -= (short) Test.iFld;
                                    break;
                                case 136:
                                    Test.fFld = 93L;
                                    break;
                                default:
                                    Test.dFld = Test.iFld;
                            }
                            break;
                    }
                }
            }
        }
        FuzzerUtils.out.println("by i l = " + by + "," + i + "," + l);
        FuzzerUtils.out.println("i1 s4 i31 = " + i1 + "," + s4 + "," + i31);
        FuzzerUtils.out.println("i32 f2 i33 = " + i32 + "," + Float.floatToIntBits(f2) + "," + i33);
        FuzzerUtils.out.println("i34 i35 i36 = " + i34 + "," + i35 + "," + i36);
        FuzzerUtils.out.println("i37 byArr iArr3 = " + i37 + "," + FuzzerUtils.checkSum(byArr) + "," + FuzzerUtils.checkSum(iArr3));
        FuzzerUtils.out.println("lArr2 dArr2 = " + FuzzerUtils.checkSum(lArr2) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr2)));
        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.fFld = " + Test.instanceCount + "," + (Test.bFld ? 1 : 0) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.dFld Test.iFld Test.fFld1 = " + Double.doubleToLongBits(Test.dFld) + "," + Test.iFld + "," + Float.floatToIntBits(Test.fFld1));
        FuzzerUtils.out.println("Test.fArrFld Test.sArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.sArrFld));
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$9 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  iMeth ->  iMeth mainTest
// DEBUG  lMeth ->  lMeth iMeth mainTest
// DEBUG  iMeth1 ->  iMeth1 lMeth iMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
