// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Locale;

public class Test {
    public static final int N = 256;

    public static long instanceCount = 11L;

    public static double dFld = 2.60485;

    public static float fFld = -1.754F;

    public volatile short sFld = -6444;

    public byte byFld = 127;

    public static float fArrFld[] = new float[N];

    public long lArrFld[][] = new long[N][N];

    public int iArrFld[] = new int[N];

    public static volatile byte byArrFld[] = new byte[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 31.57F);
        FuzzerUtils.init(Test.byArrFld, ((byte) (4)));
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3, int i4) {
        byte by = -76;
        boolean b = true;
        boolean b1 = true;
        boolean bArr[] = new boolean[N];
        int i5 = -3;
        int i6 = 61216;
        int i7 = -7;
        int i8 = -16179;
        int i9 = -70;
        int i10 = 11;
        int iArr[][] = new int[N][N];
        float f = -4.54F;
        float fArr[] = new float[N];
        FuzzerUtils.init(iArr, 6114);
        FuzzerUtils.init(fArr, 4.464F);
        FuzzerUtils.init(bArr, false);
        Test.instanceCount = by;
        i3 -= ((int) (Test.instanceCount));
        b = b;
        for (i5 = 5; i5 < 252; ++i5) {
            for (i7 = 3; i7 > i5; --i7) {
                iArr[i7][(i7 >>> 1) % N] = -126;
                f = Test.instanceCount;
                for (i9 = 1; 1 > i9; i9++) {
                    short s1 = -25732;
                    int i11 = -9;
                    i10 += i9;
                    i4 = i8;
                    f += Test.instanceCount;
                    i10 = ((int) (Test.instanceCount));
                    fArr[i7 + 1] = i10;
                    if (i7 != 0) {
                    }
                    f %= s1 | 1;
                    i8 >>= i4;
                    Test.instanceCount += i8;
                    i11 += i3;
                    switch (((0 >>> 1) % 2) + 26) {
                        case 26 :
                            try {
                                i11 = i8 % i6;
                                iArr[i7][i7 + 1] = 214 % i5;
                                i8 = 1937257015 / i9;
                            } catch (ArithmeticException a_e) {
                            }
                            switch (((i9 % 2) * 5) + 75) {
                                case 77 :
                                    try {
                                        i6 = 237 % iArr[i5][i9];
                                        i10 = i11 % i10;
                                        i11 = 11617 / i7;
                                    } catch (ArithmeticException a_e) {
                                    }
                                    switch (((i5 % 10) * 5) + 26) {
                                        case 63 :
                                            i11 *= ((int) (f));
                                            try {
                                                i6 = i6 % i11;
                                                i3 = iArr[i7][i7] % iArr[i5 + 1][i7];
                                                i4 = i7 % i6;
                                            } catch (ArithmeticException a_e) {
                                            }
                                            i6 = i3;
                                            Test.instanceCount = i11;
                                            try {
                                                i8 = (-126) / i4;
                                                i4 = iArr[(i9 >>> 1) % N][i7] % i6;
                                                i11 = i4 / i8;
                                            } catch (ArithmeticException a_e) {
                                            }
                                            i10 = i10;
                                            b = b;
                                            iArr[i5 - 1] = iArr[i5 - 1];
                                            Test.instanceCount -= i5;
                                            iArr[i7 - 1] = iArr[i9 - 1];
                                            i3 += i11;
                                        case 39 :
                                            by = ((byte) (i7));
                                            by = ((byte) (i3));
                                            bArr[i9] = b1;
                                            break;
                                        case 62 :
                                            i11 -= ((int) (-249L));
                                            break;
                                        case 56 :
                                            Test.dFld -= i5;
                                            break;
                                        case 40 :
                                            s1 += ((short) (i9 ^ by));
                                        case 67 :
                                            i3 = ((int) (1.51F));
                                        case 50 :
                                            if (b)
                                                break;

                                            break;
                                        case 30 :
                                            Test.instanceCount += i9;
                                            break;
                                        case 44 :
                                            Test.instanceCount += Test.instanceCount;
                                            break;
                                        case 46 :
                                            i11 += ((i9 * s1) + f) - f;
                                    }
                                    break;
                                case 81 :
                                    Test.instanceCount = i6;
                                    break;
                            }
                            break;
                        case 27 :
                            by += ((byte) (i9 * i9));
                            break;
                        default :
                            i6 += ((i9 * i9) + Test.instanceCount) - i6;
                    }
                }
            }
        }
        long meth_res = (((((((((((((i3 + i4) + by) + (b ? 1 : 0)) + i5) + i6) + i7) + i8) + Float.floatToIntBits(f)) + i9) + i10) + (b1 ? 1 : 0)) + FuzzerUtils.checkSum(iArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))) + FuzzerUtils.checkSum(bArr);
        iMeth_check_sum += meth_res;
        return ((int) (meth_res));
    }

    public static void vMeth1(int i1, int i2, short s) {
        if (Test.ax$14) {
            final float ax$23 = Test.fFld;
            int ax$15 = -1597726073;
            Test.AxOutputRedirectionHelper.redirect();
            try {
                for (int ax$17 = 0; ax$17 < 5; ax$17++) {
                    for (int ax$18 = 0; ax$18 < 5; ax$18++) {
                        for (int ax$19 = 0; ax$19 < 5; ax$19++) {
                            int ax$20 = ((int) (new Integer(((int) (new Integer(ax$15))))));
                            if (((boolean) (new Boolean(false)))) {
                                for (int ax$21 = 576 - 1; ax$21 >= 0; ax$21--) {
                                    fFld -= 9.7698138E8F;
                                }
                            }
                        }
                    }
                }
            } catch (Throwable ax$22) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            Test.fFld = ax$23;
            return;
        }
        Test.instanceCount *= iMeth(i2, i1) ^ i1;
        vMeth1_check_sum += (i1 + i2) + s;
    }

    public static void vMeth(double d) {
        if (Test.ax$0) {
            Exception ax$1 = new Exception();
            Test.AxOutputRedirectionHelper.redirect();
            try {
                if (ax$1 != null);
            } catch (Throwable ax$2) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            return;
        }
        int i = -16;
        int i12 = 25935;
        int i13 = 4827;
        int i14 = -8;
        int i15 = -41;
        int i16 = 20;
        int i17 = -55;
        int i18 = 41611;
        int iArr1[] = new int[N];
        float f1 = -15.891F;
        byte by1 = 46;
        byte byArr[] = new byte[N];
        boolean b2 = true;
        FuzzerUtils.init(iArr1, -51921);
        FuzzerUtils.init(byArr, ((byte) (65)));
        i += ((int) (d -= -(i * Test.instanceCount)));
        i *= ((i = i) - i) + ((i++) - (i--));
        {
            final int ax$30 = i14;
            try {
                BigDecimal ax$26 = new BigDecimal("8987654321");
                for (int ax$24 = -536; ax$24 < (-536 + 12097); ax$24 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        new SimpleDateFormat("yy", ((Locale) (null)));
                    } catch (Throwable ax$25) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$14 = true;
                    vMeth1(-516339322, 847908812, ((short) (-13603)));
                    Test.ax$14 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        try {
                            ax$26 = new BigDecimal("1e2147483647").add(new BigDecimal(1));
                            i14++;
                        } catch (ArithmeticException ax$28) {
                        }
                    } catch (Throwable ax$29) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                i14 = ax$30;
            }
        }
        vMeth1(i, i, ((short) (-24406)));
        for (f1 = 1; f1 < 143; f1++) {
            if (b2) {
                switch (((int) ((f1 % 1) + 73))) {
                    case 73 :
                        Test.fArrFld[((int) (f1 - 1))] = i12;
                        if (false)
                            break;

                        for (i13 = 1; 4 > i13; ++i13) {
                            i = i14;
                            i14 = 235;
                            Test.fArrFld[((int) (f1))] *= i14;
                            i15 = 1;
                            do {
                                if (b2) {
                                    i14 *= i12;
                                    try {
                                        i12 = iArr1[i13] / 196;
                                        i14 = i14 % (-8092);
                                        i16 = i % i;
                                    } catch (ArithmeticException a_e) {
                                    }
                                    i12 -= ((int) (Test.instanceCount));
                                } else if (b2) {
                                    i14 += (-153) + (i15 * i15);
                                    switch (((int) ((f1 % 3) + 42))) {
                                        case 42 :
                                            i16 >>= by1;
                                            by1 *= ((byte) (-43230));
                                            try {
                                                i14 = i14 % (-18168);
                                                i = i / i16;
                                                i17 = 11133 % i13;
                                            } catch (ArithmeticException a_e) {
                                            }
                                            Test.fFld += i12;
                                            i12 += i;
                                            i = i16;
                                            i = 60990;
                                            break;
                                        case 43 :
                                            Test.instanceCount += i15;
                                            i += i15 ^ i15;
                                            Test.instanceCount <<= i16;
                                            break;
                                        case 44 :
                                            iArr1[((int) (f1))] *= i14;
                                            Test.instanceCount -= ((long) (d));
                                            b2 = b2;
                                            iArr1[i15] = ((int) (Test.instanceCount));
                                            switch (((i15 % 9) * 5) + 41) {
                                                case 60 :
                                                    iArr1[i13 - 1] *= i;
                                                    i17 += i15 - i17;
                                                    i16 = ((int) (f1));
                                                    break;
                                                case 49 :
                                                    Test.fFld -= i12;
                                                    break;
                                                case 42 :
                                                    i18 <<= by1;
                                                case 47 :
                                                    Test.instanceCount |= i12;
                                                    break;
                                                case 56 :
                                                    Test.fArrFld[i15 + 1] -= i15;
                                                case 59 :
                                                    byArr[i13] *= ((byte) (i18));
                                                    break;
                                                case 68 :
                                                case 82 :
                                                    i14 += i15 + i13;
                                                case 71 :
                                                    iArr1[((int) (f1 + 1))] = ((int) (Test.instanceCount));
                                                    break;
                                                default :
                                                    i -= ((int) (d));
                                            }
                                    }
                                }
                            } while ((++i15) < 2 );
                        }
                }
            }
        }
        vMeth_check_sum += ((((((((((((Double.doubleToLongBits(d) + i) + Float.floatToIntBits(f1)) + i12) + i13) + i14) + i15) + i16) + by1) + i17) + (b2 ? 1 : 0)) + i18) + FuzzerUtils.checkSum(iArr1)) + FuzzerUtils.checkSum(byArr);
    }

    public void mainTest(String[] strArr1) {
        int i19 = -8;
        int i20 = 12;
        int i21 = 25101;
        int i22 = -244;
        int i23 = 6;
        int i24 = 19;
        int i25 = -51158;
        int i26 = -8;
        boolean b3 = true;
        double dArr[] = new double[N];
        short sArr[] = new short[N];
        FuzzerUtils.init(dArr, -2.78814);
        FuzzerUtils.init(sArr, ((short) (-20108)));
        {
            final int ax$13 = i23;
            try {
                byte[] ax$4 = new byte[10];
                char[] ax$5 = new char[]{ ((char) (0xf3f4)) };
                String[] ax$9 = new String[]{ "s", "s" };
                String[] ax$10 = new String[]{ "s", "s" };
                for (int ax$3 = -14; ax$3 < (-14 + 6745); ax$3 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        for (int ax$7 = 0; ax$7 < i23; ax$7++) {
                            ax$5[ax$7] = ((char) (-1));
                            ax$4[ax$7] = ((byte) (-1));
                        }
                    } catch (Throwable ax$8) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$0 = true;
                    vMeth(0.024438400057479326);
                    Test.ax$0 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        for (int ax$11 = 0; ax$11 < ax$9.length; ax$11++) {
                            if (ax$9[ax$11] != ax$10[ax$11]) {
                            }
                        }
                    } catch (Throwable ax$12) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                i23 = ax$13;
            }
        }
        vMeth(Test.dFld);
        lArrFld[(i19 >>> 1) % N][(i19 >>> 1) % N] *= ((long) (-2.659F));
        for (i20 = 9; 167 > i20; i20 += 3) {
            Test.fFld = Test.instanceCount;
            for (i22 = 1; 97 > i22; i22++) {
                for (i24 = 1; i24 < 2; i24++) {
                    try {
                        i23 = i23 / (-176);
                        iArrFld[i22 - 1] = 273504786 % i19;
                        i23 = i21 / i19;
                    } catch (ArithmeticException a_e) {
                    }
                    dArr[i22 + 1] *= i25;
                    i21 >>= 4;
                    Test.instanceCount += i23;
                    switch ((i22 % 2) + 109) {
                        case 109 :
                            i21 -= i22;
                            i23 *= ((int) (72.41298));
                            Test.instanceCount += i24;
                            iArrFld[i20] *= i21;
                            Test.instanceCount += i24;
                            i23 = i23;
                            if (true)
                                continue;

                            Test.instanceCount /= i19 | 1;
                            break;
                        case 110 :
                            i21 = i24;
                            Test.fFld -= Test.fFld;
                            Test.fFld += ((i24 * i23) + i23) - Test.fFld;
                            i23 *= i24;
                            break;
                        default :
                            i21 = -5261;
                    }
                    Test.instanceCount = 55623;
                    i23 = i22;
                    switch ((i22 % 5) + 63) {
                        case 63 :
                        case 64 :
                            i23 += i24 * i19;
                            i21 += ((int) (Test.instanceCount));
                            break;
                        case 65 :
                            i19 = i23;
                            break;
                        case 66 :
                            sFld >>= ((short) (i20));
                            iArrFld[i22 - 1] += ((int) (Test.instanceCount));
                            i25 >>= i20;
                            try {
                                iArrFld[i24 + 1] = (-469) / i20;
                                i23 = (-62) / i24;
                                i23 = (-1432804513) / i23;
                            } catch (ArithmeticException a_e) {
                            }
                            break;
                        case 67 :
                            Test.dFld += i21;
                            if (b3) {
                                switch ((((14040 >>> 1) % 2) * 5) + 7) {
                                    case 17 :
                                        i21 >>= -9944;
                                        switch (((i22 % 5) * 5) + 53) {
                                            case 59 :
                                                switch ((((i19 >>> 1) % 7) * 5) + 90) {
                                                    case 116 :
                                                        Test.instanceCount = i20;
                                                        break;
                                                    case 93 :
                                                        Test.dFld -= Test.instanceCount;
                                                        Test.dFld = i19;
                                                        b3 = b3;
                                                        byFld -= ((byte) (i23));
                                                        Test.fFld += i24 - i22;
                                                        i21 += ((i24 * i19) + i20) - i23;
                                                        break;
                                                    case 124 :
                                                        i23 /= ((int) (Test.instanceCount | 1));
                                                        i23 += 6 + (i24 * i24);
                                                        i25 += ((int) (Test.instanceCount));
                                                        if (b3)
                                                            continue;

                                                        if (b3)
                                                            break;

                                                        lArrFld[i22 - 1][i24] = sFld;
                                                        Test.instanceCount *= i22;
                                                        Test.instanceCount = i19;
                                                        if (b3)
                                                            break;

                                                        i23 = i20;
                                                        sArr[i20 - 1] = ((short) (i24));
                                                        i25 = ((int) (-7L));
                                                        i25 >>>= i20;
                                                        break;
                                                    case 98 :
                                                        Test.instanceCount = i26;
                                                        i25 += -155;
                                                        Test.instanceCount += i19;
                                                        Test.fFld = i26;
                                                        Test.fFld += ((i24 * i19) + i25) - Test.instanceCount;
                                                        Test.instanceCount = 10L;
                                                        i23 += (-234) + (i24 * i24);
                                                        byFld = ((byte) (i21));
                                                        i23 += ((i24 * i19) + i22) - i23;
                                                        i19 <<= i22;
                                                        Test.instanceCount = Test.instanceCount;
                                                        iArrFld = iArrFld;
                                                        i26 += i25;
                                                        break;
                                                    case 97 :
                                                        i26 += i24 * byFld;
                                                        i26 += ((i24 * i25) + i19) - i22;
                                                    case 125 :
                                                        i25 = ((int) (Test.dFld));
                                                        break;
                                                    case 92 :
                                                        i21 += -18230;
                                                        break;
                                                }
                                                break;
                                            case 66 :
                                                iArrFld = iArrFld;
                                            case 74 :
                                                i23 >>= i21;
                                            case 71 :
                                                i21 = ((int) (Test.instanceCount));
                                                break;
                                            case 65 :
                                                dArr[i22] = byFld;
                                            default :
                                                Test.fFld = ((float) (0.43025));
                                        }
                                        break;
                                    case 8 :
                                        Test.dFld = byFld;
                                        break;
                                    default :
                                        iArrFld[i24 + 1] += ((int) (Test.dFld));
                                }
                            } else if (b3) {
                                i23 *= ((int) (Test.fFld));
                            } else if (b3) {
                                Test.byArrFld = FuzzerUtils.byte1array(N, ((byte) (-95)));
                            } else {
                                Test.fFld = i20;
                            }
                        default :
                            if (b3)
                                break;

                    }
                }
            }
        }
        FuzzerUtils.out.println((((("i19 i20 i21 = " + i19) + ",") + i20) + ",") + i21);
        FuzzerUtils.out.println((((("i22 i23 i24 = " + i22) + ",") + i23) + ",") + i24);
        FuzzerUtils.out.println((((("i25 b3 i26 = " + i25) + ",") + (b3 ? 1 : 0)) + ",") + i26);
        FuzzerUtils.out.println((("dArr sArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr))) + ",") + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println((((("Test.instanceCount Test.dFld Test.fFld = " + Test.instanceCount) + ",") + Double.doubleToLongBits(Test.dFld)) + ",") + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println((((("sFld byFld Test.fArrFld = " + sFld) + ",") + byFld) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println((((("lArrFld iArrFld Test.byArrFld = " + FuzzerUtils.checkSum(lArrFld)) + ",") + FuzzerUtils.checkSum(iArrFld)) + ",") + FuzzerUtils.checkSum(Test.byArrFld));
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    static Boolean ax$0 = false;

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }

    static Boolean ax$14 = false;
}