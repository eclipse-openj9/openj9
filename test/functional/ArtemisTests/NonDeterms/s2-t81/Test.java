// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static volatile long instanceCount = 1L;

    public static volatile double dFld = 2.94494;

    public static float fFld = -2.982F;

    public static int iFld = 194;

    public long[] lArrFld = new long[N];

    public static float[] fArrFld = new float[N];

    public static double[] dArrFld = new double[N];

    public static long[] lArrFld1 = new long[N];

    public static int[] iArrFld = new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.655F);
        FuzzerUtils.init(Test.dArrFld, 2.109517);
        FuzzerUtils.init(Test.lArrFld1, 2716989008L);
        FuzzerUtils.init(Test.iArrFld, -30474);
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {
        int i6 = -240, i7 = -47509, i8 = 18652, i9 = 40503, i10 = -14, i11 = 4, i12 = 103, i13 = -141, i14 = -85, i15 = 7242, i16 = -13, i17 = -40, iArr[] = new int[N], iArr1[] = new int[N];
        short s = -25371;
        boolean b = false;
        long[] lArr = new long[N];
        FuzzerUtils.init(iArr, -3271);
        FuzzerUtils.init(lArr, -9L);
        FuzzerUtils.init(iArr1, -221);
        i6 += i6;
        i6 -= (int) Test.dFld;
        for (i7 = 10; i7 < 250; i7++) {
            i6 += i6;
        }
        iArr[(12 >>> 1) % N] += (int) -4046407459190826102L;
        lArr[(i6 >>> 1) % N] ^= s;
        i9 = 1;
        while (++i9 < 211) {
            lArr[i9] += Test.instanceCount;
            Test.fFld -= i6;
        }
        for (i10 = 8; i10 < 188; i10++) {
            Test.instanceCount += (i10 | i8);
            i12 = 1;
            do {
                Test.fFld += Test.instanceCount;
                i13 = 1;
                do {
                    if (false)
                        break;
                } while (++i13 < 1);
                i11 -= (int) Test.dFld;
                b = b;
                Test.instanceCount += i12;
            } while (++i12 < 3);
            Test.fArrFld[i10 - 1] *= Test.fFld;
            switch((i10 % 1) + 48) {
                case 48:
                    if (b)
                        continue;
                    Test.instanceCount -= i7;
                    i8 = i10;
                    for (i14 = i10; i14 < 3; ++i14) {
                        i11 -= 10;
                        i11 += (int) Test.instanceCount;
                        iArr[i14 - 1] *= i6;
                        i6 *= (int) Test.instanceCount;
                        i11 = i9;
                    }
                    Test.instanceCount += (long) Test.dFld;
                    Test.instanceCount = i8;
                    for (i16 = 1; 3 > i16; ++i16) {
                        Test.instanceCount <<= i13;
                        i17 = (int) Test.instanceCount;
                        i6 -= i13;
                        if (Test.iFld != 0) {
                            vMeth2_check_sum += i6 + i7 + i8 + s + i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0) + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
                            return;
                        }
                        iArr1[i10 - 1] -= i12;
                    }
                    break;
            }
        }
        vMeth2_check_sum += i6 + i7 + i8 + s + i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0) + i14 + i15 + i16 + i17 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1(int i4) {
        int i5 = -22757, i18 = -12, i19 = 10, iArr2[] = new int[N];
        boolean b1 = true;
        long l1 = -5L;
        short[] sArr = new short[N];
        FuzzerUtils.init(sArr, (short) 5153);
        FuzzerUtils.init(iArr2, -44519);
        i5 = 1;
        while (++i5 < 206) {
            vMeth2();
            Test.instanceCount ^= Test.iFld;
            i18 = 3;
            while ((i18 -= 2) > 0) {
                Test.fFld += Test.instanceCount;
                switch((i5 % 2) + 123) {
                    case 123:
                        if (b1)
                            continue;
                        Test.fFld = -56836;
                        i4 <<= i5;
                        i4 -= i4;
                        for (l1 = 2; l1 > i5; l1 -= 3) {
                            i4 = i5;
                            if (true)
                                continue;
                            Test.instanceCount = -7;
                            i19 = i4;
                            i4 = (int) Test.instanceCount;
                            i4 *= (int) l1;
                            i4 = 0;
                            if (b1)
                                continue;
                            switch((i18 % 4) + 81) {
                                case 81:
                                    Test.iFld = i18;
                                    break;
                                case 82:
                                    i4 += (int) (((l1 * l1) + i5) - i4);
                                    i4 = i4;
                                    break;
                                case 83:
                                    if (b1)
                                        continue;
                                    i4 += i5;
                                    i4 = (int) l1;
                                    Test.iFld &= i18;
                                    if (b1) {
                                        switch((i5 % 2) + 26) {
                                            case 26:
                                            case 27:
                                                Test.instanceCount = i5;
                                                i4 |= i5;
                                                Test.instanceCount -= 3;
                                                Test.instanceCount |= i4;
                                                i19 *= (int) l1;
                                                sArr[i18 + 1] = (short) i19;
                                                i19 += (int) (((l1 * Test.instanceCount) + l1) - Test.instanceCount);
                                                i4 += (int) (l1 * l1);
                                                break;
                                            default:
                                                if (b1)
                                                    break;
                                        }
                                    } else if (b1) {
                                        i4 = 38691;
                                    } else {
                                        Test.instanceCount += (l1 - i5);
                                    }
                                    break;
                                case 84:
                                    iArr2[i18 - 1] *= (int) Test.dFld;
                                default:
                                    iArr2[(int) (l1)] -= Test.iFld;
                            }
                        }
                        break;
                    case 124:
                        if (i19 != 0) {
                            vMeth1_check_sum += i4 + i5 + i18 + (b1 ? 1 : 0) + l1 + i19 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr2);
                            return;
                        }
                        break;
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + i18 + (b1 ? 1 : 0) + l1 + i19 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr2);
    }

    public static void vMeth(long l) {
        int i2 = 229, i3 = 0, i20 = 14, i21 = 4, i22 = 52187, i23 = 242, i24 = 11, iArr3[] = new int[N];
        byte by = -52;
        boolean b2 = false;
        FuzzerUtils.init(iArr3, 11);
        for (i2 = 3; i2 < 112; ++i2) {
            if (i3 != 0) {
                vMeth_check_sum += l + i2 + i3 + i20 + i21 + i22 + i23 + by + (b2 ? 1 : 0) + i24 + FuzzerUtils.checkSum(iArr3);
                return;
            }
            vMeth1(-9);
            for (i20 = 1; i20 < 5; ++i20) {
                i21 = i2;
                i21 = -46492;
                iArr3[i2] |= i2;
                i21 >>>= Test.iFld;
                Test.instanceCount = (long) 7.118F;
                for (i22 = 2; i22 > i2; --i22) {
                    i3 += i22;
                    Test.iFld = (int) Test.dFld;
                    i3 -= (int) Test.fFld;
                    iArr3[i20] -= i21;
                    Test.instanceCount -= 22584;
                    Test.instanceCount += (long) 103.743F;
                    Test.dArrFld[i2] -= l;
                    i21 += (((i22 * Test.instanceCount) + Test.instanceCount) - by);
                    Test.instanceCount += i21;
                    if (i22 != 0) {
                        vMeth_check_sum += l + i2 + i3 + i20 + i21 + i22 + i23 + by + (b2 ? 1 : 0) + i24 + FuzzerUtils.checkSum(iArr3);
                        return;
                    }
                    Test.iFld += i2;
                }
                i3 *= 0;
                Test.iFld += (int) (-8034927091973873617L + (i20 * i20));
                Test.iFld += (i20 + Test.iFld);
                Test.instanceCount = i23;
                Test.iFld = i20;
                i21 -= i22;
                iArr3[i20 + 1] = (int) Test.instanceCount;
                if (b2)
                    break;
            }
            l = 42530;
            l -= l;
            Test.iFld += (int) Test.dFld;
            iArr3[i2 + 1] <<= i22;
            i23 -= (int) 2.950F;
        }
        {
            java.io.PrintStream ax$5 = System.out;
            java.io.PrintStream ax$6 = System.err;
            java.io.PrintStream ax$7 = new java.io.PrintStream(new java.io.OutputStream() {

                @Override
                public void write(int b) throws java.io.IOException {
                    // DO NOTHING: DISCARD ALL OUTPUTS
                }
            });
            System.setOut(ax$7);
            System.setErr(ax$7);
            try {
                for (int ax$3 = -2471; ax$3 < 5472; ax$3 += 1) {
                    int ax$0 = i22;
                    int ax$1 = i20;
                    try {
                        i20 = i22;
                    } catch (Throwable ax$2) {
                    } finally {
                        i22 = ax$0;
                        i20 = ax$1;
                    }
                }
            } catch (Throwable ax$4) {
            }
            System.setOut(ax$5);
            System.setErr(ax$6);
        }
        Test.instanceCount >>>= i21;
        i23 *= -62205;
        i24 = Test.iFld;
        vMeth_check_sum += l + i2 + i3 + i20 + i21 + i22 + i23 + by + (b2 ? 1 : 0) + i24 + FuzzerUtils.checkSum(iArr3);
    }

    public void mainTest(String[] strArr1) {
        int i = 166, i1 = -24, i25 = 8, i26 = 2, i27 = -7003, i28 = -42485, i29 = -6771;
        float f = 73.888F, f2 = 0.553F;
        boolean b3 = true, b4 = true;
        byte by1 = 72, byArr[][] = new byte[N][N];
        long l3 = 4088603567276606516L;
        short s1 = 32217;
        FuzzerUtils.init(byArr, (byte) -28);
        for (i = 5; 103 > i; i++) {
            f -= ((--lArrFld[i + 1]) % ((++Test.instanceCount) | 1));
            f = (((f - i1) * Math.abs(Test.instanceCount)) + (i1++));
            vMeth(Test.instanceCount);
            for (i25 = 52; i25 > 1; i25--) {
                Test.iArrFld[i25 + 1] = i25;
                i27 += (int) Test.dFld;
                i27 += (i25 ^ i1);
                if (b3)
                    continue;
                Test.instanceCount = i;
                switch(((i25 >>> 1) % 1) + 62) {
                    case 62:
                        Test.fFld *= -8;
                        by1 = (byte) i25;
                        for (l3 = 1; l3 < 2; l3++) {
                            byArr[i25][i - 1] *= (byte) i;
                            switch((i25 % 3) + 53) {
                                case 53:
                                    i28 -= i26;
                                    Test.iArrFld = Test.iArrFld;
                                    Test.fFld += i1;
                                    f = -187;
                                    i1 &= i26;
                                    if (b4) {
                                        Test.instanceCount = i26;
                                        f *= i28;
                                        Test.instanceCount = Test.instanceCount;
                                        Test.instanceCount -= i27;
                                        Test.dFld = i26;
                                        Test.instanceCount = i28;
                                    } else if (b3) {
                                        switch((i25 % 9) + 44) {
                                            case 44:
                                                try {
                                                    i28 = (i28 % i1);
                                                    i1 = (Test.iArrFld[i + 1] / Test.iArrFld[i25]);
                                                    i28 = (i1 / 150);
                                                } catch (ArithmeticException a_e) {
                                                }
                                                i27 = s1;
                                                f *= i;
                                                Test.iArrFld[i25 - 1] *= (int) l3;
                                                by1 = (byte) i25;
                                                s1 += (short) l3;
                                                by1 ^= (byte) i;
                                                break;
                                            case 45:
                                                Test.dFld = i1;
                                                Test.iFld -= (int) -4071446359L;
                                                i1 += (int) (l3 + i25);
                                                lArrFld[(i25 >>> 1) % N] *= 17444L;
                                                Test.lArrFld1[(int) (l3 + 1)] *= (long) 110.60091;
                                                Test.iFld *= (int) 3.440F;
                                                i28 -= i26;
                                                Test.instanceCount = l3;
                                            case 46:
                                                f = i26;
                                                i26 <<= i28;
                                                Test.iArrFld[(int) (l3 - 1)] = i27;
                                                Test.iArrFld[i25] += (int) 1.225F;
                                                by1 = (byte) Test.iFld;
                                                i1 += (int) (((l3 * f2) + i) - i28);
                                                Test.iFld &= i;
                                                i26 = i26;
                                                Test.iFld -= (int) -2557088906003531704L;
                                                break;
                                            case 47:
                                                Test.iArrFld[i25] /= (int) (i25 | 1);
                                                try {
                                                    i27 = (i25 / 32);
                                                    i1 = (i25 / -198);
                                                    i1 = (i26 / i27);
                                                } catch (ArithmeticException a_e) {
                                                }
                                                i1 = i25;
                                                i27 &= i;
                                                f += (((l3 * i25) + i1) - i25);
                                                if (b3)
                                                    continue;
                                                i28 = (int) f2;
                                                i27 *= i25;
                                                if (b3)
                                                    break;
                                                i26 += (int) l3;
                                                i28 += (int) (l3 * i);
                                            case 48:
                                                i26 += (int) l3;
                                                i26 *= i27;
                                                f += i;
                                                Test.iArrFld[i] *= i29;
                                                i1 += (int) (((l3 * Test.instanceCount) + i28) - i25);
                                                break;
                                            case 49:
                                                Test.instanceCount += (((l3 * i25) + i26) - i28);
                                                Test.instanceCount += (long) f2;
                                                lArrFld[(int) (l3)] *= 3026812653L;
                                                Test.instanceCount += l3;
                                                Test.dArrFld[(int) (l3 + 1)] -= i;
                                                if (b3)
                                                    continue;
                                                break;
                                            case 50:
                                                b3 = b4;
                                            case 51:
                                            case 52:
                                                Test.iArrFld[i25 + 1] ^= (int) Test.instanceCount;
                                                break;
                                            default:
                                                Test.iFld = i;
                                        }
                                    } else if (b4) {
                                        i26 = by1;
                                    }
                                    break;
                                case 54:
                                    if (true)
                                        break;
                                    break;
                                case 55:
                                    Test.iFld = i26;
                                    break;
                            }
                        }
                    default:
                        Test.fArrFld[i25 - 1] += i1;
                }
            }
            {
                java.io.PrintStream ax$17 = System.out;
                java.io.PrintStream ax$18 = System.err;
                java.io.PrintStream ax$19 = new java.io.PrintStream(new java.io.OutputStream() {

                    @Override
                    public void write(int b) throws java.io.IOException {
                        // DO NOTHING: DISCARD ALL OUTPUTS
                    }
                });
                System.setOut(ax$19);
                System.setErr(ax$19);
                try {
                    for (int ax$15 = -48; ax$15 < 8403; ax$15 += 1) {
                        float ax$10 = f2;
                        int ax$11 = i29;
                        float ax$12 = f;
                        float ax$13 = fFld;
                        try {
                            float[] ax$9 = new float[16];
                            float ax$8 = 55.0f;
                            if (ax$9 != null) {
                                ax$9[i29 + 0] = f2;
                                ax$9[i29 + 1] = f;
                                ax$9[i29 + 2] = ax$8;
                                ax$9[i29 + 3] = fFld;
                            }
                        } catch (Throwable ax$14) {
                        } finally {
                            f2 = ax$10;
                            i29 = ax$11;
                            f = ax$12;
                            fFld = ax$13;
                        }
                    }
                } catch (Throwable ax$16) {
                }
                System.setOut(ax$17);
                System.setErr(ax$18);
            }
        }
        FuzzerUtils.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("b3 by1 l3 = " + (b3 ? 1 : 0) + "," + by1 + "," + l3);
        FuzzerUtils.out.println("i28 s1 f2 = " + i28 + "," + s1 + "," + Float.floatToIntBits(f2));
        FuzzerUtils.out.println("i29 b4 byArr = " + i29 + "," + (b4 ? 1 : 0) + "," + FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.fFld = " + Test.instanceCount + "," + Double.doubleToLongBits(Test.dFld) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iFld lArrFld Test.fArrFld = " + Test.iFld + "," + FuzzerUtils.checkSum(lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.dArrFld Test.lArrFld1 Test.iArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld1) + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  vMeth ->  vMeth mainTest
// DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
// DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
