// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.PrintStream;

public class Test {
    public static final int N = 256;

    public static long instanceCount = 8L;

    public static int iFld = -41650;

    public static byte byFld = -21;

    public static float fFld = -1.9F;

    public int iFld1 = 8619;

    public static float fFld1 = -69.286F;

    public float fFld2 = 44.298F;

    public static float fArrFld[] = new float[N];

    public static int iArrFld[] = new int[N];

    public static long lArrFld[][] = new long[N][N];

    static {
        FuzzerUtils.init(Test.fArrFld, 32.795F);
        FuzzerUtils.init(Test.iArrFld, -5);
        FuzzerUtils.init(Test.lArrFld, 60450L);
    }

    public static long iMeth_check_sum = 0;

    public static long lMeth_check_sum = 0;

    public static long vMeth_check_sum = 0;

    public static void vMeth(short s, long l1, byte by) {
        int i7 = 8;
        int i8 = -62542;
        int i10 = 63405;
        int i11 = -8;
        int i12 = 13;
        int i13 = 0;
        float f = 68.624F;
        float f1 = 16.534F;
        double d2 = -36.107548;
        for (i7 = 4; i7 < 245; ++i7) {
            Test.instanceCount *= i7;
            l1 += ((i7 * f) + i7) - l1;
            l1 = i8;
            for (d2 = 1; d2 < 3; d2 += 3) {
                for (f1 = 1; f1 < 3; f1++) {
                    Test.iArrFld[((int) (f1 + 1))] -= ((int) (d2));
                }
                i8 = i8;
                by <<= ((byte) (i8));
                Test.instanceCount >>>= 8399;
                i12 = 1;
                while ((++i12) < 3) {
                    boolean b = false;
                    i11 *= ((int) (38.1142));
                    switch (((i12 % 7) * 5) + 122) {
                        case 132 :
                            switch (((int) (((d2 % 10) * 5) + 27))) {
                                case 41 :
                                    i11 *= ((int) (l1));
                                    i11 = i8;
                                    Test.lArrFld[(i7 >>> 1) % N][i12 + 1] = i11;
                                    if (b)
                                        continue;

                                    Test.instanceCount >>= i13;
                                    l1 = i11;
                                    if (b)
                                        continue;

                                    break;
                                case 44 :
                                    try {
                                        Test.iFld = i8 / i13;
                                        Test.iFld = (-22512) / i11;
                                        i11 = 85 / Test.iFld;
                                    } catch (ArithmeticException a_e) {
                                    }
                                    Test.instanceCount += i12 ^ i12;
                                    switch (((int) ((d2 % 3) + 106))) {
                                        case 106 :
                                            Test.instanceCount = Test.iFld;
                                            Test.iFld += -4;
                                        case 107 :
                                            i10 -= i7;
                                            by += ((byte) (s));
                                            Test.instanceCount += i12 ^ i10;
                                            Test.fArrFld[(i12 >>> 1) % N] = i7;
                                            if (true)
                                                continue;

                                            l1 *= by;
                                            i8 = 241;
                                            switch ((i7 % 2) + 35) {
                                                case 35 :
                                                    Test.iFld = 7;
                                                    Test.iFld *= i10;
                                                    i11 = -63549;
                                                    break;
                                                case 36 :
                                                    i13 += -4222;
                                                default :
                                                    Test.instanceCount = i11;
                                            }
                                            break;
                                        case 108 :
                                            i8 += i12;
                                            break;
                                    }
                                    break;
                                case 48 :
                                    Test.iArrFld[i7 + 1] = -12;
                                    break;
                                case 46 :
                                    Test.iFld = i13;
                                    break;
                                case 71 :
                                    i13 = 58;
                                case 76 :
                                    f = i8;
                                case 47 :
                                    i8 *= i8;
                                case 63 :
                                    Test.iArrFld[i7 + 1] -= ((int) (-1229814483569123537L));
                                    break;
                                case 65 :
                                    Test.lArrFld[i7][i12 - 1] = i13;
                                case 49 :
                                    Test.instanceCount += Test.instanceCount;
                            }
                            break;
                        case 143 :
                            if (i10 != 0) {
                                vMeth_check_sum += ((((((((((s + l1) + by) + i7) + i8) + Float.floatToIntBits(f)) + Double.doubleToLongBits(d2)) + i10) + Float.floatToIntBits(f1)) + i11) + i12) + i13;
                                return;
                            }
                            break;
                        case 137 :
                            Test.iFld += i12;
                            break;
                        case 154 :
                        case 157 :
                            Test.instanceCount += ((i12 * Test.instanceCount) + f) - i7;
                            break;
                        case 153 :
                            i10 >>>= i10;
                        case 145 :
                            l1 += i12 | i11;
                            break;
                        default :
                            f += i12;
                    }
                }
            }
        }
        vMeth_check_sum += ((((((((((s + l1) + by) + i7) + i8) + Float.floatToIntBits(f)) + Double.doubleToLongBits(d2)) + i10) + Float.floatToIntBits(f1)) + i11) + i12) + i13;
    }

    public static long lMeth(int i2, int i3, int i4) {
        if (Test.ax$10) {
            final int ax$15 = i2;
            final int ax$14 = Test.iFld;
            Test.AxOutputRedirectionHelper.redirect();
            try {
                switch (iFld % 5) {
                    case 107 :
                        iFld >>= i2;
                }
            } catch (Throwable ax$13) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            Test.iFld = ax$14;
            i2 = ax$15;
            return 5478107944459757164L;
        }
        int i5 = -8;
        int i6 = 52827;
        int i14 = 1318;
        int i15 = 1893;
        int i16 = 210;
        int i17 = -37016;
        int iArr[] = new int[N];
        short s1 = 10850;
        byte by1 = -63;
        boolean b1 = false;
        float f2 = -2.952F;
        double d3 = 63.116261;
        FuzzerUtils.init(iArr, -13);
        i3 = ((int) (-(Test.instanceCount - Test.fArrFld[(i3 >>> 1) % N])));
        Test.instanceCount = iArr[(237 >>> 1) % N]--;
        i4 -= i3;
        for (i5 = 3; i5 < 111; i5++) {
            vMeth(s1, Test.instanceCount, by1);
            switch ((i5 % 6) + 37) {
                case 37 :
                    i6 += Test.iFld;
                    Test.iFld = i6;
                    for (i14 = 1; i14 < 5; ++i14) {
                        for (i16 = i14; i16 < 2; i16++) {
                            if (b1)
                                break;

                            if (i15 != 0) {
                            }
                            f2 += ((float) (d3));
                            f2 -= -53915;
                            i15 = ((int) (Test.instanceCount));
                            Test.instanceCount -= i16;
                            i15 -= i3;
                            i15 = i16;
                            Test.instanceCount = s1;
                            if (b1) {
                                Test.iArrFld[(i5 >>> 1) % N] -= ((int) (Test.instanceCount));
                                i17 |= 47027;
                                Test.fArrFld[i14 + 1] = i17;
                                i2 += i16 + Test.instanceCount;
                                i4 = i4;
                                i15 = i17;
                                f2 += i16;
                                i2 = ((int) (11L));
                                Test.instanceCount = 104;
                            } else if (b1) {
                                f2 -= -111;
                                i2 = Test.iFld;
                                Test.instanceCount -= Test.instanceCount;
                                i6 += i16 * i16;
                                i2 += i16 + i2;
                                i2 += i16;
                                i17 = i4;
                            } else if (b1)
                                continue;

                        }
                    }
                case 38 :
                    f2 += ((float) (d3));
                    break;
                case 39 :
                    Test.instanceCount *= Test.iFld;
                    break;
                case 40 :
                    Test.lArrFld[i5][i5] = 55618L;
                    break;
                case 41 :
                    Test.iFld <<= i2;
                    break;
                case 42 :
                    Test.iArrFld = FuzzerUtils.int1array(N, ((int) (208)));
                    break;
                default :
                    Test.instanceCount -= i2;
            }
        }
        long meth_res = (((((((((((((i2 + i3) + i4) + i5) + i6) + s1) + by1) + i14) + i15) + i16) + i17) + (b1 ? 1 : 0)) + Float.floatToIntBits(f2)) + Double.doubleToLongBits(d3)) + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return ((long) (meth_res));
    }

    public static int iMeth(int i1, double d1, long l) {
        int i18 = 10;
        int i19 = -7;
        int i20 = 3943;
        int i21 = -61048;
        long l2 = -6L;
        float f3 = -2.405F;
        float f4 = 0.45F;
        boolean b2 = false;
        short s2 = 29032;
        short sArr[][] = new short[N][N];
        double dArr[] = new double[N];
        {
            final int ax$7 = i18;
            final int ax$8 = i19;
            final int ax$9 = Test.iFld;
            try {
                short[] ax$1 = new short[]{ 20, 10, 0, -10, -20 };
                short[] ax$5 = new short[]{ ((short) (30519)), ((short) (18361)), ((short) (-11016)), ((short) (22663)) };
                for (int ax$0 = -887; ax$0 < (-887 + 13533); ax$0 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        ax$5[iFld] = ((short) ((ax$1[iFld] + i18) >>> i19));
                    } catch (Throwable ax$6) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                i18 = ax$7;
                i19 = ax$8;
                Test.iFld = ax$9;
            }
        }
        FuzzerUtils.init(dArr, 83.61917);
        FuzzerUtils.init(sArr, ((short) (21002)));
        l >>>= (l - (i1 + i1)) ^ ((9 + (i1 * i1)) + (i1++));
        {
            final int ax$23 = i18;
            try {
                Object ax$17 = new Object();
                ObjectInputStream ax$18 = null;
                String[] ax$21 = new String[]{ "s", "s", "s" };
                for (int ax$16 = -553; ax$16 < (-553 + 18855); ax$16 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        ax$17 = ax$18.readObject();
                    } catch (Throwable ax$19) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$10 = true;
                    lMeth(-1814114102, 601064281, 1354360074);
                    Test.ax$10 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        if (ax$21.length == 1) {
                            i18 = Integer.parseInt(ax$21[0]);
                        }
                    } catch (Throwable ax$22) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                i18 = ax$23;
            }
        }
        i1 = ((int) (lMeth(i1, 123, -63130)));
        dArr = dArr;
        Test.iFld = i1;
        i18 &= i18;
        l2 *= Test.iFld;
        for (f3 = 6; f3 < 115; f3++) {
            float f5 = -58.761F;
            i1 = ((int) (-4L));
            i18 += i18;
            Test.instanceCount -= Test.instanceCount;
            switch (((int) (((f3 % 2) * 5) + 56))) {
                case 65 :
                    Test.iFld -= ((int) (f3));
                    d1 *= Test.byFld;
                    switch (((i1 >>> 1) % 9) + 82) {
                        case 82 :
                            if (true)
                                continue;

                            b2 = b2;
                            if (i19 != 0) {
                            }
                            i1 -= i1;
                            i18 = i1;
                            dArr[((int) (f3 + 1))] = l2;
                            for (f4 = f3; f4 < 5; f4++) {
                                i1 <<= ((int) (-3L));
                                if (false) {
                                    Test.iArrFld[((int) (f4 + 1))] = i1;
                                    try {
                                        Test.iArrFld[((int) (f3 - 1))] = Test.iArrFld[((int) (f3 - 1))] / i20;
                                        i20 = Test.iFld % Test.iFld;
                                        Test.iArrFld[((int) (f3 + 1))] = (-31435) % i1;
                                    } catch (ArithmeticException a_e) {
                                    }
                                    i21 = 1;
                                    while ((++i21) < 1) {
                                        long l3 = 1389621691L;
                                        Test.fFld -= 7;
                                        i1 ^= i1;
                                        try {
                                            i20 = Test.iFld / 39931;
                                            Test.iFld = (-29) / i20;
                                            i20 = i18 % (-34);
                                        } catch (ArithmeticException a_e) {
                                        }
                                        l -= 1;
                                        l = Test.byFld;
                                        switch ((i21 % 9) + 109) {
                                            case 109 :
                                            case 110 :
                                                Test.iArrFld[((int) (f4 - 1))] += ((int) (f3));
                                                s2 = ((short) (i1));
                                                break;
                                            case 111 :
                                                Test.iFld >>= i19;
                                                d1 = i1;
                                                l *= 21547;
                                                break;
                                            case 112 :
                                                Test.iArrFld[i21 + 1] >>= ((int) (l2));
                                                break;
                                            case 113 :
                                                i20 -= i19;
                                                break;
                                            case 114 :
                                                i1 = 23536;
                                                break;
                                            case 115 :
                                                sArr[((int) (f4))] = sArr[i21];
                                                break;
                                            case 116 :
                                                Test.iFld += i21 * i18;
                                                break;
                                            case 117 :
                                                i18 <<= ((int) (l3));
                                                break;
                                        }
                                    }
                                } else if (b2) {
                                    d1 = i1;
                                } else {
                                    i1 -= ((int) (Test.instanceCount));
                                }
                            }
                            break;
                        case 83 :
                            Test.instanceCount = Test.instanceCount;
                            break;
                        case 84 :
                            i19 >>= 111;
                            break;
                        case 85 :
                            Test.iFld = 14051;
                        case 86 :
                            i19 ^= i1;
                            break;
                        case 87 :
                            i20 *= i18;
                            break;
                        case 88 :
                        case 89 :
                            Test.fFld -= f5;
                            break;
                        case 90 :
                            Test.iArrFld[((int) (f3))] += ((int) (f4));
                            break;
                    }
                case 62 :
                    i20 -= 43;
                    break;
                default :
                    s2 /= ((short) (Test.byFld | 1));
            }
        }
        long meth_res = ((((((((((((i1 + Double.doubleToLongBits(d1)) + l) + i18) + l2) + Float.floatToIntBits(f3)) + i19) + (b2 ? 1 : 0)) + Float.floatToIntBits(f4)) + i20) + i21) + s2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr))) + FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return ((int) (meth_res));
    }

    public void mainTest(String[] strArr1) {
        int i = -5;
        int i22 = -48;
        int i23 = 60926;
        int i24 = -141;
        int i25 = 9;
        int i26 = 7;
        int i27 = 3;
        int i28 = 6;
        int i29 = 34337;
        int i30 = -12;
        double d = 119.63462;
        short s3 = -15659;
        boolean b3 = false;
        i = ((int) (Test.instanceCount = ((long) (Test.instanceCount -= ((long) (d * Test.instanceCount))))));
        Test.instanceCount = iMeth(Test.iFld, 21.5436, Test.instanceCount);
        i >>= i;
        for (i22 = 239; i22 > 14; i22--) {
            for (i24 = 1; i24 < 23; i24++) {
                switch ((((i22 >>> 1) % 1) * 5) + 16) {
                    case 18 :
                        switch ((i24 % 2) + 80) {
                            case 80 :
                                i23 += i24;
                                i23 = ((int) (d));
                                for (i26 = i24; i26 < 2; ++i26) {
                                    i27 = -14;
                                    i23 = i23;
                                    i27 = i;
                                    i25 *= -10;
                                    if (b3) {
                                        switch (((i24 % 2) * 5) + 82) {
                                            case 83 :
                                                i27 -= 63511;
                                                break;
                                            case 89 :
                                                d -= -1L;
                                                i -= i22;
                                                Test.iFld = ((int) (-668676387L));
                                                i23 = i22;
                                                Test.fFld -= i23;
                                                i25 /= ((int) (((long) (Test.fFld)) | 1));
                                                d = -40735L;
                                                Test.iFld <<= i24;
                                                iFld1 -= i23;
                                                i >>>= i23;
                                                d = i26;
                                                break;
                                            default :
                                                Test.fFld -= ((float) (2.12157));
                                                Test.fFld += Test.instanceCount;
                                                try {
                                                    i = (-254) % i23;
                                                    i25 = Test.iArrFld[i22 + 1] % i24;
                                                    Test.iArrFld[i26] = 4071 % i23;
                                                } catch (ArithmeticException a_e) {
                                                }
                                                i += i26 * s3;
                                                i = Test.iFld;
                                                Test.iFld = ((int) (Test.instanceCount));
                                                Test.instanceCount = iFld1;
                                                Test.instanceCount = ((long) (Test.fFld));
                                        }
                                        i27 += -12;
                                    }
                                    Test.fFld = -9;
                                    Test.iFld += i;
                                    s3 += ((short) (2.41031));
                                    iFld1 -= i24;
                                    Test.fFld1 += i26;
                                    i27 = i23;
                                    Test.iArrFld[i22 - 1] = i27;
                                    i *= i27;
                                }
                                iFld1 += ((i24 * i25) + i25) - Test.iFld;
                                Test.iArrFld[i22 + 1] = ((int) (Test.fFld1));
                                iFld1 -= ((int) (d));
                                Test.instanceCount -= i26;
                                break;
                            case 81 :
                                i27 += i24;
                                i23 = s3;
                                i27 += i24 | Test.instanceCount;
                                switch ((i24 % 1) + 19) {
                                    case 19 :
                                        d *= 92;
                                        Test.lArrFld[i22 - 1][i22 + 1] -= 210;
                                        Test.iArrFld[i22 + 1] += i22;
                                        if (b3)
                                            continue;

                                        Test.fFld *= Test.fFld1;
                                        Test.fFld1 += i26;
                                        d -= i23;
                                        i += i24 * i24;
                                        fFld2 -= i25;
                                        i25 += ((int) (d));
                                    default :
                                        for (i28 = 2; i28 > 1; i28--) {
                                            int i31 = 12;
                                            if (b3)
                                                continue;

                                            Test.iArrFld[i22] -= i27;
                                            switch ((i28 % 2) + 89) {
                                                case 89 :
                                                    iFld1 -= ((int) (d));
                                                    Test.instanceCount = i25;
                                                    try {
                                                        i27 = i / 28936;
                                                        iFld1 = i25 % 606394510;
                                                        i25 = i28 % i23;
                                                    } catch (ArithmeticException a_e) {
                                                    }
                                                    Test.fFld -= Test.instanceCount;
                                                    break;
                                                case 90 :
                                                    switch ((i22 % 9) + 96) {
                                                        case 96 :
                                                            Test.fFld += i28;
                                                            iFld1 += i28;
                                                            i23 = ((int) (Test.fFld1));
                                                        case 97 :
                                                            i27 >>= i29;
                                                        case 98 :
                                                            Test.iArrFld[i28 - 1] -= -19;
                                                        case 99 :
                                                            Test.iArrFld[i22] ^= ((int) (Test.instanceCount));
                                                        case 100 :
                                                            i30 <<= ((int) (Test.instanceCount));
                                                            break;
                                                        case 101 :
                                                            Test.instanceCount += i25;
                                                            break;
                                                        case 102 :
                                                            i31 -= ((int) (Test.instanceCount));
                                                            break;
                                                        case 103 :
                                                            Test.instanceCount -= ((long) (fFld2));
                                                            break;
                                                        case 104 :
                                                            i25 += 3914 + (i28 * i28);
                                                            break;
                                                        default :
                                                            i23 += ((i28 * i22) + s3) - i28;
                                                    }
                                            }
                                        }
                                }
                        }
                        break;
                }
            }
        }
        FuzzerUtils.out.println((((("i d i22 = " + i) + ",") + Double.doubleToLongBits(d)) + ",") + i22);
        FuzzerUtils.out.println((((("i23 i24 i25 = " + i23) + ",") + i24) + ",") + i25);
        FuzzerUtils.out.println((((("i26 i27 s3 = " + i26) + ",") + i27) + ",") + s3);
        FuzzerUtils.out.println((((("b3 i28 i29 = " + (b3 ? 1 : 0)) + ",") + i28) + ",") + i29);
        FuzzerUtils.out.println("i30 = " + i30);
        FuzzerUtils.out.println((((("Test.instanceCount Test.iFld Test.byFld = " + Test.instanceCount) + ",") + Test.iFld) + ",") + Test.byFld);
        FuzzerUtils.out.println((((("Test.fFld iFld1 Test.fFld1 = " + Float.floatToIntBits(Test.fFld)) + ",") + iFld1) + ",") + Float.floatToIntBits(Test.fFld1));
        FuzzerUtils.out.println((((("fFld2 Test.fArrFld Test.iArrFld = " + Float.floatToIntBits(fFld2)) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld))) + ",") + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }

    static Boolean ax$10 = false;
}