// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.InterfaceAddress;

public class Test {
    public static final int N = 256;

    public static volatile long instanceCount = 117L;

    public static int iFld = -6;

    public static float fFld = 55.298F;

    public static byte byFld = -100;

    public static double dArrFld[] = new double[N];

    public boolean bArrFld[] = new boolean[N];

    public static int iArrFld[] = new int[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 71.46672);
        FuzzerUtils.init(Test.iArrFld, -174);
    }

    public static long iMeth_check_sum = 0;

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static int iMeth(int i, long l, int i1) {
        int iArr[] = new int[N];
        FuzzerUtils.init(iArr, -1);
        Test.iFld -= -(iArr[(5 >>> 1) % N]++);
        long meth_res = ((i + l) + i1) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return ((int) (meth_res));
    }

    public static void vMeth1(int i4, int i5, int i6) {
        int i7 = 60214;
        int i8 = 9;
        int i9 = -14;
        int i10 = 33514;
        int i11 = 58185;
        int i12 = -8;
        int i13 = 254;
        int i14 = -30223;
        int iArr1[] = new int[N];
        short s = 10645;
        double d = 0.88288;
        boolean b = true;
        long lArr1[] = new long[N];
        FuzzerUtils.init(lArr1, 49177L);
        FuzzerUtils.init(iArr1, -13);
        for (i7 = 7; 214 > i7; i7++) {
            for (i9 = 1; i9 < 3; ++i9) {
                for (i11 = 1; i11 < 2; ++i11) {
                    if (b) {
                        i13 %= ((int) ((++s) | 1));
                        Test.instanceCount = Math.abs(--i12) + iMeth(i14, Test.instanceCount, i5);
                        Test.instanceCount += Test.instanceCount;
                        i4 += ((int) (-109L));
                        Test.fFld = Test.fFld;
                        i14 += i11 * i12;
                        Test.instanceCount += 17;
                        i6 = -54;
                        Test.iFld -= ((int) (Test.fFld));
                    } else if (false) {
                        Test.iFld >>= ((int) (Test.instanceCount));
                        i13 ^= i6;
                        d = 46777;
                        switch (((i10 >>> 1) % 7) + 111) {
                            case 111 :
                                lArr1[i9] *= i7;
                                Test.fFld -= Test.instanceCount;
                                Test.instanceCount |= 163;
                                break;
                            case 112 :
                                if (false)
                                    continue;

                                iArr1[i7 + 1] &= Test.iFld;
                                Test.fFld += i8;
                                Test.instanceCount -= -4L;
                                i13 += ((int) (49520L + (i11 * i11)));
                                i10 %= -8;
                                i6 >>= i7;
                                i5 = i6;
                                Test.fFld += i14;
                                i6 = ((int) (Test.instanceCount));
                                i13 = i9;
                                i5 = i5;
                                Test.fFld += 220L;
                                i14 += ((int) (Test.instanceCount));
                                break;
                            case 113 :
                                Test.dArrFld[i7 + 1] = i12;
                            case 114 :
                                Test.fFld = Test.instanceCount;
                                Test.byFld >>= ((byte) (i13));
                            case 115 :
                                Test.iFld = ((int) (Test.instanceCount));
                                break;
                            case 116 :
                                i12 += ((i11 * i14) + Test.fFld) - Test.instanceCount;
                                break;
                            case 117 :
                                Test.iFld *= ((int) (Test.instanceCount));
                                break;
                        }
                    } else {
                        i10 = i9;
                    }
                }
            }
        }
        vMeth1_check_sum += ((((((((((((((i4 + i5) + i6) + i7) + i8) + i9) + i10) + i11) + i12) + i13) + s) + i14) + Double.doubleToLongBits(d)) + (b ? 1 : 0)) + FuzzerUtils.checkSum(lArr1)) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i2, long l1, int i3) {
        if (Test.ax$7) {
            final int ax$17 = i3;
            final byte ax$16 = Test.byFld;
            byte[] ax$8 = new byte[]{ ((byte) (-49)), ((byte) (122)), ((byte) (-86)), ((byte) (-64)), ((byte) (1)), ((byte) (-63)), ((byte) (29)), ((byte) (97)), ((byte) (-114)) };
            byte[] ax$11 = new byte[]{ ((byte) (41)), ((byte) (47)) };
            Test.AxOutputRedirectionHelper.redirect();
            try {
                for (int ax$12 = 0; ax$12 < i3; ax$12++) {
                    byte ax$13 = ax$11[ax$12];
                    byte ax$14 = ax$8[ax$12];
                    byFld += (ax$13 >= ax$14) ? ax$13 - ax$14 : ax$14 - ax$13;
                }
            } catch (Throwable ax$15) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            Test.byFld = ax$16;
            i3 = ax$17;
            return;
        }
        int i15 = -220;
        int i16 = 44295;
        int i17 = 2195;
        int i18 = 6;
        int i19 = 158;
        int iArr2[] = new int[N];
        float f = 85.633F;
        double d1 = -2.118201;
        short s1 = 22579;
        boolean b1 = true;
        boolean bArr[] = new boolean[N];
        long lArr2[] = new long[N];
        FuzzerUtils.init(iArr2, -81);
        FuzzerUtils.init(lArr2, 1603600190L);
        FuzzerUtils.init(bArr, false);
        Test.fFld *= i3;
        vMeth1(-95, Test.iFld, i2);
        for (i15 = 6; i15 < 100; ++i15) {
            i17 = 1;
            do {
                f = 1;
                do {
                    i16 -= ((int) (d1));
                    d1 = -3646;
                    i16 *= ((int) (2648L));
                    i2 *= i3;
                    i16 += ((int) (f * f));
                    iArr2[((int) (f))] /= ((int) (Test.iFld | 1));
                    i3 -= ((int) (1.7F));
                    i2 = -184;
                    Test.instanceCount *= 3788;
                    Test.fFld = i3;
                    Test.iFld = i15;
                } while ((++f) < 1 );
                lArr2[((-42) >>> 1) % N] = i15;
                for (i18 = 1; i18 < 1; ++i18) {
                    int i20 = 30484;
                    Test.iFld *= ((int) (l1));
                    iArr2 = FuzzerUtils.int1array(N, ((int) (-11)));
                    s1 -= ((short) (Test.instanceCount));
                    i2 -= i2;
                    i16 += i18 * i18;
                    bArr[i18 + 1] = b1;
                    i19 += i18;
                    Test.fFld += i18 * i18;
                    i3 -= i20;
                    Test.fFld *= Test.instanceCount;
                    i20 *= ((int) (l1));
                    switch ((i18 % 3) + 116) {
                        case 116 :
                            i19 += ((i18 * s1) + Test.iFld) - i16;
                            iArr2[i15] = i17;
                            i19 = i16;
                            switch ((((i19 >>> 1) % 2) * 5) + 79) {
                                case 83 :
                                    l1 += i18 * i18;
                                    break;
                                case 82 :
                                    i16 += (-43800) + (i18 * i18);
                                    i19 -= ((int) (21865L));
                                default :
                                    iArr2[i15] *= ((int) (d1));
                            }
                            break;
                        case 117 :
                            i19 *= ((int) (Test.instanceCount));
                        case 118 :
                            i19 += i18;
                            break;
                    }
                }
            } while ((++i17) < 6 );
        }
        vMeth_check_sum += (((((((((((((i2 + l1) + i3) + i15) + i16) + i17) + Float.floatToIntBits(f)) + Double.doubleToLongBits(d1)) + i18) + i19) + s1) + (b1 ? 1 : 0)) + FuzzerUtils.checkSum(iArr2)) + FuzzerUtils.checkSum(lArr2)) + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {
        int i21 = -71;
        int i22 = 63093;
        int i23 = -54507;
        int i24 = 248;
        int i25 = 62;
        int i26 = -56573;
        int i27 = -33;
        int i28 = -87;
        boolean b2 = true;
        long l2 = -5499515421620795807L;
        long lArr[] = new long[N];
        double d2 = 39.70387;
        short s2 = -5160;
        byte byArr[] = new byte[N];
        FuzzerUtils.init(lArr, -3055504103L);
        FuzzerUtils.init(byArr, ((byte) (-24)));
        Test.iFld %= ((int) ((lArr[((-66) >>> 1) % N] + (-iMeth(Test.iFld, Test.instanceCount, Test.iFld))) | 1));
        Test.iFld %= ((int) ((--Test.iFld) | 1));
        {
            final boolean ax$27 = b2;
            try {
                int[] ax$19 = new int[]{ -1726005129, 240883233, -1854874524, -1298143846, 37854014, -1297130754, 1441105510, -1814830415 };
                InterfaceAddress ax$24 = null;
                InterfaceAddress ax$25 = null;
                for (int ax$18 = -717; ax$18 < (-717 + 16180); ax$18 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        for (int ax$20 = 0; ax$20 <= 3; ax$20++) {
                            for (int ax$21 = 0; ax$21 <= 3; ax$21++) {
                                ax$19[ax$20 * ax$21] += 1;
                            }
                        }
                    } catch (Throwable ax$22) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$7 = true;
                    vMeth(2097778822, -2018213914693516028L, 861060415);
                    Test.ax$7 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        if (ax$24.equals(ax$25) != b2);
                        if (ax$25.equals(ax$24) != b2);
                    } catch (Throwable ax$26) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                b2 = ax$27;
            }
        }
        vMeth(Test.iFld, Test.instanceCount, Test.iFld);
        try {
            for (i21 = 3; i21 < 177; ++i21) {
                Test.fFld += ((i21 * Test.instanceCount) + i21) - Test.fFld;
                bArrFld[i21] = b2;
                i23 += i21;
                for (i24 = 1; i24 < 29; i24++) {
                    Test.fFld -= i24;
                    i22 -= ((int) (Test.instanceCount));
                    switch (((i24 % 9) * 5) + 49) {
                        case 58 :
                            switch ((i24 % 2) + 38) {
                                case 38 :
                                    {
                                        final boolean ax$6 = b2;
                                        try {
                                            Integer ax$2 = 605032704;
                                            boolean ax$1 = false;
                                            for (int ax$0 = -411; ax$0 < (-411 + 18378); ax$0 += 1) {
                                                Test.AxOutputRedirectionHelper.redirect();
                                                try {
                                                    ax$2 = new Integer(ax$2 + 1);
                                                } catch (Throwable ax$3) {
                                                } finally {
                                                }
                                                Test.AxOutputRedirectionHelper.recover();
                                                if (!ax$1) {
                                                    Test.iFld = i24;
                                                    ax$1 = true;
                                                }
                                                Test.AxOutputRedirectionHelper.redirect();
                                                try {
                                                    if (b2);
                                                } catch (Throwable ax$5) {
                                                } finally {
                                                }
                                                Test.AxOutputRedirectionHelper.recover();
                                            }
                                        } finally {
                                            b2 = ax$6;
                                        }
                                    }
                                    switch ((i21 % 2) + 68) {
                                        case 68 :
                                        case 69 :
                                        default :
                                            for (l2 = i21; l2 < 2; ++l2) {
                                                i26 = i21;
                                                lArr[i21 - 1] += ((long) (Test.fFld));
                                                if (b2) {
                                                    Test.byFld += ((byte) (l2 * l2));
                                                    Test.instanceCount += (-75) + (l2 * l2);
                                                    switch ((i21 % 5) + 91) {
                                                        case 91 :
                                                            Test.iFld -= i26;
                                                            Test.instanceCount = i21;
                                                            Test.fFld += i26;
                                                            Test.iFld |= i25;
                                                            i25 += ((int) (l2));
                                                            d2 += -27702;
                                                        case 92 :
                                                            s2 += ((short) (l2 + i24));
                                                            i23 |= ((int) (Test.instanceCount));
                                                            lArr[i24 + 1] = i21;
                                                            break;
                                                        case 93 :
                                                            b2 = b2;
                                                            Test.instanceCount = Test.instanceCount;
                                                            i23 -= i22;
                                                            Test.iArrFld[((int) (l2))] >>= i21;
                                                            Test.iArrFld[i21] *= i22;
                                                            i23 += ((int) (l2 * l2));
                                                            Test.instanceCount += l2 * l2;
                                                            break;
                                                        case 94 :
                                                            i26 = -252;
                                                            i25 *= Test.byFld;
                                                            Test.iArrFld[i21 - 1] -= s2;
                                                        case 95 :
                                                            Test.iFld *= ((int) (-3917338774L));
                                                            s2 += ((short) (Test.fFld));
                                                            Test.instanceCount -= Test.iFld;
                                                            i23 = i23;
                                                            i22 += ((int) (((l2 * i22) + i21) - Test.iFld));
                                                            Test.iFld = i23;
                                                            Test.iFld += i26;
                                                            Test.fFld += ((l2 * Test.fFld) + i26) - i25;
                                                            i23 += 41501 + (l2 * l2);
                                                            if (b2)
                                                                continue;

                                                            i23 += ((int) (((l2 * l2) + i21) - Test.iFld));
                                                            Test.iArrFld = Test.iArrFld;
                                                            i25 += ((int) (l2 + Test.fFld));
                                                            Test.iArrFld[i24 + 1] >>= i23;
                                                            s2 = ((short) (61995));
                                                            break;
                                                    }
                                                    d2 = i26;
                                                } else {
                                                    Test.fFld += ((float) (d2));
                                                    Test.iFld -= i24;
                                                    Test.fFld -= -6757;
                                                    Test.iArrFld[((int) (l2 + 1))] -= i21;
                                                }
                                                Test.iFld -= ((int) (Test.fFld));
                                                Test.iArrFld[i21 + 1] /= ((int) (i25 | 1));
                                                i23 = i23;
                                                Test.iArrFld[((int) (l2))] *= -38668;
                                            }
                                            i25 += i24 + i25;
                                            Test.fFld -= 76;
                                    }
                                    i25 *= 0;
                                    for (i27 = 1; i27 < 2; ++i27) {
                                        i23 += i27 ^ Test.iFld;
                                        i26 -= i24;
                                        Test.fFld += i27;
                                        lArr[i21 - 1] = 4;
                                        byArr[i21 + 1] = ((byte) (Test.iFld));
                                        d2 -= Test.fFld;
                                    }
                                    break;
                                case 39 :
                                    d2 += i25;
                                    break;
                            }
                        case 79 :
                            i26 = ((int) (-5668506724190402969L));
                            break;
                        case 83 :
                            i23 = i21;
                            break;
                        case 78 :
                            i28 += i24;
                            break;
                        case 67 :
                            d2 -= i26;
                        case 65 :
                            i22 += ((i24 * i21) + i25) - i25;
                        case 81 :
                            i28 = 16862;
                        case 66 :
                            Test.fFld -= Test.instanceCount;
                            break;
                        case 88 :
                            Test.iArrFld[i21 + 1] -= ((int) (Test.fFld));
                            break;
                    }
                }
            }
        } catch (NullPointerException exc1) {
            Test.instanceCount *= Test.instanceCount;
        }
        FuzzerUtils.out.println((((("i21 i22 b2 = " + i21) + ",") + i22) + ",") + (b2 ? 1 : 0));
        FuzzerUtils.out.println((((("i23 i24 i25 = " + i23) + ",") + i24) + ",") + i25);
        FuzzerUtils.out.println((((("l2 i26 d2 = " + l2) + ",") + i26) + ",") + Double.doubleToLongBits(d2));
        FuzzerUtils.out.println((((("s2 i27 i28 = " + s2) + ",") + i27) + ",") + i28);
        FuzzerUtils.out.println((("lArr byArr = " + FuzzerUtils.checkSum(lArr)) + ",") + FuzzerUtils.checkSum(byArr));
        FuzzerUtils.out.println((((("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount) + ",") + Test.iFld) + ",") + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println((((("Test.byFld Test.dArrFld bArrFld = " + Test.byFld) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld))) + ",") + FuzzerUtils.checkSum(bArrFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }

    static Boolean ax$7 = false;
}