// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.lang.reflect.Method;

public class Test {
    public static final int N = 256;

    public static long instanceCount = -3979050650018588560L;

    public static volatile int iFld = 123;

    public static double dFld = -1.104361;

    public static boolean bFld = false;

    public static int iFld1 = -115;

    public static volatile short sArrFld[] = new short[N];

    public static boolean bArrFld[] = new boolean[N];

    static {
        FuzzerUtils.init(Test.sArrFld, ((short) (20331)));
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long iMeth_check_sum = 0;

    public static long iMeth1_check_sum = 0;

    public static long vMeth_check_sum = 0;

    public static void vMeth(long l1, int i9) {
        long l2 = 2786310892L;
        int i11 = -12;
        int i12 = -157;
        int i13 = 52481;
        int i14 = 14;
        int i15 = -47994;
        int iArr2[] = new int[N];
        float f1 = 64.631F;
        double d = 1.37371;
        boolean b = true;
        FuzzerUtils.init(iArr2, 191);
        Test.iFld |= Test.iFld;
        for (short s : Test.sArrFld) {
            int i10 = 195;
            iArr2[(Test.iFld >>> 1) % N] -= Test.iFld;
            switch (((i10 >>> 1) % 3) + 67) {
                case 67 :
                    i10 -= i9;
                    for (l2 = 1; l2 < 2; l2++) {
                        l1 = Test.iFld;
                    }
                    for (i12 = 1; i12 < 2; ++i12) {
                        for (i14 = i12; i14 < 2; ++i14) {
                            f1 -= 132;
                            if (b) {
                                f1 = i14;
                                l1 <<= Test.iFld;
                                Test.iFld = -2;
                            } else if (b) {
                                i15 = s;
                                i9 += ((i14 * Test.iFld) + f1) - i9;
                                iArr2[i12 - 1] *= i13;
                                i9 >>>= i11;
                                Test.instanceCount *= i9;
                                Test.iFld = ((int) (d));
                            } else {
                                switch ((i12 % 7) + 111) {
                                    case 111 :
                                        if (b) {
                                            Test.iFld += i14;
                                            s += ((short) (i14));
                                            iArr2[i12] <<= i14;
                                            Test.iFld += i14;
                                            d += 0;
                                            Test.iFld += i14 * i14;
                                            i11 *= ((int) (l2));
                                            d *= -8239454099475438355L;
                                            i15 <<= i10;
                                            i15 += i14 * i14;
                                            try {
                                                i9 = (-167) / iArr2[i12];
                                                i10 = (-62011) % iArr2[i14 - 1];
                                                i10 = i10 / (-48413);
                                            } catch (ArithmeticException a_e) {
                                            }
                                            Test.bArrFld = FuzzerUtils.boolean1array(N, ((boolean) (false)));
                                            Test.instanceCount /= Test.iFld | 1;
                                        } else if (b) {
                                            Test.iFld -= i15;
                                            iArr2[i12] &= ((int) (l1));
                                        } else {
                                            i13 >>>= i11;
                                        }
                                        break;
                                    case 112 :
                                        try {
                                            Test.iFld = 35973 / Test.iFld;
                                            Test.iFld = i11 / i12;
                                            iArr2[i12 - 1] = (-959765714) / i13;
                                        } catch (ArithmeticException a_e) {
                                        }
                                        break;
                                    case 113 :
                                        i15 >>= i12;
                                        break;
                                    case 114 :
                                        i13 -= ((int) (l1));
                                        break;
                                    case 115 :
                                        i10 = -74;
                                        break;
                                    case 116 :
                                        iArr2[i14 - 1] *= i10;
                                        break;
                                    case 117 :
                                        i11 = ((int) (d));
                                    default :
                                        i11 *= i11;
                                }
                            }
                        }
                    }
                    break;
                case 68 :
                    Test.instanceCount = l2;
                    break;
                case 69 :
                    s = ((short) (i10));
                    break;
            }
        }
        vMeth_check_sum += ((((((((((l1 + i9) + l2) + i11) + i12) + i13) + i14) + i15) + Float.floatToIntBits(f1)) + Double.doubleToLongBits(d)) + (b ? 1 : 0)) + FuzzerUtils.checkSum(iArr2);
    }

    public static int iMeth1(int i2, int i3, int i4) {
        if (Test.ax$0) {
            final int ax$6 = i3;
            final int ax$5 = i2;
            int[] ax$3 = new int[]{ -683287952, 1975002709, -793188985, -401175294, -485382945, -2038488982 };
            Test.AxOutputRedirectionHelper.redirect();
            try {
                i2 += ax$3[i3];
                i2 += ax$3[i3 + 1];
            } catch (Throwable ax$4) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            i2 = ax$5;
            i3 = ax$6;
            return -877090597;
        }
        int i5 = -49782;
        int i6 = 9;
        int i7 = 26825;
        int i8 = -172;
        int i16 = -14744;
        int i17 = -110;
        int i18 = -2;
        int iArr1[] = new int[N];
        float f = 0.885F;
        float f2 = -2.335F;
        float f3 = -2.415F;
        float fArr[] = new float[N];
        long l3 = -47173L;
        long lArr[] = new long[N];
        byte by = -1;
        boolean b1 = true;
        short s1 = -21489;
        FuzzerUtils.init(fArr, 0.113F);
        FuzzerUtils.init(iArr1, 185);
        FuzzerUtils.init(lArr, 3080226281L);
        for (i5 = 12; i5 < 196; i5++) {
            for (i7 = 1; i7 < 3; i7 += 2) {
                f -= (195793705L ^ (i4 = 10)) - Integer.reverseBytes(i5 % (i3 | 1));
                fArr[i7 + 1] = (-(11 ^ (--iArr1[i5]))) - Test.instanceCount;
                vMeth(34439L, Test.iFld);
                i3 -= i16;
                Test.instanceCount = Test.iFld;
                i3 = -38;
                f += ((float) (-6.11789));
                Test.instanceCount <<= Test.iFld;
            }
            Test.instanceCount = Test.instanceCount;
            i8 /= ((int) (i16 | 1));
            for (f2 = 1; f2 < 3; f2++) {
                if (b1) {
                    i6 = ((int) (Test.instanceCount));
                    i2 = Test.iFld;
                } else if (b1) {
                    l3 -= l3;
                    Test.instanceCount += i17;
                    i18 = 1;
                    while ((i18 += 2) < 2) {
                        by += ((byte) (i18));
                        Test.dFld = l3;
                        Test.instanceCount *= -30638;
                        if (true) {
                            if (b1)
                                continue;

                            lArr[((int) (f2 - 1))] >>= i2;
                        } else if (b1) {
                            Test.iFld = s1;
                            i3 <<= i6;
                            i17 += i18 * i18;
                            if (true) {
                                i4 = i7;
                                l3 *= l3;
                                i2 = ((int) (l3));
                                if (b1)
                                    continue;

                                l3 -= ((long) (f));
                                l3 += i18;
                            } else if (b1) {
                                l3 += i5;
                                i17 += i18;
                            } else {
                                i16 = i6;
                            }
                        } else if (b1) {
                            f3 *= i17;
                        } else {
                            Test.iFld = i8;
                        }
                    }
                } else if (b1) {
                    Test.iFld = -9;
                } else {
                    i2 -= ((int) (-1.472F));
                }
            }
        }
        long meth_res = ((((((((((((((((((i2 + i3) + i4) + i5) + i6) + i7) + i8) + Float.floatToIntBits(f)) + i16) + Float.floatToIntBits(f2)) + i17) + l3) + i18) + by) + (b1 ? 1 : 0)) + s1) + Float.floatToIntBits(f3)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))) + FuzzerUtils.checkSum(iArr1)) + FuzzerUtils.checkSum(lArr);
        iMeth1_check_sum += meth_res;
        return ((int) (meth_res));
    }

    public static int iMeth(int i1, long l) {
        int i19 = -226;
        int i20 = 28421;
        int i21 = -206;
        int i22 = 21956;
        int i23 = -6;
        int i24 = 64819;
        int i25 = 108;
        int iArr[] = new int[N];
        short s2 = 4729;
        byte by1 = -40;
        float f4 = 0.477F;
        float fArr1[] = new float[N];
        long l4 = 10L;
        long lArr1[][] = new long[N][N];
        FuzzerUtils.init(iArr, 3012);
        FuzzerUtils.init(lArr1, 150L);
        FuzzerUtils.init(fArr1, -59.67F);
        i1 += --i1;
        {
            final int ax$14 = Test.iFld1;
            final int ax$15 = i22;
            try {
                long[] ax$9 = new long[]{ 0x1122334455667788L, 0x8877665544332211L, 0L, 1L, -1L };
                Method ax$11 = null;
                for (int ax$7 = -619; ax$7 < (-619 + 10492); ax$7 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        for (; iFld1 < (ax$9.length - 4); iFld1 += 4) {
                            ax$9[iFld1 + 0] = 0;
                            ax$9[iFld1 + 1] = 1;
                            ax$9[iFld1 + 2] = 2;
                            ax$9[iFld1 + 3] = 3;
                        }
                    } catch (Throwable ax$10) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$0 = true;
                    iMeth1(-1380111619, -1646426715, 1507656669);
                    Test.ax$0 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        i22++;
                        if (ax$11.isAccessible());
                    } catch (Throwable ax$13) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                Test.iFld1 = ax$14;
                i22 = ax$15;
            }
        }
        i1 += (i1 -= iArr[(58849 >>> 1) % N]) % (iMeth1(i1, i1, i1) | 1);
        for (i19 = 3; i19 < 93; ++i19) {
            iArr[i19] >>= i19;
            i21 = 6;
            while ((--i21) > 0) {
                l += ((i21 * i22) + i20) - i22;
                iArr = iArr;
                i20 = s2;
                l ^= by1;
                f4 -= 43790;
                by1 += ((byte) (Test.iFld));
                lArr1[i21][i19] -= i19;
                try {
                    iArr[i21 - 1] = (-139) / i21;
                    i22 = (-111) % i20;
                    iArr[((-3) >>> 1) % N] = i22 % Test.iFld;
                } catch (ArithmeticException a_e) {
                }
                l <<= l;
                switch (((i19 % 3) * 5) + 15) {
                    case 27 :
                        i23 = 1;
                        do {
                            i1 -= ((int) (l));
                            i22 += i22;
                        } while ((++i23) < 1 );
                        for (i24 = 1; i24 < 1; i24++) {
                            l4 |= i23;
                            by1 -= ((byte) (99));
                            if (Test.bFld)
                                continue;

                            switch (((i24 % 2) * 5) + 115) {
                                case 117 :
                                    iArr = FuzzerUtils.int1array(N, ((int) (-34794)));
                                    switch ((i19 % 7) + 37) {
                                        case 37 :
                                            if (Test.bFld)
                                                break;

                                            break;
                                        case 38 :
                                            iArr[i24] *= -60539;
                                            try {
                                                i20 = Test.iFld / i22;
                                                i22 = i25 % i22;
                                                i22 = i19 % Test.iFld;
                                            } catch (ArithmeticException a_e) {
                                            }
                                            i25 = i19;
                                            i22 += i24;
                                            l *= ((long) (f4));
                                            Test.bArrFld = Test.bArrFld;
                                            i1 >>= ((int) (6927051075821340525L));
                                            l >>= i24;
                                            Test.dFld += f4;
                                            break;
                                        case 39 :
                                            Test.iFld += (-11) + (i24 * i24);
                                            Test.instanceCount += Test.instanceCount;
                                            break;
                                        case 40 :
                                            Test.instanceCount &= i24;
                                            break;
                                        case 41 :
                                            fArr1[i19 - 1] *= -80.81F;
                                            break;
                                        case 42 :
                                            Test.dFld += s2;
                                        case 43 :
                                            i22 += i21;
                                            break;
                                        default :
                                            i22 = i22;
                                    }
                                    break;
                                case 116 :
                                    i1 = ((int) (l));
                                    break;
                                default :
                                    Test.iFld += ((i24 * i19) + i24) - l;
                            }
                        }
                        break;
                    case 28 :
                    case 22 :
                        Test.dFld += 16672;
                        break;
                }
            }
        }
        long meth_res = ((((((((((((((i1 + l) + i19) + i20) + i21) + i22) + s2) + by1) + Float.floatToIntBits(f4)) + i23) + i24) + i25) + l4) + FuzzerUtils.checkSum(iArr)) + FuzzerUtils.checkSum(lArr1)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
        iMeth_check_sum += meth_res;
        return ((int) (meth_res));
    }

    public void mainTest(String[] strArr1) {
        int i = -8706;
        int i26 = 123;
        int i27 = -55089;
        int i28 = 38087;
        int i29 = 4;
        int i30 = -126;
        int i31 = 17561;
        int iArr3[] = new int[N];
        byte by2 = 110;
        byte byArr[] = new byte[N];
        float f5 = -2.483F;
        short s3 = -4263;
        long lArr2[] = new long[N];
        double dArr[] = new double[N];
        FuzzerUtils.init(byArr, ((byte) (86)));
        FuzzerUtils.init(iArr3, -216);
        FuzzerUtils.init(lArr2, -241L);
        FuzzerUtils.init(dArr, -1.74434);
        byArr[(i >>> 1) % N] >>= ((byte) (i--));
        i = ((int) (Test.instanceCount++));
        i = ((int) (iMeth(Test.iFld, -115831478728811820L) * Test.instanceCount));
        Test.iFld >>= 28943;
        iArr3[((-61) >>> 1) % N] -= ((int) (Test.instanceCount));
        for (i26 = 3; i26 < 134; i26++) {
            for (i28 = 39; i28 > 1; i28 -= 2) {
                for (i30 = 1; i30 < 3; i30++) {
                    i31 += Test.iFld;
                    i31 += i30 * i30;
                    if (Test.bFld) {
                        iArr3[i30 + 1] *= by2;
                        f5 -= Test.instanceCount;
                        iArr3 = iArr3;
                        Test.instanceCount += i30 | i29;
                        switch (((i27 >>> 1) % 1) + 55) {
                            case 55 :
                                f5 -= i27;
                                Test.iFld += i30;
                                Test.iFld >>= ((int) (Test.instanceCount));
                                if (false)
                                    break;

                                Test.instanceCount /= i26 | 1;
                                switch (((9 >>> 1) % 2) + 86) {
                                    case 86 :
                                        i27 += i28;
                                        i31 -= ((int) (Test.instanceCount));
                                        i27 >>>= ((int) (Test.instanceCount));
                                        Test.iFld += i30;
                                        Test.iFld = i26;
                                        Test.iFld = ((int) (Test.instanceCount));
                                        break;
                                    case 87 :
                                        i31 += i30 * i30;
                                        Test.dFld += Test.iFld;
                                        switch ((i30 % 7) + 8) {
                                            case 8 :
                                                Test.iFld = ((int) (Test.instanceCount));
                                                f5 -= i31;
                                                i27 = i28;
                                                if (Test.bFld)
                                                    continue;

                                                Test.instanceCount = ((long) (Test.dFld));
                                                Test.iFld *= s3;
                                                if (Test.bFld)
                                                    continue;

                                                f5 *= ((float) (-1.28498));
                                                switch ((i26 % 5) + 117) {
                                                    case 117 :
                                                        lArr2[i26 + 1] = i26;
                                                        f5 *= i30;
                                                        by2 += ((byte) (i30 - f5));
                                                        Test.dFld += 23906;
                                                        i31 -= 12;
                                                        i29 += i30;
                                                        break;
                                                    case 118 :
                                                        Test.iFld += ((int) (-14L));
                                                        Test.dFld -= Test.instanceCount;
                                                        Test.dFld = 1782336595237968560L;
                                                        if (Test.bFld) {
                                                            Test.dFld = Test.iFld;
                                                            if (Test.bFld)
                                                                continue;

                                                            i31 = ((int) (f5));
                                                            f5 = by2;
                                                            switch (((Test.iFld >>> 1) % 2) + 59) {
                                                                case 59 :
                                                                    Test.instanceCount += i28;
                                                                    i29 -= -250;
                                                                    iArr3[i26] = Test.iFld;
                                                                    i -= ((int) (f5));
                                                                    Test.dFld -= Test.instanceCount;
                                                                    if (Test.bFld) {
                                                                        try {
                                                                            i31 = i27 % 228;
                                                                            i = 37 / iArr3[i28];
                                                                            Test.iFld = i28 % i30;
                                                                        } catch (ArithmeticException a_e) {
                                                                        }
                                                                        i29 += ((i30 * i27) + f5) - i29;
                                                                        i29 += i27;
                                                                        i31 = 60378;
                                                                    }
                                                                    Test.bFld = Test.bFld;
                                                                    s3 += ((short) (i30 * i30));
                                                                    i += -8;
                                                                    Test.iFld += ((i30 * i28) + Test.instanceCount) - i31;
                                                                    Test.dFld -= i30;
                                                                    Test.iFld *= ((int) (Test.instanceCount));
                                                                    lArr2[i30 + 1] <<= i;
                                                                    iArr3[i28 + 1] >>= by2;
                                                                    Test.iFld -= i30;
                                                                    break;
                                                                case 60 :
                                                                    dArr[i30] -= Test.iFld1;
                                                                    break;
                                                                default :
                                                                    Test.iFld = ((int) (Test.instanceCount));
                                                            }
                                                        } else {
                                                            Test.instanceCount <<= Test.instanceCount;
                                                        }
                                                        break;
                                                    case 119 :
                                                        s3 += ((short) (i30 - i27));
                                                        break;
                                                    case 120 :
                                                        try {
                                                            iArr3[i30] = iArr3[i26 - 1] % 26295;
                                                            Test.iFld1 = i31 / 10175;
                                                            Test.iFld = Test.iFld1 % i30;
                                                        } catch (ArithmeticException a_e) {
                                                        }
                                                        break;
                                                    case 121 :
                                                        if (Test.bFld)
                                                            break;

                                                }
                                                break;
                                            case 9 :
                                                i27 += i28;
                                                break;
                                            case 10 :
                                                s3 = ((short) (Test.instanceCount));
                                                break;
                                            case 11 :
                                                if (Test.bFld)
                                                    break;

                                                break;
                                            case 12 :
                                                f5 = ((float) (-84.26011));
                                                break;
                                            case 13 :
                                                by2 ^= ((byte) (-20));
                                                break;
                                            case 14 :
                                                i = i29;
                                            default :
                                                Test.instanceCount += i30;
                                        }
                                        break;
                                }
                        }
                    }
                }
            }
        }
        FuzzerUtils.out.println((((("i i26 i27 = " + i) + ",") + i26) + ",") + i27);
        FuzzerUtils.out.println((((("i28 i29 i30 = " + i28) + ",") + i29) + ",") + i30);
        FuzzerUtils.out.println((((("i31 by2 f5 = " + i31) + ",") + by2) + ",") + Float.floatToIntBits(f5));
        FuzzerUtils.out.println((((("s3 byArr iArr3 = " + s3) + ",") + FuzzerUtils.checkSum(byArr)) + ",") + FuzzerUtils.checkSum(iArr3));
        FuzzerUtils.out.println((("lArr2 dArr = " + FuzzerUtils.checkSum(lArr2)) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println((((("Test.instanceCount Test.iFld Test.dFld = " + Test.instanceCount) + ",") + Test.iFld) + ",") + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println((((("Test.bFld Test.iFld1 Test.sArrFld = " + (Test.bFld ? 1 : 0)) + ",") + Test.iFld1) + ",") + FuzzerUtils.checkSum(Test.sArrFld));
        FuzzerUtils.out.println("Test.bArrFld = " + FuzzerUtils.checkSum(Test.bArrFld));
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }

    public static void main(String[] strArr) {
        {
            try {
                byte[] ax$17 = new byte[]{ ((byte) (-18)), ((byte) (-114)), ((byte) (30)), ((byte) (-107)), ((byte) (51)) };
                byte[] ax$18 = new byte[16];
                byte[] ax$19 = new byte[5];
                for (int ax$16 = -659; ax$16 < (-659 + 9776); ax$16 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        int ax$20 = Math.min(ax$18.length, Math.min(ax$19.length, ax$17.length));
                        for (int ax$21 = 0; ax$21 < ax$20; ax$21++) {
                            ax$18[ax$21] = ((byte) (((ax$19[ax$21] + ax$17[ax$21]) + 1) >>> 1));
                        }
                    } catch (Throwable ax$22) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
            }
        }
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    static Boolean ax$0 = false;

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }
}