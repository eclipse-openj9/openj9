// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.InetAddress;
import java.nio.channels.Pipe;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.Vector;

public class Test {
    public static final int N = 256;

    public static long instanceCount = -3601275865L;

    public static float fFld = 0.292F;

    public static int iFld = -46184;

    public static volatile byte byFld = 73;

    public static volatile boolean bFld = false;

    public static int iFld1 = -58605;

    public static long lFld = 14L;

    public static int iArrFld[] = new int[N];

    public static long lArrFld[] = new long[N];

    public double dArrFld[] = new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -219);
        FuzzerUtils.init(Test.lArrFld, -151L);
    }

    public static long vMeth_check_sum = 0;

    public static long iMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {
        double d1 = -118.32125;
        double d2 = -1.116968;
        double dArr1[] = new double[N];
        int i4 = 5;
        int i5 = -46114;
        int i6 = 49119;
        int i7 = -59166;
        int i8 = 0;
        int i9 = -196;
        int i10 = -14;
        int iArr1[] = new int[N];
        byte by = 37;
        byte byArr[][] = new byte[N][N];
        short s1 = -21415;
        FuzzerUtils.init(iArr1, 76);
        FuzzerUtils.init(byArr, ((byte) (2)));
        FuzzerUtils.init(dArr1, 1.9091);
        for (d1 = 1; d1 < 201; d1++) {
            i5 = 1;
            while ((++i5) < 3) {
                switch (((i5 >>> 1) % 2) + 95) {
                    case 95 :
                        for (i6 = 1; i6 < 1; i6++) {
                            switch ((i5 % 2) + 97) {
                                case 97 :
                                case 98 :
                                    i4 += -45;
                                    i7 -= i6;
                                    i7 = i4;
                                    break;
                            }
                            Test.fFld -= i7;
                            iArr1[((int) (d1))] -= by;
                            i4 = i6;
                            i4 &= i5;
                            byArr[((int) (d1))][i5 + 1] = ((byte) (Test.instanceCount));
                            Test.instanceCount = i7;
                            i7 = ((int) (Test.instanceCount));
                            i7 = ((int) (Test.instanceCount));
                            Test.fFld -= i7;
                            Test.instanceCount = i4;
                            i4 -= i6;
                            i7 -= i4;
                        }
                        {
                            try {
                                Set<Map.Entry<Object, String>> ax$26 = null;
                                HashSet<Map.Entry<Double, String>> ax$27 = new HashSet<Map.Entry<Double, String>>();
                                for (int ax$25 = -474; ax$25 < (-474 + 8851); ax$25 += 1) {
                                    Test.AxOutputRedirectionHelper.redirect();
                                    try {
                                        if (ax$27.hashCode() != ax$26.hashCode()) {
                                        }
                                    } catch (Throwable ax$28) {
                                    } finally {
                                    }
                                    Test.AxOutputRedirectionHelper.recover();
                                }
                            } finally {
                            }
                        }
                        Test.instanceCount += i5 - Test.fFld;
                        for (i8 = 1; i8 < 1; i8++) {
                            switch ((i8 % 1) + 36) {
                                case 36 :
                                    i10 += ((int) (Test.instanceCount));
                                    d2 = Test.instanceCount;
                                    dArr1[i5 - 1] -= i5;
                                    i4 = i7;
                                    Test.instanceCount -= Test.iFld;
                                    break;
                                default :
                                    Test.iFld *= ((int) (Test.instanceCount));
                                    i9 = -11791;
                                    i4 >>>= -2;
                                    i4 /= ((int) (i6 | 1));
                                    i10 += s1;
                                    i7 += ((i8 * i9) + Test.iFld) - i4;
                                    iArr1[i5 + 1] >>>= ((int) (-62862L));
                                    i7 = i7;
                                    i7 -= 4;
                            }
                        }
                    case 96 :
                        i9 >>= i5;
                        break;
                    default :
                        i7 += i5 | i4;
                }
            }
        }
        vMeth1_check_sum += ((((((((((((Double.doubleToLongBits(d1) + i4) + i5) + i6) + i7) + by) + i8) + i9) + i10) + Double.doubleToLongBits(d2)) + s1) + FuzzerUtils.checkSum(iArr1)) + FuzzerUtils.checkSum(byArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public static int iMeth(int i3) {
        int i11 = -2;
        int i12 = 42235;
        i3 += --i3;
        vMeth1();
        {
            try {
                Vector ax$2 = new Vector();
                String[][] ax$3 = new String[][]{ new String[]{ "s", "s" }, new String[]{ "s", "s", "s" } };
                boolean ax$1 = false;
                for (int ax$0 = -212; ax$0 < (-212 + 15551); ax$0 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        for (int ax$4 = 0; ax$4 < ax$3.length; ax$4++) {
                            InetAddress ax$5 = InetAddress.getByName(ax$3[ax$4][0]);
                            boolean ax$6 = new Boolean(ax$3[ax$4][1]).booleanValue();
                            if (ax$5.isSiteLocalAddress() != ax$6) {
                                ax$2.add(ax$3[ax$4]);
                            }
                        }
                    } catch (Throwable ax$7) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    if (!ax$1) {
                        Test.iFld -= i3;
                        ax$1 = true;
                    }
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        try {
                        } catch (Throwable ax$8) {

                        }
                    } catch (Throwable ax$9) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
            }
        }
        Test.iArrFld[(Test.iFld >>> 1) % N] = ((int) (Test.fFld));
        for (i11 = 2; i11 < 129; ++i11) {
            Test.fFld = i11;
            Test.byFld = ((byte) (i12));
        }
        long meth_res = (i3 + i11) + i12;
        iMeth_check_sum += meth_res;
        return ((int) (meth_res));
    }

    public static void vMeth(int i, long l) {
        int i1 = 55379;
        int i2 = 8;
        int i13 = 13;
        int i14 = -3829;
        int i15 = 168;
        int i16 = 6;
        int i17 = 173;
        int i18 = -38742;
        int iArr[] = new int[N];
        double d = -114.81518;
        double dArr[] = new double[N];
        short s = 24500;
        float f = -20.559F;
        float fArr[] = new float[N];
        long lArr[] = new long[N];
        FuzzerUtils.init(fArr, 2.882F);
        FuzzerUtils.init(dArr, 2.5396);
        FuzzerUtils.init(iArr, -42272);
        FuzzerUtils.init(lArr, 5678739923561805398L);
        fArr[(i >>> 1) % N] *= ((float) (i * ((dArr[(i >>> 1) % N]++) - Integer.reverseBytes(i))));
        for (i1 = 4; i1 < 111; i1++) {
            Test.instanceCount >>= l;
            d = (((long) (d * d)) ^ (s - i1)) * s;
        }
        iArr[(i2 >>> 1) % N] = -50272;
        iMeth(2);
        fArr[(i >>> 1) % N] *= i;
        for (f = 13; f < 241; f++) {
            Test.instanceCount *= -7;
            if (Test.bFld)
                break;

            Test.instanceCount = i13;
            iArr[((int) (f + 1))] = ((int) (Test.instanceCount));
            Test.iFld += ((int) (f));
            for (i14 = 1; i14 < 3; ++i14) {
                if (false) {
                    Test.iFld = i;
                    i15 -= i;
                    i2 >>= ((int) (l));
                    if (i != 0) {
                        vMeth_check_sum += (((((((((((((((i + l) + i1) + i2) + Double.doubleToLongBits(d)) + s) + Float.floatToIntBits(f)) + i13) + i14) + i15) + i16) + i17) + i18) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr))) + FuzzerUtils.checkSum(iArr)) + FuzzerUtils.checkSum(lArr);
                        return;
                    }
                    i = ((int) (Test.fFld));
                    for (i16 = 1; 2 > i16; ++i16) {
                        Test.bFld = true;
                        Test.iArrFld[i16] += i15;
                        i = i15;
                        Test.iArrFld = Test.iArrFld;
                        l = i1;
                        if (true)
                            break;

                        Test.iFld = ((int) (l));
                        i2 *= ((int) (Test.instanceCount));
                        i2 = i13;
                        Test.iFld = Test.iFld1;
                        i13 *= ((int) (l));
                        switch ((i14 % 5) + 90) {
                            case 90 :
                                switch (((i18 >>> 1) % 2) + 47) {
                                    case 47 :
                                        l += 23308 + (i16 * i16);
                                        i17 = ((int) (-3452L));
                                        try {
                                            Test.iFld = 189 / i15;
                                            i = i13 % 16217;
                                            Test.iArrFld[((int) (f))] = i14 / i14;
                                        } catch (ArithmeticException a_e) {
                                        }
                                    case 48 :
                                        i13 -= Test.iFld1;
                                    default :
                                        i18 -= i16;
                                }
                                break;
                            case 91 :
                                i15 -= i;
                                break;
                            case 92 :
                                Test.iArrFld[i14 - 1] *= i1;
                                break;
                            case 93 :
                                lArr[(i13 >>> 1) % N] += i18;
                                break;
                            case 94 :
                                try {
                                    Test.iFld = (-178) % i17;
                                    Test.iArrFld[i14 + 1] = Test.iArrFld[((int) (f - 1))] % i14;
                                    i2 = i % 76;
                                } catch (ArithmeticException a_e) {
                                }
                                break;
                        }
                    }
                } else {
                    s <<= ((short) (i15));
                }
            }
        }
        vMeth_check_sum += (((((((((((((((i + l) + i1) + i2) + Double.doubleToLongBits(d)) + s) + Float.floatToIntBits(f)) + i13) + i14) + i15) + i16) + i17) + i18) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr))) + FuzzerUtils.checkSum(iArr)) + FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {
        int i19 = -239;
        int i20 = -13;
        int i21 = -7;
        int i22 = 0;
        int i23 = 36038;
        int i24 = -16346;
        int i25 = -194;
        int i26 = -31707;
        int i27 = 251;
        int i28 = 0;
        int iArr2[][] = new int[N][N];
        short s2 = 31663;
        double d3 = 80.107639;
        float fArr1[] = new float[N];
        long lArr1[][] = new long[N][N];
        FuzzerUtils.init(fArr1, 69.763F);
        FuzzerUtils.init(iArr2, -36);
        FuzzerUtils.init(lArr1, -92L);
        vMeth(5793, Test.instanceCount);
        for (i19 = 83; i19 > 1; i19 -= 2) {
            for (i21 = 6; i21 < 122; ++i21) {
                Test.fFld -= i20;
                i22 += ((int) (Test.instanceCount));
                Test.instanceCount = i21;
            }
            i20 -= Test.iFld1;
            switch ((i19 % 7) + 105) {
                case 105 :
                    if (Test.bFld)
                        break;

                    if (Test.bFld) {
                        for (i23 = 6; i23 < 122; i23++) {
                            i24 += 228;
                            i20 -= ((int) (Test.fFld));
                            for (i25 = 1; i25 < 2; i25++) {
                                fArr1[i19] = i21;
                                Test.iFld1 *= i19;
                                i22 = i20;
                                Test.lArrFld = Test.lArrFld;
                                switch (((i23 % 1) * 5) + 114) {
                                    case 119 :
                                        {
                                            final boolean ax$24 = Test.bFld;
                                            try {
                                                InetAddress ax$19 = null;
                                                Pipe ax$22 = null;
                                                boolean ax$18 = false;
                                                for (int ax$17 = -997; ax$17 < (-997 + 8282); ax$17 += 1) {
                                                    Test.AxOutputRedirectionHelper.redirect();
                                                    try {
                                                        if (bFld) {
                                                        } else {
                                                        }
                                                    } catch (Throwable ax$21) {
                                                    } finally {
                                                    }
                                                    Test.AxOutputRedirectionHelper.recover();
                                                    if (!ax$18) {
                                                        Test.instanceCount += i25;
                                                        ax$18 = true;
                                                    }
                                                    Test.AxOutputRedirectionHelper.redirect();
                                                    try {
                                                        ax$22.sink().close();
                                                        ax$22.source().close();
                                                    } catch (Throwable ax$23) {
                                                    } finally {
                                                    }
                                                    Test.AxOutputRedirectionHelper.recover();
                                                }
                                            } finally {
                                                Test.bFld = ax$24;
                                            }
                                        }
                                        Test.fFld -= Test.fFld;
                                        break;
                                    default :
                                        Test.instanceCount >>>= i22;
                                        i20 = i20;
                                        i24 += i24;
                                        Test.lFld += ((i25 * s2) + i25) - Test.iFld;
                                        if (Test.bFld)
                                            break;

                                        switch (((i25 % 5) * 5) + 83) {
                                            case 105 :
                                                Test.iFld1 = i23;
                                                Test.lFld -= Test.lFld;
                                                try {
                                                    iArr2[i25 + 1][i25] = 48 % Test.iArrFld[i25 + 1];
                                                    i26 = (-22347) / i19;
                                                    Test.iFld = (-9) % i26;
                                                } catch (ArithmeticException a_e) {
                                                }
                                                i20 >>>= i24;
                                                Test.instanceCount += i25 | ((long) (Test.fFld));
                                                Test.iFld += i25 * i25;
                                                if (Test.bFld) {
                                                    i22 = ((int) (Test.instanceCount));
                                                    i24 -= ((int) (Test.fFld));
                                                    dArrFld[i19 + 1] -= Test.instanceCount;
                                                    Test.fFld = Test.iFld1;
                                                    try {
                                                        i22 = i20 % iArr2[i19 - 1][i19];
                                                        i24 = (-207) % Test.iFld;
                                                        i24 = (-338) / i24;
                                                    } catch (ArithmeticException a_e) {
                                                    }
                                                    i22 += ((i25 * Test.byFld) + i20) - i20;
                                                    Test.lFld = Test.instanceCount;
                                                    Test.fFld = ((float) (d3));
                                                } else {
                                                    Test.instanceCount %= ((long) (Test.fFld)) | 1;
                                                    i20 = i19;
                                                    i22 += ((i25 * Test.fFld) + i27) - i25;
                                                    iArr2[i23][i25 - 1] -= ((int) (Test.fFld));
                                                }
                                            case 92 :
                                                switch ((((-43076) >>> 1) % 3) + 84) {
                                                    case 84 :
                                                        i20 *= i28;
                                                        Test.lArrFld[i25 + 1] ^= i21;
                                                        Test.instanceCount ^= Test.iFld;
                                                        lArr1 = lArr1;
                                                        Test.lFld = ((long) (Test.fFld));
                                                        Test.iFld1 -= ((int) (Test.fFld));
                                                        Test.instanceCount -= i26;
                                                        switch (((2095 >>> 1) % 2) + 64) {
                                                            case 64 :
                                                                Test.fFld += ((float) (d3));
                                                                Test.fFld = ((float) (d3));
                                                                i20 += 49858 + (i25 * i25);
                                                                i20 = i22;
                                                                i24 >>= Test.byFld;
                                                                i27 *= i22;
                                                                break;
                                                            case 65 :
                                                                switch ((i23 % 5) + 42) {
                                                                    case 42 :
                                                                        d3 = Test.lFld;
                                                                        i26 += ((i25 * s2) + i19) - Test.byFld;
                                                                        switch ((i19 % 2) + 10) {
                                                                            case 10 :
                                                                                iArr2[i25 - 1][(i21 >>> 1) % N] %= ((int) (1.256F));
                                                                                Test.fFld *= Test.iFld1;
                                                                                iArr2[i23 - 1][i23 - 1] ^= i20;
                                                                                switch ((i25 % 2) + 20) {
                                                                                    case 20 :
                                                                                        i22 -= i19;
                                                                                        Test.lFld -= ((long) (d3));
                                                                                        i24 *= Test.iFld;
                                                                                        break;
                                                                                    case 21 :
                                                                                        i28 += i25;
                                                                                        Test.lFld <<= 13;
                                                                                        Test.iFld += ((int) (42543L));
                                                                                    default :
                                                                                        i22 += i25;
                                                                                }
                                                                                break;
                                                                            case 11 :
                                                                                fArr1[i23 + 1] = Test.instanceCount;
                                                                            default :
                                                                                if (Test.bFld)
                                                                                    continue;

                                                                        }
                                                                    case 43 :
                                                                        i27 = 118;
                                                                        break;
                                                                    case 44 :
                                                                        i20 *= Test.iFld;
                                                                    case 45 :
                                                                        iArr2[i23 - 1][i19 - 1] -= i27;
                                                                        break;
                                                                    case 46 :
                                                                        i28 &= i19;
                                                                        break;
                                                                    default :
                                                                        if (true)
                                                                            continue;

                                                                }
                                                                break;
                                                        }
                                                        break;
                                                    case 85 :
                                                        Test.lFld = Test.lFld;
                                                    case 86 :
                                                        Test.instanceCount += ((long) (Test.fFld));
                                                        break;
                                                    default :
                                                        i20 -= 44046;
                                                }
                                                break;
                                            case 98 :
                                                Test.iArrFld[i19 - 1] = i26;
                                            case 103 :
                                                Test.lFld += Test.iFld;
                                            case 94 :
                                                Test.iFld += i21;
                                            default :
                                                i26 += i26;
                                        }
                                }
                            }
                        }
                    }
                    break;
                case 106 :
                    Test.lFld *= Test.iFld;
                    break;
                case 107 :
                    fArr1[i19] = i22;
                case 108 :
                    if (Test.bFld)
                        continue;

                    break;
                case 109 :
                    Test.iArrFld[(i26 >>> 1) % N] = 0;
                case 110 :
                    Test.lFld += Test.instanceCount;
                    break;
                case 111 :
                    Test.iFld1 >>= i27;
            }
        }
        FuzzerUtils.out.println((((("i19 i20 i21 = " + i19) + ",") + i20) + ",") + i21);
        FuzzerUtils.out.println((((("i22 i23 i24 = " + i22) + ",") + i23) + ",") + i24);
        FuzzerUtils.out.println((((("i25 i26 s2 = " + i25) + ",") + i26) + ",") + s2);
        FuzzerUtils.out.println((((("d3 i27 i28 = " + Double.doubleToLongBits(d3)) + ",") + i27) + ",") + i28);
        FuzzerUtils.out.println((((("fArr1 iArr2 lArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1))) + ",") + FuzzerUtils.checkSum(iArr2)) + ",") + FuzzerUtils.checkSum(lArr1));
        FuzzerUtils.out.println((((("Test.instanceCount Test.fFld Test.iFld = " + Test.instanceCount) + ",") + Float.floatToIntBits(Test.fFld)) + ",") + Test.iFld);
        FuzzerUtils.out.println((((("Test.byFld Test.bFld Test.iFld1 = " + Test.byFld) + ",") + (Test.bFld ? 1 : 0)) + ",") + Test.iFld1);
        FuzzerUtils.out.println((((("Test.lFld Test.iArrFld Test.lArrFld = " + Test.lFld) + ",") + FuzzerUtils.checkSum(Test.iArrFld)) + ",") + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)));
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        {
            final int ax$16 = Test.iFld;
            try {
                short[] ax$11 = new short[]{ ((short) (28447)), ((short) (22443)), ((short) (4678)), ((short) (28398)), ((short) (-15149)), ((short) (-22160)), ((short) (-21984)) };
                short[] ax$13 = new short[]{ ((short) (-21019)), ((short) (-30099)), ((short) (12248)), ((short) (4019)) };
                short[] ax$14 = new short[]{ ((short) (7329)), ((short) (-8222)), ((short) (-30720)), ((short) (26631)), ((short) (30218)), ((short) (-1682)), ((short) (7504)) };
                for (int ax$10 = -68; ax$10 < (-68 + 7205); ax$10 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        ax$13[iFld] = ((short) (((ax$14[iFld] + 10) + (ax$11[iFld] - 10)) >> 1));
                    } catch (Throwable ax$15) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                Test.iFld = ax$16;
            }
        }
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }
}