// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.concurrent.atomic.AtomicLong;

public class Test {
    public static final int N = 256;

    public static long instanceCount = 54930L;

    public static volatile byte byFld = -93;

    public static short sFld = 18145;

    public static double dFld = 1.7978;

    public static boolean bFld = false;

    public static int iFld = -13;

    public static volatile int iFld1 = -8;

    public static volatile int iFld2 = 66;

    public float fFld = 95.918F;

    public static double dArrFld[] = new double[N];

    public static volatile byte byArrFld[][] = new byte[N][N];

    public static int iArrFld[] = new int[N];

    public static int iArrFld1[] = new int[N];

    public static long lArrFld[] = new long[N];

    public boolean bArrFld[] = new boolean[N];

    public float fArrFld[] = new float[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 1.94993);
        FuzzerUtils.init(Test.byArrFld, ((byte) (-107)));
        FuzzerUtils.init(Test.iArrFld, -145);
        FuzzerUtils.init(Test.iArrFld1, 0);
        FuzzerUtils.init(Test.lArrFld, 44283L);
    }

    public static long vMeth_check_sum = 0;

    public static long dMeth_check_sum = 0;

    public static long dMeth1_check_sum = 0;

    public static double dMeth1(int i11) {
        int i12 = -209;
        int i13 = 116;
        int i14 = -9;
        int i15 = 218;
        int i16 = -79;
        int i17 = 230;
        int i18 = 4388;
        int i19 = 48211;
        int i20 = 227;
        int i21 = 15083;
        float f1 = 65.913F;
        double d2 = -1.35953;
        i11 = i11;
        for (i12 = 1; i12 < 98; i12++) {
            i11 -= i11;
            Test.dFld = i13;
            for (i14 = 1; i14 < 6; ++i14) {
                if (Test.bFld)
                    continue;

            }
            Test.iArrFld[i12] = i16;
            for (i17 = 6; i17 > 1; --i17) {
                Test.instanceCount += 32;
                i18 += ((int) (Test.instanceCount));
                i11 = i11;
                Test.iArrFld[i12 - 1] = i18;
                Test.instanceCount += i17;
                Test.byFld = ((byte) (i13));
                Test.dFld -= -27094;
                i18 = i14;
                i16 &= i12;
            }
            i16 -= 27403;
            Test.iArrFld[i12 + 1] += i14;
            Test.instanceCount += i12;
            i18 *= ((int) (Test.dFld));
            Test.iArrFld = Test.iArrFld;
            i13 %= 7;
        }
        i19 = 247;
        while ((--i19) > 0) {
            i20 = 1;
            while ((++i20) < 3) {
                i15 = i20;
                i16 >>= i16;
                f1 += -149;
                Test.byArrFld[i20] = Test.byArrFld[i20 - 1];
                f1 += i20;
                {
                    try {
                        for (int ax$0 = -389; ax$0 < (-389 + 8600); ax$0 += 1) {
                            Test.AxOutputRedirectionHelper.redirect();
                            try {
                                Method ax$1 = Locale.class.getDeclaredMethod("getInstance", String.class, String.class, String.class);
                                ax$1.setAccessible(true);
                                ax$1.invoke(null, "null", "GB", "");
                                try {
                                    ax$1.invoke(null, null, "GB", "");
                                } catch (InvocationTargetException ax$5) {
                                    Throwable ax$2 = ax$5.getCause();
                                    if (!(ax$2 instanceof NullPointerException)) {
                                    }
                                }
                                ax$1.invoke(null, "en", "null", "");
                                try {
                                    ax$1.invoke(null, "en", null, "");
                                } catch (InvocationTargetException ax$6) {
                                    Throwable ax$3 = ax$6.getCause();
                                    if (!(ax$3 instanceof NullPointerException)) {
                                    }
                                }
                                ax$1.invoke(null, "en", "GB", "null");
                                try {
                                    ax$1.invoke(null, "en", "GB", null);
                                } catch (InvocationTargetException ax$7) {
                                    Throwable ax$4 = ax$7.getCause();
                                    if (!(ax$4 instanceof NullPointerException)) {
                                    }
                                }
                            } catch (Throwable ax$8) {
                            } finally {
                            }
                            Test.AxOutputRedirectionHelper.recover();
                        }
                    } finally {
                    }
                }
                i15 |= i16;
                i16 ^= i12;
                for (d2 = 1; d2 < 1; d2++) {
                    f1 *= 2;
                    Test.byArrFld[((int) (d2 + 1))][i19 - 1] += ((byte) (Test.dFld));
                    Test.iArrFld = FuzzerUtils.int1array(N, ((int) (52)));
                    Test.byFld = ((byte) (Test.instanceCount));
                }
            }
        }
        long meth_res = (((((((((((i11 + i12) + i13) + i14) + i15) + i16) + i17) + i18) + i19) + i20) + Float.floatToIntBits(f1)) + Double.doubleToLongBits(d2)) + i21;
        dMeth1_check_sum += meth_res;
        return ((double) (meth_res));
    }

    public static double dMeth(int i7, int i8) {
        double d1 = 23.16018;
        int i9 = -53036;
        int i10 = 12;
        int i22 = -41249;
        int i23 = -5;
        int i24 = 8;
        int i25 = -6164;
        int i26 = -54377;
        float f2 = -1.72F;
        float f3 = 0.96F;
        d1 += (((-1969) * (i8 - i7)) + d1) + i7;
        for (i9 = 7; i9 < 201; i9++) {
            dMeth1(i9);
            i7 -= -171;
            i10 -= i10;
            i10 = ((int) (Test.instanceCount));
            Test.byFld = ((byte) (f2));
            Test.instanceCount += i9 * i9;
            for (i22 = 1; i22 < 3; ++i22) {
                switch ((((i10 >>> 1) % 2) * 5) + 52) {
                    case 61 :
                        f2 = 47047;
                        for (i24 = 1; i24 < 2; i24++) {
                            Test.iArrFld[i9 - 1] -= i7;
                            Test.instanceCount = i22;
                            i7 &= i8;
                            i8 = i22;
                            i23 = i8;
                            Test.iArrFld = Test.iArrFld;
                            i25 %= ((int) (i24 | 1));
                            i25 += 19701;
                            Test.iArrFld = Test.iArrFld;
                            switch ((i24 % 2) + 125) {
                                case 125 :
                                    if (Test.bFld)
                                        break;

                                    if (Test.bFld)
                                        continue;

                                    Test.instanceCount = 86;
                                    i25 += ((int) (Test.instanceCount));
                                    f2 -= f2;
                                    Test.instanceCount <<= Test.instanceCount;
                                    if (Test.bFld) {
                                        Test.instanceCount = i22;
                                        if (Test.bFld)
                                            break;

                                        f3 += ((long) (i24)) | ((long) (Test.instanceCount));
                                        Test.instanceCount += Test.instanceCount;
                                    } else {
                                        i8 -= Test.byFld;
                                        Test.iFld = Test.sFld;
                                        i25 += i24;
                                        i26 = i24;
                                    }
                                    break;
                                case 126 :
                                    Test.dFld *= Test.instanceCount;
                                    break;
                            }
                        }
                        break;
                    case 62 :
                        Test.iFld += i7;
                        break;
                    default :
                        i23 += i22;
                }
            }
        }
        long meth_res = ((((((((((i7 + i8) + Double.doubleToLongBits(d1)) + i9) + i10) + Float.floatToIntBits(f2)) + i22) + i23) + i24) + i25) + Float.floatToIntBits(f3)) + i26;
        dMeth_check_sum += meth_res;
        return ((double) (meth_res));
    }

    public static void vMeth(float f, int i) {
        if (Test.ax$9) {
            NumberFormat ax$10 = null;
            long[] ax$11 = new long[]{ 0L, 1L, 2L, 3L, 99999L, 100000L, 999999L, 100000L, 999999999L, 1000000000L, 0x12345678L, 0x80000000L, 0x80000001L, 0x80000002L, 0x80000003L, 0x87654321L, 0xfffffffeL, 0xffffffffL, 999999999999L, 1000000000000L, 999999999999999999L, 1000000000000000000L, 0xfffffffffffffffeL, 0xffffffffffffffffL };
            Test.AxOutputRedirectionHelper.redirect();
            try {
                for (int ax$12 = 0; ax$12 < ax$11.length; ax$12++) {
                    String ax$13 = ax$10.format(new Long(ax$11[ax$12]));
                    String ax$14 = ax$10.format(new AtomicLong(ax$11[ax$12]));
                    if (!ax$13.equals(ax$14)) {
                    }
                }
            } catch (Throwable ax$15) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            return;
        }
        int i1 = -24262;
        int i2 = -8981;
        int i3 = -13;
        int i4 = 32929;
        int i5 = 5;
        int i6 = 34825;
        int i27 = -3;
        double d = -112.129413;
        short s = -27880;
        float f4 = 32.558F;
        long lArr[] = new long[N];
        long lArr1[][] = new long[N][N];
        FuzzerUtils.init(lArr, 32441L);
        FuzzerUtils.init(lArr1, -95L);
        for (i1 = 238; i1 > 7; --i1) {
            for (i3 = 1; i3 < 3; i3 += 2) {
                i = ((int) ((Test.instanceCount >>= Long.reverseBytes(-31084L)) - (i * (f - i2))));
                for (i5 = i3; 3 > i5; ++i5) {
                    i2 += ((i5 * i3) + i5) - i6;
                    i6 -= ((int) (Test.instanceCount + d));
                    switch ((i5 * 5) + 28) {
                        case 256 :
                            s = ((short) (((i2 * 103.34207) + Test.dArrFld[i3 + 1]) - Test.instanceCount));
                        case 170 :
                            switch ((((-(i4 - i4)) >>> 1) % 10) + 51) {
                                case 51 :
                                    switch (((i3 % 6) * 5) + 55) {
                                        case 75 :
                                            Test.byFld -= ((byte) (++Test.byFld));
                                            Test.byArrFld[i3 - 1][i1 - 1] &= ((byte) (f * ((83 - (30100 - (f * Test.sFld))) + (i6++))));
                                            Test.instanceCount += ((i5 * i4) + i6) - i4;
                                            d -= dMeth(i, i3);
                                            Test.iArrFld[i3] >>= 42;
                                            Test.bFld = Test.bFld;
                                            Test.instanceCount *= ((long) (-2.968F));
                                            Test.iFld += ((int) (Test.dFld));
                                            f = ((float) (Test.dFld));
                                            Test.instanceCount -= Test.byFld;
                                            f += ((i5 * Test.byFld) + i6) - i6;
                                            i2 = i3;
                                            f -= ((float) (Test.dFld));
                                            break;
                                        case 58 :
                                            Test.instanceCount >>>= i3;
                                            if (true) {
                                                if (true)
                                                    break;

                                                Test.sFld -= ((short) (-2));
                                                if (Test.bFld) {
                                                    if (Test.bFld)
                                                        break;

                                                    switch (((i5 % 2) * 5) + 71) {
                                                        case 76 :
                                                            i2 = i5;
                                                            Test.byFld += ((byte) (i5));
                                                            Test.iArrFld[i5 - 1] ^= i;
                                                            i6 *= i2;
                                                            Test.bFld = Test.bFld;
                                                            i4 += i5 ^ i5;
                                                            f += f;
                                                            break;
                                                        case 73 :
                                                            Test.instanceCount += i3;
                                                            break;
                                                        default :
                                                            Test.bFld = true;
                                                    }
                                                }
                                            } else if (Test.bFld) {
                                                Test.dFld = i;
                                            }
                                            break;
                                        case 61 :
                                            f = i6;
                                            break;
                                        case 60 :
                                            f = i2;
                                            break;
                                        case 70 :
                                            lArr = lArr;
                                        case 82 :
                                            i4 += ((i5 * Test.iFld1) + i4) - Test.iFld;
                                            break;
                                    }
                                case 52 :
                                    i6 >>= 49110;
                                case 53 :
                                    Test.instanceCount = Test.instanceCount;
                                case 54 :
                                    Test.iFld1 -= Test.iFld;
                                    break;
                                case 55 :
                                    i += i5;
                                    break;
                                case 56 :
                                    i6 = Test.iFld;
                                case 57 :
                                    if (Test.bFld)
                                        break;

                                    break;
                                case 58 :
                                    i2 += i5;
                                case 59 :
                                    i2 += i5 + i2;
                                    break;
                                case 60 :
                                    if (false)
                                        break;

                                    break;
                            }
                            break;
                        case 359 :
                            Test.iFld += i5 * i5;
                            break;
                        case 60 :
                            lArr1 = lArr1;
                            break;
                        case 210 :
                            if (Test.bFld)
                                continue;

                            break;
                        case 93 :
                            if (i1 != 0) {
                                vMeth_check_sum += ((((((((((((Float.floatToIntBits(f) + i) + i1) + i2) + i3) + i4) + i5) + i6) + Double.doubleToLongBits(d)) + s) + Float.floatToIntBits(f4)) + i27) + FuzzerUtils.checkSum(lArr)) + FuzzerUtils.checkSum(lArr1);
                                return;
                            }
                        case 312 :
                            Test.instanceCount = i4;
                            break;
                        case 57 :
                            f = i1;
                            break;
                        case 117 :
                            s += ((short) (((i5 * Test.iFld) + Test.iFld2) - i6));
                            break;
                        case 242 :
                            Test.instanceCount += i5;
                            break;
                        case 303 :
                            Test.iFld1 += ((i5 * Test.instanceCount) + Test.instanceCount) - f;
                            break;
                        case 164 :
                            i6 >>= i2;
                            break;
                        case 237 :
                            Test.iFld1 |= ((int) (Test.instanceCount));
                            break;
                        case 192 :
                            Test.iFld1 -= Test.iFld1;
                            break;
                        case 185 :
                            Test.iFld1 += i5;
                            break;
                        case 135 :
                            Test.iFld2 = i3;
                            break;
                        case 55 :
                            Test.iFld1 *= i;
                            break;
                        case 134 :
                            Test.instanceCount = Test.instanceCount;
                            break;
                        case 155 :
                            Test.iArrFld[i1] *= i5;
                            break;
                        case 69 :
                        case 70 :
                            Test.iFld += ((i5 * f) + s) - i;
                            break;
                        case 317 :
                            i6 = i;
                            break;
                        case 221 :
                            i6 *= Test.iFld1;
                            break;
                        case 364 :
                            Test.bFld = Test.bFld;
                            break;
                        case 194 :
                            Test.byFld -= ((byte) (i));
                            break;
                        case 310 :
                            if (Test.bFld)
                                break;

                            break;
                        case 74 :
                            Test.byFld += ((byte) (Test.iFld2));
                        case 324 :
                            if (Test.bFld)
                                break;

                            break;
                        case 116 :
                            if (Test.iFld2 != 0) {
                                vMeth_check_sum += ((((((((((((Float.floatToIntBits(f) + i) + i1) + i2) + i3) + i4) + i5) + i6) + Double.doubleToLongBits(d)) + s) + Float.floatToIntBits(f4)) + i27) + FuzzerUtils.checkSum(lArr)) + FuzzerUtils.checkSum(lArr1);
                                return;
                            }
                            break;
                        case 321 :
                            i2 += i5;
                            break;
                        case 366 :
                            d += Test.iFld;
                            break;
                        case 144 :
                            Test.dFld /= ((long) (f4)) | 1;
                            break;
                        case 277 :
                            f = i5;
                            break;
                        case 143 :
                            Test.iArrFld[i1] = i;
                        case 323 :
                            Test.instanceCount -= Test.iFld;
                            break;
                        case 330 :
                            Test.dArrFld[i1] = Test.instanceCount;
                        case 203 :
                            f4 *= i1;
                            break;
                        case 37 :
                            Test.instanceCount -= Test.iFld1;
                            break;
                        case 205 :
                            i2 += -53727;
                            break;
                        case 340 :
                            try {
                                Test.iFld = i4 / Test.iFld1;
                                i4 = 0 / i1;
                                i2 = i / (-150);
                            } catch (ArithmeticException a_e) {
                            }
                            break;
                        case 32 :
                        case 211 :
                            Test.iFld2 >>= Test.iFld1;
                            break;
                        case 103 :
                        case 147 :
                            Test.iArrFld[i3 - 1] >>= -227;
                            break;
                        case 112 :
                            Test.instanceCount += ((i5 * i5) + i3) - Test.iFld2;
                            break;
                        case 302 :
                            Test.iFld1 = 105;
                            break;
                        case 305 :
                            i4 += i5;
                            break;
                        case 267 :
                            f4 -= i6;
                            break;
                        case 163 :
                            Test.instanceCount += i5 ^ Test.byFld;
                        case 253 :
                            i2 *= i27;
                        case 127 :
                            Test.instanceCount %= Test.instanceCount | 1;
                            break;
                        case 231 :
                            i6 += i6;
                            break;
                        case 276 :
                            if (Test.bFld)
                                break;

                        case 270 :
                            i27 += (-40) + (i5 * i5);
                            break;
                        case 109 :
                            i6 = i3;
                            break;
                        case 363 :
                            Test.iFld1 += i5;
                            break;
                        case 76 :
                            Test.iFld1 += i5;
                            break;
                        case 329 :
                            i2 = i6;
                        case 319 :
                            Test.instanceCount = i;
                            break;
                        case 168 :
                            Test.iArrFld[i5] <<= i5;
                        case 101 :
                            f4 = i6;
                            break;
                        case 287 :
                            Test.iArrFld[i3] = i1;
                            break;
                        case 65 :
                        case 343 :
                            f = i2;
                        case 177 :
                            i = i4;
                        case 357 :
                            Test.iArrFld1[i1] = i27;
                            break;
                        case 34 :
                            i4 >>= i3;
                            break;
                        case 280 :
                            d = i5;
                            break;
                        case 243 :
                            Test.iFld >>= Test.iFld2;
                            break;
                        case 351 :
                            if (true)
                                break;

                            break;
                    }
                }
            }
        }
        vMeth_check_sum += ((((((((((((Float.floatToIntBits(f) + i) + i1) + i2) + i3) + i4) + i5) + i6) + Double.doubleToLongBits(d)) + s) + Float.floatToIntBits(f4)) + i27) + FuzzerUtils.checkSum(lArr)) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {
        int i28 = -37;
        int i29 = 7;
        int i30 = -1;
        int i31 = -34015;
        int i32 = 141;
        int i33 = 51;
        int i34 = 61094;
        int i35 = 0;
        int i36 = 157;
        int i37 = -116;
        int i38 = 11;
        int i39 = 16254;
        int i40 = 14;
        int i41 = 12486;
        int i42 = -115;
        int i43 = -28780;
        int i44 = -46215;
        int i45 = 61;
        int i46 = 10;
        int i47 = 32051;
        int iArr[] = new int[N];
        FuzzerUtils.init(iArr, -78);
        {
            final int ax$24 = i31;
            try {
                char[][] ax$17 = new char[][]{ new char[]{ 'ꟼ', '?', '됄', 'ᄯ', 'ꦃ' }, new char[]{ 'ر', '躴', '읿', '͒', '惀', 'ꑇ' } };
                double[] ax$20 = new double[1];
                long[] ax$22 = new long[]{ 0L, 1L, 2L, 3L, 99999L, 100000L, 999999L, 100000L, 999999999L, 1000000000L, 0x12345678L, 0x80000000L, 0x80000001L, 0x80000002L, 0x80000003L, 0x87654321L, 0xfffffffeL, 0xffffffffL, 999999999999L, 1000000000000L, 999999999999999999L, 1000000000000000000L, 0xfffffffffffffffeL, 0xffffffffffffffffL };
                for (int ax$16 = -62; ax$16 < (-62 + 8277); ax$16 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        for (int ax$18 = 0; ax$18 < ax$17.length; ++ax$18) {
                            ax$17[ax$18] = new char[1024 * 1024];
                        }
                    } catch (Throwable ax$19) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$9 = true;
                    vMeth(0.058340013F, -1407865389);
                    Test.ax$9 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        ax$20[i31] = ax$22[20] - 7;
                    } catch (Throwable ax$23) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                i31 = ax$24;
            }
        }
        vMeth(fFld, i28);
        Test.iFld2 >>= Test.iFld;
        i28 = Test.sFld;
        for (i29 = 1; 124 > i29; ++i29) {
            Test.instanceCount = i30;
            iArr[i29] *= Test.iFld1;
        }
        for (i31 = 6; i31 < 247; ++i31) {
            Test.lArrFld[i31] -= ((long) (Test.dFld));
            i33 = 1;
            do {
                i28 ^= Test.iFld;
                i30 += i33 * i33;
            } while ((++i33) < 21 );
            for (i34 = 21; i34 > 1; i34 -= 2) {
                Test.dFld -= i29;
                for (i36 = i34; i36 < 3; ++i36) {
                    fFld += Test.instanceCount;
                    fFld += Test.iFld2;
                    Test.instanceCount -= Test.instanceCount;
                }
                i30 -= i30;
                i28 >>= 40983;
                switch ((((i30 >>> 1) % 2) * 5) + 36) {
                    case 43 :
                        for (i38 = 1; 3 > i38; ++i38) {
                            Test.iFld += ((int) (fFld));
                            i30 = i29;
                            i28 -= i32;
                            Test.iFld = i37;
                            i39 <<= i34;
                            Test.instanceCount = ((long) (Test.dFld));
                            fFld += i38 - fFld;
                            Test.iArrFld[i34 - 1] *= ((int) (fFld));
                            i39 += ((int) ((-70.148F) + (i38 * i38)));
                            fFld *= ((float) (Test.dFld));
                            i37 += i38;
                        }
                        Test.iFld2 *= ((int) (Test.instanceCount));
                        Test.byFld >>= ((byte) (i29));
                        Test.instanceCount += 8;
                        if (Test.bFld)
                            continue;

                        i32 += ((i34 * i29) + i34) - Test.instanceCount;
                        switch (((Test.iFld2 >>> 1) % 9) + 44) {
                            case 44 :
                                for (i40 = 3; i40 > 1; --i40) {
                                    bArrFld[i31 - 1] = Test.bFld;
                                }
                                Test.dFld = i29;
                                Test.instanceCount *= ((long) (fFld));
                                i39 *= i41;
                                i42 = 1;
                                do {
                                    Test.bFld = Test.bFld;
                                    Test.instanceCount = 31960;
                                } while ((++i42) < 3 );
                                i43 = 1;
                                while ((++i43) < 3) {
                                    i39 += i43 + i42;
                                    i35 += i43 ^ i28;
                                    i41 = i43;
                                    Test.iFld2 += ((i43 * Test.iFld1) + i43) - fFld;
                                }
                                fFld = Test.byFld;
                                Test.iFld1 = i31;
                                if (Test.bFld)
                                    break;

                                for (i44 = 3; i44 > 1; --i44) {
                                    iArr[i44] = -207;
                                    i37 += ((i44 * Test.instanceCount) + i39) - i41;
                                    i28 <<= -1;
                                    fFld += i44;
                                    i39 += Test.sFld;
                                    Test.instanceCount *= i29;
                                    iArr = Test.iArrFld;
                                    Test.instanceCount += i44 * Test.instanceCount;
                                    Test.instanceCount *= ((long) (-123.313F));
                                    Test.dFld = Test.dFld;
                                    fFld += i29;
                                    Test.iFld = ((int) (-82.27146));
                                    iArr[i34 - 1] += i28;
                                }
                            case 45 :
                                fArrFld[i31 - 1] += i42;
                                for (i46 = 1; 3 > i46; i46++) {
                                    i41 += i46 - i31;
                                    fFld += ((i46 * Test.instanceCount) + Test.sFld) - i28;
                                    fFld += ((i46 * i37) + i43) - i43;
                                    i45 += i46 - Test.iFld;
                                    i37 += i33;
                                }
                                break;
                            case 46 :
                                i30 += ((i34 * i36) + i39) - Test.iFld2;
                            case 47 :
                                Test.instanceCount += i34 * i34;
                                break;
                            case 48 :
                                Test.instanceCount += (-11) + (i34 * i34);
                                break;
                            case 49 :
                                Test.byFld *= ((byte) (Test.iFld1));
                            case 50 :
                                i28 = ((int) (Test.instanceCount));
                                break;
                            case 51 :
                                fFld += ((i34 * Test.sFld) + i37) - Test.iFld2;
                                break;
                            case 52 :
                                Test.lArrFld[i31 + 1] = i30;
                                break;
                            default :
                                Test.iFld1 += ((int) (40.41948));
                        }
                        break;
                    case 42 :
                        i32 = ((int) (Test.dFld));
                        break;
                    default :
                        try {
                            i35 = i30 / (-579064209);
                            i41 = i44 / i45;
                            i37 = i44 % 39444;
                        } catch (ArithmeticException a_e) {
                        }
                }
            }
        }
        FuzzerUtils.out.println((((("i28 i29 i30 = " + i28) + ",") + i29) + ",") + i30);
        FuzzerUtils.out.println((((("i31 i32 i33 = " + i31) + ",") + i32) + ",") + i33);
        FuzzerUtils.out.println((((("i34 i35 i36 = " + i34) + ",") + i35) + ",") + i36);
        FuzzerUtils.out.println((((("i37 i38 i39 = " + i37) + ",") + i38) + ",") + i39);
        FuzzerUtils.out.println((((("i40 i41 i42 = " + i40) + ",") + i41) + ",") + i42);
        FuzzerUtils.out.println((((("i43 i44 i45 = " + i43) + ",") + i44) + ",") + i45);
        FuzzerUtils.out.println((((("i46 i47 iArr = " + i46) + ",") + i47) + ",") + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println((((("Test.instanceCount Test.byFld Test.sFld = " + Test.instanceCount) + ",") + Test.byFld) + ",") + Test.sFld);
        FuzzerUtils.out.println((((("Test.dFld Test.bFld Test.iFld = " + Double.doubleToLongBits(Test.dFld)) + ",") + (Test.bFld ? 1 : 0)) + ",") + Test.iFld);
        FuzzerUtils.out.println((((("Test.iFld1 Test.iFld2 fFld = " + Test.iFld1) + ",") + Test.iFld2) + ",") + Float.floatToIntBits(fFld));
        FuzzerUtils.out.println((((("Test.dArrFld Test.byArrFld Test.iArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld))) + ",") + FuzzerUtils.checkSum(Test.byArrFld)) + ",") + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println((((("Test.iArrFld1 Test.lArrFld bArrFld = " + FuzzerUtils.checkSum(Test.iArrFld1)) + ",") + FuzzerUtils.checkSum(Test.lArrFld)) + ",") + FuzzerUtils.checkSum(bArrFld));
        FuzzerUtils.out.println("fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));
        FuzzerUtils.out.println("dMeth1_check_sum: " + dMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }

    static Boolean ax$9 = false;
}