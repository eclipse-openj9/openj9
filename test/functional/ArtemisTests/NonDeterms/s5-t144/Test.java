// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.SocketException;

public class Test {
    public static final int N = 256;

    public static long instanceCount = -267L;

    public static double dFld = 85.67592;

    public static int iFld = -59052;

    public float fFld = 115.919F;

    public long lFld = -44L;

    public static volatile int iArrFld[] = new int[N];

    public static double dArrFld[] = new double[N];

    public static volatile int iArrFld1[] = new int[N];

    public int iArrFld2[] = new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -43);
        FuzzerUtils.init(Test.dArrFld, 1.9657);
        FuzzerUtils.init(Test.iArrFld1, 16646);
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f) {
        if (Test.ax$15) {
            final int ax$20 = Test.iFld;
            byte[] ax$17 = new byte[]{ 0, -1, -2, -3, -4 };
            byte ax$18 = -5;
            Test.AxOutputRedirectionHelper.redirect();
            try {
                ax$17[iFld] = ax$18;
            } catch (Throwable ax$19) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            Test.iFld = ax$20;
            return;
        }
        int i2 = -58643;
        int i3 = 3;
        int i4 = 8;
        int i5 = 216;
        int i6 = 52443;
        int i7 = -11;
        int i8 = -10;
        int i9 = 0;
        int i10 = 204;
        int i11 = 199;
        int i12 = 0;
        int iArr[] = new int[N];
        boolean b = false;
        short s1 = 23237;
        FuzzerUtils.init(iArr, 9);
        Test.iFld = Test.iFld;
        Test.iFld *= ((int) (901456846831404088L));
        for (i2 = 1; i2 < 114; i2++) {
            Test.instanceCount -= i3;
            switch ((i2 % 1) + 24) {
                case 24 :
                    for (i4 = 1; i4 < 5; i4++) {
                        Test.iArrFld[i2] = -9228;
                        i3 = i2;
                    }
                    f += i2;
                    for (i6 = i2; i6 < 5; i6++) {
                        i5 = -30802;
                        Test.iFld += ((int) (f));
                        i8 = 1;
                        do {
                            f *= f;
                            i3 = i2;
                            Test.iArrFld[i8] = i7;
                            if (b)
                                continue;

                        } while ((++i8) < 1 );
                        for (i9 = 1; 1 > i9; ++i9) {
                            Test.iArrFld[i9] = i5;
                            i10 *= i8;
                            Test.instanceCount = i5;
                            i5 -= Test.iFld;
                            s1 = ((short) (i8));
                            i5 += ((int) (Test.instanceCount));
                            iArr = iArr;
                            Test.iArrFld[i6 - 1] += Test.iFld;
                        }
                        for (i11 = 1; i11 < 1; i11++) {
                            Test.instanceCount += Test.instanceCount;
                            i7 *= i7;
                            i12 %= ((int) (((long) (f)) | 1));
                            Test.instanceCount += Test.instanceCount;
                        }
                        i10 = ((int) (f));
                        i5 += ((int) (Test.instanceCount));
                        Test.instanceCount /= i8 | 1;
                        if (b) {
                            i10 = ((int) (Test.instanceCount));
                            iArr[i2 + 1] = i4;
                        }
                    }
                    break;
                default :
                    Test.instanceCount += Test.instanceCount;
            }
        }
        vMeth2_check_sum += (((((((((((((Float.floatToIntBits(f) + i2) + i3) + i4) + i5) + i6) + i7) + i8) + (b ? 1 : 0)) + i9) + i10) + s1) + i11) + i12) + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i1) {
        short s = -3051;
        float f1 = 0.475F;
        float f2 = 1.343F;
        float fArr[] = new float[N];
        int i13 = 3;
        int i14 = -26917;
        int i15 = 208;
        int i16 = 6;
        int i17 = 23254;
        int i18 = -6;
        int i20 = 3;
        long l1 = -63231L;
        long l2 = 40L;
        long lArr[] = new long[N];
        double dArr[] = new double[N];
        FuzzerUtils.init(dArr, 96.74272);
        FuzzerUtils.init(fArr, -1.533F);
        FuzzerUtils.init(lArr, -1792559794L);
        i1 = (i1++) + ((i1 * i1) * (s--));
        {
            final int ax$29 = i15;
            try {
                String ax$22 = "s";
                IOException ax$23 = new IOException();
                char[] ax$26 = new char[1];
                char[] ax$27 = new char[]{ ((char) (0xf3f4)) };
                for (int ax$21 = -49; ax$21 < (-49 + 12993); ax$21 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        if (ax$22.contains("windows")) {
                            if (!(ax$23 instanceof SocketException)) {
                            } else if (!ax$23.getMessage().contains("Resource temporarily unavailable")) {
                            }
                        } else {
                        }
                    } catch (Throwable ax$24) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$15 = true;
                    vMeth2(0.84118223F);
                    Test.ax$15 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        ax$26[i15] = ((char) (((ax$27[i15] & 0xffff) + 0xffff) >>> 1));
                    } catch (Throwable ax$28) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                i15 = ax$29;
            }
        }
        vMeth2(f1);
        Test.iArrFld[(i1 >>> 1) % N] &= Test.iFld;
        try {
            for (i13 = 108; i13 > 2; i13 -= 2) {
                Test.instanceCount += i13;
                for (i15 = 1; i15 < 10; ++i15) {
                    Test.iArrFld[i15] *= i15;
                    for (i17 = 1; 2 > i17; ++i17) {
                        int i19 = -3;
                        Test.dFld -= 11L;
                        i18 += i16;
                        dArr[i15 - 1] = l1;
                        i1 += ((int) (l1));
                        Test.instanceCount += ((i17 * f2) + i17) - s;
                        fArr = FuzzerUtils.float1array(N, ((float) (-2.319F)));
                        if (false)
                            continue;

                        switch (((i17 % 5) * 5) + 109) {
                            case 134 :
                                f1 -= i16;
                                i1 -= ((int) (f1));
                                f1 = i1;
                            case 132 :
                                Test.iFld += i17 * s;
                                i19 += ((i17 * i1) + Test.instanceCount) - s;
                                i16 += i17 * i17;
                                Test.iFld += 94 + (i17 * i17);
                                i18 -= -211;
                                break;
                            case 129 :
                                i20 += ((i17 * i1) + i13) - f1;
                                Test.iArrFld[i15 - 1] = i18;
                                Test.iArrFld[i13] ^= ((int) (-11L));
                                i16 |= i1;
                                switch (((i19 >>> 1) % 4) + 61) {
                                    case 61 :
                                    case 62 :
                                        Test.iFld -= i18;
                                        break;
                                    case 63 :
                                        Test.dFld *= i13;
                                        f1 -= 796765182L;
                                        switch ((i15 % 1) + 1) {
                                            case 1 :
                                                Test.iArrFld[i15] = ((int) (l2));
                                                break;
                                        }
                                        break;
                                    case 64 :
                                        Test.iFld -= ((int) (l2));
                                        {
                                            try {
                                                boolean ax$12 = true;
                                                Exception ax$13 = new Exception();
                                                for (int ax$11 = -360; ax$11 < (-360 + 6177); ax$11 += 1) {
                                                    Test.AxOutputRedirectionHelper.redirect();
                                                    try {
                                                        ax$12 = true;
                                                    } catch (Throwable ax$14) {
                                                    } finally {
                                                    }
                                                    Test.AxOutputRedirectionHelper.recover();
                                                }
                                            } finally {
                                            }
                                        }
                                        i16 = i18;
                                        break;
                                }
                            case 118 :
                                i18 *= i17;
                            case 117 :
                                lArr[i13] -= 159;
                        }
                    }
                }
            }
        } catch (UserDefinedExceptionTest exc1) {
            f2 -= f2;
        }
        vMeth1_check_sum += ((((((((((((((i1 + s) + Float.floatToIntBits(f1)) + i13) + i14) + i15) + i16) + i17) + i18) + l1) + Float.floatToIntBits(f2)) + i20) + l2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr))) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(long l) {
        int i = -11931;
        int i21 = -64843;
        int i22 = 16988;
        int i23 = 53148;
        int i24 = -119;
        int i25 = 6;
        int i26 = -5;
        int i27 = 78;
        float f3 = -89.121F;
        float f4 = 0.601F;
        byte by = -35;
        short s2 = 5940;
        short sArr[] = new short[N];
        FuzzerUtils.init(sArr, ((short) (-15238)));
        i *= i;
        i = ((int) ((Test.iArrFld[(i >>> 1) % N]--) + ((--Test.dFld) - i)));
        vMeth1(65);
        f3 = 1;
        do {
            for (i21 = 1; i21 < 4; ++i21) {
                Test.instanceCount = Test.iFld;
                by = ((byte) (Test.dFld));
                Test.instanceCount >>= i;
                Test.iFld += ((int) (l));
                f4 += i22;
            }
            i23 = 1;
            do {
                try {
                    i = Test.iArrFld[i23] / 211;
                    i = 62195 / i23;
                    Test.iArrFld[((int) (f3 - 1))] = 148 % Test.iFld;
                } catch (ArithmeticException a_e) {
                }
                Test.iArrFld[((int) (f3 + 1))] *= 72;
                for (i24 = 1; i24 < 1; ++i24) {
                    i = i21;
                    f4 += i;
                    Test.dArrFld[i24 + 1] -= i22;
                    Test.dFld += 107;
                    Test.dFld = f4;
                    l += i24;
                    {
                        final long ax$8 = Test.vMeth_check_sum;
                        final int ax$9 = Test.iFld;
                        final int ax$10 = i22;
                        try {
                            int[] ax$2 = new int[]{ 1403214288, -380200801, -782943771, -828896405, -987315804, -1244635440, -1446970779, 525504794, -1381068030 };
                            for (int ax$0 = -418; ax$0 < (-418 + 16828); ax$0 += 1) {
                                Test.AxOutputRedirectionHelper.redirect();
                                try {
                                    for (long ax$6 = vMeth_check_sum; ax$6 < vMeth_check_sum; ax$6++) {
                                        iFld += ax$2[i22++];
                                    }
                                } catch (Throwable ax$7) {
                                } finally {
                                }
                                Test.AxOutputRedirectionHelper.recover();
                            }
                        } finally {
                            Test.vMeth_check_sum = ax$8;
                            Test.iFld = ax$9;
                            i22 = ax$10;
                        }
                    }
                    i25 = -203;
                    Test.instanceCount -= i24;
                    i22 = ((int) (4L));
                }
                i22 |= i23;
                for (i26 = 1; 1 > i26; i26++) {
                    if (i27 != 0) {
                        vMeth_check_sum += ((((((((((((l + i) + Float.floatToIntBits(f3)) + i21) + i22) + by) + Float.floatToIntBits(f4)) + i23) + i24) + i25) + i26) + i27) + s2) + FuzzerUtils.checkSum(sArr);
                        return;
                    }
                    Test.instanceCount += i26 - l;
                    sArr[((int) (f3 + 1))] = ((short) (i21));
                    Test.iArrFld[i23] = ((int) (Test.instanceCount));
                    s2 += ((short) (f4));
                    l *= Test.instanceCount;
                    i27 <<= Test.iFld;
                }
                i27 = i;
                i22 >>>= i24;
                Test.instanceCount += ((i23 * Test.instanceCount) + i22) - i23;
                Test.iArrFld[((int) (f3 + 1))] -= ((int) (Test.instanceCount));
            } while ((++i23) < 4 );
            try {
                i = (-6594) % i22;
                Test.iArrFld[((int) (f3 + 1))] = i21 % i26;
                i25 = (-30684) % i25;
            } catch (ArithmeticException a_e) {
            }
        } while ((++f3) < 164 );
        vMeth_check_sum += ((((((((((((l + i) + Float.floatToIntBits(f3)) + i21) + i22) + by) + Float.floatToIntBits(f4)) + i23) + i24) + i25) + i26) + i27) + s2) + FuzzerUtils.checkSum(sArr);
    }

    public void mainTest(String[] strArr1) {
        int i28 = 22497;
        int i29 = -135;
        int i30 = 31977;
        int i31 = -10;
        int i32 = -6;
        int iArr1[][] = new int[N][N];
        byte by1 = -74;
        byte by2 = -69;
        boolean b1 = false;
        short s3 = -3510;
        short sArr1[][] = new short[N][N];
        long l4 = -25622L;
        long lArr1[] = new long[N];
        float fArr1[] = new float[N];
        FuzzerUtils.init(lArr1, 3839580291L);
        FuzzerUtils.init(fArr1, 1.366F);
        FuzzerUtils.init(iArr1, -54535);
        FuzzerUtils.init(sArr1, ((short) (-2902)));
        vMeth(Test.instanceCount);
        for (i28 = 233; i28 > 9; i28--) {
            i30 = 1;
            while ((++i30) < 23) {
                for (i31 = i28; i31 < 1; ++i31) {
                    long l3 = 157L;
                    Test.instanceCount >>= Test.instanceCount;
                    Test.iArrFld[i28 + 1] = by1;
                    switch ((i30 % 4) + 15) {
                        case 15 :
                            Test.iArrFld[(i30 >>> 1) % N] = ((int) (Test.instanceCount));
                            Test.iFld <<= i32;
                            by2 -= ((byte) (i30));
                            Test.iFld >>= i29;
                            Test.iArrFld = FuzzerUtils.int1array(N, ((int) (0)));
                            i29 = -3;
                            i29 &= i28;
                            Test.instanceCount = i28;
                            switch (i31 + 66) {
                                case 66 :
                                    Test.dArrFld[i30] = fFld;
                                    lArr1[i31] = 12;
                                    i29 -= ((int) (fFld));
                                    try {
                                        Test.iArrFld[i31 - 1] = Test.iArrFld[i30 - 1] % Test.iArrFld[(i31 >>> 1) % N];
                                        i32 = Test.iArrFld[i28] % 42;
                                        Test.iFld = (-9) / i31;
                                    } catch (ArithmeticException a_e) {
                                    }
                                    lArr1 = lArr1;
                                    i32 <<= Test.iFld;
                                case 67 :
                                    i29 -= Test.iFld;
                                    Test.instanceCount = Test.instanceCount;
                                    i29 += ((i31 * Test.instanceCount) + i29) - i29;
                                    try {
                                        i29 = i29 % i32;
                                        i29 = i32 % (-8);
                                        Test.iFld = Test.iFld / (-26041);
                                    } catch (ArithmeticException a_e) {
                                    }
                                    Test.instanceCount >>= i30;
                                    Test.instanceCount -= Test.instanceCount;
                                    i32 -= i32;
                                case 68 :
                                    Test.instanceCount -= i30;
                                    if (b1)
                                        continue;

                                    Test.iFld >>>= s3;
                                    fFld *= i29;
                                    i32 += i31 * Test.instanceCount;
                                    Test.iFld -= Test.iFld;
                                    i32 >>>= 14;
                                    l3 -= i28;
                                    if (b1)
                                        break;

                                    break;
                                case 69 :
                                    i29 += ((i31 * l3) + i29) - i30;
                                    switch ((((-9602) >>> 1) % 4) + 41) {
                                        case 41 :
                                            Test.dFld -= i29;
                                            Test.instanceCount *= ((long) (Test.dFld));
                                            i29 += Test.iFld;
                                            switch (((i29 >>> 1) % 2) + 39) {
                                                case 39 :
                                                    i29 += i31;
                                                    l4 -= i30;
                                                    Test.instanceCount += i31 + Test.iFld;
                                                    switch ((i30 % 1) + 72) {
                                                        case 72 :
                                                            i29 = Test.iFld;
                                                            Test.iArrFld[i31] = 12242;
                                                            Test.iArrFld[i28] += i28;
                                                            l4 -= i30;
                                                            i32 >>= i32;
                                                            break;
                                                        default :
                                                            Test.iFld += ((int) (32843L + (i31 * i31)));
                                                            i32 += i31 * i31;
                                                            switch (((190 >>> 1) % 4) + 36) {
                                                                case 36 :
                                                                    if (b1)
                                                                        continue;

                                                                    break;
                                                                case 37 :
                                                                    fFld += i32;
                                                                    i29 += ((i31 * i31) + i32) - i31;
                                                                    try {
                                                                        Test.iFld = Test.iFld / 144;
                                                                        Test.iFld = i32 % 46337;
                                                                        Test.iArrFld[i31 + 1] = i30 % i31;
                                                                    } catch (ArithmeticException a_e) {
                                                                    }
                                                                    break;
                                                                case 38 :
                                                                    s3 += ((short) (i31 * i31));
                                                                    break;
                                                                case 39 :
                                                                    try {
                                                                        Test.iArrFld1[i31] = i29 / i31;
                                                                        i32 = i31 % i30;
                                                                        i29 = i32 % i31;
                                                                    } catch (ArithmeticException a_e) {
                                                                    }
                                                                default :
                                                                    l4 = s3;
                                                                    by1 -= ((byte) (i31));
                                                                    Test.iFld += i31;
                                                                    try {
                                                                        Test.iFld = 21418 / Test.iArrFld1[i31 + 1];
                                                                        i32 = 9913 % i32;
                                                                        i32 = Test.iArrFld1[i31 + 1] % (-29);
                                                                    } catch (ArithmeticException a_e) {
                                                                    }
                                                                    by2 = ((byte) (Test.iFld));
                                                                    Test.iArrFld1[i30] = -103;
                                                                    Test.iArrFld1[i31] = ((int) (Test.instanceCount));
                                                            }
                                                    }
                                                    i32 -= Test.iFld;
                                                    Test.dFld -= i32;
                                                    fFld = Test.iFld;
                                                    i29 += ((int) (10L));
                                                    i29 = ((int) (fFld));
                                                case 40 :
                                                    fArr1 = FuzzerUtils.float1array(N, ((float) (-3.225F)));
                                                default :
                                                    Test.iFld *= ((int) (l3));
                                            }
                                            break;
                                        case 42 :
                                            Test.iFld += i31;
                                            break;
                                        case 43 :
                                        case 44 :
                                            fFld *= ((float) (1.73916));
                                        default :
                                            lArr1[i28] += ((long) (Test.dFld));
                                    }
                                    break;
                                case 70 :
                                    iArr1 = iArr1;
                                case 71 :
                                    Test.dArrFld[i30 - 1] = l3;
                                    break;
                                case 72 :
                                    Test.instanceCount <<= i31;
                                    break;
                                case 73 :
                                    i29 = ((int) (Test.instanceCount));
                                    break;
                                case 74 :
                                    Test.instanceCount = Test.iFld;
                                    break;
                                case 75 :
                                    l3 -= Test.instanceCount;
                                case 76 :
                                    i32 = ((int) (fFld));
                                case 77 :
                                    Test.iArrFld[i31] = ((int) (l3));
                                    break;
                                case 78 :
                                    iArr1[i31][i28] *= ((int) (fFld));
                                case 79 :
                                    Test.iFld = i30;
                                    break;
                                case 80 :
                                    i29 -= ((int) (4L));
                                    break;
                                case 81 :
                                    Test.iFld += (-50601) + (i31 * i31);
                                    break;
                                case 82 :
                                    i32 += i31 | i30;
                                case 83 :
                                    i32 = i28;
                                    break;
                                case 84 :
                                case 85 :
                                case 86 :
                                    Test.dFld *= i31;
                                case 87 :
                                    by1 = ((byte) (i30));
                                    break;
                                case 88 :
                                    by1 ^= ((byte) (i31));
                                    break;
                                case 89 :
                                    try {
                                        i32 = (-82) / i31;
                                        Test.iArrFld[i28] = i29 / Test.iFld;
                                        Test.iFld = 99 % iArrFld2[i28];
                                    } catch (ArithmeticException a_e) {
                                    }
                                    break;
                                case 90 :
                                    l4 ^= -37476L;
                                    break;
                                case 91 :
                                    i32 *= i30;
                                    break;
                                case 92 :
                                    Test.instanceCount >>= i28;
                                    break;
                                case 93 :
                                    Test.iFld += ((int) (Test.instanceCount));
                                    break;
                                case 94 :
                                    i29 += 6;
                                    break;
                                case 95 :
                                    Test.iFld += i31;
                                    break;
                                case 96 :
                                    i32 <<= 53;
                                    break;
                                case 97 :
                                    Test.instanceCount <<= i31;
                                    break;
                                case 98 :
                                case 99 :
                                    i29 *= i29;
                                    break;
                                case 100 :
                                    i32 += i31;
                                    break;
                                case 101 :
                                    Test.dFld += i31;
                                case 102 :
                                    i32 += 49547;
                                    break;
                                case 103 :
                                    i32 += i31 ^ i29;
                                    break;
                                case 104 :
                                case 105 :
                                    i29 = i29;
                                    break;
                                case 106 :
                                    i29 = ((int) (l3));
                                case 107 :
                                    Test.iFld |= 7;
                                    break;
                                case 108 :
                                    Test.iArrFld[i30 - 1] = i32;
                                    break;
                                case 109 :
                                    Test.instanceCount += i31;
                                    break;
                                case 110 :
                                    lArr1[i30] = i31;
                                    break;
                                case 111 :
                                    i32 += ((i31 * i31) + fFld) - fFld;
                                case 112 :
                                    i32 -= i28;
                                case 113 :
                                    Test.iFld += i31;
                                    break;
                                case 114 :
                                case 115 :
                                    Test.dFld = l4;
                                    break;
                                case 116 :
                                    iArr1[i31 - 1][i30 + 1] = ((int) (fFld));
                                case 117 :
                                    Test.iArrFld1[i28 + 1] -= i30;
                                    break;
                                case 118 :
                                    Test.iArrFld[i28] += -77;
                                    break;
                                case 119 :
                                    if (b1)
                                        continue;

                                    break;
                                case 120 :
                                    iArr1[i28][i28] = i28;
                                    break;
                                case 121 :
                                    Test.iFld = i28;
                                    break;
                                case 122 :
                                    sArr1[i31][i31 + 1] += ((short) (Test.iFld));
                                    break;
                                case 123 :
                                    i32 += 219 + (i31 * i31);
                                    break;
                                case 124 :
                                    i29 = ((int) (l3));
                                    break;
                                case 125 :
                                    i32 ^= Test.iFld;
                                    break;
                                case 126 :
                                    Test.instanceCount >>= lFld;
                                    break;
                                case 127 :
                                    i29 >>>= ((int) (l4));
                                    break;
                                case 128 :
                                case 129 :
                                    if (true)
                                        break;

                                    break;
                                case 130 :
                                    Test.iFld -= ((int) (fFld));
                                    break;
                                case 131 :
                                case 132 :
                                    iArrFld2[i31 - 1] = -56307;
                                    break;
                                case 133 :
                                    Test.instanceCount += ((i31 * i30) + fFld) - i30;
                                    break;
                                case 134 :
                                    Test.iArrFld[i30 - 1] -= Test.iFld;
                                case 135 :
                                    Test.dFld = by2;
                                    break;
                            }
                            break;
                        case 16 :
                            Test.iFld = ((int) (l4));
                        case 17 :
                            l3 <<= i29;
                            break;
                        case 18 :
                        default :
                            lFld -= Test.iFld;
                    }
                }
            }
        }
        FuzzerUtils.out.println((((("i28 i29 i30 = " + i28) + ",") + i29) + ",") + i30);
        FuzzerUtils.out.println((((("i31 i32 by1 = " + i31) + ",") + i32) + ",") + by1);
        FuzzerUtils.out.println((((("by2 b1 s3 = " + by2) + ",") + (b1 ? 1 : 0)) + ",") + s3);
        FuzzerUtils.out.println((((("l4 lArr1 fArr1 = " + l4) + ",") + FuzzerUtils.checkSum(lArr1)) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));
        FuzzerUtils.out.println((("iArr1 sArr1 = " + FuzzerUtils.checkSum(iArr1)) + ",") + FuzzerUtils.checkSum(sArr1));
        FuzzerUtils.out.println((((("Test.instanceCount Test.dFld Test.iFld = " + Test.instanceCount) + ",") + Double.doubleToLongBits(Test.dFld)) + ",") + Test.iFld);
        FuzzerUtils.out.println((((("fFld lFld Test.iArrFld = " + Float.floatToIntBits(fFld)) + ",") + lFld) + ",") + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println((((("Test.dArrFld Test.iArrFld1 iArrFld2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld))) + ",") + FuzzerUtils.checkSum(Test.iArrFld1)) + ",") + FuzzerUtils.checkSum(iArrFld2));
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }

    static Boolean ax$15 = false;
}