// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = -37628L;

    public static volatile short sFld = 12735;

    public static byte byFld = -27;

    public static float fFld = -123.943F;

    public volatile boolean bFld = true;

    public volatile int iFld = 214;

    public static int[][] iArrFld = new int[N][N];

    public static int[] iArrFld1 = new int[N];

    public long[] lArrFld = new long[N];

    public short[][] sArrFld = new short[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -10);
        FuzzerUtils.init(Test.iArrFld1, -150);
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5, int i6, int i7) {
        float f1 = 31.268F;
        int i8 = -24328, i9 = -2, i10 = -11, i11 = -3, i12 = -21;
        double d1 = -1.125261, dArr[] = new double[N];
        boolean b1 = false;
        FuzzerUtils.init(dArr, -2.58543);
        for (f1 = 6; f1 < 134; f1++) {
            switch((((i6 >>> 1) % 2) * 5) + 126) {
                case 135:
                    Test.instanceCount >>= Test.instanceCount;
                    for (i9 = (int) (f1); i9 < 4; ++i9) {
                        Test.instanceCount += 87;
                        i6 *= (int) d1;
                        Test.instanceCount += (9 + (i9 * i9));
                        i5 = (int) -46.66622;
                        d1 *= i7;
                        for (i11 = (int) (f1); i11 < 1; i11++) {
                            Test.instanceCount += (i11 * i11);
                            Test.iArrFld[(int) (f1)][i9 - 1] -= (int) f1;
                            i5 += (((i11 * Test.sFld) + i6) - f1);
                            dArr[i9] *= Test.instanceCount;
                            Test.instanceCount = Test.byFld;
                            dArr[i11 - 1] = i8;
                            b1 = b1;
                            i12 *= (int) d1;
                            Test.fFld += i7;
                            d1 += Test.instanceCount;
                            i6 *= i12;
                            switch((int) ((f1 % 3) + 14)) {
                                case 14:
                                    i10 = i6;
                                    switch((int) ((f1 % 3) + 45)) {
                                        case 45:
                                            switch((i9 % 5) + 28) {
                                                case 28:
                                                    Test.instanceCount = -5;
                                                    i7 *= (int) d1;
                                                    if (b1)
                                                        break;
                                                    Test.byFld = (byte) i8;
                                                    Test.instanceCount = i7;
                                                    if (i12 != 0) {
                                                    }
                                                    i5 += -250;
                                                    Test.instanceCount -= -1244;
                                                    i6 = (int) Test.fFld;
                                                    i12 = i12;
                                                    Test.fFld = i6;
                                                    break;
                                                case 29:
                                                    i6 = i11;
                                                    break;
                                                case 30:
                                                    i8 = i7;
                                                    break;
                                                case 31:
                                                    i12 *= i9;
                                                    break;
                                                case 32:
                                                    Test.iArrFld[i9 + 1][i9] = i8;
                                                    break;
                                            }
                                            break;
                                        case 46:
                                            Test.instanceCount += i6;
                                        case 47:
                                            Test.instanceCount ^= i8;
                                            break;
                                        default:
                                            d1 -= d1;
                                    }
                                    break;
                                case 15:
                                case 16:
                                    d1 = i9;
                                default:
                                    Test.instanceCount |= i6;
                            }
                        }
                    }
                    break;
                case 131:
                    i5 += (int) Test.instanceCount;
                default:
                    i8 += (int) 1.86476;
            }
        }
        long meth_res = i5 + i6 + i7 + Float.floatToIntBits(f1) + i8 + i9 + i10 + Double.doubleToLongBits(d1) + i11 + i12 + (b1 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        iMeth_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void vMeth1(int i3, boolean b, int i4) {
        float f = -6.601F, f2 = -39.908F, fArr[] = new float[N];
        double d = -60.114859;
        int i13 = 11250, i14 = -67, i15 = -52414, i16 = -12;
        long[] lArr = new long[N];
        FuzzerUtils.init(lArr, 14L);
        FuzzerUtils.init(fArr, -41.329F);
        i4 >>= (int) ((long) ((Test.iArrFld[(i4 >>> 1) % N][(i4 >>> 1) % N] += 1) * (f - Test.instanceCount)) >>> (long) ((lArr[(i3 >>> 1) % N]--) * d));
        b = ((--Test.instanceCount) >= (iMeth(i4, i3, i4) + Test.instanceCount));
        i13 = 227;
        while ((i13 -= 3) > 0) {
            Test.byFld *= (byte) Test.instanceCount;
            i4 = (int) Test.fFld;
            for (f2 = 1; f2 < 7; f2++) {
                Test.iArrFld[i13][i13] -= i4;
                fArr[(int) (f2)] -= (float) d;
            }
            Test.fFld = Test.instanceCount;
            Test.iArrFld[i13 + 1][i13 - 1] %= (int) (i14 | 1);
            Test.instanceCount = i4;
            i14 = i4;
            Test.sFld = (short) f2;
            i4 += (int) d;
            for (i15 = i13; i15 < 7; ++i15) {
                Test.iArrFld[i15 - 1][i15] = (int) Test.instanceCount;
                i14 -= i14;
                i4 += (-61567 + (i15 * i15));
            }
            f += i4;
            i3 *= 7;
            i16 &= (int) Test.instanceCount;
            Test.instanceCount += (long) Test.fFld;
        }
        Test.byFld = (byte) -127;
        Test.instanceCount = (long) f;
        vMeth1_check_sum += i3 + (b ? 1 : 0) + i4 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i13 + Float.floatToIntBits(f2) + i14 + i15 + i16 + FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void vMeth() {
        int i2 = 161, i17 = -12, i18 = 17, i19 = 9, i20 = 10, i21 = 67, i22 = 34755;
        double d2 = 0.57767;
        short[] sArr = new short[N];
        long[] lArr1 = new long[N];
        float[][] fArr1 = new float[N][N];
        FuzzerUtils.init(sArr, (short) 25862);
        FuzzerUtils.init(lArr1, -3725043121L);
        FuzzerUtils.init(fArr1, 0.376F);
        i2 = 1;
        do {
            vMeth1(i2, true, i2);
            Test.instanceCount &= i2;
            try {
                i17 = (1377656730 / Test.iArrFld[i2][i2]);
                Test.iArrFld[i2 - 1][i2] = (i17 / i17);
                i17 = (246 % Test.iArrFld[i2][i2]);
            } catch (ArithmeticException a_e) {
            }
            Test.byFld = (byte) 61504;
            i17 += (int) (-2.10F + (i2 * i2));
            switch(((5163 >>> 1) % 10) + 125) {
                case 125:
                    Test.iArrFld[i2] = Test.iArrFld[i2 - 1];
                    break;
                case 126:
                    i17 *= i2;
                    break;
                case 127:
                    Test.instanceCount += (long) -2.74113;
                    for (i18 = 3; i18 > i2; i18--) {
                        sArr[i18] = (short) -66L;
                        Test.fFld *= i2;
                        lArr1[i2] = Test.instanceCount;
                        i17 *= (int) d2;
                        i17 = i20;
                        if (bFld) {
                            switch((i2 % 7) + 42) {
                                case 42:
                                case 43:
                                    Test.instanceCount = i20;
                                    if (i20 != 0) {
                                        vMeth_check_sum += i2 + i17 + i18 + i19 + Double.doubleToLongBits(d2) + i20 + i21 + i22 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                                        return;
                                    }
                                    bFld = bFld;
                                    for (i21 = 1; i21 < 1; i21++) {
                                        Test.byFld = (byte) Test.instanceCount;
                                        if (bFld)
                                            break;
                                        Test.iArrFld[i2][i2] >>= -13000;
                                        i17 = i17;
                                        i17 += i21;
                                        d2 += i21;
                                        i22 %= (int) (i18 | 1);
                                        Test.iArrFld[i21 - 1][i21] = 190;
                                        i17 += (38120 + (i21 * i21));
                                        fArr1[i2][i21 + 1] -= Test.instanceCount;
                                        i17 = i22;
                                        i22 = i2;
                                        i19 += (int) Test.instanceCount;
                                        if (i17 != 0) {
                                            vMeth_check_sum += i2 + i17 + i18 + i19 + Double.doubleToLongBits(d2) + i20 + i21 + i22 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                                            return;
                                        }
                                    }
                                    Test.byFld += (byte) i17;
                                    break;
                                case 44:
                                    {
                                        java.io.PrintStream ax$0 = System.out;
                                        java.io.PrintStream ax$1 = System.err;
                                        java.io.PrintStream ax$2 = new java.io.PrintStream(new java.io.OutputStream() {

                                            @Override
                                            public void write(int b) throws java.io.IOException {
                                                // DO NOTHING: DISCARD ALL OUTPUTS
                                            }
                                        });
                                        System.setOut(ax$2);
                                        System.setErr(ax$2);
                                        {
                                            boolean ax$132 = false;
                                            for (int ax$131 = -4898; ax$131 < 957; ax$131 += 5) {
                                                if (!ax$132) {
                                                    ax$132 = true;
                                                    {
                                                        System.setOut(ax$0);
                                                        System.setErr(ax$1);
                                                        i17 += (i18 | Test.instanceCount);
                                                        System.setOut(ax$2);
                                                        System.setErr(ax$2);
                                                    }
                                                }
                                                try {
                                                    long ax$128 = 0xFFFFFFFFL;
                                                    long ax$129 = 0xe000000000001000L;
                                                    if (ax$128 != ax$129)
                                                        ;
                                                } catch (Throwable ax$130) {
                                                } finally {
                                                }
                                            }
                                        }
                                        System.setOut(ax$0);
                                        System.setErr(ax$1);
                                    }
                                    break;
                                case 45:
                                    if (i20 != 0) {
                                        vMeth_check_sum += i2 + i17 + i18 + i19 + Double.doubleToLongBits(d2) + i20 + i21 + i22 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
                                        return;
                                    }
                                    break;
                                case 46:
                                    Test.instanceCount = 23884L;
                                    break;
                                case 47:
                                    Test.instanceCount = i18;
                                case 48:
                                    lArr1[i2 - 1] += i19;
                                default:
                                    Test.instanceCount = Test.instanceCount;
                            }
                        } else {
                            i20 %= (int) (Test.instanceCount | 1);
                        }
                    }
                    break;
                case 128:
                    Test.instanceCount += (i2 * i2);
                    break;
                case 129:
                    i17 = i17;
                    break;
                case 130:
                    if (bFld)
                        break;
                    break;
                case 131:
                    Test.instanceCount = Test.instanceCount;
                    break;
                case 132:
                    i20 -= (int) 1156760931L;
                    break;
                case 133:
                case 134:
                    Test.instanceCount += (i2 | i18);
                    break;
                default:
                    Test.fFld = -16804L;
            }
        } while (++i2 < 237);
        vMeth_check_sum += i2 + i17 + i18 + i19 + Double.doubleToLongBits(d2) + i20 + i21 + i22 + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public void mainTest(String[] strArr1) {
        int i = -13, i1 = 141, i24 = -29092, i25 = 184, i26 = -11, i27 = 159, iArr[] = new int[N];
        long l = 11L;
        double d3 = 99.24012, dArr1[] = new double[N];
        float[] fArr2 = new float[N];
        FuzzerUtils.init(iArr, 18733);
        FuzzerUtils.init(fArr2, 0.538F);
        FuzzerUtils.init(dArr1, -16.15060);
        for (i = 5; i < 225; ++i) {
            vMeth();
            switch(((i % 6) * 5) + 21) {
                case 27:
                    for (l = i; l < 23; l++) {
                        i1 |= i1;
                        i1 = (int) Test.instanceCount;
                        if (bFld) {
                            i1 += -46;
                            switch((int) (((l % 5) * 5) + 6)) {
                                case 10:
                                    Test.fFld += (l * l);
                                    for (i25 = 1; 1 > i25; i25 += 3) {
                                        Test.instanceCount = i;
                                        Test.fFld = l;
                                        i1 -= 94;
                                        Test.iArrFld[i25][(int) (l)] = i;
                                        try {
                                            i24 = (iArr[i25] / i26);
                                            i1 = (-134 / Test.iArrFld1[i25 - 1]);
                                            iFld = (i24 / i1);
                                        } catch (ArithmeticException a_e) {
                                        }
                                        switch((((iFld >>> 1) % 10) * 5) + 51) {
                                            case 54:
                                                i26 *= (int) Test.fFld;
                                                i1 >>>= i26;
                                                Test.iArrFld1[i + 1] -= i;
                                                Test.instanceCount = 10L;
                                                lArrFld[(int) (l - 1)] &= i26;
                                                if (bFld)
                                                    continue;
                                                iFld += (i25 + i25);
                                                Test.instanceCount >>>= i;
                                                iFld = -203;
                                                i1 += (int) Test.fFld;
                                                i1 += (((i25 * Test.sFld) + i26) - Test.instanceCount);
                                                iArr[i + 1] *= (int) l;
                                                switch(((i >>> 1) % 9) + 55) {
                                                    case 55:
                                                        try {
                                                            iFld = (i % 53);
                                                            i26 = (-48859 / i24);
                                                            Test.iArrFld[(i >>> 1) % N][i] = (Test.iArrFld1[i + 1] / i26);
                                                        } catch (ArithmeticException a_e) {
                                                        }
                                                        i26 = i;
                                                        Test.instanceCount += i25;
                                                        i1 = i24;
                                                        switch((i % 1) + 53) {
                                                            case 53:
                                                                switch(((i % 2) * 5) + 36) {
                                                                    case 37:
                                                                        i24 = Test.byFld;
                                                                        if (bFld)
                                                                            continue;
                                                                        i1 = i26;
                                                                        d3 *= Test.fFld;
                                                                        if (bFld)
                                                                            break;
                                                                        i27 += i25;
                                                                        break;
                                                                    case 44:
                                                                        Test.iArrFld[i25 + 1][(iFld >>> 1) % N] = i;
                                                                        switch((int) (((l % 2) * 5) + 111)) {
                                                                            case 112:
                                                                                bFld = bFld;
                                                                                if (bFld)
                                                                                    continue;
                                                                                iArr[(int) (l + 1)] *= 142;
                                                                                Test.iArrFld[i25 - 1] = Test.iArrFld1;
                                                                                iFld = (int) l;
                                                                                break;
                                                                            case 120:
                                                                                fArr2[i25] += i27;
                                                                                iFld <<= (int) -1113372806L;
                                                                                Test.instanceCount = l;
                                                                                iArr[i] *= 11;
                                                                                d3 /= (i27 | 1);
                                                                                i1 += (int) Test.instanceCount;
                                                                                i27 = (int) l;
                                                                                i26 -= (int) Test.fFld;
                                                                                bFld = bFld;
                                                                                iArr[i25] = i25;
                                                                                i27 += (i25 * i);
                                                                                i24 -= (int) Test.fFld;
                                                                                if (bFld) {
                                                                                    sArrFld[i25][i] += (short) iFld;
                                                                                    Test.sFld += (short) (i25 - i27);
                                                                                    i27 -= (int) Test.instanceCount;
                                                                                    i24 += (i25 ^ i26);
                                                                                    Test.instanceCount = 45084;
                                                                                    i26 *= (int) l;
                                                                                    i1 ^= i26;
                                                                                    i26 <<= iFld;
                                                                                    i26 = 19205;
                                                                                    bFld = bFld;
                                                                                    i24 >>= i26;
                                                                                } else {
                                                                                    i1 <<= 8555;
                                                                                    i26 += i1;
                                                                                }
                                                                                break;
                                                                        }
                                                                        break;
                                                                }
                                                        }
                                                        break;
                                                    case 56:
                                                        lArrFld[i25] ^= i26;
                                                    case 57:
                                                        Test.fFld = 17L;
                                                        break;
                                                    case 58:
                                                        iFld *= Test.sFld;
                                                        break;
                                                    case 59:
                                                    case 60:
                                                        Test.instanceCount *= l;
                                                        break;
                                                    case 61:
                                                        Test.instanceCount = Test.instanceCount;
                                                        break;
                                                    case 62:
                                                        Test.sFld = (short) i24;
                                                        break;
                                                    case 63:
                                                        Test.fFld -= Test.byFld;
                                                        break;
                                                    default:
                                                        i24 -= (int) Test.fFld;
                                                }
                                                break;
                                            case 59:
                                                Test.fFld = l;
                                                break;
                                            case 89:
                                                d3 -= -9;
                                                break;
                                            case 61:
                                                d3 = -33726;
                                                break;
                                            case 66:
                                                d3 = 2;
                                                break;
                                            case 96:
                                                Test.iArrFld1[(int) (l)] = -19;
                                                break;
                                            case 82:
                                                fArr2[(int) (l)] = i26;
                                            case 74:
                                            case 60:
                                                iFld += (((i25 * Test.fFld) + Test.instanceCount) - i25);
                                                break;
                                            case 56:
                                                Test.instanceCount *= Test.instanceCount;
                                                break;
                                            default:
                                                i1 ^= i26;
                                        }
                                    }
                                    break;
                                case 27:
                                    dArr1[(int) (l + 1)] = l;
                                    break;
                                case 17:
                                    Test.fFld -= 8;
                                    break;
                                case 29:
                                    Test.instanceCount -= i;
                                    break;
                                case 8:
                                    i1 = i27;
                            }
                        }
                    }
                    break;
                case 29:
                    i26 += 6043;
                    break;
                case 36:
                    Test.instanceCount -= i27;
                case 22:
                    Test.instanceCount = l;
                case 41:
                    Test.sFld = (short) Test.fFld;
                case 48:
                    lArrFld[i - 1] >>>= iFld;
                default:
                    i26 -= iFld;
            }
        }
        FuzzerUtils.out.println("i i1 l = " + i + "," + i1 + "," + l);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("d3 i27 iArr = " + Double.doubleToLongBits(d3) + "," + i27 + "," + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("fArr2 dArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2)) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)));
        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.byFld = " + Test.instanceCount + "," + Test.sFld + "," + Test.byFld);
        FuzzerUtils.out.println("Test.fFld bFld iFld = " + Float.floatToIntBits(Test.fFld) + "," + (bFld ? 1 : 0) + "," + iFld);
        FuzzerUtils.out.println("Test.iArrFld Test.iArrFld1 lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," + FuzzerUtils.checkSum(Test.iArrFld1) + "," + FuzzerUtils.checkSum(lArrFld));
        FuzzerUtils.out.println("sArrFld = " + FuzzerUtils.checkSum(sArrFld));
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  vMeth ->  vMeth mainTest
// DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
// DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
