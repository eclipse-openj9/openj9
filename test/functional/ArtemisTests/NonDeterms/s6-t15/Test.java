// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.ListIterator;

public class Test {
    public static final int N = 256;

    public static long instanceCount = -2177259290L;

    public static volatile boolean bFld = false;

    public double dFld = -86.54318;

    public float fFld = 74.699F;

    public static byte byFld = -8;

    public static volatile short sFld = -516;

    public double dFld1 = 0.17303;

    public int iFld = -42350;

    public static int iArrFld[] = new int[N];

    public long lArrFld[] = new long[N];

    public static float fArrFld[] = new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 12);
        FuzzerUtils.init(Test.fArrFld, -2.758F);
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f1) {
        int i3 = -31480;
        int i4 = -2;
        int i5 = 11;
        long l1 = 4183L;
        long lArr[] = new long[N];
        byte by = 92;
        short s = -10283;
        double d = -114.42986;
        FuzzerUtils.init(lArr, 148L);
        i3 += i3;
        i3 *= ((int) (Test.instanceCount));
        l1 = 1;
        do {
            switch (((int) (((l1 % 8) * 5) + 99))) {
                case 133 :
                    Test.instanceCount ^= i3;
                    Test.instanceCount = l1;
                    i3 *= by;
                    switch (((i3 >>> 1) % 2) + 9) {
                        case 9 :
                            i3 += 107 + (l1 * l1);
                            Test.instanceCount += i3;
                            i3 = s;
                            Test.instanceCount = i3;
                            i3 = i3;
                            if (Test.bFld)
                                continue;

                            i3 = ((int) (-2.14F));
                            Test.iArrFld[((int) (l1 - 1))] <<= ((int) (Test.instanceCount));
                            i3 = i3;
                            i3 -= -6;
                            Test.iArrFld[((int) (l1 - 1))] -= ((int) (f1));
                            i3 *= i3;
                        case 10 :
                            lArr[(i3 >>> 1) % N] = 40028;
                            i3 = i3;
                            i4 = 1;
                            while ((++i4) < 3) {
                                f1 += 136;
                                Test.instanceCount = l1;
                                i3 = ((int) (l1));
                                f1 += i4;
                                i3 += i4 * i3;
                                i3 += i4;
                                i3 += ((int) (f1));
                                Test.iArrFld[((int) (l1))] = 6;
                                Test.instanceCount += i4 ^ i4;
                                try {
                                    i3 = Test.iArrFld[i4 - 1] % i4;
                                    i3 = Test.iArrFld[((int) (l1))] / i4;
                                    i3 = Test.iArrFld[i4 - 1] % i4;
                                } catch (ArithmeticException a_e) {
                                }
                                Test.instanceCount = by;
                                i5 = 1;
                                while ((++i5) < 1) {
                                    i3 -= i4;
                                    f1 += ((long) (i5)) | ((long) (i5));
                                }
                            }
                            break;
                    }
                    break;
                case 129 :
                    i3 >>= i5;
                    break;
                case 116 :
                    Test.instanceCount += (-161) + (l1 * l1);
                    break;
                case 100 :
                    Test.instanceCount = i3;
                    break;
                case 123 :
                    Test.instanceCount += i5;
                    break;
                case 102 :
                    i3 = i4;
                    break;
                case 101 :
                    f1 -= ((float) (d));
                    break;
                case 139 :
                    Test.instanceCount -= i5;
                    break;
            }
        } while ((++l1) < 227 );
        vMeth2_check_sum += (((((((Float.floatToIntBits(f1) + i3) + l1) + by) + s) + i4) + i5) + Double.doubleToLongBits(d)) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i1, float f, int i2) {
        if (Test.ax$0) {
            final int ax$6 = i1;
            int[] ax$1 = new int[]{ 82826749, 2043966169, -1583509743 };
            int[] ax$4 = new int[20];
            Test.AxOutputRedirectionHelper.redirect();
            try {
                ax$4[i1] = ((int) (ax$1[i1] ^ i1));
            } catch (Throwable ax$5) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            i1 = ax$6;
            return;
        }
        vMeth2(f);
        vMeth1_check_sum += (i1 + Float.floatToIntBits(f)) + i2;
    }

    public void vMeth(long l, int i) {
        float f2 = -75.577F;
        int i6 = -11;
        int i7 = -47;
        int i8 = 136;
        int i9 = 0;
        int i10 = 31025;
        double d1 = 0.2286;
        long lArr1[] = new long[N];
        FuzzerUtils.init(lArr1, 8404344851174950227L);
        i *= -(i + (++i));
        {
            final int ax$14 = i6;
            try {
                ListIterator ax$8 = null;
                String[] ax$11 = new String[]{ "f1" };
                for (int ax$7 = -187; ax$7 < (-187 + 18877); ax$7 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        while (ax$8.hasNext()) {
                            Integer ax$9 = ((Integer) (ax$8.next()));
                            ax$8.set(new Integer(ax$9.intValue()));
                        }
                    } catch (Throwable ax$10) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$0 = true;
                    vMeth1(-1325827854, 0.62847924F, -632713676);
                    Test.ax$0 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        if (ax$11.length > 0) {
                            i6 = Integer.parseInt(ax$11[0]);
                        }
                    } catch (Throwable ax$13) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                i6 = ax$14;
            }
        }
        vMeth1(i, f2, i);
        i = ((int) (l));
        for (i6 = 10; i6 < 242; i6++) {
            i7 = ((int) (-6906721209386663695L));
            for (i8 = 1; i8 < 3; i8++) {
                f2 = -4;
                i10 = 1;
                do {
                    l <<= i9;
                    try {
                        i7 = i9 / (-790035947);
                        i = 55572 / i9;
                        Test.iArrFld[i8] = 116 / i9;
                    } catch (ArithmeticException a_e) {
                    }
                    if (Test.bFld) {
                        f2 += i10 - i8;
                        dFld += i8;
                        f2 = l;
                        l += ((i10 * fFld) + i9) - i;
                        Test.byFld += ((byte) (i10));
                        Test.byFld *= ((byte) (-238));
                        i9 <<= i9;
                        fFld += i10;
                        i7 += ((i10 * i6) + i) - i9;
                        i7 = i8;
                        l *= i8;
                        switch (((i8 % 3) * 5) + 47) {
                            case 56 :
                                Test.instanceCount /= i6 | 1;
                                Test.instanceCount |= Test.instanceCount;
                                i *= ((int) (-1.115538));
                                d1 = l;
                                i7 <<= i10;
                                i9 = i7;
                                switch (((i8 % 2) * 5) + 11) {
                                    case 21 :
                                        i7 -= -168;
                                        lArr1[i8 - 1] *= i7;
                                        i = i9;
                                        Test.sFld = ((short) (l));
                                        l += 12036;
                                        if (Test.bFld)
                                            break;

                                    case 12 :
                                        i7 *= ((int) (Test.instanceCount));
                                        break;
                                    default :
                                        i *= ((int) (1.11459));
                                }
                                break;
                            case 58 :
                                i9 += i9;
                            case 62 :
                                d1 = i;
                        }
                    } else {
                        Test.iArrFld[i8 - 1] = Test.sFld;
                    }
                } while ((++i10) < 2 );
            }
        }
        vMeth_check_sum += ((((((((l + i) + Float.floatToIntBits(f2)) + i6) + i7) + i8) + i9) + i10) + Double.doubleToLongBits(d1)) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {
        int i11 = 183;
        int i12 = -62086;
        int i13 = 0;
        int i14 = 25768;
        int i15 = 148;
        int i16 = 149;
        int i17 = 65223;
        int i18 = 56912;
        float f3 = 2.117F;
        double dArr[][] = new double[N][N];
        FuzzerUtils.init(dArr, -65.93284);
        vMeth(Test.instanceCount, -4736);
        i11 -= i11;
        lArrFld[(i11 >>> 1) % N] -= i11;
        i11 = ((int) (3L));
        for (i12 = 7; 197 > i12; ++i12) {
            i13 = i12;
            i13 = ((int) (Test.instanceCount));
            i13 += i11;
            i11 = i13;
            for (i14 = 1; i14 < 27; ++i14) {
                try {
                    i13 = 1811575424 / i15;
                    i15 = i15 % i11;
                    i13 = (-97) % i11;
                } catch (ArithmeticException a_e) {
                }
                switch ((((-8) >>> 1) % 2) + 101) {
                    case 101 :
                        Test.instanceCount += ((i14 * i14) + Test.sFld) - fFld;
                        Test.instanceCount = i11;
                        Test.instanceCount -= i13;
                        i16 = 1;
                        do {
                            i13 = Test.byFld;
                            i13 += ((int) (38.27F + (i16 * i16)));
                            Test.instanceCount += i16 * i11;
                            i13 += (-17134) + (i16 * i16);
                            i13 *= i15;
                            i11 *= 11;
                            i13 += i16;
                            i11 |= i13;
                            i15 += ((int) (3861508809L + (i16 * i16)));
                            i13 = i16;
                            Test.byFld += ((byte) (18985 + (i16 * i16)));
                            i11 += 13;
                        } while ((++i16) < 2 );
                        Test.instanceCount *= i16;
                        for (i17 = 1; i17 < 2; i17 += 2) {
                            i15 >>= i16;
                            lArrFld[i14 + 1] = i11;
                            if (Test.bFld) {
                                try {
                                    Test.iArrFld[i14] = (-74) / i12;
                                    Test.iArrFld[i12 - 1] = (-91) / Test.iArrFld[i17 - 1];
                                    i15 = 7935 % i18;
                                } catch (ArithmeticException a_e) {
                                }
                            } else if (Test.bFld) {
                                Test.fArrFld[i14 + 1] = i16;
                                dFld1 = dFld;
                                i11 <<= ((int) (3482267380L));
                                switch ((i12 % 4) + 51) {
                                    case 51 :
                                    case 52 :
                                        i18 = i18;
                                        i15 = i15;
                                        Test.instanceCount = Test.instanceCount;
                                        Test.instanceCount = Test.instanceCount;
                                        Test.sFld += ((short) (34428 + (i17 * i17)));
                                        Test.iArrFld[(i16 >>> 1) % N] = i14;
                                        Test.instanceCount -= Test.byFld;
                                        Test.iArrFld = Test.iArrFld;
                                        Test.instanceCount += Test.instanceCount;
                                        i15 = ((int) (fFld));
                                        i11 += ((int) (Test.instanceCount));
                                        break;
                                    case 53 :
                                        i13 += i17 * i17;
                                        i18 *= ((int) (dFld));
                                        i18 |= i16;
                                        i18 += ((i17 * i13) + i18) - fFld;
                                        i18 += ((i17 * Test.sFld) + i14) - i13;
                                        dFld *= i11;
                                        i15 = 34747;
                                        Test.iArrFld[i17 + 1] >>>= ((int) (Test.instanceCount));
                                        switch (((i12 >>> 1) % 7) + 122) {
                                            case 122 :
                                                i15 *= ((int) (fFld));
                                                switch ((i12 % 2) + 10) {
                                                    case 10 :
                                                        switch (((i14 % 1) * 5) + 70) {
                                                            case 72 :
                                                        }
                                                        break;
                                                    case 11 :
                                                        if (Test.bFld)
                                                            continue;

                                                        if (Test.bFld)
                                                            continue;

                                                        i11 |= i15;
                                                        Test.instanceCount |= -4;
                                                        Test.instanceCount = Test.instanceCount;
                                                        Test.instanceCount += i17;
                                                        Test.instanceCount <<= i18;
                                                        i11 += ((int) (-1.65555));
                                                }
                                                i18 += i12;
                                                Test.iArrFld[i17 + 1] = iFld;
                                                Test.instanceCount *= i14;
                                                break;
                                            case 123 :
                                                if (Test.bFld) {
                                                    dFld1 = iFld;
                                                    Test.instanceCount *= ((long) (fFld));
                                                } else {
                                                    fFld = iFld;
                                                }
                                            case 124 :
                                                fFld = i17;
                                                break;
                                            case 125 :
                                                i13 &= ((int) (Test.instanceCount));
                                                break;
                                            case 126 :
                                                i15 *= ((int) (dFld1));
                                                break;
                                            case 127 :
                                                dArr[i12][i14] = f3;
                                                break;
                                            case 128 :
                                                dFld = i14;
                                                break;
                                        }
                                    case 54 :
                                        i18 += i17 - Test.instanceCount;
                                }
                            } else {
                                i11 += -35610;
                            }
                        }
                        break;
                    case 102 :
                        try {
                            i11 = i13 / i18;
                            i13 = iFld / Test.iArrFld[i12];
                            Test.iArrFld[i14 + 1] = i16 / Test.iArrFld[i14];
                        } catch (ArithmeticException a_e) {
                        }
                    default :
                        i18 -= i13;
                }
            }
        }
        FuzzerUtils.out.println((((("i11 i12 i13 = " + i11) + ",") + i12) + ",") + i13);
        FuzzerUtils.out.println((((("i14 i15 i16 = " + i14) + ",") + i15) + ",") + i16);
        FuzzerUtils.out.println((((("i17 i18 f3 = " + i17) + ",") + i18) + ",") + Float.floatToIntBits(f3));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println((((("Test.instanceCount Test.bFld dFld = " + Test.instanceCount) + ",") + (Test.bFld ? 1 : 0)) + ",") + Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println((((("fFld Test.byFld Test.sFld = " + Float.floatToIntBits(fFld)) + ",") + Test.byFld) + ",") + Test.sFld);
        FuzzerUtils.out.println((((("dFld1 iFld Test.iArrFld = " + Double.doubleToLongBits(dFld1)) + ",") + iFld) + ",") + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println((("lArrFld Test.fArrFld = " + FuzzerUtils.checkSum(lArrFld)) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    static Boolean ax$0 = false;

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }
}