// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.text.ChoiceFormat;

public class Test {
    public static final int N = 256;

    public static long instanceCount = -4898054439100268646L;

    public static int iFld = 18598;

    public static double dFld = -2.17613;

    public static boolean bFld = true;

    public static short sFld = 25033;

    public static byte byFld = 95;

    public static int iFld1 = -158;

    public static long vMeth_check_sum = 0;

    public static long iMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i5, boolean b, float f1) {
        int i6 = 9;
        int i7 = -163;
        int i8 = -144;
        int i9 = -235;
        int i10 = -61;
        int i11 = -52863;
        int i12 = -29307;
        int i13 = 196;
        int iArr1[] = new int[N];
        int iArr2[] = new int[N];
        byte by = -42;
        short s1 = 3463;
        short sArr[][] = new short[N][N];
        float fArr1[] = new float[N];
        long lArr1[] = new long[N];
        FuzzerUtils.init(sArr, ((short) (-7932)));
        FuzzerUtils.init(iArr1, -36127);
        FuzzerUtils.init(fArr1, -60.612F);
        FuzzerUtils.init(iArr2, 8);
        FuzzerUtils.init(lArr1, -3L);
        sArr = sArr;
        Test.iFld >>= ((int) (Test.instanceCount));
        i6 = 114;
        while ((i6 -= 3) > 0) {
            if (Test.iFld != 0) {
                vMeth1_check_sum += ((((((((((((((((i5 + (b ? 1 : 0)) + Float.floatToIntBits(f1)) + i6) + i7) + i8) + by) + i9) + i10) + s1) + i11) + i12) + i13) + FuzzerUtils.checkSum(sArr)) + FuzzerUtils.checkSum(iArr1)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1))) + FuzzerUtils.checkSum(iArr2)) + FuzzerUtils.checkSum(lArr1);
                return;
            }
            for (i7 = 1; i7 < 14; ++i7) {
                i5 = i5;
                Test.iFld += ((i7 * i5) + f1) - i7;
                Test.iFld = ((int) (Test.instanceCount));
                Test.instanceCount -= by;
                for (i9 = 2; i9 > 1; --i9) {
                    by = ((byte) (i8));
                    Test.instanceCount -= -12411;
                    iArr1[i6 + 1] += ((int) (-23.233F));
                    i8 += i9 - Test.instanceCount;
                    Test.iFld >>= -11;
                    Test.dFld += i9;
                    iArr1[i9 - 1] -= i9;
                    Test.instanceCount = Test.iFld;
                    f1 = Test.instanceCount;
                    f1 += ((float) (Test.dFld));
                    if (b)
                        continue;

                    fArr1[i6 + 1] -= s1;
                }
                s1 = ((short) (i8));
                iArr2[i7 + 1] += Test.iFld;
                iArr1[i7 + 1] -= ((int) (2L));
                Test.instanceCount -= -86;
            }
            for (i11 = 1; i11 < 14; ++i11) {
                f1 += -187;
                Test.iFld += i11;
                by *= ((byte) (Test.instanceCount));
                lArr1[i11 + 1] *= Test.instanceCount;
                i13 = 1;
                do {
                    Test.instanceCount |= i6;
                } while ((++i13) < 2 );
                Test.dFld = i11;
                if (b)
                    break;

                {
                    final int ax$25 = i10;
                    final int ax$26 = i12;
                    final int ax$27 = i11;
                    final short ax$28 = s1;
                    try {
                        char[] ax$14 = new char[]{ '㎄', 'Ꝋ', '饑', '歱', '斖', '঑', '칍' };
                        char[] ax$17 = new char[100];
                        short[] ax$20 = new short[]{ ((short) (12589)), ((short) (-11309)), ((short) (10684)), ((short) (-846)), ((short) (-8070)), ((short) (-29125)) };
                        short[] ax$23 = new short[]{ 20, 10, 0, -10, -20 };
                        boolean ax$13 = false;
                        for (int ax$12 = -797; ax$12 < (-797 + 2977); ax$12 += 1) {
                            Test.AxOutputRedirectionHelper.redirect();
                            try {
                                for (int ax$18 = 0; ax$18 < ax$17.length; ax$18 += 1) {
                                    ax$17[ax$18] = ((char) ((ax$14[ax$18] & i10) >> i12));
                                }
                            } catch (Throwable ax$19) {
                            } finally {
                            }
                            Test.AxOutputRedirectionHelper.recover();
                            if (!ax$13) {
                                i5 *= ((int) (f1));
                                ax$13 = true;
                            }
                            Test.AxOutputRedirectionHelper.redirect();
                            try {
                                ax$23[i11] = ((short) (ax$20[i11] + s1));
                            } catch (Throwable ax$24) {
                            } finally {
                            }
                            Test.AxOutputRedirectionHelper.recover();
                        }
                    } finally {
                        i10 = ax$25;
                        i12 = ax$26;
                        i11 = ax$27;
                        s1 = ax$28;
                    }
                }
            }
        }
        i12 -= i8;
        vMeth1_check_sum += ((((((((((((((((i5 + (b ? 1 : 0)) + Float.floatToIntBits(f1)) + i6) + i7) + i8) + by) + i9) + i10) + s1) + i11) + i12) + i13) + FuzzerUtils.checkSum(sArr)) + FuzzerUtils.checkSum(iArr1)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1))) + FuzzerUtils.checkSum(iArr2)) + FuzzerUtils.checkSum(lArr1);
    }

    public static int iMeth() {
        float f = 0.811F;
        float f2 = 44.693F;
        float fArr[] = new float[N];
        boolean b1 = true;
        boolean b2 = false;
        int i14 = -48975;
        int i15 = -63035;
        int i16 = -59;
        int i17 = 9;
        int i18 = 8;
        int i19 = -8;
        int iArr3[] = new int[N];
        byte by1 = -113;
        long lArr2[] = new long[N];
        FuzzerUtils.init(fArr, -1.209F);
        FuzzerUtils.init(lArr2, 3467979649L);
        FuzzerUtils.init(iArr3, -19552);
        Test.iFld += ((int) (++fArr[(Test.iFld >>> 1) % N]));
        f -= Test.iFld;
        vMeth1(Test.iFld, b1, 0.669F);
        for (i14 = 1; i14 < 188; i14++) {
            f = Test.iFld;
            Test.iFld += ((i14 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount;
            for (f2 = 1; f2 < 3; f2++) {
                switch (((int) ((f2 % 1) + 60))) {
                    case 60 :
                        Test.instanceCount += i15;
                        for (i17 = 1; i17 < 2; i17++) {
                            short s2 = -13492;
                            i15 = -117;
                            i16 >>= ((int) (Test.instanceCount));
                            switch (((i19 >>> 1) % 4) + 125) {
                                case 125 :
                                    i19 = ((int) (Test.instanceCount));
                                    switch ((((i16 >>> 1) % 1) * 5) + 33) {
                                        case 35 :
                                            Test.instanceCount <<= Test.instanceCount;
                                            break;
                                        default :
                                            f = i14;
                                            i16 += ((int) (916922886347160912L + (i17 * i17)));
                                            switch (((i14 % 9) * 5) + 104) {
                                                case 119 :
                                                    i16 &= s2;
                                                    break;
                                                case 147 :
                                                    lArr2[i14 - 1] -= i14;
                                                    if (b1)
                                                        continue;

                                                    i18 = i15;
                                                    Test.instanceCount <<= -98;
                                                    break;
                                                case 136 :
                                                    switch (((i15 >>> 1) % 6) + 48) {
                                                        case 48 :
                                                            iArr3[i17 - 1] *= i14;
                                                            lArr2[i14 + 1] *= i17;
                                                            i19 >>= ((int) (Test.instanceCount));
                                                            Test.dFld = 88;
                                                            Test.iFld = Test.iFld;
                                                            i19 <<= i16;
                                                            iArr3[i17 - 1] = ((int) (f2));
                                                            f = Test.instanceCount;
                                                            Test.iFld = 230;
                                                            Test.dFld += f;
                                                            Test.instanceCount += Test.instanceCount;
                                                            iArr3[((int) (f2))] += ((int) (Test.instanceCount));
                                                            break;
                                                        case 49 :
                                                            i16 += ((int) ((-155L) + (i17 * i17)));
                                                            break;
                                                        case 50 :
                                                            i19 = -61;
                                                            break;
                                                        case 51 :
                                                            i16 -= by1;
                                                            break;
                                                        case 52 :
                                                            i15 -= Test.iFld;
                                                        case 53 :
                                                            if (b2)
                                                                continue;

                                                            break;
                                                        default :
                                                            if (i15 != 0) {
                                                            }
                                                    }
                                                    break;
                                                case 110 :
                                                    if (Test.bFld)
                                                        break;

                                                    break;
                                                case 131 :
                                                    i15 *= 35987;
                                                    break;
                                                case 143 :
                                                    Test.dFld += Test.instanceCount;
                                                    break;
                                                case 125 :
                                                    f += i19;
                                                case 111 :
                                                    iArr3[((int) (f2))] -= ((int) (-4735272289521497196L));
                                                    break;
                                                case 139 :
                                                    i19 += i17 | i17;
                                                    break;
                                                default :
                                                    s2 *= ((short) (i14));
                                            }
                                    }
                                    break;
                                case 126 :
                                    Test.dFld = Test.dFld;
                                    break;
                                case 127 :
                                    Test.iFld = ((int) (Test.instanceCount));
                                case 128 :
                                    i15 = ((int) (Test.dFld));
                                    break;
                            }
                        }
                        break;
                }
            }
        }
        long meth_res = ((((((((((((Float.floatToIntBits(f) + (b1 ? 1 : 0)) + i14) + i15) + Float.floatToIntBits(f2)) + i16) + i17) + i18) + i19) + by1) + (b2 ? 1 : 0)) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))) + FuzzerUtils.checkSum(lArr2)) + FuzzerUtils.checkSum(iArr3);
        iMeth_check_sum += meth_res;
        return ((int) (meth_res));
    }

    public static void vMeth(short s) {
        int i4 = 95;
        int i20 = 16790;
        int i21 = 4;
        int i22 = -25596;
        int i23 = 20851;
        int i24 = 38371;
        int i25 = -35570;
        int i26 = -171;
        int i27 = -5;
        int i28 = -64875;
        int iArr[] = new int[N];
        float f3 = 33.572F;
        byte by2 = -74;
        long l = 10601L;
        FuzzerUtils.init(iArr, 86);
        {
            final int ax$11 = i23;
            try {
                String[] ax$2 = new String[]{ "s", "s", "s", "s", "s" };
                double[] ax$3 = new double[]{ 0.514426028608269, 0.7839477222410154 };
                ChoiceFormat ax$4 = null;
                boolean ax$1 = false;
                for (int ax$0 = -405; ax$0 < (-405 + 15449); ax$0 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        for (int ax$5 = 0; ax$5 < ax$3.length; ax$5++) {
                            String ax$6 = ax$4.format(ax$3[ax$5]);
                            if (!ax$6.equals(ax$2[ax$5])) {
                            }
                        }
                    } catch (Throwable ax$7) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    if (!ax$1) {
                        i4 *= --i4;
                        ax$1 = true;
                    }
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        try {
                            new String[0].getClass().getField("length");
                            i23++;
                        } catch (NoSuchFieldException ax$9) {
                        }
                    } catch (Throwable ax$10) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                i23 = ax$11;
            }
        }
        i4 = (iArr[(i4 >>> 1) % N]--) - Integer.reverseBytes(iMeth());
        Test.dFld = f3;
        by2 <<= ((byte) (s));
        iArr = iArr;
        for (i20 = 5; i20 < 200; ++i20) {
            i21 >>= 199;
        }
        iArr[(46500 >>> 1) % N] += ((int) (Test.instanceCount));
        l = 1;
        while ((++l) < 174) {
            switch (((int) (((l % 2) * 5) + 12))) {
                case 16 :
                    Test.instanceCount += i20;
                    Test.iFld <<= ((int) (Test.instanceCount));
                    i4 -= i20;
                    i21 += i21;
                    iArr[((int) (l - 1))] >>= s;
                    i4 += ((int) (l));
                    i4 += i4;
                    Test.iFld += ((int) (f3));
                    i21 = ((int) (Test.instanceCount));
                    i22 = 1;
                    while ((++i22) < 3) {
                        i21 = 9;
                        Test.instanceCount += i22 * i22;
                        Test.instanceCount = i4;
                    }
                    by2 ^= ((byte) (Test.instanceCount));
                    iArr[((int) (l + 1))] >>= ((int) (l));
                    break;
                case 13 :
                    i4 = Test.iFld;
                    Test.bFld = Test.bFld;
                    Test.instanceCount += l;
                    f3 = Test.instanceCount;
                    for (i23 = ((int) (l)); i23 < 3; i23++) {
                        iArr[i23] += Test.iFld;
                        for (i25 = 1; i25 < 1; ++i25) {
                            i26 >>= i4;
                            iArr = iArr;
                        }
                        for (i27 = 1; i27 < 1; ++i27) {
                            Test.instanceCount += i20;
                            Test.iFld -= ((int) (Test.dFld));
                        }
                    }
                    break;
            }
        }
        vMeth_check_sum += (((((((((((((s + i4) + Float.floatToIntBits(f3)) + by2) + i20) + i21) + l) + i22) + i23) + i24) + i25) + i26) + i27) + i28) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {
        int i = 35002;
        int i1 = -21549;
        int i2 = 44198;
        int i3 = -80;
        int i29 = 13;
        int i30 = 6;
        int i31 = -26506;
        int i32 = 9;
        int i33 = 252;
        int i34 = -236;
        int iArr4[][] = new int[N][N];
        float f4 = 0.342F;
        float fArr2[] = new float[N];
        long l1 = 2049913735774317658L;
        long lArr[] = new long[N];
        boolean b3 = true;
        boolean bArr[][] = new boolean[N][N];
        byte byArr[] = new byte[N];
        double dArr[] = new double[N];
        FuzzerUtils.init(lArr, 3534404145374643468L);
        FuzzerUtils.init(iArr4, -56981);
        FuzzerUtils.init(byArr, ((byte) (75)));
        FuzzerUtils.init(fArr2, -2.142F);
        FuzzerUtils.init(dArr, 0.9083);
        FuzzerUtils.init(bArr, false);
        for (i = 8; 252 > i; i++) {
            if (b3) {
                for (i2 = i; 21 > i2; ++i2) {
                    switch ((((i3 % (i1 | 1)) >>> 1) % 8) + 15) {
                        case 15 :
                            switch ((i2 % 2) + 63) {
                                case 63 :
                                    i1 >>= ((int) (Test.instanceCount));
                                    lArr[i + 1] -= Test.instanceCount;
                                    break;
                                case 64 :
                                    i3 += i2;
                                    vMeth(Test.sFld);
                                    break;
                                default :
                                    Test.dFld *= i;
                                    for (i29 = 1; i29 > 1; i29--) {
                                        i3 = i30;
                                        Test.instanceCount *= ((long) (Test.dFld));
                                        Test.iFld = i;
                                        Test.iFld = i3;
                                        Test.byFld *= ((byte) (Test.dFld));
                                        i1 = i3;
                                    }
                                    iArr4[i][i2 - 1] += ((int) (Test.dFld));
                                    Test.iFld -= Test.sFld;
                                    iArr4[i + 1][i2] += ((int) (f4));
                                    for (l1 = i2; 1 > l1; ++l1) {
                                        try {
                                            Test.iFld = i2 % iArr4[((int) (l1 - 1))][i2];
                                            i3 = Test.iFld % i29;
                                            i3 = Test.iFld / Test.iFld;
                                        } catch (ArithmeticException a_e) {
                                        }
                                        f4 += i30;
                                        byArr[i] |= ((byte) (i29));
                                        f4 = i29;
                                        i31 = 3;
                                        iArr4[i + 1][((int) (l1))] = i;
                                        Test.sFld = ((short) (i));
                                        f4 *= 234;
                                        i30 += 13 + (l1 * l1);
                                        i3 = ((int) (-168L));
                                        Test.sFld += ((short) (l1 * l1));
                                    }
                                    Test.iFld = 236;
                            }
                            i30 -= i3;
                            fArr2[i2 - 1] *= i3;
                            Test.iFld ^= ((int) (Test.instanceCount));
                            f4 += ((i2 * i2) + i29) - l1;
                            break;
                        case 16 :
                            Test.instanceCount = i31;
                            for (i32 = 1; i32 > 1; i32 -= 2) {
                                Test.instanceCount = i2;
                                Test.instanceCount = Test.instanceCount;
                                Test.bFld = true;
                            }
                            Test.iFld *= i3;
                            Test.instanceCount += i2;
                            i30 >>>= Test.byFld;
                            iArr4[i - 1][i + 1] = ((int) (l1));
                            f4 %= i1 | 1;
                            i3 = i32;
                            break;
                        case 17 :
                            byArr[i + 1] |= ((byte) (4));
                            Test.instanceCount -= ((long) (f4));
                            i34 = 1;
                            while ((i34 += 2) < 1) {
                                Test.instanceCount >>= i29;
                                if (b3) {
                                    if (Test.bFld)
                                        continue;

                                    i31 += i34;
                                }
                                Test.instanceCount <<= i31;
                                Test.instanceCount += -121L;
                                iArr4[i][i2 + 1] -= 31481;
                                Test.instanceCount += ((i34 * i31) + i3) - Test.byFld;
                                i3 *= 51556;
                                if (Test.bFld)
                                    continue;

                                Test.instanceCount = i34;
                                f4 = Test.instanceCount;
                                switch (((i33 >>> 1) % 8) + 12) {
                                    case 12 :
                                        i30 <<= 0;
                                        switch (((Test.iFld >>> 1) % 9) + 5) {
                                            case 5 :
                                                dArr[i2] += -72;
                                                break;
                                            case 6 :
                                                f4 += ((long) (i34)) | ((long) (i1));
                                                Test.instanceCount = ((long) (Test.dFld));
                                                iArr4[i2][i34 - 1] = i32;
                                                if (Test.bFld)
                                                    break;

                                                f4 = f4;
                                                fArr2[i] = -9437;
                                                fArr2 = fArr2;
                                                if (b3)
                                                    break;

                                            case 7 :
                                                Test.byFld += ((byte) (Test.dFld));
                                                break;
                                            case 8 :
                                                f4 += ((float) (Test.dFld));
                                                break;
                                            case 9 :
                                                lArr = lArr;
                                                break;
                                            case 10 :
                                                iArr4[i + 1][i2] = Test.iFld;
                                                break;
                                            case 11 :
                                                Test.dFld = i34;
                                            case 12 :
                                                f4 %= 143;
                                                break;
                                            case 13 :
                                                i3 |= ((int) (Test.instanceCount));
                                            default :
                                                i31 += -2;
                                        }
                                        break;
                                    case 13 :
                                        f4 += l1;
                                        break;
                                    case 14 :
                                        Test.iFld -= ((int) (221L));
                                        break;
                                    case 15 :
                                        Test.iFld += ((int) (Test.dFld));
                                        break;
                                    case 16 :
                                        i30 += i34 * i34;
                                        break;
                                    case 17 :
                                        i33 = ((int) (-1.120498));
                                        break;
                                    case 18 :
                                        Test.bFld = Test.bFld;
                                    case 19 :
                                        Test.dFld += -69;
                                        break;
                                    default :
                                        Test.instanceCount = i2;
                                }
                            }
                            break;
                        case 18 :
                            i31 += ((int) (2.631F));
                        case 19 :
                            i30 = -10;
                        case 20 :
                            f4 /= i1 | 1;
                            break;
                        case 21 :
                            f4 += i2;
                        case 22 :
                            i33 >>= i29;
                            break;
                        default :
                            bArr[i][i2 - 1] = Test.bFld;
                    }
                }
            } else if (Test.bFld) {
                Test.instanceCount += ((i * i31) + l1) - Test.sFld;
            } else if (Test.bFld) {
                i3 += i32;
            } else {
                Test.dFld += Test.iFld1;
            }
        }
        FuzzerUtils.out.println((((("i i1 i2 = " + i) + ",") + i1) + ",") + i2);
        FuzzerUtils.out.println((((("i3 i29 i30 = " + i3) + ",") + i29) + ",") + i30);
        FuzzerUtils.out.println((((("f4 l1 i31 = " + Float.floatToIntBits(f4)) + ",") + l1) + ",") + i31);
        FuzzerUtils.out.println((((("i32 i33 i34 = " + i32) + ",") + i33) + ",") + i34);
        FuzzerUtils.out.println((((("b3 lArr iArr4 = " + (b3 ? 1 : 0)) + ",") + FuzzerUtils.checkSum(lArr)) + ",") + FuzzerUtils.checkSum(iArr4));
        FuzzerUtils.out.println((((("byArr fArr2 dArr = " + FuzzerUtils.checkSum(byArr)) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2))) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));
        FuzzerUtils.out.println((((("Test.instanceCount Test.iFld Test.dFld = " + Test.instanceCount) + ",") + Test.iFld) + ",") + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println((((("Test.bFld Test.sFld Test.byFld = " + (Test.bFld ? 1 : 0)) + ",") + Test.sFld) + ",") + Test.byFld);
        FuzzerUtils.out.println("Test.iFld1 = " + Test.iFld1);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }
}