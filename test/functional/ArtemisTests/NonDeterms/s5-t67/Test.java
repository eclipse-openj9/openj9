// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.lang.reflect.Method;

public class Test {
    public static final int N = 256;

    public static volatile long instanceCount = -42L;

    public static float fFld = 1.593F;

    public static double dFld = -1.538;

    public static boolean bFld = true;

    public static short sFld = -8699;

    public static int iFld = 24943;

    public static volatile int iArrFld[] = new int[N];

    public static long lArrFld[] = new long[N];

    public byte byArrFld[] = new byte[N];

    public static volatile float fArrFld[] = new float[N];

    public static int iArrFld1[] = new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -19608);
        FuzzerUtils.init(Test.lArrFld, -568429877L);
        FuzzerUtils.init(Test.fArrFld, 0.638F);
        FuzzerUtils.init(Test.iArrFld1, -4);
    }

    public static long lMeth_check_sum = 0;

    public static long iMeth_check_sum = 0;

    public static long vMeth_check_sum = 0;

    public static void vMeth(float f2, int i3, int i4) {
        double d1 = 2.74133;
        double d2 = -9.6781;
        int i5 = 169;
        int i6 = 179;
        int i7 = 57189;
        int i8 = -226;
        int i9 = 46559;
        int i10 = 156;
        byte by = -46;
        boolean b = true;
        long lArr[] = new long[N];
        FuzzerUtils.init(lArr, 8907330052329784235L);
        i4 = ((int) (d1));
        i5 = 1;
        while ((++i5) < 177) {
            for (d2 = 1; d2 < 3; ++d2) {
                short s = 4573;
                i7 = 2;
                do {
                    Test.iArrFld[((int) (d2))] = 0;
                    Test.instanceCount -= Test.instanceCount;
                    i4 = i3;
                    if (i5 != 0) {
                        vMeth_check_sum += ((((((((((((Float.floatToIntBits(f2) + i3) + i4) + Double.doubleToLongBits(d1)) + i5) + Double.doubleToLongBits(d2)) + i6) + i7) + i8) + by) + i9) + i10) + (b ? 1 : 0)) + FuzzerUtils.checkSum(lArr);
                        return;
                    }
                    lArr[((int) (d2))] -= i6;
                    Test.instanceCount -= Test.instanceCount;
                } while ((i7 -= 2) > 0 );
                i8 = 1;
                while ((i8 += 2) < 2) {
                    i4 -= ((int) (Test.instanceCount));
                    i3 = ((int) (Test.instanceCount));
                    Test.instanceCount >>= i6;
                    Test.iArrFld = Test.iArrFld;
                    f2 = i3;
                    i3 += 3 + (i8 * i8);
                    Test.iArrFld[i8 - 1] = i5;
                    Test.instanceCount += 10;
                }
                i6 >>= i7;
                by += ((byte) (d2));
                Test.instanceCount <<= i5;
                i4 += ((int) (d2 + i5));
                switch (((i5 % 7) * 5) + 114) {
                    case 134 :
                        i4 += ((int) (d2 * d2));
                        i3 >>= i4;
                        Test.instanceCount -= -187L;
                        f2 *= Test.instanceCount;
                        i6 = 125;
                        for (i9 = 2; i9 > 1; i9--) {
                            by = ((byte) (-7646));
                            d1 += i4;
                            i4 = i6;
                            i6 += i9 * i3;
                            i3 = ((int) (d2));
                            Test.instanceCount = ((long) (-108.95F));
                            if (b)
                                continue;

                        }
                        break;
                    case 144 :
                        lArr[i5 - 1] -= s;
                        break;
                    case 143 :
                        i3 += (-47) + (d2 * d2);
                        break;
                    case 122 :
                        i10 *= ((int) (17116L));
                        break;
                    case 130 :
                        i4 -= 12;
                        break;
                    case 132 :
                        i3 = i7;
                        break;
                    case 139 :
                        i10 = i9;
                        break;
                }
            }
        }
        vMeth_check_sum += ((((((((((((Float.floatToIntBits(f2) + i3) + i4) + Double.doubleToLongBits(d1)) + i5) + Double.doubleToLongBits(d2)) + i6) + i7) + i8) + by) + i9) + i10) + (b ? 1 : 0)) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth() {
        if (Test.ax$0) {
            final int ax$6 = Test.iFld;
            int[] ax$1 = new int[]{ 1190861157, 248684993 };
            int[] ax$4 = new int[]{ -1708960568, -1664749341, -111498144, 807841858, 691474009, -658191358, -1155148240 };
            Test.AxOutputRedirectionHelper.redirect();
            try {
                ax$4[iFld] = ((int) (ax$1[iFld] << iFld));
            } catch (Throwable ax$5) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            Test.iFld = ax$6;
            return 60427949;
        }
        int i1 = 202;
        int i2 = -149;
        int i11 = 0;
        int i12 = -10;
        int i13 = -1;
        int i14 = 39088;
        int i15 = 211;
        int i16 = 22818;
        int i17 = -8223;
        int iArr[] = new int[N];
        float f1 = 0.71F;
        boolean b1 = true;
        short s1 = -2734;
        long lArr1[] = new long[N];
        FuzzerUtils.init(iArr, 80);
        FuzzerUtils.init(lArr1, 183L);
        i1 = 1;
        while ((++i1) < 108) {
            f1 = ((iArr[i1 + 1]--) * (Test.instanceCount * i1)) - (f1++);
            i2 = 1;
            do {
                vMeth(Test.fFld, 14, 8);
                Test.instanceCount += ((long) (Test.fFld));
                i11 = ((int) (Test.instanceCount));
                Test.iArrFld = Test.iArrFld;
                if (b1)
                    continue;

                switch ((i2 % 5) + 45) {
                    case 45 :
                        for (i12 = i1; i12 < 1; ++i12) {
                            i13 += i1;
                            i13 += i12 * i13;
                        }
                        switch ((i2 % 1) + 56) {
                            case 56 :
                                try {
                                    i13 = i1 % iArr[i2];
                                    i11 = i12 / i11;
                                    Test.iArrFld[i2] = i1 / i12;
                                } catch (ArithmeticException a_e) {
                                }
                                Test.instanceCount += 85 + (i2 * i2);
                                switch ((i2 % 2) + 15) {
                                    case 15 :
                                        i11 = 97;
                                    case 16 :
                                        if (i12 != 0) {
                                        }
                                        s1 += ((short) (i2 * i2));
                                        for (i14 = i2; i14 < 1; ++i14) {
                                            i13 -= ((int) (Test.instanceCount));
                                            if (b1) {
                                                iArr[i1 + 1] -= i14;
                                                i11 += i14 * i14;
                                                try {
                                                    iArr[i14 + 1] = iArr[i14 - 1] / i11;
                                                    i15 = i15 % i13;
                                                    i15 = i12 / i16;
                                                } catch (ArithmeticException a_e) {
                                                }
                                                i15 %= ((int) (Test.instanceCount | 1));
                                                if (true) {
                                                    i15 = ((int) (Test.instanceCount));
                                                    i16 += i1;
                                                    i13 = i12;
                                                    Test.instanceCount += ((i14 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount;
                                                    i11 *= i12;
                                                    f1 += s1;
                                                    i13 <<= i12;
                                                } else if (false) {
                                                    lArr1[i14] -= i15;
                                                    i17 = ((int) (1.423F));
                                                    i15 -= ((int) (Test.fFld));
                                                }
                                            }
                                        }
                                        break;
                                }
                                break;
                        }
                        break;
                    case 46 :
                        Test.dFld -= Test.instanceCount;
                        break;
                    case 47 :
                        i13 *= i13;
                        break;
                    case 48 :
                        i15 = 142;
                    case 49 :
                        i11 |= i11;
                        break;
                    default :
                        i17 = ((int) (-2.35963));
                }
            } while ((++i2) < 5 );
        }
        long meth_res = ((((((((((((i1 + Float.floatToIntBits(f1)) + i2) + i11) + (b1 ? 1 : 0)) + i12) + i13) + s1) + i14) + i15) + i16) + i17) + FuzzerUtils.checkSum(iArr)) + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return ((int) (meth_res));
    }

    public long lMeth(double d, long l, int i) {
        float f = 0.868F;
        int i18 = -3;
        int i19 = 5;
        int i20 = 3597;
        int i21 = 7;
        int i22 = -2588;
        int i23 = 13;
        int i24 = -3;
        int i25 = 37;
        int i26 = -10;
        int i27 = -7;
        int i28 = 230;
        int i29 = 211;
        int i30 = 14;
        byte by1 = -41;
        short s2 = -8588;
        double dArr[] = new double[N];
        FuzzerUtils.init(dArr, -31.112635);
        l = (i >>= i - i) + (i--);
        {
            final int ax$15 = i;
            try {
                int[] ax$8 = new int[]{ 1, 3 };
                int[] ax$10 = new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 };
                Method ax$13 = null;
                for (int ax$7 = -545; ax$7 < (-545 + 13528); ax$7 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        for (int ax$11 = 0; ax$11 < ax$10.length; ax$11 += 1) {
                            ax$10[ax$11] = ((int) (ax$8[ax$11] - i));
                        }
                    } catch (Throwable ax$12) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$0 = true;
                    iMeth();
                    Test.ax$0 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        ax$13.invoke(null);
                    } catch (Throwable ax$14) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                i = ax$15;
            }
        }
        f = ((i *= -59122) + iMeth()) % (i | 1);
        for (i18 = 9; i18 < 176; i18++) {
            dArr = dArr;
            try {
                i = i19 % i20;
                i20 = i % (-12364);
                i = i21 / i18;
            } catch (ArithmeticException a_e) {
            }
            i = ((int) (Test.instanceCount));
            i19 += -120;
            i20 >>= i20;
            Test.fFld = i22;
            i += i18 ^ i18;
        }
        i19 += by1;
        for (i23 = 12; i23 < 206; i23++) {
            i21 += i23;
            i24 = by1;
            Test.instanceCount += ((i23 * l) + i) - by1;
            d += -202;
            for (i25 = 1; i25 < 3; ++i25) {
                i21 += i25 * i25;
                Test.iArrFld[i25 - 1] *= ((int) (l));
                i22 += ((i25 * i25) + i19) - i25;
                i24 = ((int) (d));
            }
            Test.dFld -= i19;
            for (i27 = 1; i27 < 3; ++i27) {
                switch ((((i24 >>> 1) % 1) * 5) + 50) {
                    case 55 :
                        d += i21;
                        f -= s2;
                        Test.lArrFld[i23 + 1] = ((long) (f));
                        for (i29 = 2; 1 < i29; i29--) {
                            switch ((((i27 >>> 1) % 2) * 5) + 83) {
                                case 93 :
                                    Test.instanceCount += 28;
                                    by1 = ((byte) (1655658603L));
                                    f /= i25 | 1;
                                    i19 += i29 * Test.instanceCount;
                                    if (Test.bFld)
                                        continue;

                                    i26 = s2;
                                    Test.iArrFld[i27] = ((int) (l));
                                    i *= i30;
                                    break;
                                case 87 :
                                    f += i29 * i29;
                                    break;
                                default :
                                    if (Test.bFld)
                                        continue;

                            }
                        }
                        break;
                    default :
                        i26 = 24425;
                }
            }
        }
        long meth_res = ((((((((((((((((((Double.doubleToLongBits(d) + l) + i) + Float.floatToIntBits(f)) + i18) + i19) + i20) + i21) + i22) + by1) + i23) + i24) + i25) + i26) + i27) + i28) + s2) + i29) + i30) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
        lMeth_check_sum += meth_res;
        return ((long) (meth_res));
    }

    public void mainTest(String[] strArr1) {
        int i31 = 24628;
        int i32 = 254;
        int i33 = 12;
        int i34 = -53245;
        int i35 = 42174;
        int i36 = -88;
        int i37 = 7;
        int i38 = 29;
        int iArr1[] = new int[N];
        byte by3 = 105;
        float f3 = -2.194F;
        long l2 = 365645172L;
        short s3 = -30206;
        short sArr[] = new short[N];
        double dArr1[] = new double[N];
        FuzzerUtils.init(dArr1, -40.30412);
        FuzzerUtils.init(iArr1, -168);
        FuzzerUtils.init(sArr, ((short) (26487)));
        Test.instanceCount *= lMeth(Test.dFld, Test.instanceCount, i31);
        i31 = i31;
        byArrFld[((-10) >>> 1) % N] = ((byte) (-103.836F));
        Test.instanceCount = i31;
        if (Test.bFld) {
            Test.instanceCount += i31;
            i31 >>>= ((int) (Test.instanceCount));
            Test.sFld &= ((short) (i31));
            i32 = 1;
            do {
                switch (((i32 >>> 1) % 9) + 86) {
                    case 86 :
                        Test.fFld += i31;
                        Test.iArrFld[i32 + 1] *= -61;
                        i31 = by3;
                        break;
                    case 87 :
                        i31 >>>= i32;
                        i31 += ((i32 * Test.fFld) + i32) - Test.sFld;
                        Test.iArrFld[i32 - 1] += i32;
                        i31 <<= 10;
                        i31 = i32;
                        if (Test.bFld)
                            break;

                        Test.sFld += ((short) (Test.instanceCount));
                        i31 = ((int) (77.53F));
                        f3 = 1;
                        do {
                            for (i33 = i32; 1 > i33; ++i33) {
                                Test.iArrFld[i32 - 1] = ((int) (Test.fFld));
                                Test.instanceCount = 140;
                                Test.bFld = Test.bFld;
                            }
                            i31 = i32;
                            for (i35 = i32; 1 > i35; ++i35) {
                                i34 -= by3;
                                Test.bFld = Test.bFld;
                                i36 += ((int) (Test.instanceCount));
                                Test.instanceCount %= i31 | 1;
                                switch (((int) (((f3 % 6) * 5) + 115))) {
                                    case 116 :
                                        Test.instanceCount = i34;
                                        switch (((int) ((f3 % 9) + 30))) {
                                            case 30 :
                                                i36 = i35;
                                                Test.fFld = ((float) (Test.dFld));
                                                Test.instanceCount = 1831628415L;
                                                if (Test.bFld)
                                                    break;

                                                i36 += i31;
                                                Test.fFld = Test.instanceCount;
                                                Test.fFld *= i32;
                                                i36 = i32;
                                                Test.instanceCount = i34;
                                                switch ((((i34 >>> 1) % 7) * 5) + 99) {
                                                    case 115 :
                                                        i36 <<= -66;
                                                        dArr1[i32] = f3;
                                                        Test.dFld = Test.fFld;
                                                        Test.fFld *= i34;
                                                        Test.lArrFld[((int) (f3))] = Test.sFld;
                                                        Test.dFld += Test.fFld;
                                                        Test.sFld >>= ((short) (4190182098057965359L));
                                                        i34 += ((i35 * i36) + i32) - i32;
                                                        i31 += ((i35 * i33) + by3) - i31;
                                                        Test.instanceCount <<= i34;
                                                        i31 = ((int) (Test.fFld));
                                                        i31 = i36;
                                                        break;
                                                    case 121 :
                                                        if (Test.bFld) {
                                                            Test.lArrFld[i35] &= -1;
                                                            i34 = i35;
                                                            Test.fArrFld = Test.fArrFld;
                                                            Test.instanceCount += 3 + (i35 * i35);
                                                            l2 += 13800L + (i35 * i35);
                                                            i31 *= i35;
                                                            i36 = i34;
                                                            i31 = i35;
                                                        } else if (Test.bFld) {
                                                            i36 += i35 - Test.instanceCount;
                                                            l2 = i37;
                                                            l2 -= ((long) (f3));
                                                        } else if (Test.bFld) {
                                                            switch (((int) ((f3 % 8) + 70))) {
                                                                case 70 :
                                                                    if (Test.bFld)
                                                                        continue;

                                                                    l2 = i34;
                                                                    break;
                                                                case 71 :
                                                                    i36 += (-4073) + (i35 * i35);
                                                                    i31 = 243;
                                                                    iArr1[((int) (f3 + 1))] >>= i32;
                                                                    break;
                                                                case 72 :
                                                                    Test.instanceCount += ((long) (Test.dFld));
                                                                case 73 :
                                                                    iArr1[i32] = i32;
                                                                    break;
                                                                case 74 :
                                                                    Test.iArrFld[((int) (f3))] <<= i34;
                                                                    break;
                                                                case 75 :
                                                                case 76 :
                                                                    if (Test.bFld)
                                                                        break;

                                                                case 77 :
                                                                    Test.iArrFld[i35] = by3;
                                                                    break;
                                                                default :
                                                                    if (Test.bFld)
                                                                        break;

                                                            }
                                                        }
                                                        break;
                                                    case 106 :
                                                        Test.instanceCount += ((long) ((-49.828F) + (i35 * i35)));
                                                        break;
                                                    case 109 :
                                                        i31 -= i32;
                                                        break;
                                                    case 122 :
                                                        Test.fFld -= Test.instanceCount;
                                                        break;
                                                    case 125 :
                                                        l2 = Test.sFld;
                                                        break;
                                                    case 127 :
                                                        sArr[i32] -= ((short) (i37));
                                                        break;
                                                }
                                                break;
                                            case 31 :
                                                Test.instanceCount -= i36;
                                                break;
                                            case 32 :
                                                iArr1[i35] = 31970;
                                                break;
                                            case 33 :
                                                i37 += i35 | Test.iFld;
                                                break;
                                            case 34 :
                                                if (Test.bFld)
                                                    continue;

                                                break;
                                            case 35 :
                                                Test.fFld *= f3;
                                                break;
                                            case 36 :
                                                Test.iArrFld[i35] -= 11;
                                                break;
                                            case 37 :
                                                i34 += Test.iFld;
                                                break;
                                            case 38 :
                                                try {
                                                    iArr1[i35] = (-18) % i31;
                                                    i37 = Test.iArrFld1[((int) (f3))] % (-382794626);
                                                    i31 = i35 % i32;
                                                } catch (ArithmeticException a_e) {
                                                }
                                        }
                                        break;
                                    case 117 :
                                        if (Test.bFld)
                                            break;

                                    case 145 :
                                        Test.fFld = 45147;
                                        break;
                                    case 144 :
                                        Test.iFld <<= i34;
                                        break;
                                    case 118 :
                                        Test.lArrFld[i32] = Test.instanceCount;
                                        break;
                                    case 142 :
                                        try {
                                            i31 = i36 / (-47);
                                            i31 = i34 % i31;
                                            i31 = i38 % 202;
                                        } catch (ArithmeticException a_e) {
                                        }
                                        break;
                                }
                            }
                        } while ((++f3) < 74 );
                        break;
                    case 88 :
                        l2 += ((i32 * i36) + Test.sFld) - i33;
                        break;
                    case 89 :
                        sArr[i32] += ((short) (i33));
                    case 90 :
                        i34 >>= ((int) (Test.instanceCount));
                        break;
                    case 91 :
                        by3 += ((byte) (((i32 * i33) + s3) - Test.fFld));
                    case 92 :
                    case 93 :
                        i38 /= 55930;
                        break;
                    case 94 :
                        Test.fArrFld[i32] *= Test.instanceCount;
                    default :
                        i34 += ((int) (Test.dFld));
                }
            } while ((i32 += 2) < 137 );
        } else if (Test.bFld) {
            iArr1[(i37 >>> 1) % N] = Test.iFld;
        } else {
            iArr1[(i34 >>> 1) % N] = i38;
        }
        FuzzerUtils.out.println((((("i31 i32 by3 = " + i31) + ",") + i32) + ",") + by3);
        FuzzerUtils.out.println((((("f3 i33 i34 = " + Float.floatToIntBits(f3)) + ",") + i33) + ",") + i34);
        FuzzerUtils.out.println((((("i35 i36 l2 = " + i35) + ",") + i36) + ",") + l2);
        FuzzerUtils.out.println((((("i37 i38 s3 = " + i37) + ",") + i38) + ",") + s3);
        FuzzerUtils.out.println((((("dArr1 iArr1 sArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1))) + ",") + FuzzerUtils.checkSum(iArr1)) + ",") + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println((((("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount) + ",") + Float.floatToIntBits(Test.fFld)) + ",") + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println((((("Test.bFld Test.sFld Test.iFld = " + (Test.bFld ? 1 : 0)) + ",") + Test.sFld) + ",") + Test.iFld);
        FuzzerUtils.out.println((((("Test.iArrFld Test.lArrFld byArrFld = " + FuzzerUtils.checkSum(Test.iArrFld)) + ",") + FuzzerUtils.checkSum(Test.lArrFld)) + ",") + FuzzerUtils.checkSum(byArrFld));
        FuzzerUtils.out.println((("Test.fArrFld Test.iArrFld1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld))) + ",") + FuzzerUtils.checkSum(Test.iArrFld1));
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    static Boolean ax$0 = false;

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }
}