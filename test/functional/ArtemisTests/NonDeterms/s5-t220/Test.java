// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.SocketPermission;
import java.security.GeneralSecurityException;
import java.util.concurrent.atomic.AtomicIntegerArray;

public class Test {
    public static final int N = 256;

    public static long instanceCount = -2L;

    public static int iFld = 2;

    public static volatile float fFld = 4.328F;

    public static byte byFld = 22;

    public static int iFld1 = -11;

    public static int iFld2 = -31316;

    public static short sFld = 7160;

    public static volatile double dFld = -21.47326;

    public static int iFld3 = 2;

    public static boolean bFld = false;

    public static int iArrFld[] = new int[N];

    public static long lArrFld[] = new long[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -161);
        FuzzerUtils.init(Test.lArrFld, 14276L);
    }

    public static long iMeth_check_sum = 0;

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b, long l, int i3) {
        int i4 = -31729;
        int i5 = 8;
        int i6 = -121;
        int i7 = -6873;
        int i8 = 52;
        int i9 = -21311;
        double d = 2.118072;
        double d1 = 66.1196;
        double dArr[][] = new double[N][N];
        short s = -23308;
        long l1 = 48245L;
        long lArr[] = new long[N];
        float fArr1[] = new float[N];
        FuzzerUtils.init(fArr1, -19.805F);
        FuzzerUtils.init(dArr, 19.113205);
        FuzzerUtils.init(lArr, 22904L);
        Test.instanceCount = i3;
        i4 = 1;
        do {
            for (d = 1; 3 > d; ++d) {
                for (i6 = 1; i6 < 2; i6++) {
                    fArr1[i6 - 1] += i6;
                    l >>= -32833;
                    s = ((short) (i5));
                    Test.fFld -= 11;
                    if (b)
                        continue;

                    i3 = i7;
                    l1 += i4;
                    Test.iArrFld = Test.iArrFld;
                }
                i7 *= i6;
                i3 += Test.iFld;
                l1 *= i4;
                i5 -= ((int) (Test.fFld));
                if (b) {
                    i7 = i5;
                    i8 = 1;
                    while ((++i8) < 2) {
                        Test.iFld = i4;
                        i3 += i8;
                        dArr[((int) (d))][i4] -= 2.616F;
                        lArr[((int) (d))] /= i3 | 1;
                        switch ((i8 % 10) + 7) {
                            case 7 :
                                Test.instanceCount += i5;
                                Test.instanceCount = i3;
                                l1 = i3;
                                if (b) {
                                    Test.iArrFld[i4] |= -8;
                                    i3 *= i5;
                                    fArr1[((int) (d + 1))] -= -4;
                                    Test.byFld += ((byte) (i8));
                                    Test.iFld = ((int) (Test.fFld));
                                    Test.iFld1 = ((int) (l1));
                                    l1 *= ((long) (1.48F));
                                    d1 = -203;
                                    i5 += ((int) (l1));
                                }
                            case 8 :
                                if (b)
                                    continue;

                                break;
                            case 9 :
                                Test.instanceCount <<= Test.iFld2;
                                break;
                            case 10 :
                                d1 -= i3;
                                break;
                            case 11 :
                                Test.instanceCount = i6;
                                break;
                            case 12 :
                                Test.iArrFld[i8 + 1] >>= Test.iFld;
                                break;
                            case 13 :
                                try {
                                    Test.iFld2 = Test.iFld / 1742601119;
                                    Test.iFld2 = Test.iArrFld[((int) (d))] % i6;
                                    Test.iArrFld[((int) (d - 1))] = i9 / Test.iArrFld[((int) (d))];
                                } catch (ArithmeticException a_e) {
                                }
                                break;
                            case 14 :
                                i7 = Test.iFld2;
                            case 15 :
                                Test.iArrFld[i4 - 1] = ((int) (l));
                                break;
                            case 16 :
                                Test.fFld += i9;
                            default :
                                Test.iFld1 *= ((int) (-138L));
                        }
                    }
                } else {
                    Test.fFld += -67;
                }
            }
        } while ((++i4) < 198 );
        vMeth1_check_sum += (((((((((((((((b ? 1 : 0) + l) + i3) + i4) + Double.doubleToLongBits(d)) + i5) + i6) + i7) + s) + l1) + i8) + Double.doubleToLongBits(d1)) + i9) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1))) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr))) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {
        if (Test.ax$33) {
            long[] ax$34 = new long[]{ -7317910260386036730L, -4657480012038006558L, 7862200250605597290L, 7618419096267901852L, 6949720758016800236L, -7670860387959696866L, 3086496281745579152L, 7819119123814811276L, -5799197470222105264L };
            long[] ax$35 = new long[]{ -8857259325122678705L, 4015790795523269787L, -4534829090386715052L, 305342760106921635L, 539212083936719733L };
            Test.AxOutputRedirectionHelper.redirect();
            try {
                for (int ax$36 = 0; ax$36 < ax$35.length; ax$36 += 1) {
                    ax$35[ax$36] = ((long) (ax$34[ax$36] << (ax$36 & 3)));
                }
            } catch (Throwable ax$37) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            return;
        }
        float f1 = 35.683F;
        float fArr[][] = new float[N][N];
        int i2 = -8;
        int i10 = 22012;
        int i11 = 189;
        int i12 = -9;
        int i13 = -194;
        int i14 = -109;
        boolean b1 = true;
        byte byArr[] = new byte[N];
        FuzzerUtils.init(fArr, 2.591F);
        FuzzerUtils.init(byArr, ((byte) (-45)));
        Test.instanceCount >>= ++Test.iFld;
        for (f1 = 5; f1 < 223; ++f1) {
            fArr[((int) (f1 - 1))][((int) (f1))] = Test.instanceCount;
            vMeth1(b1, Test.instanceCount, Test.iFld1);
            Test.sFld *= ((short) (Test.instanceCount));
            for (i10 = ((int) (f1)); i10 < 3; i10++) {
                Test.iFld *= ((int) (-85.506F));
                Test.fFld -= Test.iFld;
                Test.iArrFld[((int) (f1 - 1))] = ((int) (f1));
                for (i12 = 1; i12 < 1; ++i12) {
                    Test.lArrFld[i10 + 1] <<= 13751;
                    Test.fFld += ((i12 * i2) + Test.iFld1) - Test.instanceCount;
                    Test.fFld += i13;
                    i13 = ((int) (Test.instanceCount));
                    i2 = 12;
                    Test.instanceCount = -4517;
                    Test.iFld2 += i12 * i12;
                }
                i14 = 1;
                do {
                    Test.dFld = Test.sFld;
                    Test.sFld *= ((short) (i11));
                    Test.iFld1 = 6839;
                    Test.iFld2 -= i10;
                    Test.iArrFld[i10 - 1] += i10;
                    i2 -= Test.sFld;
                    Test.byFld >>>= ((byte) (Test.iFld));
                    Test.iArrFld[((int) (f1 - 1))] >>= Test.iFld;
                    Test.iArrFld[i10] = i11;
                    Test.iFld1 += 5;
                    if (i10 != 0) {
                        vMeth_check_sum += ((((((((Float.floatToIntBits(f1) + i2) + (b1 ? 1 : 0)) + i10) + i11) + i12) + i13) + i14) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))) + FuzzerUtils.checkSum(byArr);
                        return;
                    }
                    Test.iArrFld[i10] += ((int) (f1));
                    fArr[i14 + 1][i10] -= i2;
                    i13 *= i13;
                    if (Test.iFld != 0) {
                        vMeth_check_sum += ((((((((Float.floatToIntBits(f1) + i2) + (b1 ? 1 : 0)) + i10) + i11) + i12) + i13) + i14) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))) + FuzzerUtils.checkSum(byArr);
                        return;
                    }
                } while ((i14 += 3) < 1 );
                if (b1)
                    break;

                i13 = ((int) (-4251449782L));
                Test.iFld1 = i2;
                Test.iArrFld[((int) (f1 - 1))] -= i13;
            }
        }
        vMeth_check_sum += ((((((((Float.floatToIntBits(f1) + i2) + (b1 ? 1 : 0)) + i10) + i11) + i12) + i13) + i14) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr))) + FuzzerUtils.checkSum(byArr);
    }

    public static int iMeth(float f, int i, int i1) {
        if (Test.ax$0) {
            final int ax$7 = i;
            final int ax$6 = Test.iFld3;
            AtomicIntegerArray ax$1 = null;
            Test.AxOutputRedirectionHelper.redirect();
            try {
                ax$1.set(i + iFld3, iFld3);
            } catch (Throwable ax$5) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            Test.iFld3 = ax$6;
            i = ax$7;
            return 1194956778;
        }
        int i16 = -14625;
        int i17 = -32759;
        int i18 = 152;
        int i19 = 25142;
        int i20 = -185;
        int i21 = 11;
        boolean b2 = true;
        {
            try {
                GeneralSecurityException ax$39 = new GeneralSecurityException();
                Exception ax$40 = new Exception();
                for (int ax$38 = -113; ax$38 < (-113 + 15271); ax$38 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        if (!ax$39.getCause().equals(ax$40)) {
                        }
                    } catch (Throwable ax$41) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$33 = true;
                    vMeth();
                    Test.ax$33 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        StringBuilder ax$42 = new StringBuilder("hilbert");
                        ax$42.replace(-1, 2, " ");
                    } catch (Throwable ax$43) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
            }
        }
        vMeth();
        i1 -= 8;
        Test.iArrFld[(i >>> 1) % N] = Test.iFld1;
        for (int i15 : Test.iArrFld) {
            Test.iArrFld[(Test.iFld >>> 1) % N] += i;
            Test.iFld2 += Test.iFld2;
            Test.instanceCount -= Test.iFld1;
            Test.dFld = 6.456F;
            for (i16 = 1; 2 > i16; i16++) {
                Test.iFld1 += ((int) (Test.instanceCount));
                for (i18 = 1; i18 < 2; i18++) {
                    i1 += i18;
                    Test.dFld = Test.instanceCount;
                    Test.iFld1 += i;
                    Test.iFld += ((int) (Test.dFld));
                    Test.instanceCount -= i15;
                    switch ((i16 % 2) + 38) {
                        case 38 :
                            Test.dFld -= i17;
                            i1 *= ((int) (Test.instanceCount));
                            switch (((i16 % 2) * 5) + 124) {
                                case 127 :
                                    Test.iFld2 += ((int) (3081802830L));
                                    Test.instanceCount *= i1;
                                    Test.iFld -= i16;
                                    if (b2)
                                        continue;

                                    f = i20;
                                    Test.dFld += Test.dFld;
                                    Test.instanceCount %= i17 | 1;
                                    i21 -= i20;
                                    i19 += i18;
                                    break;
                                case 133 :
                                    b2 = true;
                                    i20 += i18;
                                    Test.iFld1 -= ((int) (Test.instanceCount));
                                    i21 = i18;
                                    Test.instanceCount = Test.instanceCount;
                                    break;
                            }
                            b2 = b2;
                            Test.lArrFld[i16 - 1] += Test.instanceCount;
                            Test.instanceCount -= 73;
                            break;
                        case 39 :
                            i -= i17;
                        default :
                            i17 += ((int) ((-83.329F) + (i18 * i18)));
                    }
                }
            }
        }
        long meth_res = ((((((((Float.floatToIntBits(f) + i) + i1) + i16) + i17) + i18) + i19) + (b2 ? 1 : 0)) + i20) + i21;
        iMeth_check_sum += meth_res;
        return ((int) (meth_res));
    }

    public void mainTest(String[] strArr1) {
        if (Test.ax$20) {
            Test.AxOutputRedirectionHelper.redirect();
            try {
                try {
                    SocketPermission ax$21 = new SocketPermission(":", "connect");
                } catch (ArrayIndexOutOfBoundsException ax$22) {
                }
            } catch (Throwable ax$23) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            return;
        }
        int i22 = 241;
        int i23 = -123;
        int i24 = 9;
        int i25 = 79;
        int i26 = 7;
        float f2 = 2.623F;
        float fArr2[] = new float[N];
        long l2 = -4635751095241792472L;
        byte byArr1[] = new byte[N];
        FuzzerUtils.init(fArr2, 76.429F);
        FuzzerUtils.init(byArr1, ((byte) (58)));
        {
            final int ax$17 = i23;
            final int ax$18 = i22;
            final float ax$19 = f2;
            try {
                float[] ax$9 = new float[]{ 0.66439664F };
                float[] ax$11 = new float[16];
                for (int ax$8 = -970; ax$8 < (-970 + 11124); ax$8 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        for (int ax$12 = 0; ax$12 < ax$11.length; ax$12 += 1) {
                            ax$11[ax$12] += ax$9[ax$12] + f2;
                        }
                    } catch (Throwable ax$13) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$0 = true;
                    iMeth(0.23153096F, 1845216518, -230245725);
                    Test.ax$0 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        if (i22 < i23) {
                            i23 = i22;
                        }
                    } catch (Throwable ax$16) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                i23 = ax$17;
                i22 = ax$18;
                f2 = ax$19;
            }
        }
        iMeth(Test.fFld, Test.iFld1, -5980);
        for (i22 = 3; i22 < 134; ++i22) {
            Test.byFld += ((byte) (Test.iFld2));
            Test.iFld += ((i22 * Test.iFld) + i23) - Test.sFld;
            for (i24 = 2; i24 < 39; i24++) {
                switch ((i24 % 2) + 20) {
                    case 20 :
                        if (false)
                            break;

                        Test.fFld += Test.fFld;
                        Test.iFld2 += 60015;
                        Test.fFld += i24 - i23;
                        if (Test.bFld) {
                            i23 -= Test.iFld1;
                            Test.byFld = ((byte) (i22));
                            Test.iFld2 += i24 ^ Test.instanceCount;
                            fArr2[i24 + 1] = Test.iFld3;
                            Test.iArrFld[i22 - 1] -= i22;
                            Test.iFld3 -= -129;
                            i23 *= ((int) (-173L));
                            Test.iFld1 <<= 72;
                            f2 = 1;
                            while ((++f2) < 2) {
                                Test.iFld = i22;
                                Test.iFld2 = i23;
                                i23 += ((int) (f2 - i24));
                                switch (((i22 >>> 1) % 6) + 73) {
                                    case 73 :
                                        Test.instanceCount += ((long) (Test.dFld));
                                    case 74 :
                                        i23 &= ((int) (Test.instanceCount));
                                        switch ((i24 * 5) + 34) {
                                            case 113 :
                                                i23 &= Test.sFld;
                                                Test.dFld -= f2;
                                                Test.lArrFld[i24] *= i24;
                                                break;
                                            case 178 :
                                                Test.dFld -= 39;
                                                Test.lArrFld[i24 + 1] += i23;
                                                Test.iArrFld[i24] = ((int) (Test.instanceCount));
                                                Test.iFld2 = Test.iFld2;
                                                Test.lArrFld[((int) (f2))] *= ((long) (-9.83997));
                                                Test.iFld3 += (-21960) + (f2 * f2);
                                                Test.iArrFld[i22 + 1] = ((int) (227L));
                                                switch (((i22 % 7) * 5) + 70) {
                                                    case 88 :
                                                        Test.fFld += f2 - Test.iFld1;
                                                        i25 %= ((int) (Test.byFld | 1));
                                                        Test.dFld -= i24;
                                                        i23 -= -221;
                                                        Test.iFld += ((int) (Test.instanceCount));
                                                        Test.fFld += f2 * i23;
                                                        Test.fFld += i25;
                                                        Test.iFld3 += i24;
                                                        Test.instanceCount += ((long) (f2 - i23));
                                                        i23 = ((int) (Test.dFld));
                                                        break;
                                                    case 76 :
                                                        Test.fFld -= Test.fFld;
                                                        if (Test.bFld) {
                                                            i25 = ((int) (17806L));
                                                            Test.iFld1 += ((int) (((f2 * i23) + Test.iFld1) - Test.instanceCount));
                                                            Test.iFld1 = Test.iFld;
                                                            Test.iArrFld[i24 + 1] += Test.iFld3;
                                                            Test.iArrFld[((int) (f2))] *= ((int) (Test.instanceCount));
                                                            Test.instanceCount = Test.iFld3;
                                                            Test.iFld3 -= i22;
                                                            if (Test.bFld)
                                                                continue;

                                                            Test.instanceCount = Test.iFld2;
                                                            Test.instanceCount = ((long) (Test.dFld));
                                                        }
                                                        i23 = Test.iFld3;
                                                        Test.iFld3 += ((int) (((f2 * Test.instanceCount) + i25) - Test.instanceCount));
                                                        Test.instanceCount = Test.iFld3;
                                                        break;
                                                    case 89 :
                                                        Test.iArrFld[i22] = Test.iFld3;
                                                        try {
                                                            Test.iFld = i24 % Test.iArrFld[i24 - 1];
                                                            Test.iFld1 = Test.iFld1 % Test.iFld2;
                                                            i25 = i23 / Test.iFld2;
                                                        } catch (ArithmeticException a_e) {
                                                        }
                                                        Test.instanceCount = ((long) (Test.fFld));
                                                        i23 += ((int) (((f2 * Test.fFld) + Test.iFld3) - Test.fFld));
                                                        Test.iFld = ((int) (Test.instanceCount));
                                                        Test.iFld >>>= Test.iFld;
                                                        Test.iFld2 += ((int) (((f2 * i24) + f2) - Test.iFld2));
                                                        Test.sFld = ((short) (Test.iFld2));
                                                        Test.iFld2 -= ((int) (f2));
                                                        Test.iArrFld[i24] = i23;
                                                        byArr1[i24 - 1] <<= ((byte) (7816193253258964551L));
                                                        break;
                                                    case 98 :
                                                        Test.iFld2 += ((int) (f2 - Test.iFld));
                                                        break;
                                                    case 94 :
                                                    case 72 :
                                                        Test.iFld3 /= ((int) (i25 | 1));
                                                        break;
                                                    case 103 :
                                                        i23 *= ((int) (Test.fFld));
                                                }
                                                break;
                                            case 89 :
                                                Test.iFld2 = ((int) (Test.instanceCount));
                                                break;
                                            case 367 :
                                                Test.sFld = ((short) (Test.iFld1));
                                                break;
                                            case 107 :
                                                Test.byFld += ((byte) (((f2 * i22) + Test.byFld) - Test.iFld2));
                                                break;
                                            case 221 :
                                                Test.fFld += ((f2 * Test.iFld2) + Test.sFld) - Test.iFld3;
                                            case 294 :
                                                Test.iFld3 *= ((int) (-1.775F));
                                                break;
                                            case 99 :
                                                Test.iFld -= Test.byFld;
                                                break;
                                            case 174 :
                                                try {
                                                    Test.iArrFld[i22] = i23 / Test.iArrFld[i24];
                                                    i23 = Test.iArrFld[((int) (f2 + 1))] % Test.iFld1;
                                                    Test.iFld2 = i24 / i25;
                                                } catch (ArithmeticException a_e) {
                                                }
                                            case 200 :
                                                i23 *= ((int) (Test.fFld));
                                                break;
                                            case 348 :
                                                i25 += ((int) (f2 * i25));
                                            case 69 :
                                                i23 += Test.byFld;
                                            case 303 :
                                                Test.fFld += ((f2 * Test.iFld) + Test.iFld1) - Test.iFld2;
                                                break;
                                            case 122 :
                                            case 181 :
                                                i23 = Test.iFld;
                                                break;
                                            case 187 :
                                                if (Test.bFld)
                                                    continue;

                                                break;
                                            case 186 :
                                                Test.lArrFld[i24 - 1] += Test.iFld3;
                                            case 345 :
                                                i23 += ((int) (((f2 * Test.instanceCount) + i25) - i25));
                                            case 374 :
                                                i25 += ((int) (f2));
                                                break;
                                            case 280 :
                                                Test.dFld %= 0.768F;
                                            case 182 :
                                            case 284 :
                                                Test.iFld2 = -51418;
                                                break;
                                            case 309 :
                                                Test.iFld *= ((int) (f2));
                                                break;
                                            case 343 :
                                            case 154 :
                                                Test.instanceCount -= ((long) (Test.dFld));
                                                break;
                                            case 331 :
                                                Test.lArrFld[i22] = ((long) (f2));
                                                break;
                                            case 105 :
                                                i25 = ((int) (Test.fFld));
                                            case 83 :
                                                Test.iFld3 = ((int) (Test.fFld));
                                                break;
                                            case 357 :
                                                Test.bFld = Test.bFld;
                                            case 62 :
                                                i25 >>= i25;
                                                break;
                                            case 248 :
                                                i25 += i24;
                                                break;
                                            case 74 :
                                                if (Test.bFld)
                                                    continue;

                                                break;
                                            case 103 :
                                                Test.fFld *= Test.fFld;
                                            case 100 :
                                                Test.iFld = ((int) (Test.fFld));
                                            case 168 :
                                                Test.iFld1 = ((int) (9L));
                                                break;
                                            case 264 :
                                                l2 += ((long) (f2 * Test.fFld));
                                                break;
                                            case 355 :
                                                if (false)
                                                    continue;

                                            case 173 :
                                            case 153 :
                                                Test.sFld %= ((short) (((long) (Test.fFld)) | 1));
                                                break;
                                            case 156 :
                                                Test.lArrFld[i22] *= ((long) (Test.dFld));
                                            case 53 :
                                                Test.lArrFld[((int) (f2 + 1))] = Test.sFld;
                                                break;
                                            case 188 :
                                                Test.fFld = Test.sFld;
                                                break;
                                            case 291 :
                                                Test.byFld = ((byte) (i25));
                                            case 102 :
                                                if (Test.bFld)
                                                    break;

                                                break;
                                            case 71 :
                                                Test.sFld >>>= ((short) (Test.instanceCount));
                                                break;
                                            case 205 :
                                                Test.instanceCount -= -5384594809030266211L;
                                                break;
                                            case 227 :
                                                Test.iFld3 += ((int) (f2 + i22));
                                                break;
                                            case 67 :
                                                Test.iFld2 += ((int) (f2 * Test.fFld));
                                            case 192 :
                                                Test.iFld += ((int) (f2));
                                                break;
                                            case 101 :
                                                Test.dFld *= Test.byFld;
                                                break;
                                            case 135 :
                                                i23 *= -10;
                                            case 223 :
                                                Test.iFld1 *= ((int) (l2));
                                            case 210 :
                                                Test.iFld1 = i23;
                                                break;
                                            case 106 :
                                                i23 = ((int) (l2));
                                                break;
                                            case 308 :
                                                Test.fFld -= i23;
                                            case 335 :
                                                Test.iArrFld = Test.iArrFld;
                                                break;
                                            case 222 :
                                                Test.iFld3 -= Test.iFld3;
                                            case 197 :
                                                Test.instanceCount = i26;
                                            case 271 :
                                                i25 -= Test.sFld;
                                                break;
                                            case 217 :
                                                Test.dFld *= 1.572F;
                                                break;
                                            case 123 :
                                                i25 >>= i23;
                                                break;
                                            case 44 :
                                                Test.iArrFld[i22] += Test.iFld;
                                                break;
                                            case 170 :
                                                Test.iFld3 = i25;
                                            case 65 :
                                                Test.dFld -= i23;
                                                break;
                                            case 317 :
                                                Test.iFld += i23;
                                            case 211 :
                                                l2 += ((long) (((f2 * Test.iFld) + Test.iFld2) - Test.iFld));
                                                break;
                                            case 190 :
                                                Test.sFld -= ((short) (Test.dFld));
                                                break;
                                            case 108 :
                                                i26 += ((int) (Test.fFld));
                                                break;
                                            case 124 :
                                                if (Test.bFld)
                                                    continue;

                                                break;
                                            case 361 :
                                                i23 = -29870;
                                                break;
                                        }
                                        break;
                                    case 75 :
                                        i26 >>>= Test.iFld;
                                        break;
                                    case 76 :
                                        Test.dFld = Test.fFld;
                                        break;
                                    case 77 :
                                        Test.sFld += ((short) (i26));
                                        break;
                                    case 78 :
                                        l2 = i23;
                                        break;
                                    default :
                                        Test.byFld = ((byte) (Test.instanceCount));
                                }
                            }
                        } else {
                            i25 += ((i24 * l2) + l2) - Test.iFld3;
                        }
                        break;
                    case 21 :
                        Test.dFld += -7;
                        break;
                    default :
                        Test.iFld1 = Test.iFld1;
                }
            }
        }
        FuzzerUtils.out.println((((("i22 i23 i24 = " + i22) + ",") + i23) + ",") + i24);
        FuzzerUtils.out.println((((("i25 f2 l2 = " + i25) + ",") + Float.floatToIntBits(f2)) + ",") + l2);
        FuzzerUtils.out.println((((("i26 fArr2 byArr1 = " + i26) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr2))) + ",") + FuzzerUtils.checkSum(byArr1));
        FuzzerUtils.out.println((((("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount) + ",") + Test.iFld) + ",") + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println((((("Test.byFld Test.iFld1 Test.iFld2 = " + Test.byFld) + ",") + Test.iFld1) + ",") + Test.iFld2);
        FuzzerUtils.out.println((((("Test.sFld Test.dFld Test.iFld3 = " + Test.sFld) + ",") + Double.doubleToLongBits(Test.dFld)) + ",") + Test.iFld3);
        FuzzerUtils.out.println((((("Test.bFld Test.iArrFld Test.lArrFld = " + (Test.bFld ? 1 : 0)) + ",") + FuzzerUtils.checkSum(Test.iArrFld)) + ",") + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                {
                    final int ax$31 = Test.iFld;
                    final int ax$32 = Test.iFld2;
                    try {
                        int[] ax$28 = new int[]{ 1307721343, -509361553, -172887889, 722342057 };
                        for (int ax$24 = -985; ax$24 < (-985 + 18221); ax$24 += 1) {
                            Test.AxOutputRedirectionHelper.redirect();
                            try {
                                while (iFld2 <= iFld) {
                                    if (Integer.valueOf(iFld2).intValue() != iFld2);
                                    if ((iFld2 >= (-128)) && (iFld2 <= 127)) {
                                        if (Integer.valueOf(iFld2) != Integer.valueOf(iFld2));
                                    }
                                    iFld2++;
                                }
                            } catch (Throwable ax$27) {
                            } finally {
                            }
                            Test.AxOutputRedirectionHelper.recover();
                            Test.ax$20 = true;
                            _instance.mainTest(new String[]{ "s", "s", "s", "s" });
                            Test.ax$20 = false;
                            Test.AxOutputRedirectionHelper.redirect();
                            try {
                                for (int ax$29 = 0; ax$29 < 128; ax$29++) {
                                    ax$28[ax$29] = ~ax$28[ax$29];
                                }
                            } catch (Throwable ax$30) {
                            } finally {
                            }
                            Test.AxOutputRedirectionHelper.recover();
                        }
                    } finally {
                        Test.iFld = ax$31;
                        Test.iFld2 = ax$32;
                    }
                }
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    static Boolean ax$0 = false;

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }

    static Boolean ax$20 = false;

    static Boolean ax$33 = false;
}