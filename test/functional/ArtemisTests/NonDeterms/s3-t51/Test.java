// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

public class Test {

    public static final int N = 256;

    public static long instanceCount = 251L;

    public static float fFld = 1.12F;

    public static short sFld = 25315;

    public static short sFld1 = -2345;

    public static byte byFld = -119;

    public static boolean bFld = false;

    public static int iFld = 11;

    public static volatile int iFld1 = 49891;

    public static boolean[] bArrFld = new boolean[N];

    public static volatile int[] iArrFld = new int[N];

    public static float[] fArrFld = new float[N];

    public static volatile long[][] lArrFld = new long[N][N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
        FuzzerUtils.init(Test.iArrFld, 135);
        FuzzerUtils.init(Test.fArrFld, 57.523F);
        FuzzerUtils.init(Test.lArrFld, 3660684404L);
    }

    public static long bMeth_check_sum = 0;

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {
        if (ax$6) {
            try {
                // Expected
                ;
            } catch (Throwable ax$7) {
            } finally {
            }
            return;
        }
        int i2 = -32390, i3 = 56968, i4 = 42, i5 = 40180, i6 = 9, i7 = -14, i8 = -36;
        double d = 68.89843, dArr[] = new double[N];
        boolean b2 = true;
        FuzzerUtils.init(dArr, 0.81509);
        Test.iArrFld[(-58951 >>> 1) % N] += i2;
        for (i3 = 7; i3 < 175; ++i3) {
            for (i5 = 1; i5 < 3; i5++) {
                i7 = 1;
                while (++i7 < 2) {
                    Test.instanceCount = Test.instanceCount;
                    i4 = -51157;
                    switch(((i3 % 1) * 5) + 60) {
                        case 63:
                            d *= d;
                            i4 = i5;
                            i8 <<= i6;
                            i4 = i4;
                            i8 = i6;
                            break;
                    }
                    i6 = i8;
                    i2 *= -139;
                    Test.iArrFld[i7 - 1] = (int) Test.fFld;
                    switch((i7 % 10) + 60) {
                        case 60:
                            switch(((i3 % 4) * 5) + 28) {
                                case 34:
                                case 40:
                                    Test.sFld ^= (short) i2;
                                    Test.instanceCount = Test.instanceCount;
                                    Test.iArrFld = Test.iArrFld;
                                    i8 += (((i7 * i8) + Test.sFld1) - Test.instanceCount);
                                    Test.fFld = i4;
                                    i6 <<= (int) Test.instanceCount;
                                    Test.instanceCount += Test.instanceCount;
                                    i6 -= -7119;
                                    break;
                                case 48:
                                    Test.iArrFld[i3 - 1] -= -9;
                                    i8 += -229;
                                    i4 = 5;
                                    Test.instanceCount = 6L;
                                    if (b2) {
                                        Test.instanceCount += -5291;
                                        switch((i3 % 4) + 86) {
                                            case 86:
                                                switch((i3 % 4) + 74) {
                                                    case 74:
                                                        Test.byFld += (byte) -65;
                                                        i2 = i2;
                                                        i6 -= -191;
                                                        i4 = (int) Test.fFld;
                                                        break;
                                                    case 75:
                                                        i8 += (i7 + i3);
                                                        break;
                                                    case 76:
                                                    case 77:
                                                        i4 = i3;
                                                        break;
                                                }
                                            case 87:
                                                Test.instanceCount += Test.instanceCount;
                                                break;
                                            case 88:
                                                Test.byFld = (byte) Test.fFld;
                                                break;
                                            case 89:
                                                Test.fArrFld[i3] *= 0.882F;
                                        }
                                    } else {
                                        Test.fFld *= i4;
                                    }
                                    break;
                                case 45:
                                    i6 >>>= i8;
                            }
                            break;
                        case 61:
                            i6 += (int) -49.875F;
                            break;
                        case 62:
                            Test.instanceCount += (i7 ^ i7);
                            break;
                        case 63:
                            Test.instanceCount += (((i7 * i7) + i2) - i5);
                            break;
                        case 64:
                            Test.fArrFld = Test.fArrFld;
                            break;
                        case 65:
                            dArr[i5] *= -2.435F;
                            break;
                        case 66:
                            i2 = (int) -97L;
                        case 67:
                            i8 *= (int) d;
                            break;
                        case 68:
                            Test.lArrFld[i7][i5 + 1] = i2;
                            break;
                        case 69:
                            Test.iArrFld[i5] += (int) -2.17301;
                            break;
                    }
                }
            }
        }
        vMeth1_check_sum += i2 + i3 + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d) + i8 + (b2 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth(boolean b1, long l) {
        int i9 = 227, i10 = 5, i11 = -13, i12 = -10, i13 = -13, i14 = -37664, i15 = 106, i16 = 6, i17 = -20034, i18 = -133, i19 = 59359;
        double d1 = 0.90709;
        long l1 = -3917752556L;
        byte[] byArr = new byte[N];
        FuzzerUtils.init(byArr, (byte) 110);
        {
            java.io.PrintStream ax$10 = System.out;
            java.io.PrintStream ax$11 = System.err;
            java.io.PrintStream ax$12 = new java.io.PrintStream(new java.io.OutputStream() {

                @Override
                public void write(int b) throws java.io.IOException {
                    // DO NOTHING: DISCARD ALL OUTPUTS
                }
            });
            System.setOut(ax$12);
            System.setErr(ax$12);
            try {
                ax$6 = true;
                for (int ax$8 = 0; ax$8 < 9740; ax$8 += 1) vMeth1();
            } catch (java.lang.Throwable ax$9) {
            } finally {
                ax$6 = false;
            }
            System.setOut(ax$10);
            System.setErr(ax$11);
        }
        vMeth1();
        i9 = 77;
        while (--i9 > 0) {
            i10 -= -7;
            for (i11 = i9; i11 < 7; i11++) {
                if (i12 != 0) {
                    vMeth_check_sum += (b1 ? 1 : 0) + l + i9 + i10 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d1) + i15 + i16 + i17 + i18 + l1 + i19 + FuzzerUtils.checkSum(byArr);
                    return;
                }
                if (b1)
                    break;
            }
        }
        Test.fArrFld = Test.fArrFld;
        l -= i10;
        for (i13 = 4; 242 > i13; i13 += 2) {
            i10 = (int) d1;
        }
        i10 *= Test.sFld1;
        i12 += i9;
        i12 >>>= i9;
        l += i11;
        for (i15 = 149; i15 > 2; i15 -= 2) {
            Test.lArrFld[i15 - 1][i15 - 1] <<= Test.sFld;
            i14 -= i13;
            Test.iArrFld[i15] = i10;
            for (i17 = 1; i17 < 7; ++i17) {
                for (l1 = i15; 2 > l1; l1++) {
                    i19 <<= Test.sFld;
                    Test.lArrFld[(int) (l1 + 1)][(int) (l1)] >>= i13;
                    i16 -= i19;
                    i18 += (int) (((l1 * Test.instanceCount) + i16) - i18);
                    Test.fFld += Test.instanceCount;
                    i19 /= 59493;
                    i19 += (int) (l1 * l1);
                    Test.iArrFld[i17 - 1] >>>= i18;
                    l = (long) Test.fFld;
                    Test.fArrFld[i17 - 1] = (float) d1;
                    i16 += (int) (l1 - Test.instanceCount);
                    d1 = Test.instanceCount;
                    i19 = i18;
                    i14 *= i14;
                }
                Test.lArrFld[i17] = Test.lArrFld[i15 + 1];
                Test.iArrFld[i17] = i9;
                Test.byFld = (byte) i15;
            }
        }
        vMeth_check_sum += (b1 ? 1 : 0) + l + i9 + i10 + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d1) + i15 + i16 + i17 + i18 + l1 + i19 + FuzzerUtils.checkSum(byArr);
    }

    public static boolean bMeth() {
        double d2 = 61.69281;
        int i20 = 1, i21 = -13, i22 = -12, i23 = 49454, i24 = -4792, i25 = 48911, i26 = -37, iArr1[] = new int[N];
        float f = -70.826F;
        short[] sArr = new short[N];
        FuzzerUtils.init(iArr1, 19);
        FuzzerUtils.init(sArr, (short) 18346);
        iArr1[(-198 >>> 1) % N] = -193;
        vMeth(Test.bFld, Test.instanceCount);
        Test.iFld >>= Test.sFld;
        d2 = Test.fFld;
        Test.fFld /= (Test.iFld | 1);
        Test.instanceCount = Test.iFld1;
        for (i20 = 5; i20 < 109; i20++) {
            {
                java.io.PrintStream ax$0 = System.out;
                java.io.PrintStream ax$1 = System.err;
                java.io.PrintStream ax$2 = new java.io.PrintStream(new java.io.OutputStream() {

                    @Override
                    public void write(int b) throws java.io.IOException {
                        // DO NOTHING: DISCARD ALL OUTPUTS
                    }
                });
                System.setOut(ax$2);
                System.setErr(ax$2);
                {
                    boolean ax$5 = false;
                    for (int ax$4 = -3508; ax$4 < 2776; ax$4 += 7) {
                        if (!ax$5) {
                            ax$5 = true;
                            {
                                System.setOut(ax$0);
                                System.setErr(ax$1);
                                for (i22 = 1; i22 < 5; i22++) {
                                    d2 = Test.fFld;
                                    i23 += (int) 47954L;
                                    Test.iFld1 += i22;
                                    Test.iFld1 -= (int) Test.instanceCount;
                                    i23 = (int) -8L;
                                    i23 -= i22;
                                    Test.iFld += (int) d2;
                                    for (f = 1; f < 2; ++f) {
                                        Test.iFld = i24;
                                        Test.lArrFld[(int) (f)][(int) (f + 1)] >>= i22;
                                        d2 += Test.instanceCount;
                                        Test.instanceCount += -4;
                                        iArr1[i20 + 1] -= 2413;
                                        i21 += (int) ((long) f ^ (long) f);
                                        Test.iFld += Test.sFld;
                                        i23 += i21;
                                        sArr[(int) (f + 1)] += (short) 6365480902211307055L;
                                    }
                                    Test.instanceCount = i21;
                                    Test.lArrFld[i20 + 1][i22 + 1] = Test.iFld;
                                }
                                System.setOut(ax$2);
                                System.setErr(ax$2);
                            }
                        }
                        try {
                            System.nanoTime();
                        } catch (Throwable ax$3) {
                        } finally {
                        }
                    }
                }
                System.setOut(ax$0);
                System.setErr(ax$1);
            }
            i24 += (i20 * i20);
            Test.iFld1 -= i23;
            for (i25 = 5; i25 > i20; --i25) {
                i26 += (((i25 * i21) + i21) - f);
                i24 += (-6 + (i25 * i25));
                Test.lArrFld[i20 - 1][i25 + 1] *= Test.iFld1;
            }
            Test.lArrFld[i20 - 1][i20 + 1] = i26;
            Test.iFld += (int) d2;
            Test.iFld1 = (int) 5251707135119741949L;
            Test.bFld = Test.bFld;
        }
        long meth_res = Double.doubleToLongBits(d2) + i20 + i21 + i22 + i23 + Float.floatToIntBits(f) + i24 + i25 + i26 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {
        int i = -52, i1 = -134, i27 = -25402, i28 = 28, i29 = -11129, i30 = 104, i31 = 4, i32 = 8, i33 = 180, iArr[][] = new int[N][N];
        boolean b = true;
        double d3 = -52.20001;
        long l2 = 37513L;
        FuzzerUtils.init(iArr, -141);
        for (i = 173; i > 9; --i) {
            i1 = (int) (((Test.fFld - -61116) + (i1 + i1)) * (-(24459 * (i1 >>> i))));
            switch((i % 1) + 68) {
                case 68:
                    Test.instanceCount <<= iArr[i][i + 1];
                    if ((b = Test.bArrFld[i]) && ((Test.bArrFld[i] = (b ^ false)) != bMeth()))
                        continue;
                    for (i27 = 31; i27 > 1; i27 -= 2) {
                        switch((i27 % 7) + 100) {
                            case 100:
                                i1 += (i27 * i27);
                                for (i29 = 1; 3 > i29; i29++) {
                                    Test.instanceCount *= i1;
                                    Test.instanceCount += Test.instanceCount;
                                    Test.instanceCount += (0 + (i29 * i29));
                                    i30 -= 0;
                                    i28 = (int) d3;
                                    Test.iFld1 *= -12;
                                }
                                Test.iArrFld[i + 1] *= i30;
                                iArr[i + 1][i27 - 1] = (int) -31842L;
                                i30 += (i27 | i30);
                                Test.instanceCount += (i27 | Test.instanceCount);
                                break;
                            case 101:
                                for (i31 = 1; 3 > i31; ++i31) {
                                    i28 += (((i31 * Test.byFld) + Test.iFld) - i28);
                                    Test.iArrFld[i31 + 1] = Test.iFld;
                                    Test.iFld1 = i32;
                                    Test.byFld += (byte) Test.instanceCount;
                                    Test.iArrFld[i31] = i1;
                                }
                                if (true)
                                    continue;
                                i32 = i29;
                                i33 = 1;
                                while (++i33 < 3) {
                                    i30 += (((i33 * i1) + i28) - i29);
                                    Test.iFld = i;
                                    switch(((i33 >>> 1) % 1) + 78) {
                                        case 78:
                                            Test.fArrFld[i33 + 1] *= i31;
                                            Test.instanceCount += i29;
                                            break;
                                        default:
                                            Test.fFld = Test.instanceCount;
                                            i1 += i1;
                                            switch((i % 10) + 103) {
                                                case 103:
                                                    i1 += (int) d3;
                                                    i30 ^= i28;
                                                    break;
                                                case 104:
                                                    i32 += (((i33 * i28) + i30) - i28);
                                                    Test.instanceCount += (i33 | i31);
                                                    Test.fArrFld = Test.fArrFld;
                                                    Test.fArrFld = Test.fArrFld;
                                                    i1 = Test.byFld;
                                                    i30 *= i30;
                                                    Test.iFld = 178;
                                                    i30 = (int) d3;
                                                    Test.instanceCount = Test.byFld;
                                                    Test.bFld = b;
                                                    Test.fArrFld[i27 - 1] *= Test.instanceCount;
                                                    i28 <<= i1;
                                                    i32 = -127;
                                                    Test.iFld <<= i28;
                                                    Test.lArrFld[i][i] >>= -1;
                                                case 105:
                                                    switch(((i27 % 2) * 5) + 82) {
                                                        case 89:
                                                            l2 &= Test.instanceCount;
                                                            i1 -= i28;
                                                            i30 += (i33 - i27);
                                                            Test.fFld -= Test.instanceCount;
                                                            switch(((i27 % 2) * 5) + 17) {
                                                                case 25:
                                                                    i28 *= Test.iFld;
                                                                    Test.iFld += -2;
                                                                    break;
                                                                case 24:
                                                                default:
                                                                    Test.byFld >>= (byte) Test.sFld1;
                                                                    Test.iFld += (int) 0L;
                                                                    if (Test.bFld)
                                                                        continue;
                                                                    i1 *= Test.iFld1;
                                                                    Test.iArrFld[i27 + 1] |= i1;
                                                                    i32 &= (int) l2;
                                                                    i28 += (int) l2;
                                                                    if (b)
                                                                        continue;
                                                                    Test.fFld += i33;
                                                                    Test.lArrFld[i][i27 + 1] += -61229;
                                                                    Test.byFld = (byte) i1;
                                                                    l2 = Test.sFld;
                                                                    Test.iArrFld[i] >>= i28;
                                                                    Test.instanceCount += (((i33 * i32) + i27) - i1);
                                                            }
                                                            break;
                                                        case 92:
                                                            i32 = (int) Test.fFld;
                                                            break;
                                                        default:
                                                            Test.lArrFld[i33][i - 1] += -5;
                                                    }
                                                    break;
                                                case 106:
                                                    i28 = i30;
                                                    break;
                                                case 107:
                                                    Test.iFld -= i;
                                                    break;
                                                case 108:
                                                    Test.iFld1 = i33;
                                                case 109:
                                                    i30 ^= -3;
                                                case 110:
                                                    Test.iFld1 = (int) Test.instanceCount;
                                                case 111:
                                                    iArr[i27][i] -= (int) l2;
                                                    break;
                                                case 112:
                                                    Test.byFld = (byte) d3;
                                                    break;
                                                default:
                                                    Test.fFld -= -106;
                                            }
                                    }
                                }
                                break;
                            case 102:
                            case 103:
                                Test.fFld += (((i27 * i29) + Test.byFld) - i32);
                            case 104:
                                Test.iFld1 = i31;
                                break;
                            case 105:
                                i32 += -20955;
                                break;
                            case 106:
                                Test.iFld = i29;
                                break;
                            default:
                                i1 = 43;
                        }
                    }
            }
        }
        FuzzerUtils.out.println("i i1 b = " + i + "," + i1 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i27 i28 i29 = " + i27 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 d3 i31 = " + i30 + "," + Double.doubleToLongBits(d3) + "," + i31);
        FuzzerUtils.out.println("i32 i33 l2 = " + i32 + "," + i33 + "," + l2);
        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));
        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sFld = " + Test.instanceCount + "," + Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.sFld1 Test.byFld Test.bFld = " + Test.sFld1 + "," + Test.byFld + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iFld Test.iFld1 Test.bArrFld = " + Test.iFld + "," + Test.iFld1 + "," + FuzzerUtils.checkSum(Test.bArrFld));
        FuzzerUtils.out.println("Test.iArrFld Test.fArrFld Test.lArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    private static Boolean ax$6 = false;
}
// /////////////////////////////////////////////////////////////////////
// DEBUG  Test ->  Test
// DEBUG  main ->  main
// DEBUG  mainTest ->  mainTest
// DEBUG  bMeth ->  bMeth mainTest
// DEBUG  vMeth ->  vMeth bMeth mainTest
// DEBUG  vMeth1 ->  vMeth1 vMeth bMeth mainTest
// DEBUG  Depth = 3
// DEBUG  Classes = 1
// DEBUG  static objects = {}
