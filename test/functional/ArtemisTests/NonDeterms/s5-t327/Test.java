// Generated by Java* Fuzzer test generator (1.0.001) and Artemis program mutator.

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.Random;

public class Test {
    public static final int N = 256;

    public static long instanceCount = -103L;

    public static int iFld = -221;

    public static boolean bFld = true;

    public static byte byFld = -37;

    public float fFld = 2.972F;

    public int iFld1 = -37537;

    public static volatile int iArrFld[] = new int[N];

    public static boolean bArrFld[] = new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -4);
        FuzzerUtils.init(Test.bArrFld, true);
    }

    public static long vMeth_check_sum = 0;

    public static long vMeth1_check_sum = 0;

    public static long lMeth_check_sum = 0;

    public static long lMeth(long l) {
        Test.iFld -= Test.iFld;
        long meth_res = l;
        lMeth_check_sum += meth_res;
        return ((long) (meth_res));
    }

    public static void vMeth1() {
        if (Test.ax$8) {
            Random ax$9 = new Random();
            long[] ax$10 = new long[]{ 1672771582742454979L, -5060333345508077156L, 8239213341621399881L, -5818429137963967213L };
            Test.AxOutputRedirectionHelper.redirect();
            try {
                for (int ax$11 = 0; ax$11 < ax$10.length; ax$11++) {
                    ax$10[ax$11] = ax$9.nextLong();
                }
            } catch (Throwable ax$12) {
            } finally {
            }
            Test.AxOutputRedirectionHelper.recover();
            return;
        }
        float f = -99.6F;
        float fArr[] = new float[N];
        double d = 45.91418;
        double dArr[] = new double[N];
        int i4 = -4;
        int i5 = -89;
        int i6 = -26774;
        int i7 = 161;
        int i8 = -8;
        int i9 = -43929;
        int i10 = -14016;
        int i11 = 38;
        int i12 = -35;
        int i13 = -14;
        int i14 = -13;
        int iArr[] = new int[N];
        short s = 16475;
        byte by1 = -46;
        byte byArr[] = new byte[N];
        FuzzerUtils.init(iArr, -8612);
        FuzzerUtils.init(byArr, ((byte) (46)));
        FuzzerUtils.init(dArr, 1.82367);
        FuzzerUtils.init(fArr, 0.398F);
        f = ((float) (d));
        iArr[(i4 >>> 1) % N] <<= ((int) (lMeth(Test.instanceCount)));
        for (i5 = 1; 146 > i5; i5++) {
            s = ((short) (3678442370L));
            for (i7 = i5; i7 < 4; ++i7) {
                i6 -= ((int) (Test.instanceCount));
                if (false)
                    break;

                f += i7;
            }
            i6 = i4;
            i6 = ((int) (Test.instanceCount));
            for (i9 = i5; i9 < 4; i9++) {
                for (i11 = 1; i11 < 1; i11++) {
                    i4 = ((int) (3502207129L));
                }
                iArr = iArr;
                for (i13 = 1; i13 < 1; ++i13) {
                    i12 -= by1;
                    if (Test.bFld)
                        continue;

                    switch ((i5 % 9) + 34) {
                        case 34 :
                            i8 += i13;
                            s -= ((short) (i6));
                        case 35 :
                            i6 |= i10;
                            if (true)
                                break;

                            iArr = iArr;
                            i4 += s;
                        case 36 :
                            switch ((((14 >>> 1) % 10) * 5) + 56) {
                                case 71 :
                                    dArr[i5 - 1] *= 45165;
                                    Test.iFld ^= by1;
                                    i10 += s;
                                    i8 *= i9;
                                    i12 += ((i13 * i14) + i11) - i8;
                                    Test.instanceCount += i13;
                                    fArr[i9 - 1] = i10;
                                    d -= Test.instanceCount;
                                    if (Test.bFld) {
                                        i8 += i13;
                                    } else if (Test.bFld) {
                                        if (Test.bFld)
                                            break;

                                        i6 += ((int) (f));
                                    } else if (Test.bFld) {
                                        i6 += ((i13 * Test.iFld) + i5) - Test.instanceCount;
                                    } else {
                                        f -= Test.iFld;
                                    }
                                    break;
                                case 87 :
                                    if (Test.bFld)
                                        continue;

                                    break;
                                case 81 :
                                    Test.bFld = Test.bFld;
                                    break;
                                case 75 :
                                    Test.iFld = i6;
                                    break;
                                case 79 :
                                    i12 ^= i4;
                                    break;
                                case 61 :
                                    i4 -= ((int) (Test.instanceCount));
                                case 106 :
                                    i12 += i13;
                                    break;
                                case 73 :
                                    by1 >>= by1;
                                    break;
                                case 78 :
                                    fArr[i5] += 35712L;
                                    break;
                                case 104 :
                                    iArr[i9 - 1] += ((int) (f));
                                    break;
                            }
                            break;
                        case 37 :
                            i10 *= i4;
                            break;
                        case 38 :
                            i8 >>>= -4;
                            break;
                        case 39 :
                            i10 += i7;
                            break;
                        case 40 :
                            iArr[i5] = i6;
                            break;
                        case 41 :
                            i10 <<= ((int) (Test.instanceCount));
                        case 42 :
                            i10 >>= i10;
                            break;
                    }
                }
            }
        }
        vMeth1_check_sum += (((((((((((((((((Float.floatToIntBits(f) + Double.doubleToLongBits(d)) + i4) + i5) + i6) + s) + i7) + i8) + i9) + i10) + i11) + i12) + i13) + i14) + by1) + FuzzerUtils.checkSum(iArr)) + FuzzerUtils.checkSum(byArr)) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr))) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public static void vMeth() {
        double d1 = -109.122816;
        int i15 = 3;
        int i16 = -9;
        int i17 = 34452;
        int i18 = 5972;
        int i19 = -152;
        int i20 = -6;
        int i21 = 213;
        int i22 = -42610;
        int iArr1[] = new int[N];
        float f1 = 99.986F;
        float f2 = 59.675F;
        FuzzerUtils.init(iArr1, -19359);
        {
            final int ax$21 = i17;
            final int ax$22 = i20;
            final int ax$23 = i22;
            final int ax$24 = i15;
            try {
                for (int ax$13 = -825; ax$13 < (-825 + 1353); ax$13 += 1) {
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        if (i17 != i15) {
                            i22++;
                        }
                    } catch (Throwable ax$17) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                    Test.ax$8 = true;
                    vMeth1();
                    Test.ax$8 = false;
                    Test.AxOutputRedirectionHelper.redirect();
                    try {
                        i17++;
                        i20 += 3;
                    } catch (Throwable ax$20) {
                    } finally {
                    }
                    Test.AxOutputRedirectionHelper.recover();
                }
            } finally {
                i17 = ax$21;
                i20 = ax$22;
                i22 = ax$23;
                i15 = ax$24;
            }
        }
        vMeth1();
        d1 = Test.iFld;
        Test.iFld -= Test.iFld;
        i15 = 1;
        while ((++i15) < 78) {
            for (i16 = 7; i16 > 1; i16--) {
                Test.instanceCount += i16;
                Test.iFld += i15;
                if (false)
                    continue;

                Test.instanceCount -= ((long) (15.75425));
                Test.byFld += ((byte) (i17));
                f1 = -8;
                iArr1[i15] = Test.byFld;
                Test.iFld += i16 * i15;
            }
            f1 -= Test.instanceCount;
            Test.instanceCount -= Test.iFld;
            if (Test.bFld) {
                iArr1 = iArr1;
                i17 = i16;
                try {
                    i17 = Test.iFld % i15;
                    i17 = i15 / iArr1[i15];
                    i18 = i18 % i18;
                } catch (ArithmeticException a_e) {
                }
                Test.instanceCount = Test.iFld;
                Test.iFld += -194;
                for (i19 = 1; i19 < 7; i19 += 3) {
                    for (f2 = 1; f2 < 4; ++f2) {
                        Test.iFld += ((int) (386860068L));
                        i18 = 253;
                        i18 = i21;
                        i20 = ((int) (Test.instanceCount));
                        Test.byFld += ((byte) (-6593));
                        Test.iFld = -66;
                        iArr1[i15] = Test.iFld;
                    }
                    Test.byFld -= ((byte) (Test.instanceCount));
                    iArr1[i19 + 1] += i17;
                    i22 = 4;
                    while ((--i22) > 0) {
                        i20 += i22;
                        iArr1[i22 - 1] = 54080;
                        if (false)
                            continue;

                        Test.instanceCount -= Test.byFld;
                    }
                }
            } else {
                Test.bFld = Test.bFld;
            }
        }
        vMeth_check_sum += ((((((((((Double.doubleToLongBits(d1) + i15) + i16) + i17) + Float.floatToIntBits(f1)) + i18) + i19) + i20) + Float.floatToIntBits(f2)) + i21) + i22) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {
        int i = -14640;
        int i1 = 85;
        int i2 = -6;
        int i3 = 35384;
        int i23 = -5187;
        int i24 = 12;
        int i25 = -39568;
        int i26 = -60563;
        int i27 = -5;
        int i28 = 65;
        int i29 = -242;
        short s1 = 26892;
        long l1 = 7032023792120128410L;
        long lArr[] = new long[N];
        double d2 = -2.17531;
        float fArr1[] = new float[N];
        FuzzerUtils.init(fArr1, 2.94F);
        FuzzerUtils.init(lArr, 3456205808L);
        for (i = 9; 204 > i; i++) {
            for (i2 = i; i2 < 26; i2 += 3) {
                vMeth();
                Test.instanceCount = -24725L;
                i23 = 1;
                do {
                    Test.iFld ^= ((int) (1269464557226569009L));
                    Test.byFld += ((byte) (i23 ^ Test.instanceCount));
                    Test.instanceCount *= i2;
                    i1 += ((int) (64842L + (i23 * i23)));
                } while ((--i23) > 0 );
                Test.instanceCount += ((i2 * i2) + s1) - Test.instanceCount;
                Test.instanceCount = i;
                Test.iFld >>= ((int) (Test.instanceCount));
                fArr1 = fArr1;
            }
            for (i24 = i; i24 < 26; ++i24) {
                fFld += (-95.336F) + (i24 * i24);
            }
            Test.instanceCount ^= i2;
            for (l1 = i; l1 < 26; ++l1) {
                for (i27 = 1; i < i27; --i27) {
                    switch ((((i24 >>> 1) % 10) * 5) + 13) {
                        case 50 :
                            i1 = ((int) (Test.instanceCount));
                            i28 = 41923;
                            Test.bFld = Test.bFld;
                            d2 -= 163;
                            switch (((i % 1) * 5) + 59) {
                                case 62 :
                                    i3 >>= ((int) (9089418385346575803L));
                                    switch (((int) ((l1 % 1) + 64))) {
                                        case 64 :
                                            Test.instanceCount -= -3;
                                            s1 += ((short) (i27));
                                            i25 >>= Test.byFld;
                                            d2 += Test.iFld;
                                            Test.instanceCount += ((i27 * i1) + Test.instanceCount) - fFld;
                                            Test.byFld = ((byte) (240));
                                            if (Test.bFld) {
                                                i3 = i25;
                                                i3 += ((int) (d2));
                                                i28 = i2;
                                                switch ((((-57) >>> 1) % 9) + 45) {
                                                    case 45 :
                                                        Test.instanceCount += i28;
                                                        i26 += ((i27 * Test.instanceCount) + fFld) - fFld;
                                                        i3 = i3;
                                                        d2 *= i25;
                                                        fArr1[((int) (l1))] -= i28;
                                                        Test.byFld += ((byte) (i3));
                                                        switch ((i % 10) + 79) {
                                                            case 79 :
                                                                Test.iFld = Test.iFld;
                                                                Test.instanceCount += i27 * fFld;
                                                                Test.iArrFld[i] ^= 7;
                                                                Test.instanceCount += i24;
                                                                fFld = i1;
                                                                Test.iArrFld[i - 1] = ((int) (l1));
                                                                Test.instanceCount <<= 25059;
                                                                i28 = i24;
                                                                break;
                                                            case 80 :
                                                                i29 -= i24;
                                                                switch ((i27 % 8) + 98) {
                                                                    case 98 :
                                                                        Test.iArrFld = FuzzerUtils.int1array(N, ((int) (-21202)));
                                                                        i26 += i28;
                                                                        i28 += ((i27 * i23) + i23) - Test.instanceCount;
                                                                        try {
                                                                            i28 = i24 % Test.iArrFld[i];
                                                                            i26 = Test.iArrFld[i27] % (-1659260067);
                                                                            i26 = i28 / (-237);
                                                                        } catch (ArithmeticException a_e) {
                                                                        }
                                                                        i26 = i28;
                                                                        i25 = i24;
                                                                        Test.instanceCount = ((long) (fFld));
                                                                        switch ((i % 2) + 70) {
                                                                            case 70 :
                                                                            case 71 :
                                                                                fFld *= -1738139552L;
                                                                                break;
                                                                            default :
                                                                                Test.iArrFld[i27 + 1] -= Test.iFld;
                                                                                d2 = i24;
                                                                                if (Test.bFld)
                                                                                    continue;

                                                                                i26 += ((i27 * i24) + fFld) - i28;
                                                                                lArr = lArr;
                                                                                lArr[i27] &= i2;
                                                                        }
                                                                        i29 = ((int) (-38636L));
                                                                        lArr[i27 - 1] = i28;
                                                                        Test.iFld += i27 | i28;
                                                                        i26 *= 38119;
                                                                        break;
                                                                    case 99 :
                                                                        d2 += 4281899214L;
                                                                        Test.bFld = Test.bFld;
                                                                        break;
                                                                    case 100 :
                                                                        Test.iArrFld[i + 1] = ((int) (l1));
                                                                        break;
                                                                    case 101 :
                                                                        i25 += ((int) (Test.instanceCount));
                                                                        {
                                                                            final int ax$7 = i23;
                                                                            try {
                                                                                byte[] ax$1 = new byte[]{ ((byte) (102)), ((byte) (-12)), ((byte) (66)), ((byte) (35)) };
                                                                                byte[] ax$3 = new byte[]{ ((byte) (-39)), ((byte) (36)) };
                                                                                byte[] ax$4 = new byte[16];
                                                                                for (int ax$0 = -495; ax$0 < (-495 + 10281); ax$0 += 1) {
                                                                                    Test.AxOutputRedirectionHelper.redirect();
                                                                                    try {
                                                                                        for (int ax$5 = 0; ax$5 < i23; ax$5++) {
                                                                                            ax$3[ax$5] = ((byte) ((((ax$4[ax$5] & 0xff) + (ax$1[ax$5] & 0xff)) + 1) >> 1));
                                                                                        }
                                                                                    } catch (Throwable ax$6) {
                                                                                    } finally {
                                                                                    }
                                                                                    Test.AxOutputRedirectionHelper.recover();
                                                                                }
                                                                            } finally {
                                                                                i23 = ax$7;
                                                                            }
                                                                        }
                                                                        break;
                                                                    case 102 :
                                                                        i26 += i27 * i27;
                                                                        break;
                                                                    case 103 :
                                                                        i25 = i28;
                                                                        break;
                                                                    case 104 :
                                                                    case 105 :
                                                                        Test.iArrFld[((int) (l1))] %= ((int) (Test.instanceCount | 1));
                                                                        break;
                                                                }
                                                                break;
                                                            case 81 :
                                                                Test.iArrFld[i - 1] = Test.iFld;
                                                            case 82 :
                                                                Test.instanceCount -= 3;
                                                                break;
                                                            case 83 :
                                                                fFld = i28;
                                                                break;
                                                            case 84 :
                                                                i1 *= ((int) (fFld));
                                                            case 85 :
                                                                Test.iFld = i23;
                                                                break;
                                                            case 86 :
                                                                i3 &= 5174;
                                                                break;
                                                            case 87 :
                                                                Test.bFld = Test.bFld;
                                                                break;
                                                            case 88 :
                                                                Test.iFld = i;
                                                            default :
                                                                i1 -= ((int) (1.661F));
                                                        }
                                                        break;
                                                    case 46 :
                                                        Test.instanceCount = 6L;
                                                        break;
                                                    case 47 :
                                                    case 48 :
                                                        Test.iArrFld[i27 + 1] <<= i1;
                                                        break;
                                                    case 49 :
                                                        Test.bArrFld[i27] = Test.bFld;
                                                    case 50 :
                                                        Test.instanceCount *= 49719;
                                                    case 51 :
                                                        lArr[i] = l1;
                                                        break;
                                                    case 52 :
                                                        fFld += -30444;
                                                        break;
                                                    case 53 :
                                                        i29 = ((int) (l1));
                                                    default :
                                                        Test.instanceCount <<= i27;
                                                }
                                            } else {
                                                d2 *= l1;
                                            }
                                        default :
                                            i28 += i27 * i27;
                                    }
                                    break;
                                default :
                                    i29 += ((i27 * Test.instanceCount) + iFld1) - l1;
                            }
                        case 49 :
                            i3 += ((int) (1.875F + (i27 * i27)));
                            break;
                        case 58 :
                            fFld *= i3;
                        case 16 :
                            i1 >>>= 81;
                        case 17 :
                            Test.iArrFld[((int) (l1))] += ((int) (l1));
                            break;
                        case 18 :
                            i29 <<= i1;
                            break;
                        case 26 :
                            Test.instanceCount += i27 | ((long) (fFld));
                        case 53 :
                            Test.bFld = Test.bFld;
                            break;
                        case 37 :
                            Test.iArrFld[i27] += ((int) (Test.instanceCount));
                            break;
                        case 62 :
                            Test.instanceCount += ((i27 * fFld) + l1) - i1;
                            break;
                    }
                }
            }
        }
        FuzzerUtils.out.println((((("i i1 i2 = " + i) + ",") + i1) + ",") + i2);
        FuzzerUtils.out.println((((("i3 i23 s1 = " + i3) + ",") + i23) + ",") + s1);
        FuzzerUtils.out.println((((("i24 i25 l1 = " + i24) + ",") + i25) + ",") + l1);
        FuzzerUtils.out.println((((("i26 i27 i28 = " + i26) + ",") + i27) + ",") + i28);
        FuzzerUtils.out.println((((("d2 i29 fArr1 = " + Double.doubleToLongBits(d2)) + ",") + i29) + ",") + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));
        FuzzerUtils.out.println((((("Test.instanceCount Test.iFld Test.bFld = " + Test.instanceCount) + ",") + Test.iFld) + ",") + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println((((("Test.byFld fFld iFld1 = " + Test.byFld) + ",") + Float.floatToIntBits(fFld)) + ",") + iFld1);
        FuzzerUtils.out.println((("Test.iArrFld Test.bArrFld = " + FuzzerUtils.checkSum(Test.iArrFld)) + ",") + FuzzerUtils.checkSum(Test.bArrFld));
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }

    public static void main(String[] strArr) {
        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++) {
                _instance.mainTest(strArr);
            }
        } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
        }
    }

    public static final class AxOutputRedirectionHelper {
        private static final PrintStream devNull = new PrintStream(new OutputStream() {
            @Override
            public void write(int i) throws IOException {
            }
        });

        private static final PrintStream stdOutBk = System.out;

        private static final PrintStream stdErrBk = System.err;

        public static void redirect() {
            System.setOut(AxOutputRedirectionHelper.devNull);
            System.setErr(AxOutputRedirectionHelper.devNull);
        }

        public static void recover() {
            System.setOut(AxOutputRedirectionHelper.stdOutBk);
            System.setErr(AxOutputRedirectionHelper.stdErrBk);
        }
    }

    static Boolean ax$8 = false;
}