<?xml version="1.0"?>

<!--
  Copyright (c) 2016, 2020 IBM Corp. and others

  This program and the accompanying materials are made available under
  the terms of the Eclipse Public License 2.0 which accompanies this
  distribution and is available at https://www.eclipse.org/legal/epl-2.0/
  or the Apache License, Version 2.0 which accompanies this distribution and
  is available at https://www.apache.org/licenses/LICENSE-2.0.

  This Source Code may also be made available under the following
  Secondary Licenses when the conditions for such availability set
  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
  General Public License, version 2 with the GNU Classpath
  Exception [1] and GNU General Public License, version 2 with the
  OpenJDK Assembly Exception [2].

  [1] https://www.gnu.org/software/classpath/license.html
  [2] http://openjdk.java.net/legal/assembly-exception.html

  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
-->

<project name="J9 JSR 292 Tests" default="build" basedir=".">
	<taskdef resource='net/sf/antcontrib/antlib.xml'/>
	<description>
		Build J9 JSR 292 Tests 
	</description>
	<import file="${TEST_ROOT}/functional/build.xml"/>

	<!-- set global properties for this build -->
	<property name="DEST" value="${BUILD_ROOT}/functional/Jsr292" />

	<!--Properties for this particular build-->
	<property name="src" location="./src"/>
	<property name="build" location="./bin"/>
	<property name="bootstrapSrc" location="./bootstrap_src"/>
	<property name="bootstrapSrc_80" location="./bootstrap_src_80"/>
	<property name="bootstrapSrc_90" location="./bootstrap_src_90"/>
	<property name="bootstrapBuild" location="./bootstrap_bin"/>
	<property name="transformerListener" location="${TEST_ROOT}/Utils/src"/>
	<property name="TestUtilities" location="../TestUtilities/src"/> 

	<property name="mods_name" value="mods"/>
	<property name="modulea_name" value="mods.modulea"/>
	<property name="moduleb_name" value="mods.moduleb"/>
	<property name="modulec_name" value="mods.modulec"/>

	<property name="modulea_src" location="./modules/mods.modulea"/>
	<property name="moduleb_src" location="./modules/mods.moduleb"/>
	<property name="modulec_src" location="./modules/mods.modulec"/>
	
	<property name="mods_dir" location="./mods"/>
	<property name="modulea_bin" location="./mods/mods.modulea"/>
	<property name="moduleb_bin" location="./mods/mods.moduleb"/>
	<property name="modulec_bin" location="./mods/mods.modulec"/>
	
	<target name="init">
		<mkdir dir="${DEST}"/>
		<mkdir dir="${build}"/>
		<mkdir dir="${bootstrapBuild}"/>
		<mkdir dir="${mods_dir}"/>
		<mkdir dir="${modulea_bin}"/>
		<mkdir dir="${moduleb_bin}"/>
		<mkdir dir="${modulec_bin}"/>
	</target>
	
	<target name="compile_modulec" depends="init" description="Compile the module files in mods.modulec">
		<echo>Compiling the module files in mods.modulec</echo>
		<echo>Ant version is ${ant.version}</echo>
		<property name="compiler.javac" value="${TEST_JDK_HOME}/bin/javac" />
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:                         yes</echo>
		<echo>===executable:                   ${compiler.javac}</echo>
		<echo>===debug:                        on</echo>
		<echo>===destdir:                      ${DEST}</echo>
		<if>
			<not>
				<equals arg1="${JDK_VERSION}" arg2="8"/>
			</not>
			<then>
				<property name="modulec_path" value="--module-path ${mods_dir} -d ${modulec_bin}" />
				<javac srcdir="${modulec_src}" destdir="${modulec_bin}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${modulec_src}"/>
					<compilerarg line='${modulec_path}' />
				</javac>
			</then>
		</if>
	</target>

	<target name="compile_moduleb" depends="init" description="Compile the module files in mods.moduleb">
		<echo>Compiling the module files in mods.moduleb</echo>
		<echo>Ant version is ${ant.version}</echo>
		<property name="compiler.javac" value="${TEST_JDK_HOME}/bin/javac" />
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:                         yes</echo>
		<echo>===executable:                   ${compiler.javac}</echo>
		<echo>===debug:                        on</echo>
		<echo>===destdir:                      ${DEST}</echo>
		<if>
			<not>
				<equals arg1="${JDK_VERSION}" arg2="8"/>
			</not>
			<then>
				<property name="moduleb_path" value="--module-path ${mods_dir} -d ${moduleb_bin}" />
				<javac srcdir="${moduleb_src}" destdir="${moduleb_bin}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${moduleb_src}"/>
					<compilerarg line='${moduleb_path}' />
				</javac>
			</then>
		</if>
	</target>
	
	<target name="compile_modulea" depends="init,compile_moduleb,compile_modulec" description="Compile the module files in mods.modulea">
		<echo>Compiling the module files in mods.modulea</echo>
		<echo>Ant version is ${ant.version}</echo>
		<property name="compiler.javac" value="${TEST_JDK_HOME}/bin/javac" />
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:                         yes</echo>
		<echo>===executable:                   ${compiler.javac}</echo>
		<echo>===debug:                        on</echo>
		<echo>===destdir:                      ${DEST}</echo>
		<if>
			<not>
				<equals arg1="${JDK_VERSION}" arg2="8"/>
			</not>
			<then>
				<property name="modulea_path" value="--module-path ${mods_dir} -d ${modulea_bin}" />
				<javac srcdir="${modulea_src}" destdir="${modulea_bin}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${modulea_src}"/>
					<compilerarg line='${modulea_path}' />
				</javac>
			</then>
		</if>
	</target>

	<target name="compile_generator" depends="init" description="Compile SimpleIndyGenerator">
		<echo>Compiling Everything but IndyTest and ComplexIndyTest</echo>
		<echo>Ant version is ${ant.version}</echo>
		<property name="compiler.javac" value="${TEST_JDK_HOME}/bin/javac" />
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:                         yes</echo>
		<echo>===executable:                   ${compiler.javac}</echo>
		<echo>===debug:                        on</echo>
		<echo>===destdir:                      ${DEST}</echo>
		<javac srcdir="${src}" destdir="${build}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
			<src path="${src}"/>
			<include name="**/indyn/BootstrapMethods.java" />
			<include name="**/indyn/ComplexIndyGenerator.java" />
			<include name="**/indyn/Helper.java" />
			<include name="**/indyn/SimpleIndyGenerator.java" />
			<include name="**/CrossPackageHelper.java"/>
			<classpath>
				<pathelement location="${LIB_DIR}/asm-all.jar" />
				<pathelement location="${LIB_DIR}/junit4.jar" />
			</classpath>
		</javac>
	</target>
	
	<target name="generate_indyn" depends="compile_generator" description="Run SimpleIndyGenerator to generate bytecode" > 
		<property name="javaexecutable.java" value="${TEST_JDK_HOME}/bin/java" />
		<echo>Running SimpleIndyGenerator</echo>
		<java classname="com.ibm.j9.jsr292.indyn.SimpleIndyGenerator" failonerror="true" fork="true" logError="true" 
				jvm="${javaexecutable.java}">
			<classpath>
				<pathelement location="${LIB_DIR}/asm-all.jar" />
				<pathelement location="${build}"/>
			</classpath>
		</java>
		<copy file="GenIndyn.class" todir="${build}/com/ibm/j9/jsr292/indyn" overwrite="true" />
		<delete failonerror="true" verbose="true">
			<fileset dir=".">
				<include name="*GenIndyn.class"/>
			</fileset>
		</delete>
		<echo>Running ComplexIndyGenerator</echo>
		<java classname="com.ibm.j9.jsr292.indyn.ComplexIndyGenerator" failonerror="true" fork="true" logError="true" 
				jvm="${javaexecutable.java}">
			<classpath>
				<pathelement location="${LIB_DIR}/asm-all.jar" />
				<pathelement location="${build}"/>
			</classpath>
		</java>
		<copy file="ComplexIndy.class" todir="${build}/com/ibm/j9/jsr292/indyn" overwrite="true" />
		<delete failonerror="true" verbose="true">
			<fileset dir=".">
				<include name="*ComplexIndy.class"/>
			</fileset>
		</delete>
	</target>
	
	<target name="compile_bootstrap" depends="init" description="compile the bootstrap source " >
		<echo>Ant version is ${ant.version}</echo>
		<property name="compiler.javac" value="${TEST_JDK_HOME}/bin/javac" />
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:                         yes</echo>
		<echo>===executable:                   ${compiler.javac}</echo>
		<echo>===debug:                        on</echo>
		<echo>===destdir:                      ${DEST}</echo>
		<if>
			<equals arg1="${JDK_VERSION}" arg2="8"/>
			<then>
				<javac srcdir="${bootstrapSrc}" destdir="${bootstrapBuild}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${bootstrapSrc}"/>
					<src path="${bootstrapSrc_80}"/>
				</javac>
			</then>
			<else>
				<if>
					<equals arg1="${JCL_VERSION}" arg2="latest"/>
					<then>
						<property name="addExports" value="--add-exports java.base/jdk.internal.reflect=ALL-UNNAMED" />
					</then>
					<else>
						<property name="addExports" value="--add-exports java.base/jdk.internal.reflect=ALL-UNNAMED" />
					</else>
				</if>
				<javac srcdir="${bootstrapSrc}" destdir="${bootstrapBuild}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${bootstrapSrc}"/>
					<src path="${bootstrapSrc_90}"/>
					<compilerarg line='${addExports}' />
				</javac>
			</else>
		</if>
	</target>

	<target name="compile" depends="compile_bootstrap, generate_indyn, compile_modulea,compile_moduleb,compile_modulec" description="compile the test source " >
		<echo>Ant version is ${ant.version}</echo>
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:                         yes</echo>
		<echo>===executable:                   ${compiler.javac}</echo>
		<echo>===debug:                        on</echo>
		<echo>===destdir:                      ${DEST}</echo>
		<if>
			<equals arg1="${JDK_VERSION}" arg2="8"/>
			<then>
				<javac srcdir="${src}" destdir="${build}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${src}"/>
					<src path="${transformerListener}" />
					<src path="${TestUtilities}" /> 
					<!-- exclude files only for jdk9 -->
					<exclude name="**/MethodHandleAPI_asCollector.java" />
					<exclude name="**/MethodHandleAPI_asSpreader.java" />
					<exclude name="**/MethodHandleAPI_foldArguments.java" />
					<exclude name="**/MethodHandleAPI_withVarargs.java" />
					<exclude name="**/MethodHandleAPI_tryFinally.java" />
					<exclude name="**/MethodHandleAPI_loop.java" />
					<exclude name="**/MethodHandleAPI_iteratedLoop.java" />
					<exclude name="**/MethodHandleAPI_zero.java" />
					<exclude name="**/MethodHandleAPI_whileLoop.java" />
					<exclude name="**/MethodHandleAPI_countedLoop.java"/>
					<exclude name="**/MethodHandleAPI_arrayLength.java" />
					<exclude name="**/MethodHandleAPI_arrayConstructor.java" />
					<exclude name="**/MethodHandleAPI_dropLookupMode.java" />
					<exclude name="**/SamePackageExample.java" />
					<exclude name="**/LookupAPITests_FindClass.java" />
					<exclude name="**/LookupAPITests_AccessClass.java"/>
					<exclude name="**/LookupAPITests_DefineClass.java"/>
					<exclude name="**/LookupAPITests_DropLookupMode.java"/>
					<exclude name="**/LookupAPITests_In.java"/>
					<exclude name="**/MethodHandleAPI_privateLookupIn.java" />
					<exclude name="**/MethodHandleAPI_dropArgumentsToMatch.java" />
					
					<!-- exclude non test files for indyn test -->
					<exclude name="**/indyn/BootstrapMethods.java" />
					<exclude name="**/indyn/ComplexIndyGenerator.java" />
					<exclude name="**/indyn/Helper.java" />
					<exclude name="**/indyn/SimpleIndyGenerator.java" />
					<exclude name="**/CrossPackageHelper.java"/>
					<exclude name="**/attachAPI/**" />
					<classpath>
						<pathelement location="${bootstrapBuild}"/>
						<pathelement location="${LIB_DIR}/asm-all.jar" />
						<pathelement location="${LIB_DIR}/junit4.jar" />
						<pathelement location="${LIB_DIR}/testng.jar"/>
						<pathelement location="${LIB_DIR}/jcommander.jar"/>
					</classpath>
				</javac>
			</then>
			<else>
				<property name="addModules" value="--add-modules ${modulea_name},${moduleb_name},${modulec_name}  --module-path ${mods_dir}" />
				<javac srcdir="${src}" destdir="${build}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${src}" />
					<src path="${transformerListener}" />
					<src path="${TestUtilities}" /> 
					<compilerarg line='${addModules}' />
					<!-- exclude non test files for indyn test -->
					<exclude name="**/indyn/BootstrapMethods.java" />
					<exclude name="**/indyn/ComplexIndyGenerator.java" />
					<exclude name="**/indyn/Helper.java" />
					<exclude name="**/indyn/SimpleIndyGenerator.java" />
					<exclude name="**/CrossPackageHelper.java"/>
					<exclude name="**/attachAPI/**" />
					<classpath>
						<pathelement location="${bootstrapBuild}"/>
						<pathelement location="${LIB_DIR}/asm-all.jar" />
						<pathelement location="${LIB_DIR}/junit4.jar" />
						<pathelement location="${LIB_DIR}/testng.jar"/>
						<pathelement location="${LIB_DIR}/jcommander.jar"/>
					</classpath>
				</javac>
			</else>
		</if>
	</target>

	<target name="dist" depends="compile,dist_functional" description="generate the distribution" >
		<copy todir="${DEST}">
			<fileset dir="${src}/../" includes="*.xml,*.policy" />
			<fileset dir="${src}/../" includes="*.mk" />
		</copy>
		<copy todir="${DEST}/${mods_name}">
			<fileset dir="${mods_dir}"/>
		</copy>
		<jar jarfile="${DEST}/jsr292test.jar" filesonly="true">
			<fileset dir="${build}"/>
		</jar>
		<jar jarfile="${DEST}/jsr292bootstrap.jar" filesonly="true">
			<fileset dir="${bootstrapBuild}"/>
		</jar>
	</target>

	<target name="clean" depends="dist" description="clean up" >
		<delete dir="${build}"/>
		<delete dir="${bootstrapBuild}"/>
		<delete dir="${mods_dir}"/>
	</target>

	<target name="build" >
		<antcall target="clean" inheritall="true" />
	</target>
</project>