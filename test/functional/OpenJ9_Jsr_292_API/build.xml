<?xml version="1.0"?>
<!--
   Copyright (c) 2017, 2019 IBM Corp. and others

  This program and the accompanying materials are made available under
  the terms of the Eclipse Public License 2.0 which accompanies this
  distribution and is available at https://www.eclipse.org/legal/epl-2.0/
  or the Apache License, Version 2.0 which accompanies this distribution and
  is available at https://www.apache.org/licenses/LICENSE-2.0.

  This Source Code may also be made available under the following
  Secondary Licenses when the conditions for such availability set
  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
  General Public License, version 2 with the GNU Classpath
  Exception [1] and GNU General Public License, version 2 with the
  OpenJDK Assembly Exception [2].

  [1] https://www.gnu.org/software/classpath/license.html
  [2] http://openjdk.java.net/legal/assembly-exception.html

  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
-->
<project name="OpenJ9 JSR 292 API Tests" default="build" basedir=".">
	<taskdef resource='net/sf/antcontrib/antlib.xml'/>
	<description>
		Build OpenJ9 JSR 292 API Tests 
	</description>
	<import file="${TEST_ROOT}/functional/build.xml"/>

	<!-- set global properties for this build -->
	<property name="DEST" value="${BUILD_ROOT}/functional/OpenJ9_Jsr_292_API" />

	<!--Properties for this particular build-->
	<property name="src" location="./src"/>
	<property name="build" location="./bin"/>
	<property name="transformerListener" location="${TEST_ROOT}/Utils/src"/>

	<property name="mods_name" value="mods"/>
	<property name="modulea_name" value="mods.modulea"/>
	<property name="moduleb_name" value="mods.moduleb"/>
	<property name="modulec_name" value="mods.modulec"/>

	<property name="modulea_src" location="./modules/mods.modulea"/>
	<property name="moduleb_src" location="./modules/mods.moduleb"/>
	<property name="modulec_src" location="./modules/mods.modulec"/>
	
	<property name="mods_dir" location="./mods"/>
	<property name="modulea_bin" location="./mods/mods.modulea"/>
	<property name="moduleb_bin" location="./mods/mods.moduleb"/>
	<property name="modulec_bin" location="./mods/mods.modulec"/>
	
	<target name="init">
		<mkdir dir="${DEST}"/>
		<mkdir dir="${build}"/>
		<mkdir dir="${mods_dir}"/>
		<mkdir dir="${modulea_bin}"/>
		<mkdir dir="${moduleb_bin}"/>
		<mkdir dir="${modulec_bin}"/>
	</target>
	
	<target name="compile_modulec" depends="init" description="Compile the module files in mods.modulec">
		<echo>Compiling the module files in mods.modulec</echo>
		<echo>Ant version is ${ant.version}</echo>
		<property name="compiler.javac" value="${TEST_JDK_HOME}/bin/javac" />
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:                         yes</echo>
		<echo>===executable:                   ${compiler.javac}</echo>
		<echo>===debug:                        on</echo>
		<echo>===destdir:                      ${DEST}</echo>
		<if>
			<not>
				<equals arg1="${JDK_VERSION}" arg2="8"/>
			</not>
			<then>
				<property name="modulec_path" value="--module-path ${mods_dir} -d ${modulec_bin}" />
				<javac srcdir="${modulec_src}" destdir="${modulec_bin}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${modulec_src}"/>
					<compilerarg line='${modulec_path}' />
				</javac>
			</then>
		</if>
	</target>

	<target name="compile_moduleb" depends="init" description="Compile the module files in mods.moduleb">
		<echo>Compiling the module files in mods.moduleb</echo>
		<echo>Ant version is ${ant.version}</echo>
		<property name="compiler.javac" value="${TEST_JDK_HOME}/bin/javac" />
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:                         yes</echo>
		<echo>===executable:                   ${compiler.javac}</echo>
		<echo>===debug:                        on</echo>
		<echo>===destdir:                      ${DEST}</echo>
		<if>
			<not>
				<equals arg1="${JDK_VERSION}" arg2="8"/>
			</not>
			<then>
				<property name="moduleb_path" value="--module-path ${mods_dir} -d ${moduleb_bin}" />
				<javac srcdir="${moduleb_src}" destdir="${moduleb_bin}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${moduleb_src}"/>
					<compilerarg line='${moduleb_path}' />
				</javac>
			</then>
		</if>
	</target>
	
	<target name="compile_modulea" depends="init,compile_moduleb,compile_modulec" description="Compile the module files in mods.modulea">
		<echo>Compiling the module files in mods.modulea</echo>
		<echo>Ant version is ${ant.version}</echo>
		<property name="compiler.javac" value="${TEST_JDK_HOME}/bin/javac" />
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:                         yes</echo>
		<echo>===executable:                   ${compiler.javac}</echo>
		<echo>===debug:                        on</echo>
		<echo>===destdir:                      ${DEST}</echo>
		<if>
			<not>
				<equals arg1="${JDK_VERSION}" arg2="8"/>
			</not>
			<then>
				<property name="modulea_path" value="--module-path ${mods_dir} -d ${modulea_bin}" />
				<javac srcdir="${modulea_src}" destdir="${modulea_bin}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${modulea_src}"/>
					<compilerarg line='${modulea_path}' />
				</javac>
			</then>
		</if>
	</target>
	
	<target name="compile_tests" depends="init,compile_modulea,compile_moduleb,compile_modulec" description="compile the test source code" >
		<echo>Compiling the test source code</echo>
		<echo>Ant version is ${ant.version}</echo>
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:                         yes</echo>
		<echo>===executable:                   ${compiler.javac}</echo>
		<echo>===debug:                        on</echo>
		<echo>===destdir:                      ${DEST}</echo>
		<if>
			<not>
				<equals arg1="${JDK_VERSION}" arg2="8"/>
			</not>
			<then>
				<property name="addModules" value="--add-modules ${modulea_name},${moduleb_name},${modulec_name}  --module-path ${mods_dir}" />
				<javac srcdir="${src}" destdir="${build}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${src}"/>
					<src path="${transformerListener}" />
					<compilerarg line='${addModules}' />
					<classpath>
						<pathelement location="${TEST_ROOT}/TestConfig/lib/asm-all.jar" />
						<pathelement location="${TEST_ROOT}/TestConfig/lib/testng.jar"/>
						<pathelement location="${TEST_ROOT}/TestConfig/lib/jcommander.jar"/>
					</classpath>
				</javac>
			</then>
		</if>
	</target>

	<target name="DEST" depends="compile_tests,dist_functional" description="generate the distribution" >
		<copy todir="${DEST}">
			<fileset dir="${src}/../" includes="*.mk,*.xml" />
		</copy>
		<copy todir="${DEST}/${mods_name}">
			<fileset dir="${mods_dir}"/>
		</copy>
		<jar jarfile="${DEST}/openj9_jsr292test.jar" filesonly="true">
			<fileset dir="${build}"/>
		</jar>
	</target>

	<target name="clean" depends="DEST" description="clean up" >
		<delete dir="${build}"/>
		<delete dir="${mods_dir}"/>
	</target>

	<target name="build" >
		<if>
			<not>
				<and>
					<matches string="${JDK_VERSION}" pattern="^(9|10)$$" />
					<equals arg1="${JCL_VERSION}" arg2="current"/>
				</and>
			</not>
			<then>
				<antcall target="clean" inheritall="true" />
			</then>
		</if>
	</target>
</project>