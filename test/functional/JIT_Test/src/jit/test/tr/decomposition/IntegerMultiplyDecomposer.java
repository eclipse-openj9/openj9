/*******************************************************************************
 * Copyright (c) 2017, 2018 IBM Corp. and others
 *
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/
 * or the Apache License, Version 2.0 which accompanies this distribution and
 * is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * This Source Code may also be made available under the following
 * Secondary Licenses when the conditions for such availability set
 * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
 * General Public License, version 2 with the GNU Classpath
 * Exception [1] and GNU General Public License, version 2 with the
 * OpenJDK Assembly Exception [2].
 *
 * [1] https://www.gnu.org/software/classpath/license.html
 * [2] http://openjdk.java.net/legal/assembly-exception.html
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
 *******************************************************************************/
package jit.test.tr.decomposition;

import org.testng.annotations.Test;
import org.testng.AssertJUnit;

@Test(groups = { "level.sanity","component.jit" })
public class IntegerMultiplyDecomposer {

	// The following have been generated by the C program attached at the bottom.  These are motivated by 
	// the codegen/x86/IntegerMultiplyDecomposition file.
	
	
	// it is critical that x is a volatile. Else the JIT will constant fold away the multiply.
	// it is also critical the RHS of the multiply is a constant in the bytecode and the LHS is not.  That's
	// the scenario where the decomposition will kick in.
	volatile long x = 0;
@Test
public void test00001() { x = 0x000000007fffffffl; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0x000000007fffffffl); }
@Test
public void test00002() { x = 0x0000000080000000l; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0x0000000080000000l); }
@Test
public void test00003() { x = 0x00000000ffffffffl; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0x00000000ffffffffl); }
@Test
public void test00004() { x = 0x000000017fffffffl; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0x000000017fffffffl); }
@Test
public void test00005() { x = 0x0000000180000000l; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0x0000000180000000l); }
@Test
public void test00006() { x = 0x00000001ffffffffl; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0x00000001ffffffffl); }
@Test
public void test00007() { x = 0xffffffff7fffffffl; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0xffffffff7fffffffl); }
@Test
public void test00008() { x = 0xffffffff80000000l; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0xffffffff80000000l); }
@Test
public void test00009() { x = 0x00000001deadf00dl; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0x00000001deadf00dl); }
@Test
public void test00010() { x = 0xffffffffdeadf00dl; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0xffffffffdeadf00dl); }
@Test
public void test00011() { x = 0x7fffffffffffffffl; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffffl); }
@Test
public void test00012() { x = 0x7fffffff7fffffffl; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0x7fffffff7fffffffl); }
@Test
public void test00013() { x = 0x7fffffff80000000l; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0x7fffffff80000000l); }
@Test
public void test00014() { x = 0x7fffffffdeadf00dl; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffdeadf00dl); }
@Test
public void test00015() { x = 0x8000000000000000l; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00016() { x = 0xffffffffffffffffl; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffffl); }
@Test
public void test00017() { x = 0xfffffffffffffffel; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffffel); }
@Test
public void test00018() { x = 0xefffffffffffffffl; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0xefffffffffffffffl); }
@Test
public void test00019() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1l; AssertJUnit.assertEquals("multiply", result, 0xdeadf00ddeadf00dl); }
@Test
public void test00020() { x = 0x000000007fffffffl; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0x00000003fffffff8l); }
@Test
public void test00021() { x = 0x0000000080000000l; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0x0000000400000000l); }
@Test
public void test00022() { x = 0x00000000ffffffffl; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0x00000007fffffff8l); }
@Test
public void test00023() { x = 0x000000017fffffffl; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0x0000000bfffffff8l); }
@Test
public void test00024() { x = 0x0000000180000000l; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test00025() { x = 0x00000001ffffffffl; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0x0000000ffffffff8l); }
@Test
public void test00026() { x = 0xffffffff7fffffffl; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffbfffffff8l); }
@Test
public void test00027() { x = 0xffffffff80000000l; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffc00000000l); }
@Test
public void test00028() { x = 0x00000001deadf00dl; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0x0000000ef56f8068l); }
@Test
public void test00029() { x = 0xffffffffdeadf00dl; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffef56f8068l); }
@Test
public void test00030() { x = 0x7fffffffffffffffl; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff8l); }
@Test
public void test00031() { x = 0x7fffffff7fffffffl; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffbfffffff8l); }
@Test
public void test00032() { x = 0x7fffffff80000000l; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffc00000000l); }
@Test
public void test00033() { x = 0x7fffffffdeadf00dl; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffef56f8068l); }
@Test
public void test00034() { x = 0x8000000000000000l; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00035() { x = 0xffffffffffffffffl; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff8l); }
@Test
public void test00036() { x = 0xfffffffffffffffel; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff0l); }
@Test
public void test00037() { x = 0xefffffffffffffffl; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffff8l); }
@Test
public void test00038() { x = 0xdeadf00ddeadf00dl; long result = x * 0x8l; AssertJUnit.assertEquals("multiply", result, 0xf56f806ef56f8068l); }
@Test
public void test00039() { x = 0x000000007fffffffl; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0x0000007fffffff00l); }
@Test
public void test00040() { x = 0x0000000080000000l; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0x0000008000000000l); }
@Test
public void test00041() { x = 0x00000000ffffffffl; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0x000000ffffffff00l); }
@Test
public void test00042() { x = 0x000000017fffffffl; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0x0000017fffffff00l); }
@Test
public void test00043() { x = 0x0000000180000000l; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0x0000018000000000l); }
@Test
public void test00044() { x = 0x00000001ffffffffl; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0x000001ffffffff00l); }
@Test
public void test00045() { x = 0xffffffff7fffffffl; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0xffffff7fffffff00l); }
@Test
public void test00046() { x = 0xffffffff80000000l; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0xffffff8000000000l); }
@Test
public void test00047() { x = 0x00000001deadf00dl; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0x000001deadf00d00l); }
@Test
public void test00048() { x = 0xffffffffdeadf00dl; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0xffffffdeadf00d00l); }
@Test
public void test00049() { x = 0x7fffffffffffffffl; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff00l); }
@Test
public void test00050() { x = 0x7fffffff7fffffffl; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0xffffff7fffffff00l); }
@Test
public void test00051() { x = 0x7fffffff80000000l; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0xffffff8000000000l); }
@Test
public void test00052() { x = 0x7fffffffdeadf00dl; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0xffffffdeadf00d00l); }
@Test
public void test00053() { x = 0x8000000000000000l; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00054() { x = 0xffffffffffffffffl; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff00l); }
@Test
public void test00055() { x = 0xfffffffffffffffel; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe00l); }
@Test
public void test00056() { x = 0xefffffffffffffffl; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff00l); }
@Test
public void test00057() { x = 0xdeadf00ddeadf00dl; long result = x * 0x100l; AssertJUnit.assertEquals("multiply", result, 0xadf00ddeadf00d00l); }
@Test
public void test00058() { x = 0x000000007fffffffl; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffff00000000l); }
@Test
public void test00059() { x = 0x0000000080000000l; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00060() { x = 0x00000000ffffffffl; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffff00000000l); }
@Test
public void test00061() { x = 0x000000017fffffffl; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffff00000000l); }
@Test
public void test00062() { x = 0x0000000180000000l; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00063() { x = 0x00000001ffffffffl; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffff00000000l); }
@Test
public void test00064() { x = 0xffffffff7fffffffl; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffff00000000l); }
@Test
public void test00065() { x = 0xffffffff80000000l; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00066() { x = 0x00000001deadf00dl; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0xdeadf00d00000000l); }
@Test
public void test00067() { x = 0xffffffffdeadf00dl; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0xdeadf00d00000000l); }
@Test
public void test00068() { x = 0x7fffffffffffffffl; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffff00000000l); }
@Test
public void test00069() { x = 0x7fffffff7fffffffl; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffff00000000l); }
@Test
public void test00070() { x = 0x7fffffff80000000l; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00071() { x = 0x7fffffffdeadf00dl; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0xdeadf00d00000000l); }
@Test
public void test00072() { x = 0x8000000000000000l; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00073() { x = 0xffffffffffffffffl; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffff00000000l); }
@Test
public void test00074() { x = 0xfffffffffffffffel; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffe00000000l); }
@Test
public void test00075() { x = 0xefffffffffffffffl; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffff00000000l); }
@Test
public void test00076() { x = 0xdeadf00ddeadf00dl; long result = x * 0x100000000l; AssertJUnit.assertEquals("multiply", result, 0xdeadf00d00000000l); }
@Test
public void test00077() { x = 0x000000007fffffffl; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff800000000l); }
@Test
public void test00078() { x = 0x0000000080000000l; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00079() { x = 0x00000000ffffffffl; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff800000000l); }
@Test
public void test00080() { x = 0x000000017fffffffl; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff800000000l); }
@Test
public void test00081() { x = 0x0000000180000000l; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00082() { x = 0x00000001ffffffffl; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff800000000l); }
@Test
public void test00083() { x = 0xffffffff7fffffffl; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff800000000l); }
@Test
public void test00084() { x = 0xffffffff80000000l; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00085() { x = 0x00000001deadf00dl; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0xf56f806800000000l); }
@Test
public void test00086() { x = 0xffffffffdeadf00dl; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0xf56f806800000000l); }
@Test
public void test00087() { x = 0x7fffffffffffffffl; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff800000000l); }
@Test
public void test00088() { x = 0x7fffffff7fffffffl; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff800000000l); }
@Test
public void test00089() { x = 0x7fffffff80000000l; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00090() { x = 0x7fffffffdeadf00dl; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0xf56f806800000000l); }
@Test
public void test00091() { x = 0x8000000000000000l; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00092() { x = 0xffffffffffffffffl; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff800000000l); }
@Test
public void test00093() { x = 0xfffffffffffffffel; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff000000000l); }
@Test
public void test00094() { x = 0xefffffffffffffffl; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff800000000l); }
@Test
public void test00095() { x = 0xdeadf00ddeadf00dl; long result = x * 0x800000000l; AssertJUnit.assertEquals("multiply", result, 0xf56f806800000000l); }
@Test
public void test00096() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0xffffffff80000001l); }
@Test
public void test00097() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0xffffffff80000000l); }
@Test
public void test00098() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0xffffffff00000001l); }
@Test
public void test00099() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0xfffffffe80000001l); }
@Test
public void test00100() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0xfffffffe80000000l); }
@Test
public void test00101() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0xfffffffe00000001l); }
@Test
public void test00102() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0x0000000080000001l); }
@Test
public void test00103() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0x0000000080000000l); }
@Test
public void test00104() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0xfffffffe21520ff3l); }
@Test
public void test00105() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0x0000000021520ff3l); }
@Test
public void test00106() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000001l); }
@Test
public void test00107() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0x8000000080000001l); }
@Test
public void test00108() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0x8000000080000000l); }
@Test
public void test00109() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0x8000000021520ff3l); }
@Test
public void test00110() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00111() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000001l); }
@Test
public void test00112() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000002l); }
@Test
public void test00113() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0x1000000000000001l); }
@Test
public void test00114() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffffl; AssertJUnit.assertEquals("multiply", result, 0x21520ff221520ff3l); }
@Test
public void test00115() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffc00000008l); }
@Test
public void test00116() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffc00000000l); }
@Test
public void test00117() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0xfffffff800000008l); }
@Test
public void test00118() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000008l); }
@Test
public void test00119() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test00120() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0xfffffff000000008l); }
@Test
public void test00121() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0x0000000400000008l); }
@Test
public void test00122() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0x0000000400000000l); }
@Test
public void test00123() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0xfffffff10a907f98l); }
@Test
public void test00124() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0x000000010a907f98l); }
@Test
public void test00125() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000008l); }
@Test
public void test00126() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0x0000000400000008l); }
@Test
public void test00127() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0x0000000400000000l); }
@Test
public void test00128() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0x000000010a907f98l); }
@Test
public void test00129() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00130() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000008l); }
@Test
public void test00131() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000010l); }
@Test
public void test00132() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000008l); }
@Test
public void test00133() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffff8l; AssertJUnit.assertEquals("multiply", result, 0x0a907f910a907f98l); }
@Test
public void test00134() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0xffffff8000000100l); }
@Test
public void test00135() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0xffffff8000000000l); }
@Test
public void test00136() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0xffffff0000000100l); }
@Test
public void test00137() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8000000100l); }
@Test
public void test00138() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8000000000l); }
@Test
public void test00139() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0000000100l); }
@Test
public void test00140() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0x0000008000000100l); }
@Test
public void test00141() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0x0000008000000000l); }
@Test
public void test00142() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe21520ff300l); }
@Test
public void test00143() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0x00000021520ff300l); }
@Test
public void test00144() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000100l); }
@Test
public void test00145() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0x0000008000000100l); }
@Test
public void test00146() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0x0000008000000000l); }
@Test
public void test00147() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0x00000021520ff300l); }
@Test
public void test00148() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00149() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000100l); }
@Test
public void test00150() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000200l); }
@Test
public void test00151() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000100l); }
@Test
public void test00152() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff00l; AssertJUnit.assertEquals("multiply", result, 0x520ff221520ff300l); }
@Test
public void test00153() { x = 0x000000007fffffffl; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000100000000l); }
@Test
public void test00154() { x = 0x0000000080000000l; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00155() { x = 0x00000000ffffffffl; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000100000000l); }
@Test
public void test00156() { x = 0x000000017fffffffl; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000100000000l); }
@Test
public void test00157() { x = 0x0000000180000000l; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00158() { x = 0x00000001ffffffffl; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000100000000l); }
@Test
public void test00159() { x = 0xffffffff7fffffffl; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000100000000l); }
@Test
public void test00160() { x = 0xffffffff80000000l; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00161() { x = 0x00000001deadf00dl; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x21520ff300000000l); }
@Test
public void test00162() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x21520ff300000000l); }
@Test
public void test00163() { x = 0x7fffffffffffffffl; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000100000000l); }
@Test
public void test00164() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000100000000l); }
@Test
public void test00165() { x = 0x7fffffff80000000l; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00166() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x21520ff300000000l); }
@Test
public void test00167() { x = 0x8000000000000000l; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00168() { x = 0xffffffffffffffffl; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000100000000l); }
@Test
public void test00169() { x = 0xfffffffffffffffel; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000200000000l); }
@Test
public void test00170() { x = 0xefffffffffffffffl; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000100000000l); }
@Test
public void test00171() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffff00000000l; AssertJUnit.assertEquals("multiply", result, 0x21520ff300000000l); }
@Test
public void test00172() { x = 0x000000007fffffffl; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000800000000l); }
@Test
public void test00173() { x = 0x0000000080000000l; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00174() { x = 0x00000000ffffffffl; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000800000000l); }
@Test
public void test00175() { x = 0x000000017fffffffl; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000800000000l); }
@Test
public void test00176() { x = 0x0000000180000000l; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00177() { x = 0x00000001ffffffffl; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000800000000l); }
@Test
public void test00178() { x = 0xffffffff7fffffffl; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000800000000l); }
@Test
public void test00179() { x = 0xffffffff80000000l; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00180() { x = 0x00000001deadf00dl; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0a907f9800000000l); }
@Test
public void test00181() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0a907f9800000000l); }
@Test
public void test00182() { x = 0x7fffffffffffffffl; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000800000000l); }
@Test
public void test00183() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000800000000l); }
@Test
public void test00184() { x = 0x7fffffff80000000l; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00185() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0a907f9800000000l); }
@Test
public void test00186() { x = 0x8000000000000000l; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00187() { x = 0xffffffffffffffffl; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000800000000l); }
@Test
public void test00188() { x = 0xfffffffffffffffel; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001000000000l); }
@Test
public void test00189() { x = 0xefffffffffffffffl; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000800000000l); }
@Test
public void test00190() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffff800000000l; AssertJUnit.assertEquals("multiply", result, 0x0a907f9800000000l); }
@Test
public void test00191() { x = 0x000000007fffffffl; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0x000000017ffffffdl); }
@Test
public void test00192() { x = 0x0000000080000000l; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0x0000000180000000l); }
@Test
public void test00193() { x = 0x00000000ffffffffl; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0x00000002fffffffdl); }
@Test
public void test00194() { x = 0x000000017fffffffl; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0x000000047ffffffdl); }
@Test
public void test00195() { x = 0x0000000180000000l; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0x0000000480000000l); }
@Test
public void test00196() { x = 0x00000001ffffffffl; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0x00000005fffffffdl); }
@Test
public void test00197() { x = 0xffffffff7fffffffl; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0xfffffffe7ffffffdl); }
@Test
public void test00198() { x = 0xffffffff80000000l; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0xfffffffe80000000l); }
@Test
public void test00199() { x = 0x00000001deadf00dl; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0x000000059c09d027l); }
@Test
public void test00200() { x = 0xffffffffdeadf00dl; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0xffffffff9c09d027l); }
@Test
public void test00201() { x = 0x7fffffffffffffffl; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffffdl); }
@Test
public void test00202() { x = 0x7fffffff7fffffffl; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffe7ffffffdl); }
@Test
public void test00203() { x = 0x7fffffff80000000l; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffe80000000l); }
@Test
public void test00204() { x = 0x7fffffffdeadf00dl; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0x7fffffff9c09d027l); }
@Test
public void test00205() { x = 0x8000000000000000l; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00206() { x = 0xffffffffffffffffl; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffffdl); }
@Test
public void test00207() { x = 0xfffffffffffffffel; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffffal); }
@Test
public void test00208() { x = 0xefffffffffffffffl; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0xcffffffffffffffdl); }
@Test
public void test00209() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3l; AssertJUnit.assertEquals("multiply", result, 0x9c09d0299c09d027l); }
@Test
public void test00210() { x = 0x000000007fffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x0000000bffffffe8l); }
@Test
public void test00211() { x = 0x0000000080000000l; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test00212() { x = 0x00000000ffffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x00000017ffffffe8l); }
@Test
public void test00213() { x = 0x000000017fffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x00000023ffffffe8l); }
@Test
public void test00214() { x = 0x0000000180000000l; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test00215() { x = 0x00000001ffffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x0000002fffffffe8l); }
@Test
public void test00216() { x = 0xffffffff7fffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xfffffff3ffffffe8l); }
@Test
public void test00217() { x = 0xffffffff80000000l; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test00218() { x = 0x00000001deadf00dl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x0000002ce04e8138l); }
@Test
public void test00219() { x = 0xffffffffdeadf00dl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xfffffffce04e8138l); }
@Test
public void test00220() { x = 0x7fffffffffffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe8l); }
@Test
public void test00221() { x = 0x7fffffff7fffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xfffffff3ffffffe8l); }
@Test
public void test00222() { x = 0x7fffffff80000000l; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test00223() { x = 0x7fffffffdeadf00dl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xfffffffce04e8138l); }
@Test
public void test00224() { x = 0x8000000000000000l; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00225() { x = 0xffffffffffffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe8l); }
@Test
public void test00226() { x = 0xfffffffffffffffel; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd0l); }
@Test
public void test00227() { x = 0xefffffffffffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffe8l); }
@Test
public void test00228() { x = 0xdeadf00ddeadf00dl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xe04e814ce04e8138l); }
@Test
public void test00229() { x = 0x000000007fffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x0000017ffffffd00l); }
@Test
public void test00230() { x = 0x0000000080000000l; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x0000018000000000l); }
@Test
public void test00231() { x = 0x00000000ffffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x000002fffffffd00l); }
@Test
public void test00232() { x = 0x000000017fffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x0000047ffffffd00l); }
@Test
public void test00233() { x = 0x0000000180000000l; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x0000048000000000l); }
@Test
public void test00234() { x = 0x00000001ffffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x000005fffffffd00l); }
@Test
public void test00235() { x = 0xffffffff7fffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7ffffffd00l); }
@Test
public void test00236() { x = 0xffffffff80000000l; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8000000000l); }
@Test
public void test00237() { x = 0x00000001deadf00dl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x0000059c09d02700l); }
@Test
public void test00238() { x = 0xffffffffdeadf00dl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xffffff9c09d02700l); }
@Test
public void test00239() { x = 0x7fffffffffffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd00l); }
@Test
public void test00240() { x = 0x7fffffff7fffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7ffffffd00l); }
@Test
public void test00241() { x = 0x7fffffff80000000l; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8000000000l); }
@Test
public void test00242() { x = 0x7fffffffdeadf00dl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xffffff9c09d02700l); }
@Test
public void test00243() { x = 0x8000000000000000l; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00244() { x = 0xffffffffffffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd00l); }
@Test
public void test00245() { x = 0xfffffffffffffffel; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffa00l); }
@Test
public void test00246() { x = 0xefffffffffffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd00l); }
@Test
public void test00247() { x = 0xdeadf00ddeadf00dl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x09d0299c09d02700l); }
@Test
public void test00248() { x = 0x000000007fffffffl; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffd00000000l); }
@Test
public void test00249() { x = 0x0000000080000000l; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00250() { x = 0x00000000ffffffffl; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd00000000l); }
@Test
public void test00251() { x = 0x000000017fffffffl; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffd00000000l); }
@Test
public void test00252() { x = 0x0000000180000000l; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00253() { x = 0x00000001ffffffffl; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd00000000l); }
@Test
public void test00254() { x = 0xffffffff7fffffffl; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffd00000000l); }
@Test
public void test00255() { x = 0xffffffff80000000l; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00256() { x = 0x00000001deadf00dl; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0x9c09d02700000000l); }
@Test
public void test00257() { x = 0xffffffffdeadf00dl; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0x9c09d02700000000l); }
@Test
public void test00258() { x = 0x7fffffffffffffffl; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd00000000l); }
@Test
public void test00259() { x = 0x7fffffff7fffffffl; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffd00000000l); }
@Test
public void test00260() { x = 0x7fffffff80000000l; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00261() { x = 0x7fffffffdeadf00dl; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0x9c09d02700000000l); }
@Test
public void test00262() { x = 0x8000000000000000l; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00263() { x = 0xffffffffffffffffl; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd00000000l); }
@Test
public void test00264() { x = 0xfffffffffffffffel; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000000l); }
@Test
public void test00265() { x = 0xefffffffffffffffl; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd00000000l); }
@Test
public void test00266() { x = 0xdeadf00ddeadf00dl; long result = x * 0x300000000l; AssertJUnit.assertEquals("multiply", result, 0x9c09d02700000000l); }
@Test
public void test00267() { x = 0x000000007fffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test00268() { x = 0x0000000080000000l; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00269() { x = 0x00000000ffffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test00270() { x = 0x000000017fffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test00271() { x = 0x0000000180000000l; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00272() { x = 0x00000001ffffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test00273() { x = 0xffffffff7fffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test00274() { x = 0xffffffff80000000l; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00275() { x = 0x00000001deadf00dl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xe04e813800000000l); }
@Test
public void test00276() { x = 0xffffffffdeadf00dl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xe04e813800000000l); }
@Test
public void test00277() { x = 0x7fffffffffffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test00278() { x = 0x7fffffff7fffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test00279() { x = 0x7fffffff80000000l; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00280() { x = 0x7fffffffdeadf00dl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xe04e813800000000l); }
@Test
public void test00281() { x = 0x8000000000000000l; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00282() { x = 0xffffffffffffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test00283() { x = 0xfffffffffffffffel; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test00284() { x = 0xefffffffffffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test00285() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xe04e813800000000l); }
@Test
public void test00286() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0xfffffffe80000003l); }
@Test
public void test00287() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0xfffffffe80000000l); }
@Test
public void test00288() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0xfffffffd00000003l); }
@Test
public void test00289() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0xfffffffb80000003l); }
@Test
public void test00290() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0xfffffffb80000000l); }
@Test
public void test00291() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000003l); }
@Test
public void test00292() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0x0000000180000003l); }
@Test
public void test00293() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0x0000000180000000l); }
@Test
public void test00294() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0xfffffffa63f62fd9l); }
@Test
public void test00295() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0x0000000063f62fd9l); }
@Test
public void test00296() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000003l); }
@Test
public void test00297() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0x8000000180000003l); }
@Test
public void test00298() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0x8000000180000000l); }
@Test
public void test00299() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0x8000000063f62fd9l); }
@Test
public void test00300() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00301() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000003l); }
@Test
public void test00302() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000006l); }
@Test
public void test00303() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0x3000000000000003l); }
@Test
public void test00304() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffffdl; AssertJUnit.assertEquals("multiply", result, 0x63f62fd663f62fd9l); }
@Test
public void test00305() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000018l); }
@Test
public void test00306() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test00307() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000018l); }
@Test
public void test00308() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000018l); }
@Test
public void test00309() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test00310() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000018l); }
@Test
public void test00311() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000018l); }
@Test
public void test00312() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test00313() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffd31fb17ec8l); }
@Test
public void test00314() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x000000031fb17ec8l); }
@Test
public void test00315() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000018l); }
@Test
public void test00316() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000018l); }
@Test
public void test00317() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test00318() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x000000031fb17ec8l); }
@Test
public void test00319() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00320() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000018l); }
@Test
public void test00321() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000030l); }
@Test
public void test00322() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000018l); }
@Test
public void test00323() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x1fb17eb31fb17ec8l); }
@Test
public void test00324() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8000000300l); }
@Test
public void test00325() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8000000000l); }
@Test
public void test00326() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000300l); }
@Test
public void test00327() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffb8000000300l); }
@Test
public void test00328() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffb8000000000l); }
@Test
public void test00329() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa0000000300l); }
@Test
public void test00330() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000018000000300l); }
@Test
public void test00331() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000018000000000l); }
@Test
public void test00332() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa63f62fd900l); }
@Test
public void test00333() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x00000063f62fd900l); }
@Test
public void test00334() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000300l); }
@Test
public void test00335() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000018000000300l); }
@Test
public void test00336() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000018000000000l); }
@Test
public void test00337() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x00000063f62fd900l); }
@Test
public void test00338() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00339() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000300l); }
@Test
public void test00340() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000600l); }
@Test
public void test00341() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000300l); }
@Test
public void test00342() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xf62fd663f62fd900l); }
@Test
public void test00343() { x = 0x000000007fffffffl; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000300000000l); }
@Test
public void test00344() { x = 0x0000000080000000l; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00345() { x = 0x00000000ffffffffl; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000300000000l); }
@Test
public void test00346() { x = 0x000000017fffffffl; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000300000000l); }
@Test
public void test00347() { x = 0x0000000180000000l; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00348() { x = 0x00000001ffffffffl; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000300000000l); }
@Test
public void test00349() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000300000000l); }
@Test
public void test00350() { x = 0xffffffff80000000l; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00351() { x = 0x00000001deadf00dl; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x63f62fd900000000l); }
@Test
public void test00352() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x63f62fd900000000l); }
@Test
public void test00353() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000300000000l); }
@Test
public void test00354() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000300000000l); }
@Test
public void test00355() { x = 0x7fffffff80000000l; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00356() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x63f62fd900000000l); }
@Test
public void test00357() { x = 0x8000000000000000l; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00358() { x = 0xffffffffffffffffl; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000300000000l); }
@Test
public void test00359() { x = 0xfffffffffffffffel; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000600000000l); }
@Test
public void test00360() { x = 0xefffffffffffffffl; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000300000000l); }
@Test
public void test00361() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x63f62fd900000000l); }
@Test
public void test00362() { x = 0x000000007fffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test00363() { x = 0x0000000080000000l; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00364() { x = 0x00000000ffffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test00365() { x = 0x000000017fffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test00366() { x = 0x0000000180000000l; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00367() { x = 0x00000001ffffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test00368() { x = 0xffffffff7fffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test00369() { x = 0xffffffff80000000l; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00370() { x = 0x00000001deadf00dl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x1fb17ec800000000l); }
@Test
public void test00371() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x1fb17ec800000000l); }
@Test
public void test00372() { x = 0x7fffffffffffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test00373() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test00374() { x = 0x7fffffff80000000l; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00375() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x1fb17ec800000000l); }
@Test
public void test00376() { x = 0x8000000000000000l; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00377() { x = 0xffffffffffffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test00378() { x = 0xfffffffffffffffel; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test00379() { x = 0xefffffffffffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test00380() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x1fb17ec800000000l); }
@Test
public void test00381() { x = 0x000000007fffffffl; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0x000000027ffffffbl); }
@Test
public void test00382() { x = 0x0000000080000000l; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0x0000000280000000l); }
@Test
public void test00383() { x = 0x00000000ffffffffl; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0x00000004fffffffbl); }
@Test
public void test00384() { x = 0x000000017fffffffl; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0x000000077ffffffbl); }
@Test
public void test00385() { x = 0x0000000180000000l; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0x0000000780000000l); }
@Test
public void test00386() { x = 0x00000001ffffffffl; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0x00000009fffffffbl); }
@Test
public void test00387() { x = 0xffffffff7fffffffl; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd7ffffffbl); }
@Test
public void test00388() { x = 0xffffffff80000000l; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd80000000l); }
@Test
public void test00389() { x = 0x00000001deadf00dl; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0x000000095965b041l); }
@Test
public void test00390() { x = 0xffffffffdeadf00dl; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0xffffffff5965b041l); }
@Test
public void test00391() { x = 0x7fffffffffffffffl; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffffbl); }
@Test
public void test00392() { x = 0x7fffffff7fffffffl; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffd7ffffffbl); }
@Test
public void test00393() { x = 0x7fffffff80000000l; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffd80000000l); }
@Test
public void test00394() { x = 0x7fffffffdeadf00dl; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0x7fffffff5965b041l); }
@Test
public void test00395() { x = 0x8000000000000000l; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00396() { x = 0xffffffffffffffffl; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffffbl); }
@Test
public void test00397() { x = 0xfffffffffffffffel; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff6l); }
@Test
public void test00398() { x = 0xefffffffffffffffl; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0xaffffffffffffffbl); }
@Test
public void test00399() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5l; AssertJUnit.assertEquals("multiply", result, 0x5965b0455965b041l); }
@Test
public void test00400() { x = 0x000000007fffffffl; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0x00000013ffffffd8l); }
@Test
public void test00401() { x = 0x0000000080000000l; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000000l); }
@Test
public void test00402() { x = 0x00000000ffffffffl; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0x00000027ffffffd8l); }
@Test
public void test00403() { x = 0x000000017fffffffl; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0x0000003bffffffd8l); }
@Test
public void test00404() { x = 0x0000000180000000l; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0x0000003c00000000l); }
@Test
public void test00405() { x = 0x00000001ffffffffl; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0x0000004fffffffd8l); }
@Test
public void test00406() { x = 0xffffffff7fffffffl; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0xffffffebffffffd8l); }
@Test
public void test00407() { x = 0xffffffff80000000l; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000000l); }
@Test
public void test00408() { x = 0x00000001deadf00dl; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0x0000004acb2d8208l); }
@Test
public void test00409() { x = 0xffffffffdeadf00dl; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0xfffffffacb2d8208l); }
@Test
public void test00410() { x = 0x7fffffffffffffffl; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd8l); }
@Test
public void test00411() { x = 0x7fffffff7fffffffl; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0xffffffebffffffd8l); }
@Test
public void test00412() { x = 0x7fffffff80000000l; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000000l); }
@Test
public void test00413() { x = 0x7fffffffdeadf00dl; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0xfffffffacb2d8208l); }
@Test
public void test00414() { x = 0x8000000000000000l; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00415() { x = 0xffffffffffffffffl; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd8l); }
@Test
public void test00416() { x = 0xfffffffffffffffel; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffb0l); }
@Test
public void test00417() { x = 0xefffffffffffffffl; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffd8l); }
@Test
public void test00418() { x = 0xdeadf00ddeadf00dl; long result = x * 0x28l; AssertJUnit.assertEquals("multiply", result, 0xcb2d822acb2d8208l); }
@Test
public void test00419() { x = 0x000000007fffffffl; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0x0000027ffffffb00l); }
@Test
public void test00420() { x = 0x0000000080000000l; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0x0000028000000000l); }
@Test
public void test00421() { x = 0x00000000ffffffffl; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0x000004fffffffb00l); }
@Test
public void test00422() { x = 0x000000017fffffffl; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0x0000077ffffffb00l); }
@Test
public void test00423() { x = 0x0000000180000000l; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0x0000078000000000l); }
@Test
public void test00424() { x = 0x00000001ffffffffl; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0x000009fffffffb00l); }
@Test
public void test00425() { x = 0xffffffff7fffffffl; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7ffffffb00l); }
@Test
public void test00426() { x = 0xffffffff80000000l; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8000000000l); }
@Test
public void test00427() { x = 0x00000001deadf00dl; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0x0000095965b04100l); }
@Test
public void test00428() { x = 0xffffffffdeadf00dl; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0xffffff5965b04100l); }
@Test
public void test00429() { x = 0x7fffffffffffffffl; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffb00l); }
@Test
public void test00430() { x = 0x7fffffff7fffffffl; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7ffffffb00l); }
@Test
public void test00431() { x = 0x7fffffff80000000l; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8000000000l); }
@Test
public void test00432() { x = 0x7fffffffdeadf00dl; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0xffffff5965b04100l); }
@Test
public void test00433() { x = 0x8000000000000000l; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00434() { x = 0xffffffffffffffffl; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffb00l); }
@Test
public void test00435() { x = 0xfffffffffffffffel; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff600l); }
@Test
public void test00436() { x = 0xefffffffffffffffl; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffb00l); }
@Test
public void test00437() { x = 0xdeadf00ddeadf00dl; long result = x * 0x500l; AssertJUnit.assertEquals("multiply", result, 0x65b0455965b04100l); }
@Test
public void test00438() { x = 0x000000007fffffffl; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffb00000000l); }
@Test
public void test00439() { x = 0x0000000080000000l; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00440() { x = 0x00000000ffffffffl; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb00000000l); }
@Test
public void test00441() { x = 0x000000017fffffffl; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffb00000000l); }
@Test
public void test00442() { x = 0x0000000180000000l; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00443() { x = 0x00000001ffffffffl; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb00000000l); }
@Test
public void test00444() { x = 0xffffffff7fffffffl; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffb00000000l); }
@Test
public void test00445() { x = 0xffffffff80000000l; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00446() { x = 0x00000001deadf00dl; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0x5965b04100000000l); }
@Test
public void test00447() { x = 0xffffffffdeadf00dl; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0x5965b04100000000l); }
@Test
public void test00448() { x = 0x7fffffffffffffffl; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb00000000l); }
@Test
public void test00449() { x = 0x7fffffff7fffffffl; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffb00000000l); }
@Test
public void test00450() { x = 0x7fffffff80000000l; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00451() { x = 0x7fffffffdeadf00dl; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0x5965b04100000000l); }
@Test
public void test00452() { x = 0x8000000000000000l; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00453() { x = 0xffffffffffffffffl; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb00000000l); }
@Test
public void test00454() { x = 0xfffffffffffffffel; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000000l); }
@Test
public void test00455() { x = 0xefffffffffffffffl; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb00000000l); }
@Test
public void test00456() { x = 0xdeadf00ddeadf00dl; long result = x * 0x500000000l; AssertJUnit.assertEquals("multiply", result, 0x5965b04100000000l); }
@Test
public void test00457() { x = 0x000000007fffffffl; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000000l); }
@Test
public void test00458() { x = 0x0000000080000000l; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00459() { x = 0x00000000ffffffffl; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000000l); }
@Test
public void test00460() { x = 0x000000017fffffffl; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000000l); }
@Test
public void test00461() { x = 0x0000000180000000l; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00462() { x = 0x00000001ffffffffl; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000000l); }
@Test
public void test00463() { x = 0xffffffff7fffffffl; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000000l); }
@Test
public void test00464() { x = 0xffffffff80000000l; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00465() { x = 0x00000001deadf00dl; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0xcb2d820800000000l); }
@Test
public void test00466() { x = 0xffffffffdeadf00dl; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0xcb2d820800000000l); }
@Test
public void test00467() { x = 0x7fffffffffffffffl; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000000l); }
@Test
public void test00468() { x = 0x7fffffff7fffffffl; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000000l); }
@Test
public void test00469() { x = 0x7fffffff80000000l; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00470() { x = 0x7fffffffdeadf00dl; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0xcb2d820800000000l); }
@Test
public void test00471() { x = 0x8000000000000000l; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00472() { x = 0xffffffffffffffffl; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000000l); }
@Test
public void test00473() { x = 0xfffffffffffffffel; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000000l); }
@Test
public void test00474() { x = 0xefffffffffffffffl; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000000l); }
@Test
public void test00475() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2800000000l; AssertJUnit.assertEquals("multiply", result, 0xcb2d820800000000l); }
@Test
public void test00476() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0xfffffffd80000005l); }
@Test
public void test00477() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0xfffffffd80000000l); }
@Test
public void test00478() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0xfffffffb00000005l); }
@Test
public void test00479() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0xfffffff880000005l); }
@Test
public void test00480() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0xfffffff880000000l); }
@Test
public void test00481() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000005l); }
@Test
public void test00482() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0x0000000280000005l); }
@Test
public void test00483() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0x0000000280000000l); }
@Test
public void test00484() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0xfffffff6a69a4fbfl); }
@Test
public void test00485() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0x00000000a69a4fbfl); }
@Test
public void test00486() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000005l); }
@Test
public void test00487() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0x8000000280000005l); }
@Test
public void test00488() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0x8000000280000000l); }
@Test
public void test00489() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0x80000000a69a4fbfl); }
@Test
public void test00490() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00491() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000005l); }
@Test
public void test00492() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0x000000000000000al); }
@Test
public void test00493() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0x5000000000000005l); }
@Test
public void test00494() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffffbl; AssertJUnit.assertEquals("multiply", result, 0xa69a4fbaa69a4fbfl); }
@Test
public void test00495() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000028l); }
@Test
public void test00496() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000000l); }
@Test
public void test00497() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000028l); }
@Test
public void test00498() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0xffffffc400000028l); }
@Test
public void test00499() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0xffffffc400000000l); }
@Test
public void test00500() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000028l); }
@Test
public void test00501() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000028l); }
@Test
public void test00502() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000000l); }
@Test
public void test00503() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0xffffffb534d27df8l); }
@Test
public void test00504() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000534d27df8l); }
@Test
public void test00505() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000028l); }
@Test
public void test00506() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000028l); }
@Test
public void test00507() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000000l); }
@Test
public void test00508() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000534d27df8l); }
@Test
public void test00509() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00510() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000028l); }
@Test
public void test00511() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000050l); }
@Test
public void test00512() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000028l); }
@Test
public void test00513() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffd8l; AssertJUnit.assertEquals("multiply", result, 0x34d27dd534d27df8l); }
@Test
public void test00514() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8000000500l); }
@Test
public void test00515() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8000000000l); }
@Test
public void test00516() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0xfffffb0000000500l); }
@Test
public void test00517() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0xfffff88000000500l); }
@Test
public void test00518() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0xfffff88000000000l); }
@Test
public void test00519() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0xfffff60000000500l); }
@Test
public void test00520() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0x0000028000000500l); }
@Test
public void test00521() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0x0000028000000000l); }
@Test
public void test00522() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0xfffff6a69a4fbf00l); }
@Test
public void test00523() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0x000000a69a4fbf00l); }
@Test
public void test00524() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000500l); }
@Test
public void test00525() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0x0000028000000500l); }
@Test
public void test00526() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0x0000028000000000l); }
@Test
public void test00527() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0x000000a69a4fbf00l); }
@Test
public void test00528() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00529() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000500l); }
@Test
public void test00530() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000a00l); }
@Test
public void test00531() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000500l); }
@Test
public void test00532() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffb00l; AssertJUnit.assertEquals("multiply", result, 0x9a4fbaa69a4fbf00l); }
@Test
public void test00533() { x = 0x000000007fffffffl; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000500000000l); }
@Test
public void test00534() { x = 0x0000000080000000l; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00535() { x = 0x00000000ffffffffl; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000500000000l); }
@Test
public void test00536() { x = 0x000000017fffffffl; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000500000000l); }
@Test
public void test00537() { x = 0x0000000180000000l; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00538() { x = 0x00000001ffffffffl; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000500000000l); }
@Test
public void test00539() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000500000000l); }
@Test
public void test00540() { x = 0xffffffff80000000l; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00541() { x = 0x00000001deadf00dl; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0xa69a4fbf00000000l); }
@Test
public void test00542() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0xa69a4fbf00000000l); }
@Test
public void test00543() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000500000000l); }
@Test
public void test00544() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000500000000l); }
@Test
public void test00545() { x = 0x7fffffff80000000l; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00546() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0xa69a4fbf00000000l); }
@Test
public void test00547() { x = 0x8000000000000000l; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00548() { x = 0xffffffffffffffffl; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000500000000l); }
@Test
public void test00549() { x = 0xfffffffffffffffel; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000000l); }
@Test
public void test00550() { x = 0xefffffffffffffffl; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000500000000l); }
@Test
public void test00551() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffb00000000l; AssertJUnit.assertEquals("multiply", result, 0xa69a4fbf00000000l); }
@Test
public void test00552() { x = 0x000000007fffffffl; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000000l); }
@Test
public void test00553() { x = 0x0000000080000000l; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00554() { x = 0x00000000ffffffffl; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000000l); }
@Test
public void test00555() { x = 0x000000017fffffffl; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000000l); }
@Test
public void test00556() { x = 0x0000000180000000l; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00557() { x = 0x00000001ffffffffl; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000000l); }
@Test
public void test00558() { x = 0xffffffff7fffffffl; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000000l); }
@Test
public void test00559() { x = 0xffffffff80000000l; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00560() { x = 0x00000001deadf00dl; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x34d27df800000000l); }
@Test
public void test00561() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x34d27df800000000l); }
@Test
public void test00562() { x = 0x7fffffffffffffffl; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000000l); }
@Test
public void test00563() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000000l); }
@Test
public void test00564() { x = 0x7fffffff80000000l; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00565() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x34d27df800000000l); }
@Test
public void test00566() { x = 0x8000000000000000l; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00567() { x = 0xffffffffffffffffl; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000000l); }
@Test
public void test00568() { x = 0xfffffffffffffffel; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005000000000l); }
@Test
public void test00569() { x = 0xefffffffffffffffl; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000000l); }
@Test
public void test00570() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffd800000000l; AssertJUnit.assertEquals("multiply", result, 0x34d27df800000000l); }
@Test
public void test00571() { x = 0x000000007fffffffl; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0x00000002fffffffal); }
@Test
public void test00572() { x = 0x0000000080000000l; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0x0000000300000000l); }
@Test
public void test00573() { x = 0x00000000ffffffffl; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0x00000005fffffffal); }
@Test
public void test00574() { x = 0x000000017fffffffl; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0x00000008fffffffal); }
@Test
public void test00575() { x = 0x0000000180000000l; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0x0000000900000000l); }
@Test
public void test00576() { x = 0x00000001ffffffffl; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0x0000000bfffffffal); }
@Test
public void test00577() { x = 0xffffffff7fffffffl; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0xfffffffcfffffffal); }
@Test
public void test00578() { x = 0xffffffff80000000l; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd00000000l); }
@Test
public void test00579() { x = 0x00000001deadf00dl; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0x0000000b3813a04el); }
@Test
public void test00580() { x = 0xffffffffdeadf00dl; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0xffffffff3813a04el); }
@Test
public void test00581() { x = 0x7fffffffffffffffl; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffffal); }
@Test
public void test00582() { x = 0x7fffffff7fffffffl; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0xfffffffcfffffffal); }
@Test
public void test00583() { x = 0x7fffffff80000000l; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd00000000l); }
@Test
public void test00584() { x = 0x7fffffffdeadf00dl; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0xffffffff3813a04el); }
@Test
public void test00585() { x = 0x8000000000000000l; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00586() { x = 0xffffffffffffffffl; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffffal); }
@Test
public void test00587() { x = 0xfffffffffffffffel; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff4l); }
@Test
public void test00588() { x = 0xefffffffffffffffl; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0x9ffffffffffffffal); }
@Test
public void test00589() { x = 0xdeadf00ddeadf00dl; long result = x * 0x6l; AssertJUnit.assertEquals("multiply", result, 0x3813a0533813a04el); }
@Test
public void test00590() { x = 0x000000007fffffffl; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0x00000017ffffffd0l); }
@Test
public void test00591() { x = 0x0000000080000000l; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test00592() { x = 0x00000000ffffffffl; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0x0000002fffffffd0l); }
@Test
public void test00593() { x = 0x000000017fffffffl; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0x00000047ffffffd0l); }
@Test
public void test00594() { x = 0x0000000180000000l; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000000l); }
@Test
public void test00595() { x = 0x00000001ffffffffl; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0x0000005fffffffd0l); }
@Test
public void test00596() { x = 0xffffffff7fffffffl; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0xffffffe7ffffffd0l); }
@Test
public void test00597() { x = 0xffffffff80000000l; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test00598() { x = 0x00000001deadf00dl; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0x00000059c09d0270l); }
@Test
public void test00599() { x = 0xffffffffdeadf00dl; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0xfffffff9c09d0270l); }
@Test
public void test00600() { x = 0x7fffffffffffffffl; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd0l); }
@Test
public void test00601() { x = 0x7fffffff7fffffffl; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0xffffffe7ffffffd0l); }
@Test
public void test00602() { x = 0x7fffffff80000000l; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test00603() { x = 0x7fffffffdeadf00dl; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0xfffffff9c09d0270l); }
@Test
public void test00604() { x = 0x8000000000000000l; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00605() { x = 0xffffffffffffffffl; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd0l); }
@Test
public void test00606() { x = 0xfffffffffffffffel; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffa0l); }
@Test
public void test00607() { x = 0xefffffffffffffffl; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd0l); }
@Test
public void test00608() { x = 0xdeadf00ddeadf00dl; long result = x * 0x30l; AssertJUnit.assertEquals("multiply", result, 0xc09d0299c09d0270l); }
@Test
public void test00609() { x = 0x000000007fffffffl; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0x000002fffffffa00l); }
@Test
public void test00610() { x = 0x0000000080000000l; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0x0000030000000000l); }
@Test
public void test00611() { x = 0x00000000ffffffffl; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0x000005fffffffa00l); }
@Test
public void test00612() { x = 0x000000017fffffffl; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0x000008fffffffa00l); }
@Test
public void test00613() { x = 0x0000000180000000l; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0x0000090000000000l); }
@Test
public void test00614() { x = 0x00000001ffffffffl; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0x00000bfffffffa00l); }
@Test
public void test00615() { x = 0xffffffff7fffffffl; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0xfffffcfffffffa00l); }
@Test
public void test00616() { x = 0xffffffff80000000l; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000000l); }
@Test
public void test00617() { x = 0x00000001deadf00dl; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0x00000b3813a04e00l); }
@Test
public void test00618() { x = 0xffffffffdeadf00dl; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0xffffff3813a04e00l); }
@Test
public void test00619() { x = 0x7fffffffffffffffl; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffa00l); }
@Test
public void test00620() { x = 0x7fffffff7fffffffl; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0xfffffcfffffffa00l); }
@Test
public void test00621() { x = 0x7fffffff80000000l; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000000l); }
@Test
public void test00622() { x = 0x7fffffffdeadf00dl; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0xffffff3813a04e00l); }
@Test
public void test00623() { x = 0x8000000000000000l; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00624() { x = 0xffffffffffffffffl; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffa00l); }
@Test
public void test00625() { x = 0xfffffffffffffffel; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff400l); }
@Test
public void test00626() { x = 0xefffffffffffffffl; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffa00l); }
@Test
public void test00627() { x = 0xdeadf00ddeadf00dl; long result = x * 0x600l; AssertJUnit.assertEquals("multiply", result, 0x13a0533813a04e00l); }
@Test
public void test00628() { x = 0x000000007fffffffl; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000000l); }
@Test
public void test00629() { x = 0x0000000080000000l; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00630() { x = 0x00000000ffffffffl; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000000l); }
@Test
public void test00631() { x = 0x000000017fffffffl; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000000l); }
@Test
public void test00632() { x = 0x0000000180000000l; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00633() { x = 0x00000001ffffffffl; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000000l); }
@Test
public void test00634() { x = 0xffffffff7fffffffl; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000000l); }
@Test
public void test00635() { x = 0xffffffff80000000l; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00636() { x = 0x00000001deadf00dl; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0x3813a04e00000000l); }
@Test
public void test00637() { x = 0xffffffffdeadf00dl; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0x3813a04e00000000l); }
@Test
public void test00638() { x = 0x7fffffffffffffffl; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000000l); }
@Test
public void test00639() { x = 0x7fffffff7fffffffl; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000000l); }
@Test
public void test00640() { x = 0x7fffffff80000000l; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00641() { x = 0x7fffffffdeadf00dl; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0x3813a04e00000000l); }
@Test
public void test00642() { x = 0x8000000000000000l; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00643() { x = 0xffffffffffffffffl; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000000l); }
@Test
public void test00644() { x = 0xfffffffffffffffel; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test00645() { x = 0xefffffffffffffffl; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000000l); }
@Test
public void test00646() { x = 0xdeadf00ddeadf00dl; long result = x * 0x600000000l; AssertJUnit.assertEquals("multiply", result, 0x3813a04e00000000l); }
@Test
public void test00647() { x = 0x000000007fffffffl; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test00648() { x = 0x0000000080000000l; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00649() { x = 0x00000000ffffffffl; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test00650() { x = 0x000000017fffffffl; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test00651() { x = 0x0000000180000000l; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00652() { x = 0x00000001ffffffffl; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test00653() { x = 0xffffffff7fffffffl; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test00654() { x = 0xffffffff80000000l; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00655() { x = 0x00000001deadf00dl; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0xc09d027000000000l); }
@Test
public void test00656() { x = 0xffffffffdeadf00dl; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0xc09d027000000000l); }
@Test
public void test00657() { x = 0x7fffffffffffffffl; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test00658() { x = 0x7fffffff7fffffffl; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test00659() { x = 0x7fffffff80000000l; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00660() { x = 0x7fffffffdeadf00dl; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0xc09d027000000000l); }
@Test
public void test00661() { x = 0x8000000000000000l; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00662() { x = 0xffffffffffffffffl; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test00663() { x = 0xfffffffffffffffel; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test00664() { x = 0xefffffffffffffffl; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test00665() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3000000000l; AssertJUnit.assertEquals("multiply", result, 0xc09d027000000000l); }
@Test
public void test00666() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0xfffffffd00000006l); }
@Test
public void test00667() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0xfffffffd00000000l); }
@Test
public void test00668() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000006l); }
@Test
public void test00669() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0xfffffff700000006l); }
@Test
public void test00670() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0xfffffff700000000l); }
@Test
public void test00671() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000006l); }
@Test
public void test00672() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0x0000000300000006l); }
@Test
public void test00673() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0x0000000300000000l); }
@Test
public void test00674() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0xfffffff4c7ec5fb2l); }
@Test
public void test00675() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0x00000000c7ec5fb2l); }
@Test
public void test00676() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000006l); }
@Test
public void test00677() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0x0000000300000006l); }
@Test
public void test00678() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0x0000000300000000l); }
@Test
public void test00679() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0x00000000c7ec5fb2l); }
@Test
public void test00680() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00681() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000006l); }
@Test
public void test00682() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0x000000000000000cl); }
@Test
public void test00683() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0x6000000000000006l); }
@Test
public void test00684() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffffal; AssertJUnit.assertEquals("multiply", result, 0xc7ec5facc7ec5fb2l); }
@Test
public void test00685() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000030l); }
@Test
public void test00686() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test00687() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000030l); }
@Test
public void test00688() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000030l); }
@Test
public void test00689() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000000l); }
@Test
public void test00690() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000030l); }
@Test
public void test00691() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000030l); }
@Test
public void test00692() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test00693() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0xffffffa63f62fd90l); }
@Test
public void test00694() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0x000000063f62fd90l); }
@Test
public void test00695() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000030l); }
@Test
public void test00696() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000030l); }
@Test
public void test00697() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test00698() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0x000000063f62fd90l); }
@Test
public void test00699() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00700() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000030l); }
@Test
public void test00701() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000060l); }
@Test
public void test00702() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000030l); }
@Test
public void test00703() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffd0l; AssertJUnit.assertEquals("multiply", result, 0x3f62fd663f62fd90l); }
@Test
public void test00704() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000600l); }
@Test
public void test00705() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000000l); }
@Test
public void test00706() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa0000000600l); }
@Test
public void test00707() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0xfffff70000000600l); }
@Test
public void test00708() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0xfffff70000000000l); }
@Test
public void test00709() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0xfffff40000000600l); }
@Test
public void test00710() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0x0000030000000600l); }
@Test
public void test00711() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0x0000030000000000l); }
@Test
public void test00712() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0xfffff4c7ec5fb200l); }
@Test
public void test00713() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0x000000c7ec5fb200l); }
@Test
public void test00714() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000600l); }
@Test
public void test00715() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0x0000030000000600l); }
@Test
public void test00716() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0x0000030000000000l); }
@Test
public void test00717() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0x000000c7ec5fb200l); }
@Test
public void test00718() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00719() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000600l); }
@Test
public void test00720() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000c00l); }
@Test
public void test00721() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000600l); }
@Test
public void test00722() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffa00l; AssertJUnit.assertEquals("multiply", result, 0xec5facc7ec5fb200l); }
@Test
public void test00723() { x = 0x000000007fffffffl; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000600000000l); }
@Test
public void test00724() { x = 0x0000000080000000l; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00725() { x = 0x00000000ffffffffl; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000600000000l); }
@Test
public void test00726() { x = 0x000000017fffffffl; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000600000000l); }
@Test
public void test00727() { x = 0x0000000180000000l; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00728() { x = 0x00000001ffffffffl; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000600000000l); }
@Test
public void test00729() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000600000000l); }
@Test
public void test00730() { x = 0xffffffff80000000l; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00731() { x = 0x00000001deadf00dl; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0xc7ec5fb200000000l); }
@Test
public void test00732() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0xc7ec5fb200000000l); }
@Test
public void test00733() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000600000000l); }
@Test
public void test00734() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000600000000l); }
@Test
public void test00735() { x = 0x7fffffff80000000l; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00736() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0xc7ec5fb200000000l); }
@Test
public void test00737() { x = 0x8000000000000000l; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00738() { x = 0xffffffffffffffffl; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000600000000l); }
@Test
public void test00739() { x = 0xfffffffffffffffel; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test00740() { x = 0xefffffffffffffffl; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000600000000l); }
@Test
public void test00741() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffa00000000l; AssertJUnit.assertEquals("multiply", result, 0xc7ec5fb200000000l); }
@Test
public void test00742() { x = 0x000000007fffffffl; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test00743() { x = 0x0000000080000000l; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00744() { x = 0x00000000ffffffffl; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test00745() { x = 0x000000017fffffffl; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test00746() { x = 0x0000000180000000l; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00747() { x = 0x00000001ffffffffl; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test00748() { x = 0xffffffff7fffffffl; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test00749() { x = 0xffffffff80000000l; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00750() { x = 0x00000001deadf00dl; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x3f62fd9000000000l); }
@Test
public void test00751() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x3f62fd9000000000l); }
@Test
public void test00752() { x = 0x7fffffffffffffffl; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test00753() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test00754() { x = 0x7fffffff80000000l; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00755() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x3f62fd9000000000l); }
@Test
public void test00756() { x = 0x8000000000000000l; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00757() { x = 0xffffffffffffffffl; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test00758() { x = 0xfffffffffffffffel; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test00759() { x = 0xefffffffffffffffl; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test00760() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffd000000000l; AssertJUnit.assertEquals("multiply", result, 0x3f62fd9000000000l); }
@Test
public void test00761() { x = 0x000000007fffffffl; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0x000000037ffffff9l); }
@Test
public void test00762() { x = 0x0000000080000000l; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0x0000000380000000l); }
@Test
public void test00763() { x = 0x00000000ffffffffl; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0x00000006fffffff9l); }
@Test
public void test00764() { x = 0x000000017fffffffl; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0x0000000a7ffffff9l); }
@Test
public void test00765() { x = 0x0000000180000000l; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0x0000000a80000000l); }
@Test
public void test00766() { x = 0x00000001ffffffffl; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0x0000000dfffffff9l); }
@Test
public void test00767() { x = 0xffffffff7fffffffl; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0xfffffffc7ffffff9l); }
@Test
public void test00768() { x = 0xffffffff80000000l; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0xfffffffc80000000l); }
@Test
public void test00769() { x = 0x00000001deadf00dl; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0x0000000d16c1905bl); }
@Test
public void test00770() { x = 0xffffffffdeadf00dl; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0xffffffff16c1905bl); }
@Test
public void test00771() { x = 0x7fffffffffffffffl; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffff9l); }
@Test
public void test00772() { x = 0x7fffffff7fffffffl; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffc7ffffff9l); }
@Test
public void test00773() { x = 0x7fffffff80000000l; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffc80000000l); }
@Test
public void test00774() { x = 0x7fffffffdeadf00dl; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0x7fffffff16c1905bl); }
@Test
public void test00775() { x = 0x8000000000000000l; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00776() { x = 0xffffffffffffffffl; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff9l); }
@Test
public void test00777() { x = 0xfffffffffffffffel; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff2l); }
@Test
public void test00778() { x = 0xefffffffffffffffl; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0x8ffffffffffffff9l); }
@Test
public void test00779() { x = 0xdeadf00ddeadf00dl; long result = x * 0x7l; AssertJUnit.assertEquals("multiply", result, 0x16c1906116c1905bl); }
@Test
public void test00780() { x = 0x000000007fffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x0000001bffffffc8l); }
@Test
public void test00781() { x = 0x0000000080000000l; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test00782() { x = 0x00000000ffffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x00000037ffffffc8l); }
@Test
public void test00783() { x = 0x000000017fffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x00000053ffffffc8l); }
@Test
public void test00784() { x = 0x0000000180000000l; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x0000005400000000l); }
@Test
public void test00785() { x = 0x00000001ffffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x0000006fffffffc8l); }
@Test
public void test00786() { x = 0xffffffff7fffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xffffffe3ffffffc8l); }
@Test
public void test00787() { x = 0xffffffff80000000l; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test00788() { x = 0x00000001deadf00dl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x00000068b60c82d8l); }
@Test
public void test00789() { x = 0xffffffffdeadf00dl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xfffffff8b60c82d8l); }
@Test
public void test00790() { x = 0x7fffffffffffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffc8l); }
@Test
public void test00791() { x = 0x7fffffff7fffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xffffffe3ffffffc8l); }
@Test
public void test00792() { x = 0x7fffffff80000000l; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test00793() { x = 0x7fffffffdeadf00dl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xfffffff8b60c82d8l); }
@Test
public void test00794() { x = 0x8000000000000000l; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00795() { x = 0xffffffffffffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffc8l); }
@Test
public void test00796() { x = 0xfffffffffffffffel; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff90l); }
@Test
public void test00797() { x = 0xefffffffffffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffc8l); }
@Test
public void test00798() { x = 0xdeadf00ddeadf00dl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xb60c8308b60c82d8l); }
@Test
public void test00799() { x = 0x000000007fffffffl; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0x0000037ffffff900l); }
@Test
public void test00800() { x = 0x0000000080000000l; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0x0000038000000000l); }
@Test
public void test00801() { x = 0x00000000ffffffffl; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0x000006fffffff900l); }
@Test
public void test00802() { x = 0x000000017fffffffl; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0x00000a7ffffff900l); }
@Test
public void test00803() { x = 0x0000000180000000l; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0x00000a8000000000l); }
@Test
public void test00804() { x = 0x00000001ffffffffl; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0x00000dfffffff900l); }
@Test
public void test00805() { x = 0xffffffff7fffffffl; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0xfffffc7ffffff900l); }
@Test
public void test00806() { x = 0xffffffff80000000l; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0xfffffc8000000000l); }
@Test
public void test00807() { x = 0x00000001deadf00dl; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0x00000d16c1905b00l); }
@Test
public void test00808() { x = 0xffffffffdeadf00dl; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0xffffff16c1905b00l); }
@Test
public void test00809() { x = 0x7fffffffffffffffl; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff900l); }
@Test
public void test00810() { x = 0x7fffffff7fffffffl; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0xfffffc7ffffff900l); }
@Test
public void test00811() { x = 0x7fffffff80000000l; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0xfffffc8000000000l); }
@Test
public void test00812() { x = 0x7fffffffdeadf00dl; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0xffffff16c1905b00l); }
@Test
public void test00813() { x = 0x8000000000000000l; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00814() { x = 0xffffffffffffffffl; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff900l); }
@Test
public void test00815() { x = 0xfffffffffffffffel; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff200l); }
@Test
public void test00816() { x = 0xefffffffffffffffl; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff900l); }
@Test
public void test00817() { x = 0xdeadf00ddeadf00dl; long result = x * 0x700l; AssertJUnit.assertEquals("multiply", result, 0xc1906116c1905b00l); }
@Test
public void test00818() { x = 0x000000007fffffffl; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff900000000l); }
@Test
public void test00819() { x = 0x0000000080000000l; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00820() { x = 0x00000000ffffffffl; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff900000000l); }
@Test
public void test00821() { x = 0x000000017fffffffl; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff900000000l); }
@Test
public void test00822() { x = 0x0000000180000000l; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00823() { x = 0x00000001ffffffffl; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff900000000l); }
@Test
public void test00824() { x = 0xffffffff7fffffffl; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff900000000l); }
@Test
public void test00825() { x = 0xffffffff80000000l; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00826() { x = 0x00000001deadf00dl; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0x16c1905b00000000l); }
@Test
public void test00827() { x = 0xffffffffdeadf00dl; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0x16c1905b00000000l); }
@Test
public void test00828() { x = 0x7fffffffffffffffl; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff900000000l); }
@Test
public void test00829() { x = 0x7fffffff7fffffffl; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff900000000l); }
@Test
public void test00830() { x = 0x7fffffff80000000l; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00831() { x = 0x7fffffffdeadf00dl; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0x16c1905b00000000l); }
@Test
public void test00832() { x = 0x8000000000000000l; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00833() { x = 0xffffffffffffffffl; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff900000000l); }
@Test
public void test00834() { x = 0xfffffffffffffffel; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff200000000l); }
@Test
public void test00835() { x = 0xefffffffffffffffl; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff900000000l); }
@Test
public void test00836() { x = 0xdeadf00ddeadf00dl; long result = x * 0x700000000l; AssertJUnit.assertEquals("multiply", result, 0x16c1905b00000000l); }
@Test
public void test00837() { x = 0x000000007fffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test00838() { x = 0x0000000080000000l; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00839() { x = 0x00000000ffffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test00840() { x = 0x000000017fffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test00841() { x = 0x0000000180000000l; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00842() { x = 0x00000001ffffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test00843() { x = 0xffffffff7fffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test00844() { x = 0xffffffff80000000l; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00845() { x = 0x00000001deadf00dl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xb60c82d800000000l); }
@Test
public void test00846() { x = 0xffffffffdeadf00dl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xb60c82d800000000l); }
@Test
public void test00847() { x = 0x7fffffffffffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test00848() { x = 0x7fffffff7fffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test00849() { x = 0x7fffffff80000000l; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00850() { x = 0x7fffffffdeadf00dl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xb60c82d800000000l); }
@Test
public void test00851() { x = 0x8000000000000000l; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00852() { x = 0xffffffffffffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test00853() { x = 0xfffffffffffffffel; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000000l); }
@Test
public void test00854() { x = 0xefffffffffffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test00855() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xb60c82d800000000l); }
@Test
public void test00856() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0xfffffffc80000007l); }
@Test
public void test00857() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0xfffffffc80000000l); }
@Test
public void test00858() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0xfffffff900000007l); }
@Test
public void test00859() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0xfffffff580000007l); }
@Test
public void test00860() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0xfffffff580000000l); }
@Test
public void test00861() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0xfffffff200000007l); }
@Test
public void test00862() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0x0000000380000007l); }
@Test
public void test00863() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0x0000000380000000l); }
@Test
public void test00864() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0xfffffff2e93e6fa5l); }
@Test
public void test00865() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0x00000000e93e6fa5l); }
@Test
public void test00866() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000007l); }
@Test
public void test00867() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0x8000000380000007l); }
@Test
public void test00868() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0x8000000380000000l); }
@Test
public void test00869() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0x80000000e93e6fa5l); }
@Test
public void test00870() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00871() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000007l); }
@Test
public void test00872() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0x000000000000000el); }
@Test
public void test00873() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0x7000000000000007l); }
@Test
public void test00874() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffff9l; AssertJUnit.assertEquals("multiply", result, 0xe93e6f9ee93e6fa5l); }
@Test
public void test00875() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000038l); }
@Test
public void test00876() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test00877() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000038l); }
@Test
public void test00878() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0xffffffac00000038l); }
@Test
public void test00879() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0xffffffac00000000l); }
@Test
public void test00880() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000038l); }
@Test
public void test00881() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000038l); }
@Test
public void test00882() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test00883() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0xffffff9749f37d28l); }
@Test
public void test00884() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000000749f37d28l); }
@Test
public void test00885() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000038l); }
@Test
public void test00886() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000038l); }
@Test
public void test00887() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test00888() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000000749f37d28l); }
@Test
public void test00889() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00890() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000038l); }
@Test
public void test00891() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000070l); }
@Test
public void test00892() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000038l); }
@Test
public void test00893() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x49f37cf749f37d28l); }
@Test
public void test00894() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0xfffffc8000000700l); }
@Test
public void test00895() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0xfffffc8000000000l); }
@Test
public void test00896() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0xfffff90000000700l); }
@Test
public void test00897() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0xfffff58000000700l); }
@Test
public void test00898() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0xfffff58000000000l); }
@Test
public void test00899() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0xfffff20000000700l); }
@Test
public void test00900() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0x0000038000000700l); }
@Test
public void test00901() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0x0000038000000000l); }
@Test
public void test00902() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0xfffff2e93e6fa500l); }
@Test
public void test00903() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0x000000e93e6fa500l); }
@Test
public void test00904() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000700l); }
@Test
public void test00905() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0x0000038000000700l); }
@Test
public void test00906() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0x0000038000000000l); }
@Test
public void test00907() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0x000000e93e6fa500l); }
@Test
public void test00908() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00909() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000700l); }
@Test
public void test00910() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000e00l); }
@Test
public void test00911() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000700l); }
@Test
public void test00912() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff900l; AssertJUnit.assertEquals("multiply", result, 0x3e6f9ee93e6fa500l); }
@Test
public void test00913() { x = 0x000000007fffffffl; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000700000000l); }
@Test
public void test00914() { x = 0x0000000080000000l; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00915() { x = 0x00000000ffffffffl; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000700000000l); }
@Test
public void test00916() { x = 0x000000017fffffffl; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000700000000l); }
@Test
public void test00917() { x = 0x0000000180000000l; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00918() { x = 0x00000001ffffffffl; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000700000000l); }
@Test
public void test00919() { x = 0xffffffff7fffffffl; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000700000000l); }
@Test
public void test00920() { x = 0xffffffff80000000l; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00921() { x = 0x00000001deadf00dl; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0xe93e6fa500000000l); }
@Test
public void test00922() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0xe93e6fa500000000l); }
@Test
public void test00923() { x = 0x7fffffffffffffffl; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000700000000l); }
@Test
public void test00924() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000700000000l); }
@Test
public void test00925() { x = 0x7fffffff80000000l; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00926() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0xe93e6fa500000000l); }
@Test
public void test00927() { x = 0x8000000000000000l; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00928() { x = 0xffffffffffffffffl; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000700000000l); }
@Test
public void test00929() { x = 0xfffffffffffffffel; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000e00000000l); }
@Test
public void test00930() { x = 0xefffffffffffffffl; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000700000000l); }
@Test
public void test00931() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffff900000000l; AssertJUnit.assertEquals("multiply", result, 0xe93e6fa500000000l); }
@Test
public void test00932() { x = 0x000000007fffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test00933() { x = 0x0000000080000000l; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00934() { x = 0x00000000ffffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test00935() { x = 0x000000017fffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test00936() { x = 0x0000000180000000l; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00937() { x = 0x00000001ffffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test00938() { x = 0xffffffff7fffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test00939() { x = 0xffffffff80000000l; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00940() { x = 0x00000001deadf00dl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x49f37d2800000000l); }
@Test
public void test00941() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x49f37d2800000000l); }
@Test
public void test00942() { x = 0x7fffffffffffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test00943() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test00944() { x = 0x7fffffff80000000l; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00945() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x49f37d2800000000l); }
@Test
public void test00946() { x = 0x8000000000000000l; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00947() { x = 0xffffffffffffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test00948() { x = 0xfffffffffffffffel; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007000000000l); }
@Test
public void test00949() { x = 0xefffffffffffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test00950() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x49f37d2800000000l); }
@Test
public void test00951() { x = 0x000000007fffffffl; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0x000000047ffffff7l); }
@Test
public void test00952() { x = 0x0000000080000000l; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0x0000000480000000l); }
@Test
public void test00953() { x = 0x00000000ffffffffl; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0x00000008fffffff7l); }
@Test
public void test00954() { x = 0x000000017fffffffl; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0x0000000d7ffffff7l); }
@Test
public void test00955() { x = 0x0000000180000000l; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0x0000000d80000000l); }
@Test
public void test00956() { x = 0x00000001ffffffffl; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0x00000011fffffff7l); }
@Test
public void test00957() { x = 0xffffffff7fffffffl; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb7ffffff7l); }
@Test
public void test00958() { x = 0xffffffff80000000l; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb80000000l); }
@Test
public void test00959() { x = 0x00000001deadf00dl; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0x00000010d41d7075l); }
@Test
public void test00960() { x = 0xffffffffdeadf00dl; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0xfffffffed41d7075l); }
@Test
public void test00961() { x = 0x7fffffffffffffffl; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffff7l); }
@Test
public void test00962() { x = 0x7fffffff7fffffffl; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffb7ffffff7l); }
@Test
public void test00963() { x = 0x7fffffff80000000l; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffb80000000l); }
@Test
public void test00964() { x = 0x7fffffffdeadf00dl; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffed41d7075l); }
@Test
public void test00965() { x = 0x8000000000000000l; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test00966() { x = 0xffffffffffffffffl; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff7l); }
@Test
public void test00967() { x = 0xfffffffffffffffel; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffeel); }
@Test
public void test00968() { x = 0xefffffffffffffffl; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0x6ffffffffffffff7l); }
@Test
public void test00969() { x = 0xdeadf00ddeadf00dl; long result = x * 0x9l; AssertJUnit.assertEquals("multiply", result, 0xd41d707cd41d7075l); }
@Test
public void test00970() { x = 0x000000007fffffffl; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0x00000023ffffffb8l); }
@Test
public void test00971() { x = 0x0000000080000000l; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test00972() { x = 0x00000000ffffffffl; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0x00000047ffffffb8l); }
@Test
public void test00973() { x = 0x000000017fffffffl; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0x0000006bffffffb8l); }
@Test
public void test00974() { x = 0x0000000180000000l; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0x0000006c00000000l); }
@Test
public void test00975() { x = 0x00000001ffffffffl; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0x0000008fffffffb8l); }
@Test
public void test00976() { x = 0xffffffff7fffffffl; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0xffffffdbffffffb8l); }
@Test
public void test00977() { x = 0xffffffff80000000l; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test00978() { x = 0x00000001deadf00dl; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0x00000086a0eb83a8l); }
@Test
public void test00979() { x = 0xffffffffdeadf00dl; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0xfffffff6a0eb83a8l); }
@Test
public void test00980() { x = 0x7fffffffffffffffl; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffb8l); }
@Test
public void test00981() { x = 0x7fffffff7fffffffl; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0xffffffdbffffffb8l); }
@Test
public void test00982() { x = 0x7fffffff80000000l; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test00983() { x = 0x7fffffffdeadf00dl; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0xfffffff6a0eb83a8l); }
@Test
public void test00984() { x = 0x8000000000000000l; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test00985() { x = 0xffffffffffffffffl; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffb8l); }
@Test
public void test00986() { x = 0xfffffffffffffffel; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff70l); }
@Test
public void test00987() { x = 0xefffffffffffffffl; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffb8l); }
@Test
public void test00988() { x = 0xdeadf00ddeadf00dl; long result = x * 0x48l; AssertJUnit.assertEquals("multiply", result, 0xa0eb83e6a0eb83a8l); }
@Test
public void test00989() { x = 0x000000007fffffffl; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0x0000047ffffff700l); }
@Test
public void test00990() { x = 0x0000000080000000l; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0x0000048000000000l); }
@Test
public void test00991() { x = 0x00000000ffffffffl; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0x000008fffffff700l); }
@Test
public void test00992() { x = 0x000000017fffffffl; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0x00000d7ffffff700l); }
@Test
public void test00993() { x = 0x0000000180000000l; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0x00000d8000000000l); }
@Test
public void test00994() { x = 0x00000001ffffffffl; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0x000011fffffff700l); }
@Test
public void test00995() { x = 0xffffffff7fffffffl; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0xfffffb7ffffff700l); }
@Test
public void test00996() { x = 0xffffffff80000000l; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0xfffffb8000000000l); }
@Test
public void test00997() { x = 0x00000001deadf00dl; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0x000010d41d707500l); }
@Test
public void test00998() { x = 0xffffffffdeadf00dl; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0xfffffed41d707500l); }
@Test
public void test00999() { x = 0x7fffffffffffffffl; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff700l); }
@Test
public void test01000() { x = 0x7fffffff7fffffffl; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0xfffffb7ffffff700l); }
@Test
public void test01001() { x = 0x7fffffff80000000l; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0xfffffb8000000000l); }
@Test
public void test01002() { x = 0x7fffffffdeadf00dl; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0xfffffed41d707500l); }
@Test
public void test01003() { x = 0x8000000000000000l; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01004() { x = 0xffffffffffffffffl; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff700l); }
@Test
public void test01005() { x = 0xfffffffffffffffel; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffee00l); }
@Test
public void test01006() { x = 0xefffffffffffffffl; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff700l); }
@Test
public void test01007() { x = 0xdeadf00ddeadf00dl; long result = x * 0x900l; AssertJUnit.assertEquals("multiply", result, 0x1d707cd41d707500l); }
@Test
public void test01008() { x = 0x000000007fffffffl; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff700000000l); }
@Test
public void test01009() { x = 0x0000000080000000l; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01010() { x = 0x00000000ffffffffl; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff700000000l); }
@Test
public void test01011() { x = 0x000000017fffffffl; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff700000000l); }
@Test
public void test01012() { x = 0x0000000180000000l; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01013() { x = 0x00000001ffffffffl; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff700000000l); }
@Test
public void test01014() { x = 0xffffffff7fffffffl; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff700000000l); }
@Test
public void test01015() { x = 0xffffffff80000000l; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01016() { x = 0x00000001deadf00dl; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0xd41d707500000000l); }
@Test
public void test01017() { x = 0xffffffffdeadf00dl; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0xd41d707500000000l); }
@Test
public void test01018() { x = 0x7fffffffffffffffl; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff700000000l); }
@Test
public void test01019() { x = 0x7fffffff7fffffffl; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff700000000l); }
@Test
public void test01020() { x = 0x7fffffff80000000l; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01021() { x = 0x7fffffffdeadf00dl; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0xd41d707500000000l); }
@Test
public void test01022() { x = 0x8000000000000000l; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01023() { x = 0xffffffffffffffffl; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff700000000l); }
@Test
public void test01024() { x = 0xfffffffffffffffel; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000000l); }
@Test
public void test01025() { x = 0xefffffffffffffffl; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff700000000l); }
@Test
public void test01026() { x = 0xdeadf00ddeadf00dl; long result = x * 0x900000000l; AssertJUnit.assertEquals("multiply", result, 0xd41d707500000000l); }
@Test
public void test01027() { x = 0x000000007fffffffl; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000000l); }
@Test
public void test01028() { x = 0x0000000080000000l; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01029() { x = 0x00000000ffffffffl; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000000l); }
@Test
public void test01030() { x = 0x000000017fffffffl; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000000l); }
@Test
public void test01031() { x = 0x0000000180000000l; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01032() { x = 0x00000001ffffffffl; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000000l); }
@Test
public void test01033() { x = 0xffffffff7fffffffl; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000000l); }
@Test
public void test01034() { x = 0xffffffff80000000l; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01035() { x = 0x00000001deadf00dl; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0xa0eb83a800000000l); }
@Test
public void test01036() { x = 0xffffffffdeadf00dl; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0xa0eb83a800000000l); }
@Test
public void test01037() { x = 0x7fffffffffffffffl; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000000l); }
@Test
public void test01038() { x = 0x7fffffff7fffffffl; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000000l); }
@Test
public void test01039() { x = 0x7fffffff80000000l; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01040() { x = 0x7fffffffdeadf00dl; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0xa0eb83a800000000l); }
@Test
public void test01041() { x = 0x8000000000000000l; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01042() { x = 0xffffffffffffffffl; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000000l); }
@Test
public void test01043() { x = 0xfffffffffffffffel; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test01044() { x = 0xefffffffffffffffl; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000000l); }
@Test
public void test01045() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4800000000l; AssertJUnit.assertEquals("multiply", result, 0xa0eb83a800000000l); }
@Test
public void test01046() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb80000009l); }
@Test
public void test01047() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb80000000l); }
@Test
public void test01048() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0xfffffff700000009l); }
@Test
public void test01049() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0xfffffff280000009l); }
@Test
public void test01050() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0xfffffff280000000l); }
@Test
public void test01051() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000009l); }
@Test
public void test01052() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0x0000000480000009l); }
@Test
public void test01053() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0x0000000480000000l); }
@Test
public void test01054() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0xffffffef2be28f8bl); }
@Test
public void test01055() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0x000000012be28f8bl); }
@Test
public void test01056() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000009l); }
@Test
public void test01057() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0x8000000480000009l); }
@Test
public void test01058() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0x8000000480000000l); }
@Test
public void test01059() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0x800000012be28f8bl); }
@Test
public void test01060() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01061() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000009l); }
@Test
public void test01062() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000012l); }
@Test
public void test01063() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0x9000000000000009l); }
@Test
public void test01064() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffff7l; AssertJUnit.assertEquals("multiply", result, 0x2be28f832be28f8bl); }
@Test
public void test01065() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000048l); }
@Test
public void test01066() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test01067() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000048l); }
@Test
public void test01068() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0xffffff9400000048l); }
@Test
public void test01069() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0xffffff9400000000l); }
@Test
public void test01070() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000048l); }
@Test
public void test01071() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000048l); }
@Test
public void test01072() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test01073() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0xffffff795f147c58l); }
@Test
public void test01074() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0x000000095f147c58l); }
@Test
public void test01075() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000048l); }
@Test
public void test01076() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000048l); }
@Test
public void test01077() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test01078() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0x000000095f147c58l); }
@Test
public void test01079() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01080() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000048l); }
@Test
public void test01081() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000090l); }
@Test
public void test01082() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000048l); }
@Test
public void test01083() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffb8l; AssertJUnit.assertEquals("multiply", result, 0x5f147c195f147c58l); }
@Test
public void test01084() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0xfffffb8000000900l); }
@Test
public void test01085() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0xfffffb8000000000l); }
@Test
public void test01086() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0xfffff70000000900l); }
@Test
public void test01087() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0xfffff28000000900l); }
@Test
public void test01088() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0xfffff28000000000l); }
@Test
public void test01089() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0xffffee0000000900l); }
@Test
public void test01090() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0x0000048000000900l); }
@Test
public void test01091() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0x0000048000000000l); }
@Test
public void test01092() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0xffffef2be28f8b00l); }
@Test
public void test01093() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0x0000012be28f8b00l); }
@Test
public void test01094() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000900l); }
@Test
public void test01095() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0x0000048000000900l); }
@Test
public void test01096() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0x0000048000000000l); }
@Test
public void test01097() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0x0000012be28f8b00l); }
@Test
public void test01098() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01099() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000900l); }
@Test
public void test01100() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001200l); }
@Test
public void test01101() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000900l); }
@Test
public void test01102() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff700l; AssertJUnit.assertEquals("multiply", result, 0xe28f832be28f8b00l); }
@Test
public void test01103() { x = 0x000000007fffffffl; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000900000000l); }
@Test
public void test01104() { x = 0x0000000080000000l; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01105() { x = 0x00000000ffffffffl; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000900000000l); }
@Test
public void test01106() { x = 0x000000017fffffffl; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000900000000l); }
@Test
public void test01107() { x = 0x0000000180000000l; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01108() { x = 0x00000001ffffffffl; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000900000000l); }
@Test
public void test01109() { x = 0xffffffff7fffffffl; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000900000000l); }
@Test
public void test01110() { x = 0xffffffff80000000l; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01111() { x = 0x00000001deadf00dl; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x2be28f8b00000000l); }
@Test
public void test01112() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x2be28f8b00000000l); }
@Test
public void test01113() { x = 0x7fffffffffffffffl; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000900000000l); }
@Test
public void test01114() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000900000000l); }
@Test
public void test01115() { x = 0x7fffffff80000000l; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01116() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x2be28f8b00000000l); }
@Test
public void test01117() { x = 0x8000000000000000l; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01118() { x = 0xffffffffffffffffl; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000900000000l); }
@Test
public void test01119() { x = 0xfffffffffffffffel; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001200000000l); }
@Test
public void test01120() { x = 0xefffffffffffffffl; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000900000000l); }
@Test
public void test01121() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffff700000000l; AssertJUnit.assertEquals("multiply", result, 0x2be28f8b00000000l); }
@Test
public void test01122() { x = 0x000000007fffffffl; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000000l); }
@Test
public void test01123() { x = 0x0000000080000000l; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01124() { x = 0x00000000ffffffffl; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000000l); }
@Test
public void test01125() { x = 0x000000017fffffffl; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000000l); }
@Test
public void test01126() { x = 0x0000000180000000l; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01127() { x = 0x00000001ffffffffl; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000000l); }
@Test
public void test01128() { x = 0xffffffff7fffffffl; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000000l); }
@Test
public void test01129() { x = 0xffffffff80000000l; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01130() { x = 0x00000001deadf00dl; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x5f147c5800000000l); }
@Test
public void test01131() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x5f147c5800000000l); }
@Test
public void test01132() { x = 0x7fffffffffffffffl; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000000l); }
@Test
public void test01133() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000000l); }
@Test
public void test01134() { x = 0x7fffffff80000000l; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01135() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x5f147c5800000000l); }
@Test
public void test01136() { x = 0x8000000000000000l; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01137() { x = 0xffffffffffffffffl; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000000l); }
@Test
public void test01138() { x = 0xfffffffffffffffel; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test01139() { x = 0xefffffffffffffffl; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000000l); }
@Test
public void test01140() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffb800000000l; AssertJUnit.assertEquals("multiply", result, 0x5f147c5800000000l); }
@Test
public void test01141() { x = 0x000000007fffffffl; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0x00000004fffffff6l); }
@Test
public void test01142() { x = 0x0000000080000000l; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0x0000000500000000l); }
@Test
public void test01143() { x = 0x00000000ffffffffl; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0x00000009fffffff6l); }
@Test
public void test01144() { x = 0x000000017fffffffl; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0x0000000efffffff6l); }
@Test
public void test01145() { x = 0x0000000180000000l; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0x0000000f00000000l); }
@Test
public void test01146() { x = 0x00000001ffffffffl; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0x00000013fffffff6l); }
@Test
public void test01147() { x = 0xffffffff7fffffffl; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0xfffffffafffffff6l); }
@Test
public void test01148() { x = 0xffffffff80000000l; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0xfffffffb00000000l); }
@Test
public void test01149() { x = 0x00000001deadf00dl; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0x00000012b2cb6082l); }
@Test
public void test01150() { x = 0xffffffffdeadf00dl; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0xfffffffeb2cb6082l); }
@Test
public void test01151() { x = 0x7fffffffffffffffl; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff6l); }
@Test
public void test01152() { x = 0x7fffffff7fffffffl; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0xfffffffafffffff6l); }
@Test
public void test01153() { x = 0x7fffffff80000000l; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0xfffffffb00000000l); }
@Test
public void test01154() { x = 0x7fffffffdeadf00dl; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0xfffffffeb2cb6082l); }
@Test
public void test01155() { x = 0x8000000000000000l; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01156() { x = 0xffffffffffffffffl; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff6l); }
@Test
public void test01157() { x = 0xfffffffffffffffel; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffecl); }
@Test
public void test01158() { x = 0xefffffffffffffffl; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0x5ffffffffffffff6l); }
@Test
public void test01159() { x = 0xdeadf00ddeadf00dl; long result = x * 0xal; AssertJUnit.assertEquals("multiply", result, 0xb2cb608ab2cb6082l); }
@Test
public void test01160() { x = 0x000000007fffffffl; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0x00000027ffffffb0l); }
@Test
public void test01161() { x = 0x0000000080000000l; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000000l); }
@Test
public void test01162() { x = 0x00000000ffffffffl; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0x0000004fffffffb0l); }
@Test
public void test01163() { x = 0x000000017fffffffl; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0x00000077ffffffb0l); }
@Test
public void test01164() { x = 0x0000000180000000l; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0x0000007800000000l); }
@Test
public void test01165() { x = 0x00000001ffffffffl; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0x0000009fffffffb0l); }
@Test
public void test01166() { x = 0xffffffff7fffffffl; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0xffffffd7ffffffb0l); }
@Test
public void test01167() { x = 0xffffffff80000000l; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000000l); }
@Test
public void test01168() { x = 0x00000001deadf00dl; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0x00000095965b0410l); }
@Test
public void test01169() { x = 0xffffffffdeadf00dl; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0xfffffff5965b0410l); }
@Test
public void test01170() { x = 0x7fffffffffffffffl; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffb0l); }
@Test
public void test01171() { x = 0x7fffffff7fffffffl; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0xffffffd7ffffffb0l); }
@Test
public void test01172() { x = 0x7fffffff80000000l; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000000l); }
@Test
public void test01173() { x = 0x7fffffffdeadf00dl; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0xfffffff5965b0410l); }
@Test
public void test01174() { x = 0x8000000000000000l; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01175() { x = 0xffffffffffffffffl; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffb0l); }
@Test
public void test01176() { x = 0xfffffffffffffffel; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff60l); }
@Test
public void test01177() { x = 0xefffffffffffffffl; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffb0l); }
@Test
public void test01178() { x = 0xdeadf00ddeadf00dl; long result = x * 0x50l; AssertJUnit.assertEquals("multiply", result, 0x965b0455965b0410l); }
@Test
public void test01179() { x = 0x000000007fffffffl; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0x000004fffffff600l); }
@Test
public void test01180() { x = 0x0000000080000000l; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0x0000050000000000l); }
@Test
public void test01181() { x = 0x00000000ffffffffl; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0x000009fffffff600l); }
@Test
public void test01182() { x = 0x000000017fffffffl; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0x00000efffffff600l); }
@Test
public void test01183() { x = 0x0000000180000000l; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0x00000f0000000000l); }
@Test
public void test01184() { x = 0x00000001ffffffffl; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0x000013fffffff600l); }
@Test
public void test01185() { x = 0xffffffff7fffffffl; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0xfffffafffffff600l); }
@Test
public void test01186() { x = 0xffffffff80000000l; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0xfffffb0000000000l); }
@Test
public void test01187() { x = 0x00000001deadf00dl; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0x000012b2cb608200l); }
@Test
public void test01188() { x = 0xffffffffdeadf00dl; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb2cb608200l); }
@Test
public void test01189() { x = 0x7fffffffffffffffl; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff600l); }
@Test
public void test01190() { x = 0x7fffffff7fffffffl; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0xfffffafffffff600l); }
@Test
public void test01191() { x = 0x7fffffff80000000l; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0xfffffb0000000000l); }
@Test
public void test01192() { x = 0x7fffffffdeadf00dl; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb2cb608200l); }
@Test
public void test01193() { x = 0x8000000000000000l; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01194() { x = 0xffffffffffffffffl; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff600l); }
@Test
public void test01195() { x = 0xfffffffffffffffel; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffec00l); }
@Test
public void test01196() { x = 0xefffffffffffffffl; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff600l); }
@Test
public void test01197() { x = 0xdeadf00ddeadf00dl; long result = x * 0xa00l; AssertJUnit.assertEquals("multiply", result, 0xcb608ab2cb608200l); }
@Test
public void test01198() { x = 0x000000007fffffffl; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000000l); }
@Test
public void test01199() { x = 0x0000000080000000l; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01200() { x = 0x00000000ffffffffl; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000000l); }
@Test
public void test01201() { x = 0x000000017fffffffl; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000000l); }
@Test
public void test01202() { x = 0x0000000180000000l; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01203() { x = 0x00000001ffffffffl; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000000l); }
@Test
public void test01204() { x = 0xffffffff7fffffffl; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000000l); }
@Test
public void test01205() { x = 0xffffffff80000000l; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01206() { x = 0x00000001deadf00dl; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0xb2cb608200000000l); }
@Test
public void test01207() { x = 0xffffffffdeadf00dl; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0xb2cb608200000000l); }
@Test
public void test01208() { x = 0x7fffffffffffffffl; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000000l); }
@Test
public void test01209() { x = 0x7fffffff7fffffffl; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000000l); }
@Test
public void test01210() { x = 0x7fffffff80000000l; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01211() { x = 0x7fffffffdeadf00dl; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0xb2cb608200000000l); }
@Test
public void test01212() { x = 0x8000000000000000l; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01213() { x = 0xffffffffffffffffl; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000000l); }
@Test
public void test01214() { x = 0xfffffffffffffffel; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000000l); }
@Test
public void test01215() { x = 0xefffffffffffffffl; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000000l); }
@Test
public void test01216() { x = 0xdeadf00ddeadf00dl; long result = x * 0xa00000000l; AssertJUnit.assertEquals("multiply", result, 0xb2cb608200000000l); }
@Test
public void test01217() { x = 0x000000007fffffffl; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000000l); }
@Test
public void test01218() { x = 0x0000000080000000l; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01219() { x = 0x00000000ffffffffl; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000000l); }
@Test
public void test01220() { x = 0x000000017fffffffl; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000000l); }
@Test
public void test01221() { x = 0x0000000180000000l; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01222() { x = 0x00000001ffffffffl; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000000l); }
@Test
public void test01223() { x = 0xffffffff7fffffffl; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000000l); }
@Test
public void test01224() { x = 0xffffffff80000000l; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01225() { x = 0x00000001deadf00dl; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0x965b041000000000l); }
@Test
public void test01226() { x = 0xffffffffdeadf00dl; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0x965b041000000000l); }
@Test
public void test01227() { x = 0x7fffffffffffffffl; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000000l); }
@Test
public void test01228() { x = 0x7fffffff7fffffffl; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000000l); }
@Test
public void test01229() { x = 0x7fffffff80000000l; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01230() { x = 0x7fffffffdeadf00dl; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0x965b041000000000l); }
@Test
public void test01231() { x = 0x8000000000000000l; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01232() { x = 0xffffffffffffffffl; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000000l); }
@Test
public void test01233() { x = 0xfffffffffffffffel; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6000000000l); }
@Test
public void test01234() { x = 0xefffffffffffffffl; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000000l); }
@Test
public void test01235() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5000000000l; AssertJUnit.assertEquals("multiply", result, 0x965b041000000000l); }
@Test
public void test01236() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb0000000al); }
@Test
public void test01237() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb00000000l); }
@Test
public void test01238() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0xfffffff60000000al); }
@Test
public void test01239() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0xfffffff10000000al); }
@Test
public void test01240() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0xfffffff100000000l); }
@Test
public void test01241() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0xffffffec0000000al); }
@Test
public void test01242() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0x000000050000000al); }
@Test
public void test01243() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0x0000000500000000l); }
@Test
public void test01244() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0xffffffed4d349f7el); }
@Test
public void test01245() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0x000000014d349f7el); }
@Test
public void test01246() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0x000000000000000al); }
@Test
public void test01247() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0x000000050000000al); }
@Test
public void test01248() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0x0000000500000000l); }
@Test
public void test01249() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0x000000014d349f7el); }
@Test
public void test01250() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01251() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0x000000000000000al); }
@Test
public void test01252() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000014l); }
@Test
public void test01253() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0xa00000000000000al); }
@Test
public void test01254() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffff6l; AssertJUnit.assertEquals("multiply", result, 0x4d349f754d349f7el); }
@Test
public void test01255() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000050l); }
@Test
public void test01256() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000000l); }
@Test
public void test01257() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000050l); }
@Test
public void test01258() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000050l); }
@Test
public void test01259() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000000l); }
@Test
public void test01260() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0xffffff6000000050l); }
@Test
public void test01261() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000050l); }
@Test
public void test01262() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000000l); }
@Test
public void test01263() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0xffffff6a69a4fbf0l); }
@Test
public void test01264() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0x0000000a69a4fbf0l); }
@Test
public void test01265() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000050l); }
@Test
public void test01266() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000050l); }
@Test
public void test01267() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000000l); }
@Test
public void test01268() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0x0000000a69a4fbf0l); }
@Test
public void test01269() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01270() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000050l); }
@Test
public void test01271() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000a0l); }
@Test
public void test01272() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000050l); }
@Test
public void test01273() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffb0l; AssertJUnit.assertEquals("multiply", result, 0x69a4fbaa69a4fbf0l); }
@Test
public void test01274() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0xfffffb0000000a00l); }
@Test
public void test01275() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0xfffffb0000000000l); }
@Test
public void test01276() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0xfffff60000000a00l); }
@Test
public void test01277() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0xfffff10000000a00l); }
@Test
public void test01278() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0xfffff10000000000l); }
@Test
public void test01279() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0xffffec0000000a00l); }
@Test
public void test01280() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0x0000050000000a00l); }
@Test
public void test01281() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0x0000050000000000l); }
@Test
public void test01282() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0xffffed4d349f7e00l); }
@Test
public void test01283() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0x0000014d349f7e00l); }
@Test
public void test01284() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000a00l); }
@Test
public void test01285() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0x0000050000000a00l); }
@Test
public void test01286() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0x0000050000000000l); }
@Test
public void test01287() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0x0000014d349f7e00l); }
@Test
public void test01288() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01289() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000a00l); }
@Test
public void test01290() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001400l); }
@Test
public void test01291() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000a00l); }
@Test
public void test01292() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff600l; AssertJUnit.assertEquals("multiply", result, 0x349f754d349f7e00l); }
@Test
public void test01293() { x = 0x000000007fffffffl; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000000l); }
@Test
public void test01294() { x = 0x0000000080000000l; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01295() { x = 0x00000000ffffffffl; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000000l); }
@Test
public void test01296() { x = 0x000000017fffffffl; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000000l); }
@Test
public void test01297() { x = 0x0000000180000000l; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01298() { x = 0x00000001ffffffffl; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000000l); }
@Test
public void test01299() { x = 0xffffffff7fffffffl; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000000l); }
@Test
public void test01300() { x = 0xffffffff80000000l; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01301() { x = 0x00000001deadf00dl; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x4d349f7e00000000l); }
@Test
public void test01302() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x4d349f7e00000000l); }
@Test
public void test01303() { x = 0x7fffffffffffffffl; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000000l); }
@Test
public void test01304() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000000l); }
@Test
public void test01305() { x = 0x7fffffff80000000l; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01306() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x4d349f7e00000000l); }
@Test
public void test01307() { x = 0x8000000000000000l; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01308() { x = 0xffffffffffffffffl; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000000l); }
@Test
public void test01309() { x = 0xfffffffffffffffel; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000000l); }
@Test
public void test01310() { x = 0xefffffffffffffffl; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000000l); }
@Test
public void test01311() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffff600000000l; AssertJUnit.assertEquals("multiply", result, 0x4d349f7e00000000l); }
@Test
public void test01312() { x = 0x000000007fffffffl; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005000000000l); }
@Test
public void test01313() { x = 0x0000000080000000l; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01314() { x = 0x00000000ffffffffl; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005000000000l); }
@Test
public void test01315() { x = 0x000000017fffffffl; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005000000000l); }
@Test
public void test01316() { x = 0x0000000180000000l; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01317() { x = 0x00000001ffffffffl; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005000000000l); }
@Test
public void test01318() { x = 0xffffffff7fffffffl; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005000000000l); }
@Test
public void test01319() { x = 0xffffffff80000000l; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01320() { x = 0x00000001deadf00dl; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x69a4fbf000000000l); }
@Test
public void test01321() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x69a4fbf000000000l); }
@Test
public void test01322() { x = 0x7fffffffffffffffl; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005000000000l); }
@Test
public void test01323() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005000000000l); }
@Test
public void test01324() { x = 0x7fffffff80000000l; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01325() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x69a4fbf000000000l); }
@Test
public void test01326() { x = 0x8000000000000000l; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01327() { x = 0xffffffffffffffffl; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005000000000l); }
@Test
public void test01328() { x = 0xfffffffffffffffel; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a000000000l); }
@Test
public void test01329() { x = 0xefffffffffffffffl; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005000000000l); }
@Test
public void test01330() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffb000000000l; AssertJUnit.assertEquals("multiply", result, 0x69a4fbf000000000l); }
@Test
public void test01331() { x = 0x000000007fffffffl; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0x000000057ffffff5l); }
@Test
public void test01332() { x = 0x0000000080000000l; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0x0000000580000000l); }
@Test
public void test01333() { x = 0x00000000ffffffffl; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0x0000000afffffff5l); }
@Test
public void test01334() { x = 0x000000017fffffffl; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0x000000107ffffff5l); }
@Test
public void test01335() { x = 0x0000000180000000l; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0x0000001080000000l); }
@Test
public void test01336() { x = 0x00000001ffffffffl; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0x00000015fffffff5l); }
@Test
public void test01337() { x = 0xffffffff7fffffffl; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0xfffffffa7ffffff5l); }
@Test
public void test01338() { x = 0xffffffff80000000l; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0xfffffffa80000000l); }
@Test
public void test01339() { x = 0x00000001deadf00dl; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0x000000149179508fl); }
@Test
public void test01340() { x = 0xffffffffdeadf00dl; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0xfffffffe9179508fl); }
@Test
public void test01341() { x = 0x7fffffffffffffffl; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffff5l); }
@Test
public void test01342() { x = 0x7fffffff7fffffffl; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0x7ffffffa7ffffff5l); }
@Test
public void test01343() { x = 0x7fffffff80000000l; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0x7ffffffa80000000l); }
@Test
public void test01344() { x = 0x7fffffffdeadf00dl; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0x7ffffffe9179508fl); }
@Test
public void test01345() { x = 0x8000000000000000l; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01346() { x = 0xffffffffffffffffl; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff5l); }
@Test
public void test01347() { x = 0xfffffffffffffffel; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffeal); }
@Test
public void test01348() { x = 0xefffffffffffffffl; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0x4ffffffffffffff5l); }
@Test
public void test01349() { x = 0xdeadf00ddeadf00dl; long result = x * 0xbl; AssertJUnit.assertEquals("multiply", result, 0x917950989179508fl); }
@Test
public void test01350() { x = 0x000000007fffffffl; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0x0000002bffffffa8l); }
@Test
public void test01351() { x = 0x0000000080000000l; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000000l); }
@Test
public void test01352() { x = 0x00000000ffffffffl; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0x00000057ffffffa8l); }
@Test
public void test01353() { x = 0x000000017fffffffl; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0x00000083ffffffa8l); }
@Test
public void test01354() { x = 0x0000000180000000l; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0x0000008400000000l); }
@Test
public void test01355() { x = 0x00000001ffffffffl; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0x000000afffffffa8l); }
@Test
public void test01356() { x = 0xffffffff7fffffffl; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0xffffffd3ffffffa8l); }
@Test
public void test01357() { x = 0xffffffff80000000l; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000000l); }
@Test
public void test01358() { x = 0x00000001deadf00dl; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0x000000a48bca8478l); }
@Test
public void test01359() { x = 0xffffffffdeadf00dl; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0xfffffff48bca8478l); }
@Test
public void test01360() { x = 0x7fffffffffffffffl; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffa8l); }
@Test
public void test01361() { x = 0x7fffffff7fffffffl; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0xffffffd3ffffffa8l); }
@Test
public void test01362() { x = 0x7fffffff80000000l; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000000l); }
@Test
public void test01363() { x = 0x7fffffffdeadf00dl; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0xfffffff48bca8478l); }
@Test
public void test01364() { x = 0x8000000000000000l; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01365() { x = 0xffffffffffffffffl; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffa8l); }
@Test
public void test01366() { x = 0xfffffffffffffffel; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff50l); }
@Test
public void test01367() { x = 0xefffffffffffffffl; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffa8l); }
@Test
public void test01368() { x = 0xdeadf00ddeadf00dl; long result = x * 0x58l; AssertJUnit.assertEquals("multiply", result, 0x8bca84c48bca8478l); }
@Test
public void test01369() { x = 0x000000007fffffffl; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0x0000057ffffff500l); }
@Test
public void test01370() { x = 0x0000000080000000l; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0x0000058000000000l); }
@Test
public void test01371() { x = 0x00000000ffffffffl; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0x00000afffffff500l); }
@Test
public void test01372() { x = 0x000000017fffffffl; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0x0000107ffffff500l); }
@Test
public void test01373() { x = 0x0000000180000000l; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0x0000108000000000l); }
@Test
public void test01374() { x = 0x00000001ffffffffl; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0x000015fffffff500l); }
@Test
public void test01375() { x = 0xffffffff7fffffffl; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa7ffffff500l); }
@Test
public void test01376() { x = 0xffffffff80000000l; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa8000000000l); }
@Test
public void test01377() { x = 0x00000001deadf00dl; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0x0000149179508f00l); }
@Test
public void test01378() { x = 0xffffffffdeadf00dl; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9179508f00l); }
@Test
public void test01379() { x = 0x7fffffffffffffffl; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff500l); }
@Test
public void test01380() { x = 0x7fffffff7fffffffl; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa7ffffff500l); }
@Test
public void test01381() { x = 0x7fffffff80000000l; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa8000000000l); }
@Test
public void test01382() { x = 0x7fffffffdeadf00dl; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9179508f00l); }
@Test
public void test01383() { x = 0x8000000000000000l; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01384() { x = 0xffffffffffffffffl; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff500l); }
@Test
public void test01385() { x = 0xfffffffffffffffel; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffea00l); }
@Test
public void test01386() { x = 0xefffffffffffffffl; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff500l); }
@Test
public void test01387() { x = 0xdeadf00ddeadf00dl; long result = x * 0xb00l; AssertJUnit.assertEquals("multiply", result, 0x7950989179508f00l); }
@Test
public void test01388() { x = 0x000000007fffffffl; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff500000000l); }
@Test
public void test01389() { x = 0x0000000080000000l; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01390() { x = 0x00000000ffffffffl; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff500000000l); }
@Test
public void test01391() { x = 0x000000017fffffffl; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff500000000l); }
@Test
public void test01392() { x = 0x0000000180000000l; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01393() { x = 0x00000001ffffffffl; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff500000000l); }
@Test
public void test01394() { x = 0xffffffff7fffffffl; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff500000000l); }
@Test
public void test01395() { x = 0xffffffff80000000l; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01396() { x = 0x00000001deadf00dl; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0x9179508f00000000l); }
@Test
public void test01397() { x = 0xffffffffdeadf00dl; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0x9179508f00000000l); }
@Test
public void test01398() { x = 0x7fffffffffffffffl; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff500000000l); }
@Test
public void test01399() { x = 0x7fffffff7fffffffl; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff500000000l); }
@Test
public void test01400() { x = 0x7fffffff80000000l; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01401() { x = 0x7fffffffdeadf00dl; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0x9179508f00000000l); }
@Test
public void test01402() { x = 0x8000000000000000l; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01403() { x = 0xffffffffffffffffl; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff500000000l); }
@Test
public void test01404() { x = 0xfffffffffffffffel; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffea00000000l); }
@Test
public void test01405() { x = 0xefffffffffffffffl; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff500000000l); }
@Test
public void test01406() { x = 0xdeadf00ddeadf00dl; long result = x * 0xb00000000l; AssertJUnit.assertEquals("multiply", result, 0x9179508f00000000l); }
@Test
public void test01407() { x = 0x000000007fffffffl; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa800000000l); }
@Test
public void test01408() { x = 0x0000000080000000l; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01409() { x = 0x00000000ffffffffl; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa800000000l); }
@Test
public void test01410() { x = 0x000000017fffffffl; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa800000000l); }
@Test
public void test01411() { x = 0x0000000180000000l; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01412() { x = 0x00000001ffffffffl; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa800000000l); }
@Test
public void test01413() { x = 0xffffffff7fffffffl; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa800000000l); }
@Test
public void test01414() { x = 0xffffffff80000000l; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01415() { x = 0x00000001deadf00dl; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0x8bca847800000000l); }
@Test
public void test01416() { x = 0xffffffffdeadf00dl; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0x8bca847800000000l); }
@Test
public void test01417() { x = 0x7fffffffffffffffl; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa800000000l); }
@Test
public void test01418() { x = 0x7fffffff7fffffffl; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa800000000l); }
@Test
public void test01419() { x = 0x7fffffff80000000l; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01420() { x = 0x7fffffffdeadf00dl; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0x8bca847800000000l); }
@Test
public void test01421() { x = 0x8000000000000000l; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01422() { x = 0xffffffffffffffffl; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa800000000l); }
@Test
public void test01423() { x = 0xfffffffffffffffel; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000000l); }
@Test
public void test01424() { x = 0xefffffffffffffffl; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa800000000l); }
@Test
public void test01425() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5800000000l; AssertJUnit.assertEquals("multiply", result, 0x8bca847800000000l); }
@Test
public void test01426() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0xfffffffa8000000bl); }
@Test
public void test01427() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0xfffffffa80000000l); }
@Test
public void test01428() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0xfffffff50000000bl); }
@Test
public void test01429() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0xffffffef8000000bl); }
@Test
public void test01430() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0xffffffef80000000l); }
@Test
public void test01431() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0xffffffea0000000bl); }
@Test
public void test01432() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0x000000058000000bl); }
@Test
public void test01433() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0x0000000580000000l); }
@Test
public void test01434() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0xffffffeb6e86af71l); }
@Test
public void test01435() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0x000000016e86af71l); }
@Test
public void test01436() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0x800000000000000bl); }
@Test
public void test01437() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0x800000058000000bl); }
@Test
public void test01438() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0x8000000580000000l); }
@Test
public void test01439() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0x800000016e86af71l); }
@Test
public void test01440() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01441() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0x000000000000000bl); }
@Test
public void test01442() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000016l); }
@Test
public void test01443() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0xb00000000000000bl); }
@Test
public void test01444() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffff5l; AssertJUnit.assertEquals("multiply", result, 0x6e86af676e86af71l); }
@Test
public void test01445() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000058l); }
@Test
public void test01446() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000000l); }
@Test
public void test01447() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0xffffffa800000058l); }
@Test
public void test01448() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0xffffff7c00000058l); }
@Test
public void test01449() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0xffffff7c00000000l); }
@Test
public void test01450() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000058l); }
@Test
public void test01451() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000058l); }
@Test
public void test01452() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000000l); }
@Test
public void test01453() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0xffffff5b74357b88l); }
@Test
public void test01454() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0x0000000b74357b88l); }
@Test
public void test01455() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000058l); }
@Test
public void test01456() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000058l); }
@Test
public void test01457() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000000l); }
@Test
public void test01458() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0x0000000b74357b88l); }
@Test
public void test01459() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01460() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000058l); }
@Test
public void test01461() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000b0l); }
@Test
public void test01462() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000058l); }
@Test
public void test01463() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffa8l; AssertJUnit.assertEquals("multiply", result, 0x74357b3b74357b88l); }
@Test
public void test01464() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0xfffffa8000000b00l); }
@Test
public void test01465() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0xfffffa8000000000l); }
@Test
public void test01466() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0xfffff50000000b00l); }
@Test
public void test01467() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0xffffef8000000b00l); }
@Test
public void test01468() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0xffffef8000000000l); }
@Test
public void test01469() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0xffffea0000000b00l); }
@Test
public void test01470() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0x0000058000000b00l); }
@Test
public void test01471() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0x0000058000000000l); }
@Test
public void test01472() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0xffffeb6e86af7100l); }
@Test
public void test01473() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0x0000016e86af7100l); }
@Test
public void test01474() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000b00l); }
@Test
public void test01475() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0x0000058000000b00l); }
@Test
public void test01476() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0x0000058000000000l); }
@Test
public void test01477() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0x0000016e86af7100l); }
@Test
public void test01478() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01479() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000b00l); }
@Test
public void test01480() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001600l); }
@Test
public void test01481() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000b00l); }
@Test
public void test01482() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff500l; AssertJUnit.assertEquals("multiply", result, 0x86af676e86af7100l); }
@Test
public void test01483() { x = 0x000000007fffffffl; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000b00000000l); }
@Test
public void test01484() { x = 0x0000000080000000l; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01485() { x = 0x00000000ffffffffl; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000b00000000l); }
@Test
public void test01486() { x = 0x000000017fffffffl; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000b00000000l); }
@Test
public void test01487() { x = 0x0000000180000000l; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01488() { x = 0x00000001ffffffffl; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000b00000000l); }
@Test
public void test01489() { x = 0xffffffff7fffffffl; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000b00000000l); }
@Test
public void test01490() { x = 0xffffffff80000000l; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01491() { x = 0x00000001deadf00dl; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x6e86af7100000000l); }
@Test
public void test01492() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x6e86af7100000000l); }
@Test
public void test01493() { x = 0x7fffffffffffffffl; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000b00000000l); }
@Test
public void test01494() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000b00000000l); }
@Test
public void test01495() { x = 0x7fffffff80000000l; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01496() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x6e86af7100000000l); }
@Test
public void test01497() { x = 0x8000000000000000l; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01498() { x = 0xffffffffffffffffl; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000b00000000l); }
@Test
public void test01499() { x = 0xfffffffffffffffel; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001600000000l); }
@Test
public void test01500() { x = 0xefffffffffffffffl; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000b00000000l); }
@Test
public void test01501() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffff500000000l; AssertJUnit.assertEquals("multiply", result, 0x6e86af7100000000l); }
@Test
public void test01502() { x = 0x000000007fffffffl; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005800000000l); }
@Test
public void test01503() { x = 0x0000000080000000l; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01504() { x = 0x00000000ffffffffl; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005800000000l); }
@Test
public void test01505() { x = 0x000000017fffffffl; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005800000000l); }
@Test
public void test01506() { x = 0x0000000180000000l; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01507() { x = 0x00000001ffffffffl; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005800000000l); }
@Test
public void test01508() { x = 0xffffffff7fffffffl; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005800000000l); }
@Test
public void test01509() { x = 0xffffffff80000000l; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01510() { x = 0x00000001deadf00dl; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x74357b8800000000l); }
@Test
public void test01511() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x74357b8800000000l); }
@Test
public void test01512() { x = 0x7fffffffffffffffl; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005800000000l); }
@Test
public void test01513() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005800000000l); }
@Test
public void test01514() { x = 0x7fffffff80000000l; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01515() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x74357b8800000000l); }
@Test
public void test01516() { x = 0x8000000000000000l; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01517() { x = 0xffffffffffffffffl; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005800000000l); }
@Test
public void test01518() { x = 0xfffffffffffffffel; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000000l); }
@Test
public void test01519() { x = 0xefffffffffffffffl; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005800000000l); }
@Test
public void test01520() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffa800000000l; AssertJUnit.assertEquals("multiply", result, 0x74357b8800000000l); }
@Test
public void test01521() { x = 0x000000007fffffffl; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0x00000005fffffff4l); }
@Test
public void test01522() { x = 0x0000000080000000l; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0x0000000600000000l); }
@Test
public void test01523() { x = 0x00000000ffffffffl; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0x0000000bfffffff4l); }
@Test
public void test01524() { x = 0x000000017fffffffl; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0x00000011fffffff4l); }
@Test
public void test01525() { x = 0x0000000180000000l; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0x0000001200000000l); }
@Test
public void test01526() { x = 0x00000001ffffffffl; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0x00000017fffffff4l); }
@Test
public void test01527() { x = 0xffffffff7fffffffl; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0xfffffff9fffffff4l); }
@Test
public void test01528() { x = 0xffffffff80000000l; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000000l); }
@Test
public void test01529() { x = 0x00000001deadf00dl; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0x000000167027409cl); }
@Test
public void test01530() { x = 0xffffffffdeadf00dl; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0xfffffffe7027409cl); }
@Test
public void test01531() { x = 0x7fffffffffffffffl; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff4l); }
@Test
public void test01532() { x = 0x7fffffff7fffffffl; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0xfffffff9fffffff4l); }
@Test
public void test01533() { x = 0x7fffffff80000000l; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000000l); }
@Test
public void test01534() { x = 0x7fffffffdeadf00dl; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0xfffffffe7027409cl); }
@Test
public void test01535() { x = 0x8000000000000000l; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01536() { x = 0xffffffffffffffffl; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff4l); }
@Test
public void test01537() { x = 0xfffffffffffffffel; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe8l); }
@Test
public void test01538() { x = 0xefffffffffffffffl; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0x3ffffffffffffff4l); }
@Test
public void test01539() { x = 0xdeadf00ddeadf00dl; long result = x * 0xcl; AssertJUnit.assertEquals("multiply", result, 0x702740a67027409cl); }
@Test
public void test01540() { x = 0x000000007fffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x0000002fffffffa0l); }
@Test
public void test01541() { x = 0x0000000080000000l; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test01542() { x = 0x00000000ffffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x0000005fffffffa0l); }
@Test
public void test01543() { x = 0x000000017fffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x0000008fffffffa0l); }
@Test
public void test01544() { x = 0x0000000180000000l; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test01545() { x = 0x00000001ffffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x000000bfffffffa0l); }
@Test
public void test01546() { x = 0xffffffff7fffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffcfffffffa0l); }
@Test
public void test01547() { x = 0xffffffff80000000l; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test01548() { x = 0x00000001deadf00dl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x000000b3813a04e0l); }
@Test
public void test01549() { x = 0xffffffffdeadf00dl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xfffffff3813a04e0l); }
@Test
public void test01550() { x = 0x7fffffffffffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffa0l); }
@Test
public void test01551() { x = 0x7fffffff7fffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffcfffffffa0l); }
@Test
public void test01552() { x = 0x7fffffff80000000l; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test01553() { x = 0x7fffffffdeadf00dl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xfffffff3813a04e0l); }
@Test
public void test01554() { x = 0x8000000000000000l; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01555() { x = 0xffffffffffffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffa0l); }
@Test
public void test01556() { x = 0xfffffffffffffffel; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff40l); }
@Test
public void test01557() { x = 0xefffffffffffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffa0l); }
@Test
public void test01558() { x = 0xdeadf00ddeadf00dl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x813a0533813a04e0l); }
@Test
public void test01559() { x = 0x000000007fffffffl; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0x000005fffffff400l); }
@Test
public void test01560() { x = 0x0000000080000000l; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0x0000060000000000l); }
@Test
public void test01561() { x = 0x00000000ffffffffl; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0x00000bfffffff400l); }
@Test
public void test01562() { x = 0x000000017fffffffl; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0x000011fffffff400l); }
@Test
public void test01563() { x = 0x0000000180000000l; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0x0000120000000000l); }
@Test
public void test01564() { x = 0x00000001ffffffffl; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0x000017fffffff400l); }
@Test
public void test01565() { x = 0xffffffff7fffffffl; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0xfffff9fffffff400l); }
@Test
public void test01566() { x = 0xffffffff80000000l; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa0000000000l); }
@Test
public void test01567() { x = 0x00000001deadf00dl; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0x0000167027409c00l); }
@Test
public void test01568() { x = 0xffffffffdeadf00dl; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7027409c00l); }
@Test
public void test01569() { x = 0x7fffffffffffffffl; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff400l); }
@Test
public void test01570() { x = 0x7fffffff7fffffffl; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0xfffff9fffffff400l); }
@Test
public void test01571() { x = 0x7fffffff80000000l; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa0000000000l); }
@Test
public void test01572() { x = 0x7fffffffdeadf00dl; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7027409c00l); }
@Test
public void test01573() { x = 0x8000000000000000l; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01574() { x = 0xffffffffffffffffl; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff400l); }
@Test
public void test01575() { x = 0xfffffffffffffffel; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe800l); }
@Test
public void test01576() { x = 0xefffffffffffffffl; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff400l); }
@Test
public void test01577() { x = 0xdeadf00ddeadf00dl; long result = x * 0xc00l; AssertJUnit.assertEquals("multiply", result, 0x2740a67027409c00l); }
@Test
public void test01578() { x = 0x000000007fffffffl; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test01579() { x = 0x0000000080000000l; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01580() { x = 0x00000000ffffffffl; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test01581() { x = 0x000000017fffffffl; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test01582() { x = 0x0000000180000000l; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01583() { x = 0x00000001ffffffffl; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test01584() { x = 0xffffffff7fffffffl; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test01585() { x = 0xffffffff80000000l; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01586() { x = 0x00000001deadf00dl; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0x7027409c00000000l); }
@Test
public void test01587() { x = 0xffffffffdeadf00dl; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0x7027409c00000000l); }
@Test
public void test01588() { x = 0x7fffffffffffffffl; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test01589() { x = 0x7fffffff7fffffffl; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test01590() { x = 0x7fffffff80000000l; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01591() { x = 0x7fffffffdeadf00dl; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0x7027409c00000000l); }
@Test
public void test01592() { x = 0x8000000000000000l; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01593() { x = 0xffffffffffffffffl; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test01594() { x = 0xfffffffffffffffel; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test01595() { x = 0xefffffffffffffffl; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test01596() { x = 0xdeadf00ddeadf00dl; long result = x * 0xc00000000l; AssertJUnit.assertEquals("multiply", result, 0x7027409c00000000l); }
@Test
public void test01597() { x = 0x000000007fffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test01598() { x = 0x0000000080000000l; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01599() { x = 0x00000000ffffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test01600() { x = 0x000000017fffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test01601() { x = 0x0000000180000000l; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01602() { x = 0x00000001ffffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test01603() { x = 0xffffffff7fffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test01604() { x = 0xffffffff80000000l; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01605() { x = 0x00000001deadf00dl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x813a04e000000000l); }
@Test
public void test01606() { x = 0xffffffffdeadf00dl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x813a04e000000000l); }
@Test
public void test01607() { x = 0x7fffffffffffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test01608() { x = 0x7fffffff7fffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test01609() { x = 0x7fffffff80000000l; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01610() { x = 0x7fffffffdeadf00dl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x813a04e000000000l); }
@Test
public void test01611() { x = 0x8000000000000000l; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01612() { x = 0xffffffffffffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test01613() { x = 0xfffffffffffffffel; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4000000000l); }
@Test
public void test01614() { x = 0xefffffffffffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test01615() { x = 0xdeadf00ddeadf00dl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x813a04e000000000l); }
@Test
public void test01616() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0xfffffffa0000000cl); }
@Test
public void test01617() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0xfffffffa00000000l); }
@Test
public void test01618() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0xfffffff40000000cl); }
@Test
public void test01619() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0xffffffee0000000cl); }
@Test
public void test01620() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000000l); }
@Test
public void test01621() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0xffffffe80000000cl); }
@Test
public void test01622() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0x000000060000000cl); }
@Test
public void test01623() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0x0000000600000000l); }
@Test
public void test01624() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0xffffffe98fd8bf64l); }
@Test
public void test01625() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0x000000018fd8bf64l); }
@Test
public void test01626() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0x000000000000000cl); }
@Test
public void test01627() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0x000000060000000cl); }
@Test
public void test01628() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0x0000000600000000l); }
@Test
public void test01629() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0x000000018fd8bf64l); }
@Test
public void test01630() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01631() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0x000000000000000cl); }
@Test
public void test01632() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000018l); }
@Test
public void test01633() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0xc00000000000000cl); }
@Test
public void test01634() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffff4l; AssertJUnit.assertEquals("multiply", result, 0x8fd8bf598fd8bf64l); }
@Test
public void test01635() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000060l); }
@Test
public void test01636() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test01637() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000060l); }
@Test
public void test01638() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000060l); }
@Test
public void test01639() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test01640() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0xffffff4000000060l); }
@Test
public void test01641() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000060l); }
@Test
public void test01642() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test01643() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0xffffff4c7ec5fb20l); }
@Test
public void test01644() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000000c7ec5fb20l); }
@Test
public void test01645() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000060l); }
@Test
public void test01646() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000060l); }
@Test
public void test01647() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test01648() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000000c7ec5fb20l); }
@Test
public void test01649() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01650() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000060l); }
@Test
public void test01651() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000c0l); }
@Test
public void test01652() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000060l); }
@Test
public void test01653() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x7ec5facc7ec5fb20l); }
@Test
public void test01654() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0xfffffa0000000c00l); }
@Test
public void test01655() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0xfffffa0000000000l); }
@Test
public void test01656() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0xfffff40000000c00l); }
@Test
public void test01657() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0xffffee0000000c00l); }
@Test
public void test01658() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0xffffee0000000000l); }
@Test
public void test01659() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0xffffe80000000c00l); }
@Test
public void test01660() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0x0000060000000c00l); }
@Test
public void test01661() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0x0000060000000000l); }
@Test
public void test01662() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0xffffe98fd8bf6400l); }
@Test
public void test01663() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0x0000018fd8bf6400l); }
@Test
public void test01664() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000c00l); }
@Test
public void test01665() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0x0000060000000c00l); }
@Test
public void test01666() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0x0000060000000000l); }
@Test
public void test01667() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0x0000018fd8bf6400l); }
@Test
public void test01668() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01669() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000c00l); }
@Test
public void test01670() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001800l); }
@Test
public void test01671() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000c00l); }
@Test
public void test01672() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff400l; AssertJUnit.assertEquals("multiply", result, 0xd8bf598fd8bf6400l); }
@Test
public void test01673() { x = 0x000000007fffffffl; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test01674() { x = 0x0000000080000000l; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01675() { x = 0x00000000ffffffffl; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test01676() { x = 0x000000017fffffffl; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test01677() { x = 0x0000000180000000l; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01678() { x = 0x00000001ffffffffl; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test01679() { x = 0xffffffff7fffffffl; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test01680() { x = 0xffffffff80000000l; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01681() { x = 0x00000001deadf00dl; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x8fd8bf6400000000l); }
@Test
public void test01682() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x8fd8bf6400000000l); }
@Test
public void test01683() { x = 0x7fffffffffffffffl; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test01684() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test01685() { x = 0x7fffffff80000000l; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01686() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x8fd8bf6400000000l); }
@Test
public void test01687() { x = 0x8000000000000000l; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01688() { x = 0xffffffffffffffffl; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test01689() { x = 0xfffffffffffffffel; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test01690() { x = 0xefffffffffffffffl; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test01691() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffff400000000l; AssertJUnit.assertEquals("multiply", result, 0x8fd8bf6400000000l); }
@Test
public void test01692() { x = 0x000000007fffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test01693() { x = 0x0000000080000000l; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01694() { x = 0x00000000ffffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test01695() { x = 0x000000017fffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test01696() { x = 0x0000000180000000l; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01697() { x = 0x00000001ffffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test01698() { x = 0xffffffff7fffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test01699() { x = 0xffffffff80000000l; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01700() { x = 0x00000001deadf00dl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x7ec5fb2000000000l); }
@Test
public void test01701() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x7ec5fb2000000000l); }
@Test
public void test01702() { x = 0x7fffffffffffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test01703() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test01704() { x = 0x7fffffff80000000l; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01705() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x7ec5fb2000000000l); }
@Test
public void test01706() { x = 0x8000000000000000l; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01707() { x = 0xffffffffffffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test01708() { x = 0xfffffffffffffffel; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c000000000l); }
@Test
public void test01709() { x = 0xefffffffffffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test01710() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x7ec5fb2000000000l); }
@Test
public void test01711() { x = 0x000000007fffffffl; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0x000000067ffffff3l); }
@Test
public void test01712() { x = 0x0000000080000000l; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0x0000000680000000l); }
@Test
public void test01713() { x = 0x00000000ffffffffl; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0x0000000cfffffff3l); }
@Test
public void test01714() { x = 0x000000017fffffffl; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0x000000137ffffff3l); }
@Test
public void test01715() { x = 0x0000000180000000l; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0x0000001380000000l); }
@Test
public void test01716() { x = 0x00000001ffffffffl; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0x00000019fffffff3l); }
@Test
public void test01717() { x = 0xffffffff7fffffffl; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0xfffffff97ffffff3l); }
@Test
public void test01718() { x = 0xffffffff80000000l; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0xfffffff980000000l); }
@Test
public void test01719() { x = 0x00000001deadf00dl; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0x000000184ed530a9l); }
@Test
public void test01720() { x = 0xffffffffdeadf00dl; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0xfffffffe4ed530a9l); }
@Test
public void test01721() { x = 0x7fffffffffffffffl; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffff3l); }
@Test
public void test01722() { x = 0x7fffffff7fffffffl; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0x7ffffff97ffffff3l); }
@Test
public void test01723() { x = 0x7fffffff80000000l; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0x7ffffff980000000l); }
@Test
public void test01724() { x = 0x7fffffffdeadf00dl; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0x7ffffffe4ed530a9l); }
@Test
public void test01725() { x = 0x8000000000000000l; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01726() { x = 0xffffffffffffffffl; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff3l); }
@Test
public void test01727() { x = 0xfffffffffffffffel; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe6l); }
@Test
public void test01728() { x = 0xefffffffffffffffl; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0x2ffffffffffffff3l); }
@Test
public void test01729() { x = 0xdeadf00ddeadf00dl; long result = x * 0xdl; AssertJUnit.assertEquals("multiply", result, 0x4ed530b44ed530a9l); }
@Test
public void test01730() { x = 0x000000007fffffffl; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0x00000033ffffff98l); }
@Test
public void test01731() { x = 0x0000000080000000l; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000000l); }
@Test
public void test01732() { x = 0x00000000ffffffffl; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0x00000067ffffff98l); }
@Test
public void test01733() { x = 0x000000017fffffffl; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0x0000009bffffff98l); }
@Test
public void test01734() { x = 0x0000000180000000l; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0x0000009c00000000l); }
@Test
public void test01735() { x = 0x00000001ffffffffl; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0x000000cfffffff98l); }
@Test
public void test01736() { x = 0xffffffff7fffffffl; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0xffffffcbffffff98l); }
@Test
public void test01737() { x = 0xffffffff80000000l; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000000l); }
@Test
public void test01738() { x = 0x00000001deadf00dl; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0x000000c276a98548l); }
@Test
public void test01739() { x = 0xffffffffdeadf00dl; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0xfffffff276a98548l); }
@Test
public void test01740() { x = 0x7fffffffffffffffl; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff98l); }
@Test
public void test01741() { x = 0x7fffffff7fffffffl; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0xffffffcbffffff98l); }
@Test
public void test01742() { x = 0x7fffffff80000000l; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000000l); }
@Test
public void test01743() { x = 0x7fffffffdeadf00dl; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0xfffffff276a98548l); }
@Test
public void test01744() { x = 0x8000000000000000l; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01745() { x = 0xffffffffffffffffl; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff98l); }
@Test
public void test01746() { x = 0xfffffffffffffffel; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff30l); }
@Test
public void test01747() { x = 0xefffffffffffffffl; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff98l); }
@Test
public void test01748() { x = 0xdeadf00ddeadf00dl; long result = x * 0x68l; AssertJUnit.assertEquals("multiply", result, 0x76a985a276a98548l); }
@Test
public void test01749() { x = 0x000000007fffffffl; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0x0000067ffffff300l); }
@Test
public void test01750() { x = 0x0000000080000000l; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0x0000068000000000l); }
@Test
public void test01751() { x = 0x00000000ffffffffl; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0x00000cfffffff300l); }
@Test
public void test01752() { x = 0x000000017fffffffl; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0x0000137ffffff300l); }
@Test
public void test01753() { x = 0x0000000180000000l; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0x0000138000000000l); }
@Test
public void test01754() { x = 0x00000001ffffffffl; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0x000019fffffff300l); }
@Test
public void test01755() { x = 0xffffffff7fffffffl; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0xfffff97ffffff300l); }
@Test
public void test01756() { x = 0xffffffff80000000l; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0xfffff98000000000l); }
@Test
public void test01757() { x = 0x00000001deadf00dl; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0x0000184ed530a900l); }
@Test
public void test01758() { x = 0xffffffffdeadf00dl; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4ed530a900l); }
@Test
public void test01759() { x = 0x7fffffffffffffffl; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff300l); }
@Test
public void test01760() { x = 0x7fffffff7fffffffl; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0xfffff97ffffff300l); }
@Test
public void test01761() { x = 0x7fffffff80000000l; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0xfffff98000000000l); }
@Test
public void test01762() { x = 0x7fffffffdeadf00dl; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4ed530a900l); }
@Test
public void test01763() { x = 0x8000000000000000l; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01764() { x = 0xffffffffffffffffl; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff300l); }
@Test
public void test01765() { x = 0xfffffffffffffffel; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe600l); }
@Test
public void test01766() { x = 0xefffffffffffffffl; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff300l); }
@Test
public void test01767() { x = 0xdeadf00ddeadf00dl; long result = x * 0xd00l; AssertJUnit.assertEquals("multiply", result, 0xd530b44ed530a900l); }
@Test
public void test01768() { x = 0x000000007fffffffl; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff300000000l); }
@Test
public void test01769() { x = 0x0000000080000000l; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01770() { x = 0x00000000ffffffffl; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff300000000l); }
@Test
public void test01771() { x = 0x000000017fffffffl; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff300000000l); }
@Test
public void test01772() { x = 0x0000000180000000l; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01773() { x = 0x00000001ffffffffl; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff300000000l); }
@Test
public void test01774() { x = 0xffffffff7fffffffl; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff300000000l); }
@Test
public void test01775() { x = 0xffffffff80000000l; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01776() { x = 0x00000001deadf00dl; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0x4ed530a900000000l); }
@Test
public void test01777() { x = 0xffffffffdeadf00dl; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0x4ed530a900000000l); }
@Test
public void test01778() { x = 0x7fffffffffffffffl; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff300000000l); }
@Test
public void test01779() { x = 0x7fffffff7fffffffl; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff300000000l); }
@Test
public void test01780() { x = 0x7fffffff80000000l; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01781() { x = 0x7fffffffdeadf00dl; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0x4ed530a900000000l); }
@Test
public void test01782() { x = 0x8000000000000000l; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01783() { x = 0xffffffffffffffffl; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff300000000l); }
@Test
public void test01784() { x = 0xfffffffffffffffel; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe600000000l); }
@Test
public void test01785() { x = 0xefffffffffffffffl; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff300000000l); }
@Test
public void test01786() { x = 0xdeadf00ddeadf00dl; long result = x * 0xd00000000l; AssertJUnit.assertEquals("multiply", result, 0x4ed530a900000000l); }
@Test
public void test01787() { x = 0x000000007fffffffl; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000000l); }
@Test
public void test01788() { x = 0x0000000080000000l; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01789() { x = 0x00000000ffffffffl; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000000l); }
@Test
public void test01790() { x = 0x000000017fffffffl; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000000l); }
@Test
public void test01791() { x = 0x0000000180000000l; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01792() { x = 0x00000001ffffffffl; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000000l); }
@Test
public void test01793() { x = 0xffffffff7fffffffl; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000000l); }
@Test
public void test01794() { x = 0xffffffff80000000l; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01795() { x = 0x00000001deadf00dl; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0x76a9854800000000l); }
@Test
public void test01796() { x = 0xffffffffdeadf00dl; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0x76a9854800000000l); }
@Test
public void test01797() { x = 0x7fffffffffffffffl; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000000l); }
@Test
public void test01798() { x = 0x7fffffff7fffffffl; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000000l); }
@Test
public void test01799() { x = 0x7fffffff80000000l; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01800() { x = 0x7fffffffdeadf00dl; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0x76a9854800000000l); }
@Test
public void test01801() { x = 0x8000000000000000l; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01802() { x = 0xffffffffffffffffl; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000000l); }
@Test
public void test01803() { x = 0xfffffffffffffffel; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3000000000l); }
@Test
public void test01804() { x = 0xefffffffffffffffl; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000000l); }
@Test
public void test01805() { x = 0xdeadf00ddeadf00dl; long result = x * 0x6800000000l; AssertJUnit.assertEquals("multiply", result, 0x76a9854800000000l); }
@Test
public void test01806() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0xfffffff98000000dl); }
@Test
public void test01807() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0xfffffff980000000l); }
@Test
public void test01808() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0xfffffff30000000dl); }
@Test
public void test01809() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0xffffffec8000000dl); }
@Test
public void test01810() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0xffffffec80000000l); }
@Test
public void test01811() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0xffffffe60000000dl); }
@Test
public void test01812() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0x000000068000000dl); }
@Test
public void test01813() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0x0000000680000000l); }
@Test
public void test01814() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0xffffffe7b12acf57l); }
@Test
public void test01815() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0x00000001b12acf57l); }
@Test
public void test01816() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0x800000000000000dl); }
@Test
public void test01817() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0x800000068000000dl); }
@Test
public void test01818() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0x8000000680000000l); }
@Test
public void test01819() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0x80000001b12acf57l); }
@Test
public void test01820() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01821() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0x000000000000000dl); }
@Test
public void test01822() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0x000000000000001al); }
@Test
public void test01823() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0xd00000000000000dl); }
@Test
public void test01824() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffff3l; AssertJUnit.assertEquals("multiply", result, 0xb12acf4bb12acf57l); }
@Test
public void test01825() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000068l); }
@Test
public void test01826() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000000l); }
@Test
public void test01827() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000068l); }
@Test
public void test01828() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0xffffff6400000068l); }
@Test
public void test01829() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0xffffff6400000000l); }
@Test
public void test01830() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0xffffff3000000068l); }
@Test
public void test01831() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000068l); }
@Test
public void test01832() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000000l); }
@Test
public void test01833() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0xffffff3d89567ab8l); }
@Test
public void test01834() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0x0000000d89567ab8l); }
@Test
public void test01835() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000068l); }
@Test
public void test01836() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000068l); }
@Test
public void test01837() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000000l); }
@Test
public void test01838() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0x0000000d89567ab8l); }
@Test
public void test01839() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01840() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000068l); }
@Test
public void test01841() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000d0l); }
@Test
public void test01842() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000068l); }
@Test
public void test01843() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff98l; AssertJUnit.assertEquals("multiply", result, 0x89567a5d89567ab8l); }
@Test
public void test01844() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0xfffff98000000d00l); }
@Test
public void test01845() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0xfffff98000000000l); }
@Test
public void test01846() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0xfffff30000000d00l); }
@Test
public void test01847() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0xffffec8000000d00l); }
@Test
public void test01848() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0xffffec8000000000l); }
@Test
public void test01849() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0xffffe60000000d00l); }
@Test
public void test01850() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0x0000068000000d00l); }
@Test
public void test01851() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0x0000068000000000l); }
@Test
public void test01852() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0xffffe7b12acf5700l); }
@Test
public void test01853() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0x000001b12acf5700l); }
@Test
public void test01854() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000d00l); }
@Test
public void test01855() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0x0000068000000d00l); }
@Test
public void test01856() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0x0000068000000000l); }
@Test
public void test01857() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0x000001b12acf5700l); }
@Test
public void test01858() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01859() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000d00l); }
@Test
public void test01860() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001a00l); }
@Test
public void test01861() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000d00l); }
@Test
public void test01862() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff300l; AssertJUnit.assertEquals("multiply", result, 0x2acf4bb12acf5700l); }
@Test
public void test01863() { x = 0x000000007fffffffl; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000d00000000l); }
@Test
public void test01864() { x = 0x0000000080000000l; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01865() { x = 0x00000000ffffffffl; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000d00000000l); }
@Test
public void test01866() { x = 0x000000017fffffffl; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000d00000000l); }
@Test
public void test01867() { x = 0x0000000180000000l; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01868() { x = 0x00000001ffffffffl; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000d00000000l); }
@Test
public void test01869() { x = 0xffffffff7fffffffl; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000d00000000l); }
@Test
public void test01870() { x = 0xffffffff80000000l; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01871() { x = 0x00000001deadf00dl; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0xb12acf5700000000l); }
@Test
public void test01872() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0xb12acf5700000000l); }
@Test
public void test01873() { x = 0x7fffffffffffffffl; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000d00000000l); }
@Test
public void test01874() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000d00000000l); }
@Test
public void test01875() { x = 0x7fffffff80000000l; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test01876() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0xb12acf5700000000l); }
@Test
public void test01877() { x = 0x8000000000000000l; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01878() { x = 0xffffffffffffffffl; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000d00000000l); }
@Test
public void test01879() { x = 0xfffffffffffffffel; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000000l); }
@Test
public void test01880() { x = 0xefffffffffffffffl; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000d00000000l); }
@Test
public void test01881() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffff300000000l; AssertJUnit.assertEquals("multiply", result, 0xb12acf5700000000l); }
@Test
public void test01882() { x = 0x000000007fffffffl; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006800000000l); }
@Test
public void test01883() { x = 0x0000000080000000l; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01884() { x = 0x00000000ffffffffl; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006800000000l); }
@Test
public void test01885() { x = 0x000000017fffffffl; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006800000000l); }
@Test
public void test01886() { x = 0x0000000180000000l; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01887() { x = 0x00000001ffffffffl; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006800000000l); }
@Test
public void test01888() { x = 0xffffffff7fffffffl; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006800000000l); }
@Test
public void test01889() { x = 0xffffffff80000000l; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01890() { x = 0x00000001deadf00dl; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x89567ab800000000l); }
@Test
public void test01891() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x89567ab800000000l); }
@Test
public void test01892() { x = 0x7fffffffffffffffl; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006800000000l); }
@Test
public void test01893() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006800000000l); }
@Test
public void test01894() { x = 0x7fffffff80000000l; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01895() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x89567ab800000000l); }
@Test
public void test01896() { x = 0x8000000000000000l; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01897() { x = 0xffffffffffffffffl; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006800000000l); }
@Test
public void test01898() { x = 0xfffffffffffffffel; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d000000000l); }
@Test
public void test01899() { x = 0xefffffffffffffffl; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006800000000l); }
@Test
public void test01900() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff9800000000l; AssertJUnit.assertEquals("multiply", result, 0x89567ab800000000l); }
@Test
public void test01901() { x = 0x000000007fffffffl; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0x00000006fffffff2l); }
@Test
public void test01902() { x = 0x0000000080000000l; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0x0000000700000000l); }
@Test
public void test01903() { x = 0x00000000ffffffffl; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0x0000000dfffffff2l); }
@Test
public void test01904() { x = 0x000000017fffffffl; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0x00000014fffffff2l); }
@Test
public void test01905() { x = 0x0000000180000000l; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0x0000001500000000l); }
@Test
public void test01906() { x = 0x00000001ffffffffl; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0x0000001bfffffff2l); }
@Test
public void test01907() { x = 0xffffffff7fffffffl; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0xfffffff8fffffff2l); }
@Test
public void test01908() { x = 0xffffffff80000000l; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0xfffffff900000000l); }
@Test
public void test01909() { x = 0x00000001deadf00dl; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0x0000001a2d8320b6l); }
@Test
public void test01910() { x = 0xffffffffdeadf00dl; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0xfffffffe2d8320b6l); }
@Test
public void test01911() { x = 0x7fffffffffffffffl; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff2l); }
@Test
public void test01912() { x = 0x7fffffff7fffffffl; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0xfffffff8fffffff2l); }
@Test
public void test01913() { x = 0x7fffffff80000000l; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0xfffffff900000000l); }
@Test
public void test01914() { x = 0x7fffffffdeadf00dl; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0xfffffffe2d8320b6l); }
@Test
public void test01915() { x = 0x8000000000000000l; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01916() { x = 0xffffffffffffffffl; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff2l); }
@Test
public void test01917() { x = 0xfffffffffffffffel; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe4l); }
@Test
public void test01918() { x = 0xefffffffffffffffl; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0x1ffffffffffffff2l); }
@Test
public void test01919() { x = 0xdeadf00ddeadf00dl; long result = x * 0xel; AssertJUnit.assertEquals("multiply", result, 0x2d8320c22d8320b6l); }
@Test
public void test01920() { x = 0x000000007fffffffl; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0x00000037ffffff90l); }
@Test
public void test01921() { x = 0x0000000080000000l; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test01922() { x = 0x00000000ffffffffl; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0x0000006fffffff90l); }
@Test
public void test01923() { x = 0x000000017fffffffl; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0x000000a7ffffff90l); }
@Test
public void test01924() { x = 0x0000000180000000l; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0x000000a800000000l); }
@Test
public void test01925() { x = 0x00000001ffffffffl; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0x000000dfffffff90l); }
@Test
public void test01926() { x = 0xffffffff7fffffffl; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0xffffffc7ffffff90l); }
@Test
public void test01927() { x = 0xffffffff80000000l; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test01928() { x = 0x00000001deadf00dl; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0x000000d16c1905b0l); }
@Test
public void test01929() { x = 0xffffffffdeadf00dl; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0xfffffff16c1905b0l); }
@Test
public void test01930() { x = 0x7fffffffffffffffl; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff90l); }
@Test
public void test01931() { x = 0x7fffffff7fffffffl; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0xffffffc7ffffff90l); }
@Test
public void test01932() { x = 0x7fffffff80000000l; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test01933() { x = 0x7fffffffdeadf00dl; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0xfffffff16c1905b0l); }
@Test
public void test01934() { x = 0x8000000000000000l; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01935() { x = 0xffffffffffffffffl; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff90l); }
@Test
public void test01936() { x = 0xfffffffffffffffel; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff20l); }
@Test
public void test01937() { x = 0xefffffffffffffffl; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff90l); }
@Test
public void test01938() { x = 0xdeadf00ddeadf00dl; long result = x * 0x70l; AssertJUnit.assertEquals("multiply", result, 0x6c1906116c1905b0l); }
@Test
public void test01939() { x = 0x000000007fffffffl; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0x000006fffffff200l); }
@Test
public void test01940() { x = 0x0000000080000000l; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0x0000070000000000l); }
@Test
public void test01941() { x = 0x00000000ffffffffl; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0x00000dfffffff200l); }
@Test
public void test01942() { x = 0x000000017fffffffl; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0x000014fffffff200l); }
@Test
public void test01943() { x = 0x0000000180000000l; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0x0000150000000000l); }
@Test
public void test01944() { x = 0x00000001ffffffffl; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0x00001bfffffff200l); }
@Test
public void test01945() { x = 0xffffffff7fffffffl; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0xfffff8fffffff200l); }
@Test
public void test01946() { x = 0xffffffff80000000l; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0xfffff90000000000l); }
@Test
public void test01947() { x = 0x00000001deadf00dl; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0x00001a2d8320b600l); }
@Test
public void test01948() { x = 0xffffffffdeadf00dl; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe2d8320b600l); }
@Test
public void test01949() { x = 0x7fffffffffffffffl; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff200l); }
@Test
public void test01950() { x = 0x7fffffff7fffffffl; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0xfffff8fffffff200l); }
@Test
public void test01951() { x = 0x7fffffff80000000l; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0xfffff90000000000l); }
@Test
public void test01952() { x = 0x7fffffffdeadf00dl; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe2d8320b600l); }
@Test
public void test01953() { x = 0x8000000000000000l; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01954() { x = 0xffffffffffffffffl; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff200l); }
@Test
public void test01955() { x = 0xfffffffffffffffel; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe400l); }
@Test
public void test01956() { x = 0xefffffffffffffffl; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff200l); }
@Test
public void test01957() { x = 0xdeadf00ddeadf00dl; long result = x * 0xe00l; AssertJUnit.assertEquals("multiply", result, 0x8320c22d8320b600l); }
@Test
public void test01958() { x = 0x000000007fffffffl; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff200000000l); }
@Test
public void test01959() { x = 0x0000000080000000l; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01960() { x = 0x00000000ffffffffl; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff200000000l); }
@Test
public void test01961() { x = 0x000000017fffffffl; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff200000000l); }
@Test
public void test01962() { x = 0x0000000180000000l; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01963() { x = 0x00000001ffffffffl; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff200000000l); }
@Test
public void test01964() { x = 0xffffffff7fffffffl; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff200000000l); }
@Test
public void test01965() { x = 0xffffffff80000000l; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01966() { x = 0x00000001deadf00dl; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0x2d8320b600000000l); }
@Test
public void test01967() { x = 0xffffffffdeadf00dl; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0x2d8320b600000000l); }
@Test
public void test01968() { x = 0x7fffffffffffffffl; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff200000000l); }
@Test
public void test01969() { x = 0x7fffffff7fffffffl; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff200000000l); }
@Test
public void test01970() { x = 0x7fffffff80000000l; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01971() { x = 0x7fffffffdeadf00dl; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0x2d8320b600000000l); }
@Test
public void test01972() { x = 0x8000000000000000l; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01973() { x = 0xffffffffffffffffl; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff200000000l); }
@Test
public void test01974() { x = 0xfffffffffffffffel; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test01975() { x = 0xefffffffffffffffl; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff200000000l); }
@Test
public void test01976() { x = 0xdeadf00ddeadf00dl; long result = x * 0xe00000000l; AssertJUnit.assertEquals("multiply", result, 0x2d8320b600000000l); }
@Test
public void test01977() { x = 0x000000007fffffffl; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000000l); }
@Test
public void test01978() { x = 0x0000000080000000l; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01979() { x = 0x00000000ffffffffl; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000000l); }
@Test
public void test01980() { x = 0x000000017fffffffl; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000000l); }
@Test
public void test01981() { x = 0x0000000180000000l; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01982() { x = 0x00000001ffffffffl; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000000l); }
@Test
public void test01983() { x = 0xffffffff7fffffffl; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000000l); }
@Test
public void test01984() { x = 0xffffffff80000000l; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01985() { x = 0x00000001deadf00dl; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0x6c1905b000000000l); }
@Test
public void test01986() { x = 0xffffffffdeadf00dl; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0x6c1905b000000000l); }
@Test
public void test01987() { x = 0x7fffffffffffffffl; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000000l); }
@Test
public void test01988() { x = 0x7fffffff7fffffffl; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000000l); }
@Test
public void test01989() { x = 0x7fffffff80000000l; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01990() { x = 0x7fffffffdeadf00dl; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0x6c1905b000000000l); }
@Test
public void test01991() { x = 0x8000000000000000l; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test01992() { x = 0xffffffffffffffffl; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000000l); }
@Test
public void test01993() { x = 0xfffffffffffffffel; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2000000000l); }
@Test
public void test01994() { x = 0xefffffffffffffffl; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000000l); }
@Test
public void test01995() { x = 0xdeadf00ddeadf00dl; long result = x * 0x7000000000l; AssertJUnit.assertEquals("multiply", result, 0x6c1905b000000000l); }
@Test
public void test01996() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0xfffffff90000000el); }
@Test
public void test01997() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0xfffffff900000000l); }
@Test
public void test01998() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0xfffffff20000000el); }
@Test
public void test01999() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0xffffffeb0000000el); }
@Test
public void test02000() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0xffffffeb00000000l); }
@Test
public void test02001() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0xffffffe40000000el); }
@Test
public void test02002() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0x000000070000000el); }
@Test
public void test02003() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0x0000000700000000l); }
@Test
public void test02004() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0xffffffe5d27cdf4al); }
@Test
public void test02005() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0x00000001d27cdf4al); }
@Test
public void test02006() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0x000000000000000el); }
@Test
public void test02007() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0x000000070000000el); }
@Test
public void test02008() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0x0000000700000000l); }
@Test
public void test02009() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0x00000001d27cdf4al); }
@Test
public void test02010() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02011() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0x000000000000000el); }
@Test
public void test02012() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0x000000000000001cl); }
@Test
public void test02013() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0xe00000000000000el); }
@Test
public void test02014() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffff2l; AssertJUnit.assertEquals("multiply", result, 0xd27cdf3dd27cdf4al); }
@Test
public void test02015() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000070l); }
@Test
public void test02016() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test02017() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000070l); }
@Test
public void test02018() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0xffffff5800000070l); }
@Test
public void test02019() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0xffffff5800000000l); }
@Test
public void test02020() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0xffffff2000000070l); }
@Test
public void test02021() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000070l); }
@Test
public void test02022() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test02023() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0xffffff2e93e6fa50l); }
@Test
public void test02024() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0x0000000e93e6fa50l); }
@Test
public void test02025() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000070l); }
@Test
public void test02026() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000070l); }
@Test
public void test02027() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test02028() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0x0000000e93e6fa50l); }
@Test
public void test02029() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02030() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000070l); }
@Test
public void test02031() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000e0l); }
@Test
public void test02032() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000070l); }
@Test
public void test02033() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff90l; AssertJUnit.assertEquals("multiply", result, 0x93e6f9ee93e6fa50l); }
@Test
public void test02034() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0xfffff90000000e00l); }
@Test
public void test02035() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0xfffff90000000000l); }
@Test
public void test02036() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0xfffff20000000e00l); }
@Test
public void test02037() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0xffffeb0000000e00l); }
@Test
public void test02038() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0xffffeb0000000000l); }
@Test
public void test02039() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0xffffe40000000e00l); }
@Test
public void test02040() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0x0000070000000e00l); }
@Test
public void test02041() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0x0000070000000000l); }
@Test
public void test02042() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0xffffe5d27cdf4a00l); }
@Test
public void test02043() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0x000001d27cdf4a00l); }
@Test
public void test02044() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000e00l); }
@Test
public void test02045() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0x0000070000000e00l); }
@Test
public void test02046() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0x0000070000000000l); }
@Test
public void test02047() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0x000001d27cdf4a00l); }
@Test
public void test02048() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02049() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000e00l); }
@Test
public void test02050() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001c00l); }
@Test
public void test02051() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000e00l); }
@Test
public void test02052() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff200l; AssertJUnit.assertEquals("multiply", result, 0x7cdf3dd27cdf4a00l); }
@Test
public void test02053() { x = 0x000000007fffffffl; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000e00000000l); }
@Test
public void test02054() { x = 0x0000000080000000l; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02055() { x = 0x00000000ffffffffl; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000e00000000l); }
@Test
public void test02056() { x = 0x000000017fffffffl; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000e00000000l); }
@Test
public void test02057() { x = 0x0000000180000000l; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02058() { x = 0x00000001ffffffffl; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000e00000000l); }
@Test
public void test02059() { x = 0xffffffff7fffffffl; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000e00000000l); }
@Test
public void test02060() { x = 0xffffffff80000000l; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02061() { x = 0x00000001deadf00dl; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0xd27cdf4a00000000l); }
@Test
public void test02062() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0xd27cdf4a00000000l); }
@Test
public void test02063() { x = 0x7fffffffffffffffl; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000e00000000l); }
@Test
public void test02064() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000e00000000l); }
@Test
public void test02065() { x = 0x7fffffff80000000l; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02066() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0xd27cdf4a00000000l); }
@Test
public void test02067() { x = 0x8000000000000000l; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02068() { x = 0xffffffffffffffffl; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000e00000000l); }
@Test
public void test02069() { x = 0xfffffffffffffffel; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test02070() { x = 0xefffffffffffffffl; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000e00000000l); }
@Test
public void test02071() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffff200000000l; AssertJUnit.assertEquals("multiply", result, 0xd27cdf4a00000000l); }
@Test
public void test02072() { x = 0x000000007fffffffl; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007000000000l); }
@Test
public void test02073() { x = 0x0000000080000000l; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02074() { x = 0x00000000ffffffffl; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007000000000l); }
@Test
public void test02075() { x = 0x000000017fffffffl; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007000000000l); }
@Test
public void test02076() { x = 0x0000000180000000l; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02077() { x = 0x00000001ffffffffl; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007000000000l); }
@Test
public void test02078() { x = 0xffffffff7fffffffl; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007000000000l); }
@Test
public void test02079() { x = 0xffffffff80000000l; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02080() { x = 0x00000001deadf00dl; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x93e6fa5000000000l); }
@Test
public void test02081() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x93e6fa5000000000l); }
@Test
public void test02082() { x = 0x7fffffffffffffffl; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007000000000l); }
@Test
public void test02083() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007000000000l); }
@Test
public void test02084() { x = 0x7fffffff80000000l; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02085() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x93e6fa5000000000l); }
@Test
public void test02086() { x = 0x8000000000000000l; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02087() { x = 0xffffffffffffffffl; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007000000000l); }
@Test
public void test02088() { x = 0xfffffffffffffffel; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e000000000l); }
@Test
public void test02089() { x = 0xefffffffffffffffl; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007000000000l); }
@Test
public void test02090() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff9000000000l; AssertJUnit.assertEquals("multiply", result, 0x93e6fa5000000000l); }
@Test
public void test02091() { x = 0x000000007fffffffl; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0x000000077ffffff1l); }
@Test
public void test02092() { x = 0x0000000080000000l; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0x0000000780000000l); }
@Test
public void test02093() { x = 0x00000000ffffffffl; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0x0000000efffffff1l); }
@Test
public void test02094() { x = 0x000000017fffffffl; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0x000000167ffffff1l); }
@Test
public void test02095() { x = 0x0000000180000000l; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0x0000001680000000l); }
@Test
public void test02096() { x = 0x00000001ffffffffl; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0x0000001dfffffff1l); }
@Test
public void test02097() { x = 0xffffffff7fffffffl; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0xfffffff87ffffff1l); }
@Test
public void test02098() { x = 0xffffffff80000000l; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0xfffffff880000000l); }
@Test
public void test02099() { x = 0x00000001deadf00dl; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0x0000001c0c3110c3l); }
@Test
public void test02100() { x = 0xffffffffdeadf00dl; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0xfffffffe0c3110c3l); }
@Test
public void test02101() { x = 0x7fffffffffffffffl; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffff1l); }
@Test
public void test02102() { x = 0x7fffffff7fffffffl; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0x7ffffff87ffffff1l); }
@Test
public void test02103() { x = 0x7fffffff80000000l; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0x7ffffff880000000l); }
@Test
public void test02104() { x = 0x7fffffffdeadf00dl; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0x7ffffffe0c3110c3l); }
@Test
public void test02105() { x = 0x8000000000000000l; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02106() { x = 0xffffffffffffffffl; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffff1l); }
@Test
public void test02107() { x = 0xfffffffffffffffel; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe2l); }
@Test
public void test02108() { x = 0xefffffffffffffffl; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0x0ffffffffffffff1l); }
@Test
public void test02109() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfl; AssertJUnit.assertEquals("multiply", result, 0x0c3110d00c3110c3l); }
@Test
public void test02110() { x = 0x000000007fffffffl; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0x0000003bffffff88l); }
@Test
public void test02111() { x = 0x0000000080000000l; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0x0000003c00000000l); }
@Test
public void test02112() { x = 0x00000000ffffffffl; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0x00000077ffffff88l); }
@Test
public void test02113() { x = 0x000000017fffffffl; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0x000000b3ffffff88l); }
@Test
public void test02114() { x = 0x0000000180000000l; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0x000000b400000000l); }
@Test
public void test02115() { x = 0x00000001ffffffffl; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0x000000efffffff88l); }
@Test
public void test02116() { x = 0xffffffff7fffffffl; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0xffffffc3ffffff88l); }
@Test
public void test02117() { x = 0xffffffff80000000l; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0xffffffc400000000l); }
@Test
public void test02118() { x = 0x00000001deadf00dl; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0x000000e061888618l); }
@Test
public void test02119() { x = 0xffffffffdeadf00dl; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0xfffffff061888618l); }
@Test
public void test02120() { x = 0x7fffffffffffffffl; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff88l); }
@Test
public void test02121() { x = 0x7fffffff7fffffffl; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0xffffffc3ffffff88l); }
@Test
public void test02122() { x = 0x7fffffff80000000l; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0xffffffc400000000l); }
@Test
public void test02123() { x = 0x7fffffffdeadf00dl; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0xfffffff061888618l); }
@Test
public void test02124() { x = 0x8000000000000000l; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02125() { x = 0xffffffffffffffffl; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff88l); }
@Test
public void test02126() { x = 0xfffffffffffffffel; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff10l); }
@Test
public void test02127() { x = 0xefffffffffffffffl; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff88l); }
@Test
public void test02128() { x = 0xdeadf00ddeadf00dl; long result = x * 0x78l; AssertJUnit.assertEquals("multiply", result, 0x6188868061888618l); }
@Test
public void test02129() { x = 0x000000007fffffffl; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0x0000077ffffff100l); }
@Test
public void test02130() { x = 0x0000000080000000l; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0x0000078000000000l); }
@Test
public void test02131() { x = 0x00000000ffffffffl; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0x00000efffffff100l); }
@Test
public void test02132() { x = 0x000000017fffffffl; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0x0000167ffffff100l); }
@Test
public void test02133() { x = 0x0000000180000000l; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0x0000168000000000l); }
@Test
public void test02134() { x = 0x00000001ffffffffl; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0x00001dfffffff100l); }
@Test
public void test02135() { x = 0xffffffff7fffffffl; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0xfffff87ffffff100l); }
@Test
public void test02136() { x = 0xffffffff80000000l; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0xfffff88000000000l); }
@Test
public void test02137() { x = 0x00000001deadf00dl; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0x00001c0c3110c300l); }
@Test
public void test02138() { x = 0xffffffffdeadf00dl; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c3110c300l); }
@Test
public void test02139() { x = 0x7fffffffffffffffl; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff100l); }
@Test
public void test02140() { x = 0x7fffffff7fffffffl; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0xfffff87ffffff100l); }
@Test
public void test02141() { x = 0x7fffffff80000000l; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0xfffff88000000000l); }
@Test
public void test02142() { x = 0x7fffffffdeadf00dl; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c3110c300l); }
@Test
public void test02143() { x = 0x8000000000000000l; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02144() { x = 0xffffffffffffffffl; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff100l); }
@Test
public void test02145() { x = 0xfffffffffffffffel; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe200l); }
@Test
public void test02146() { x = 0xefffffffffffffffl; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff100l); }
@Test
public void test02147() { x = 0xdeadf00ddeadf00dl; long result = x * 0xf00l; AssertJUnit.assertEquals("multiply", result, 0x3110d00c3110c300l); }
@Test
public void test02148() { x = 0x000000007fffffffl; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff100000000l); }
@Test
public void test02149() { x = 0x0000000080000000l; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02150() { x = 0x00000000ffffffffl; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff100000000l); }
@Test
public void test02151() { x = 0x000000017fffffffl; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff100000000l); }
@Test
public void test02152() { x = 0x0000000180000000l; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02153() { x = 0x00000001ffffffffl; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff100000000l); }
@Test
public void test02154() { x = 0xffffffff7fffffffl; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff100000000l); }
@Test
public void test02155() { x = 0xffffffff80000000l; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02156() { x = 0x00000001deadf00dl; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0c3110c300000000l); }
@Test
public void test02157() { x = 0xffffffffdeadf00dl; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0c3110c300000000l); }
@Test
public void test02158() { x = 0x7fffffffffffffffl; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff100000000l); }
@Test
public void test02159() { x = 0x7fffffff7fffffffl; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff100000000l); }
@Test
public void test02160() { x = 0x7fffffff80000000l; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02161() { x = 0x7fffffffdeadf00dl; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0c3110c300000000l); }
@Test
public void test02162() { x = 0x8000000000000000l; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02163() { x = 0xffffffffffffffffl; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff100000000l); }
@Test
public void test02164() { x = 0xfffffffffffffffel; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe200000000l); }
@Test
public void test02165() { x = 0xefffffffffffffffl; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffff100000000l); }
@Test
public void test02166() { x = 0xdeadf00ddeadf00dl; long result = x * 0xf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0c3110c300000000l); }
@Test
public void test02167() { x = 0x000000007fffffffl; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000000l); }
@Test
public void test02168() { x = 0x0000000080000000l; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02169() { x = 0x00000000ffffffffl; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000000l); }
@Test
public void test02170() { x = 0x000000017fffffffl; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000000l); }
@Test
public void test02171() { x = 0x0000000180000000l; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02172() { x = 0x00000001ffffffffl; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000000l); }
@Test
public void test02173() { x = 0xffffffff7fffffffl; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000000l); }
@Test
public void test02174() { x = 0xffffffff80000000l; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02175() { x = 0x00000001deadf00dl; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0x6188861800000000l); }
@Test
public void test02176() { x = 0xffffffffdeadf00dl; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0x6188861800000000l); }
@Test
public void test02177() { x = 0x7fffffffffffffffl; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000000l); }
@Test
public void test02178() { x = 0x7fffffff7fffffffl; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000000l); }
@Test
public void test02179() { x = 0x7fffffff80000000l; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02180() { x = 0x7fffffffdeadf00dl; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0x6188861800000000l); }
@Test
public void test02181() { x = 0x8000000000000000l; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02182() { x = 0xffffffffffffffffl; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000000l); }
@Test
public void test02183() { x = 0xfffffffffffffffel; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1000000000l); }
@Test
public void test02184() { x = 0xefffffffffffffffl; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000000l); }
@Test
public void test02185() { x = 0xdeadf00ddeadf00dl; long result = x * 0x7800000000l; AssertJUnit.assertEquals("multiply", result, 0x6188861800000000l); }
@Test
public void test02186() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0xfffffff88000000fl); }
@Test
public void test02187() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0xfffffff880000000l); }
@Test
public void test02188() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0xfffffff10000000fl); }
@Test
public void test02189() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0xffffffe98000000fl); }
@Test
public void test02190() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0xffffffe980000000l); }
@Test
public void test02191() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0xffffffe20000000fl); }
@Test
public void test02192() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0x000000078000000fl); }
@Test
public void test02193() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0x0000000780000000l); }
@Test
public void test02194() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0xffffffe3f3ceef3dl); }
@Test
public void test02195() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0x00000001f3ceef3dl); }
@Test
public void test02196() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0x800000000000000fl); }
@Test
public void test02197() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0x800000078000000fl); }
@Test
public void test02198() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0x8000000780000000l); }
@Test
public void test02199() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0x80000001f3ceef3dl); }
@Test
public void test02200() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02201() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0x000000000000000fl); }
@Test
public void test02202() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0x000000000000001el); }
@Test
public void test02203() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0xf00000000000000fl); }
@Test
public void test02204() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffff1l; AssertJUnit.assertEquals("multiply", result, 0xf3ceef2ff3ceef3dl); }
@Test
public void test02205() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0xffffffc400000078l); }
@Test
public void test02206() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0xffffffc400000000l); }
@Test
public void test02207() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000078l); }
@Test
public void test02208() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0xffffff4c00000078l); }
@Test
public void test02209() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0xffffff4c00000000l); }
@Test
public void test02210() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0xffffff1000000078l); }
@Test
public void test02211() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0x0000003c00000078l); }
@Test
public void test02212() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0x0000003c00000000l); }
@Test
public void test02213() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0xffffff1f9e7779e8l); }
@Test
public void test02214() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0x0000000f9e7779e8l); }
@Test
public void test02215() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000078l); }
@Test
public void test02216() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0x0000003c00000078l); }
@Test
public void test02217() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0x0000003c00000000l); }
@Test
public void test02218() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0x0000000f9e7779e8l); }
@Test
public void test02219() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02220() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000078l); }
@Test
public void test02221() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000f0l); }
@Test
public void test02222() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000078l); }
@Test
public void test02223() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff88l; AssertJUnit.assertEquals("multiply", result, 0x9e77797f9e7779e8l); }
@Test
public void test02224() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0xfffff88000000f00l); }
@Test
public void test02225() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0xfffff88000000000l); }
@Test
public void test02226() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0xfffff10000000f00l); }
@Test
public void test02227() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0xffffe98000000f00l); }
@Test
public void test02228() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0xffffe98000000000l); }
@Test
public void test02229() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0xffffe20000000f00l); }
@Test
public void test02230() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0x0000078000000f00l); }
@Test
public void test02231() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0x0000078000000000l); }
@Test
public void test02232() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0xffffe3f3ceef3d00l); }
@Test
public void test02233() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0x000001f3ceef3d00l); }
@Test
public void test02234() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000f00l); }
@Test
public void test02235() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0x0000078000000f00l); }
@Test
public void test02236() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0x0000078000000000l); }
@Test
public void test02237() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0x000001f3ceef3d00l); }
@Test
public void test02238() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02239() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000f00l); }
@Test
public void test02240() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001e00l); }
@Test
public void test02241() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000f00l); }
@Test
public void test02242() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff100l; AssertJUnit.assertEquals("multiply", result, 0xceef2ff3ceef3d00l); }
@Test
public void test02243() { x = 0x000000007fffffffl; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000f00000000l); }
@Test
public void test02244() { x = 0x0000000080000000l; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02245() { x = 0x00000000ffffffffl; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000f00000000l); }
@Test
public void test02246() { x = 0x000000017fffffffl; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000f00000000l); }
@Test
public void test02247() { x = 0x0000000180000000l; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02248() { x = 0x00000001ffffffffl; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000f00000000l); }
@Test
public void test02249() { x = 0xffffffff7fffffffl; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000f00000000l); }
@Test
public void test02250() { x = 0xffffffff80000000l; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02251() { x = 0x00000001deadf00dl; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0xf3ceef3d00000000l); }
@Test
public void test02252() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0xf3ceef3d00000000l); }
@Test
public void test02253() { x = 0x7fffffffffffffffl; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000f00000000l); }
@Test
public void test02254() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000f00000000l); }
@Test
public void test02255() { x = 0x7fffffff80000000l; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02256() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0xf3ceef3d00000000l); }
@Test
public void test02257() { x = 0x8000000000000000l; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02258() { x = 0xffffffffffffffffl; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000f00000000l); }
@Test
public void test02259() { x = 0xfffffffffffffffel; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001e00000000l); }
@Test
public void test02260() { x = 0xefffffffffffffffl; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000f00000000l); }
@Test
public void test02261() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffff100000000l; AssertJUnit.assertEquals("multiply", result, 0xf3ceef3d00000000l); }
@Test
public void test02262() { x = 0x000000007fffffffl; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007800000000l); }
@Test
public void test02263() { x = 0x0000000080000000l; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02264() { x = 0x00000000ffffffffl; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007800000000l); }
@Test
public void test02265() { x = 0x000000017fffffffl; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007800000000l); }
@Test
public void test02266() { x = 0x0000000180000000l; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02267() { x = 0x00000001ffffffffl; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007800000000l); }
@Test
public void test02268() { x = 0xffffffff7fffffffl; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007800000000l); }
@Test
public void test02269() { x = 0xffffffff80000000l; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02270() { x = 0x00000001deadf00dl; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x9e7779e800000000l); }
@Test
public void test02271() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x9e7779e800000000l); }
@Test
public void test02272() { x = 0x7fffffffffffffffl; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007800000000l); }
@Test
public void test02273() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007800000000l); }
@Test
public void test02274() { x = 0x7fffffff80000000l; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02275() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x9e7779e800000000l); }
@Test
public void test02276() { x = 0x8000000000000000l; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02277() { x = 0xffffffffffffffffl; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007800000000l); }
@Test
public void test02278() { x = 0xfffffffffffffffel; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f000000000l); }
@Test
public void test02279() { x = 0xefffffffffffffffl; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007800000000l); }
@Test
public void test02280() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff8800000000l; AssertJUnit.assertEquals("multiply", result, 0x9e7779e800000000l); }
@Test
public void test02281() { x = 0x000000007fffffffl; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0x000000087fffffefl); }
@Test
public void test02282() { x = 0x0000000080000000l; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0x0000000880000000l); }
@Test
public void test02283() { x = 0x00000000ffffffffl; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0x00000010ffffffefl); }
@Test
public void test02284() { x = 0x000000017fffffffl; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0x000000197fffffefl); }
@Test
public void test02285() { x = 0x0000000180000000l; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0x0000001980000000l); }
@Test
public void test02286() { x = 0x00000001ffffffffl; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0x00000021ffffffefl); }
@Test
public void test02287() { x = 0xffffffff7fffffffl; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0xfffffff77fffffefl); }
@Test
public void test02288() { x = 0xffffffff80000000l; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0xfffffff780000000l); }
@Test
public void test02289() { x = 0x00000001deadf00dl; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0x0000001fc98cf0ddl); }
@Test
public void test02290() { x = 0xffffffffdeadf00dl; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0xfffffffdc98cf0ddl); }
@Test
public void test02291() { x = 0x7fffffffffffffffl; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffefl); }
@Test
public void test02292() { x = 0x7fffffff7fffffffl; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff77fffffefl); }
@Test
public void test02293() { x = 0x7fffffff80000000l; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff780000000l); }
@Test
public void test02294() { x = 0x7fffffffdeadf00dl; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffdc98cf0ddl); }
@Test
public void test02295() { x = 0x8000000000000000l; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02296() { x = 0xffffffffffffffffl; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffefl); }
@Test
public void test02297() { x = 0xfffffffffffffffel; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffdel); }
@Test
public void test02298() { x = 0xefffffffffffffffl; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0xefffffffffffffefl); }
@Test
public void test02299() { x = 0xdeadf00ddeadf00dl; long result = x * 0x11l; AssertJUnit.assertEquals("multiply", result, 0xc98cf0ebc98cf0ddl); }
@Test
public void test02300() { x = 0x000000007fffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x00000043ffffff78l); }
@Test
public void test02301() { x = 0x0000000080000000l; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x0000004400000000l); }
@Test
public void test02302() { x = 0x00000000ffffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x00000087ffffff78l); }
@Test
public void test02303() { x = 0x000000017fffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x000000cbffffff78l); }
@Test
public void test02304() { x = 0x0000000180000000l; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x000000cc00000000l); }
@Test
public void test02305() { x = 0x00000001ffffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x0000010fffffff78l); }
@Test
public void test02306() { x = 0xffffffff7fffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffbbffffff78l); }
@Test
public void test02307() { x = 0xffffffff80000000l; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffbc00000000l); }
@Test
public void test02308() { x = 0x00000001deadf00dl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x000000fe4c6786e8l); }
@Test
public void test02309() { x = 0xffffffffdeadf00dl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffee4c6786e8l); }
@Test
public void test02310() { x = 0x7fffffffffffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff78l); }
@Test
public void test02311() { x = 0x7fffffff7fffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffbbffffff78l); }
@Test
public void test02312() { x = 0x7fffffff80000000l; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffbc00000000l); }
@Test
public void test02313() { x = 0x7fffffffdeadf00dl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffee4c6786e8l); }
@Test
public void test02314() { x = 0x8000000000000000l; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02315() { x = 0xffffffffffffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff78l); }
@Test
public void test02316() { x = 0xfffffffffffffffel; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffef0l); }
@Test
public void test02317() { x = 0xefffffffffffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff78l); }
@Test
public void test02318() { x = 0xdeadf00ddeadf00dl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x4c67875e4c6786e8l); }
@Test
public void test02319() { x = 0x000000007fffffffl; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0x0000087fffffef00l); }
@Test
public void test02320() { x = 0x0000000080000000l; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0x0000088000000000l); }
@Test
public void test02321() { x = 0x00000000ffffffffl; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0x000010ffffffef00l); }
@Test
public void test02322() { x = 0x000000017fffffffl; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0x0000197fffffef00l); }
@Test
public void test02323() { x = 0x0000000180000000l; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0x0000198000000000l); }
@Test
public void test02324() { x = 0x00000001ffffffffl; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0x000021ffffffef00l); }
@Test
public void test02325() { x = 0xffffffff7fffffffl; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0xfffff77fffffef00l); }
@Test
public void test02326() { x = 0xffffffff80000000l; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0xfffff78000000000l); }
@Test
public void test02327() { x = 0x00000001deadf00dl; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0x00001fc98cf0dd00l); }
@Test
public void test02328() { x = 0xffffffffdeadf00dl; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0xfffffdc98cf0dd00l); }
@Test
public void test02329() { x = 0x7fffffffffffffffl; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffef00l); }
@Test
public void test02330() { x = 0x7fffffff7fffffffl; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0xfffff77fffffef00l); }
@Test
public void test02331() { x = 0x7fffffff80000000l; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0xfffff78000000000l); }
@Test
public void test02332() { x = 0x7fffffffdeadf00dl; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0xfffffdc98cf0dd00l); }
@Test
public void test02333() { x = 0x8000000000000000l; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02334() { x = 0xffffffffffffffffl; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffef00l); }
@Test
public void test02335() { x = 0xfffffffffffffffel; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffde00l); }
@Test
public void test02336() { x = 0xefffffffffffffffl; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffef00l); }
@Test
public void test02337() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1100l; AssertJUnit.assertEquals("multiply", result, 0x8cf0ebc98cf0dd00l); }
@Test
public void test02338() { x = 0x000000007fffffffl; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffef00000000l); }
@Test
public void test02339() { x = 0x0000000080000000l; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02340() { x = 0x00000000ffffffffl; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffef00000000l); }
@Test
public void test02341() { x = 0x000000017fffffffl; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffef00000000l); }
@Test
public void test02342() { x = 0x0000000180000000l; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02343() { x = 0x00000001ffffffffl; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffef00000000l); }
@Test
public void test02344() { x = 0xffffffff7fffffffl; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffef00000000l); }
@Test
public void test02345() { x = 0xffffffff80000000l; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02346() { x = 0x00000001deadf00dl; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0xc98cf0dd00000000l); }
@Test
public void test02347() { x = 0xffffffffdeadf00dl; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0xc98cf0dd00000000l); }
@Test
public void test02348() { x = 0x7fffffffffffffffl; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffef00000000l); }
@Test
public void test02349() { x = 0x7fffffff7fffffffl; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffef00000000l); }
@Test
public void test02350() { x = 0x7fffffff80000000l; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02351() { x = 0x7fffffffdeadf00dl; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0xc98cf0dd00000000l); }
@Test
public void test02352() { x = 0x8000000000000000l; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02353() { x = 0xffffffffffffffffl; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffef00000000l); }
@Test
public void test02354() { x = 0xfffffffffffffffel; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffde00000000l); }
@Test
public void test02355() { x = 0xefffffffffffffffl; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffef00000000l); }
@Test
public void test02356() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1100000000l; AssertJUnit.assertEquals("multiply", result, 0xc98cf0dd00000000l); }
@Test
public void test02357() { x = 0x000000007fffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test02358() { x = 0x0000000080000000l; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02359() { x = 0x00000000ffffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test02360() { x = 0x000000017fffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test02361() { x = 0x0000000180000000l; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02362() { x = 0x00000001ffffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test02363() { x = 0xffffffff7fffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test02364() { x = 0xffffffff80000000l; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02365() { x = 0x00000001deadf00dl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x4c6786e800000000l); }
@Test
public void test02366() { x = 0xffffffffdeadf00dl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x4c6786e800000000l); }
@Test
public void test02367() { x = 0x7fffffffffffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test02368() { x = 0x7fffffff7fffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test02369() { x = 0x7fffffff80000000l; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02370() { x = 0x7fffffffdeadf00dl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x4c6786e800000000l); }
@Test
public void test02371() { x = 0x8000000000000000l; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02372() { x = 0xffffffffffffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test02373() { x = 0xfffffffffffffffel; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef000000000l); }
@Test
public void test02374() { x = 0xefffffffffffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test02375() { x = 0xdeadf00ddeadf00dl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x4c6786e800000000l); }
@Test
public void test02376() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0xfffffff780000011l); }
@Test
public void test02377() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0xfffffff780000000l); }
@Test
public void test02378() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0xffffffef00000011l); }
@Test
public void test02379() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0xffffffe680000011l); }
@Test
public void test02380() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0xffffffe680000000l); }
@Test
public void test02381() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0xffffffde00000011l); }
@Test
public void test02382() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0x0000000880000011l); }
@Test
public void test02383() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0x0000000880000000l); }
@Test
public void test02384() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0xffffffe036730f23l); }
@Test
public void test02385() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0x0000000236730f23l); }
@Test
public void test02386() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000011l); }
@Test
public void test02387() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0x8000000880000011l); }
@Test
public void test02388() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0x8000000880000000l); }
@Test
public void test02389() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0x8000000236730f23l); }
@Test
public void test02390() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02391() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000011l); }
@Test
public void test02392() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000022l); }
@Test
public void test02393() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0x1000000000000011l); }
@Test
public void test02394() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffefl; AssertJUnit.assertEquals("multiply", result, 0x36730f1436730f23l); }
@Test
public void test02395() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xffffffbc00000088l); }
@Test
public void test02396() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xffffffbc00000000l); }
@Test
public void test02397() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000088l); }
@Test
public void test02398() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xffffff3400000088l); }
@Test
public void test02399() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xffffff3400000000l); }
@Test
public void test02400() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xfffffef000000088l); }
@Test
public void test02401() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000004400000088l); }
@Test
public void test02402() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000004400000000l); }
@Test
public void test02403() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xffffff01b3987918l); }
@Test
public void test02404() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x00000011b3987918l); }
@Test
public void test02405() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000088l); }
@Test
public void test02406() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000004400000088l); }
@Test
public void test02407() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000004400000000l); }
@Test
public void test02408() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x00000011b3987918l); }
@Test
public void test02409() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02410() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000088l); }
@Test
public void test02411() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000110l); }
@Test
public void test02412() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000088l); }
@Test
public void test02413() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xb39878a1b3987918l); }
@Test
public void test02414() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0xfffff78000001100l); }
@Test
public void test02415() { x = 0x0000000080000000l; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0xfffff78000000000l); }
@Test
public void test02416() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0xffffef0000001100l); }
@Test
public void test02417() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0xffffe68000001100l); }
@Test
public void test02418() { x = 0x0000000180000000l; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0xffffe68000000000l); }
@Test
public void test02419() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0xffffde0000001100l); }
@Test
public void test02420() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0x0000088000001100l); }
@Test
public void test02421() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0x0000088000000000l); }
@Test
public void test02422() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0xffffe036730f2300l); }
@Test
public void test02423() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0x00000236730f2300l); }
@Test
public void test02424() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001100l); }
@Test
public void test02425() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0x0000088000001100l); }
@Test
public void test02426() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0x0000088000000000l); }
@Test
public void test02427() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0x00000236730f2300l); }
@Test
public void test02428() { x = 0x8000000000000000l; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02429() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001100l); }
@Test
public void test02430() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002200l); }
@Test
public void test02431() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001100l); }
@Test
public void test02432() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffef00l; AssertJUnit.assertEquals("multiply", result, 0x730f1436730f2300l); }
@Test
public void test02433() { x = 0x000000007fffffffl; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001100000000l); }
@Test
public void test02434() { x = 0x0000000080000000l; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02435() { x = 0x00000000ffffffffl; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001100000000l); }
@Test
public void test02436() { x = 0x000000017fffffffl; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001100000000l); }
@Test
public void test02437() { x = 0x0000000180000000l; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02438() { x = 0x00000001ffffffffl; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001100000000l); }
@Test
public void test02439() { x = 0xffffffff7fffffffl; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001100000000l); }
@Test
public void test02440() { x = 0xffffffff80000000l; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02441() { x = 0x00000001deadf00dl; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x36730f2300000000l); }
@Test
public void test02442() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x36730f2300000000l); }
@Test
public void test02443() { x = 0x7fffffffffffffffl; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001100000000l); }
@Test
public void test02444() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001100000000l); }
@Test
public void test02445() { x = 0x7fffffff80000000l; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02446() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x36730f2300000000l); }
@Test
public void test02447() { x = 0x8000000000000000l; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02448() { x = 0xffffffffffffffffl; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001100000000l); }
@Test
public void test02449() { x = 0xfffffffffffffffel; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002200000000l); }
@Test
public void test02450() { x = 0xefffffffffffffffl; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001100000000l); }
@Test
public void test02451() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffef00000000l; AssertJUnit.assertEquals("multiply", result, 0x36730f2300000000l); }
@Test
public void test02452() { x = 0x000000007fffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test02453() { x = 0x0000000080000000l; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02454() { x = 0x00000000ffffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test02455() { x = 0x000000017fffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test02456() { x = 0x0000000180000000l; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02457() { x = 0x00000001ffffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test02458() { x = 0xffffffff7fffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test02459() { x = 0xffffffff80000000l; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02460() { x = 0x00000001deadf00dl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0xb398791800000000l); }
@Test
public void test02461() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0xb398791800000000l); }
@Test
public void test02462() { x = 0x7fffffffffffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test02463() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test02464() { x = 0x7fffffff80000000l; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02465() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0xb398791800000000l); }
@Test
public void test02466() { x = 0x8000000000000000l; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02467() { x = 0xffffffffffffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test02468() { x = 0xfffffffffffffffel; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011000000000l); }
@Test
public void test02469() { x = 0xefffffffffffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test02470() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0xb398791800000000l); }
@Test
public void test02471() { x = 0x000000007fffffffl; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0x00000008ffffffeel); }
@Test
public void test02472() { x = 0x0000000080000000l; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0x0000000900000000l); }
@Test
public void test02473() { x = 0x00000000ffffffffl; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0x00000011ffffffeel); }
@Test
public void test02474() { x = 0x000000017fffffffl; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0x0000001affffffeel); }
@Test
public void test02475() { x = 0x0000000180000000l; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0x0000001b00000000l); }
@Test
public void test02476() { x = 0x00000001ffffffffl; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0x00000023ffffffeel); }
@Test
public void test02477() { x = 0xffffffff7fffffffl; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0xfffffff6ffffffeel); }
@Test
public void test02478() { x = 0xffffffff80000000l; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0xfffffff700000000l); }
@Test
public void test02479() { x = 0x00000001deadf00dl; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0x00000021a83ae0eal); }
@Test
public void test02480() { x = 0xffffffffdeadf00dl; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0xfffffffda83ae0eal); }
@Test
public void test02481() { x = 0x7fffffffffffffffl; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffeel); }
@Test
public void test02482() { x = 0x7fffffff7fffffffl; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0xfffffff6ffffffeel); }
@Test
public void test02483() { x = 0x7fffffff80000000l; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0xfffffff700000000l); }
@Test
public void test02484() { x = 0x7fffffffdeadf00dl; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0xfffffffda83ae0eal); }
@Test
public void test02485() { x = 0x8000000000000000l; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02486() { x = 0xffffffffffffffffl; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffeel); }
@Test
public void test02487() { x = 0xfffffffffffffffel; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffdcl); }
@Test
public void test02488() { x = 0xefffffffffffffffl; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0xdfffffffffffffeel); }
@Test
public void test02489() { x = 0xdeadf00ddeadf00dl; long result = x * 0x12l; AssertJUnit.assertEquals("multiply", result, 0xa83ae0f9a83ae0eal); }
@Test
public void test02490() { x = 0x000000007fffffffl; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0x00000047ffffff70l); }
@Test
public void test02491() { x = 0x0000000080000000l; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000000l); }
@Test
public void test02492() { x = 0x00000000ffffffffl; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0x0000008fffffff70l); }
@Test
public void test02493() { x = 0x000000017fffffffl; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0x000000d7ffffff70l); }
@Test
public void test02494() { x = 0x0000000180000000l; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0x000000d800000000l); }
@Test
public void test02495() { x = 0x00000001ffffffffl; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0x0000011fffffff70l); }
@Test
public void test02496() { x = 0xffffffff7fffffffl; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0xffffffb7ffffff70l); }
@Test
public void test02497() { x = 0xffffffff80000000l; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000000l); }
@Test
public void test02498() { x = 0x00000001deadf00dl; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0x0000010d41d70750l); }
@Test
public void test02499() { x = 0xffffffffdeadf00dl; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0xffffffed41d70750l); }
@Test
public void test02500() { x = 0x7fffffffffffffffl; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff70l); }
@Test
public void test02501() { x = 0x7fffffff7fffffffl; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0xffffffb7ffffff70l); }
@Test
public void test02502() { x = 0x7fffffff80000000l; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000000l); }
@Test
public void test02503() { x = 0x7fffffffdeadf00dl; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0xffffffed41d70750l); }
@Test
public void test02504() { x = 0x8000000000000000l; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02505() { x = 0xffffffffffffffffl; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff70l); }
@Test
public void test02506() { x = 0xfffffffffffffffel; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffee0l); }
@Test
public void test02507() { x = 0xefffffffffffffffl; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff70l); }
@Test
public void test02508() { x = 0xdeadf00ddeadf00dl; long result = x * 0x90l; AssertJUnit.assertEquals("multiply", result, 0x41d707cd41d70750l); }
@Test
public void test02509() { x = 0x000000007fffffffl; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0x000008ffffffee00l); }
@Test
public void test02510() { x = 0x0000000080000000l; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0x0000090000000000l); }
@Test
public void test02511() { x = 0x00000000ffffffffl; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0x000011ffffffee00l); }
@Test
public void test02512() { x = 0x000000017fffffffl; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0x00001affffffee00l); }
@Test
public void test02513() { x = 0x0000000180000000l; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0x00001b0000000000l); }
@Test
public void test02514() { x = 0x00000001ffffffffl; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0x000023ffffffee00l); }
@Test
public void test02515() { x = 0xffffffff7fffffffl; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0xfffff6ffffffee00l); }
@Test
public void test02516() { x = 0xffffffff80000000l; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0xfffff70000000000l); }
@Test
public void test02517() { x = 0x00000001deadf00dl; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0x000021a83ae0ea00l); }
@Test
public void test02518() { x = 0xffffffffdeadf00dl; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0xfffffda83ae0ea00l); }
@Test
public void test02519() { x = 0x7fffffffffffffffl; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffee00l); }
@Test
public void test02520() { x = 0x7fffffff7fffffffl; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0xfffff6ffffffee00l); }
@Test
public void test02521() { x = 0x7fffffff80000000l; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0xfffff70000000000l); }
@Test
public void test02522() { x = 0x7fffffffdeadf00dl; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0xfffffda83ae0ea00l); }
@Test
public void test02523() { x = 0x8000000000000000l; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02524() { x = 0xffffffffffffffffl; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffee00l); }
@Test
public void test02525() { x = 0xfffffffffffffffel; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdc00l); }
@Test
public void test02526() { x = 0xefffffffffffffffl; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffee00l); }
@Test
public void test02527() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1200l; AssertJUnit.assertEquals("multiply", result, 0x3ae0f9a83ae0ea00l); }
@Test
public void test02528() { x = 0x000000007fffffffl; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000000l); }
@Test
public void test02529() { x = 0x0000000080000000l; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02530() { x = 0x00000000ffffffffl; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000000l); }
@Test
public void test02531() { x = 0x000000017fffffffl; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000000l); }
@Test
public void test02532() { x = 0x0000000180000000l; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02533() { x = 0x00000001ffffffffl; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000000l); }
@Test
public void test02534() { x = 0xffffffff7fffffffl; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000000l); }
@Test
public void test02535() { x = 0xffffffff80000000l; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02536() { x = 0x00000001deadf00dl; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0xa83ae0ea00000000l); }
@Test
public void test02537() { x = 0xffffffffdeadf00dl; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0xa83ae0ea00000000l); }
@Test
public void test02538() { x = 0x7fffffffffffffffl; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000000l); }
@Test
public void test02539() { x = 0x7fffffff7fffffffl; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000000l); }
@Test
public void test02540() { x = 0x7fffffff80000000l; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02541() { x = 0x7fffffffdeadf00dl; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0xa83ae0ea00000000l); }
@Test
public void test02542() { x = 0x8000000000000000l; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02543() { x = 0xffffffffffffffffl; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000000l); }
@Test
public void test02544() { x = 0xfffffffffffffffel; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test02545() { x = 0xefffffffffffffffl; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000000l); }
@Test
public void test02546() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1200000000l; AssertJUnit.assertEquals("multiply", result, 0xa83ae0ea00000000l); }
@Test
public void test02547() { x = 0x000000007fffffffl; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test02548() { x = 0x0000000080000000l; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02549() { x = 0x00000000ffffffffl; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test02550() { x = 0x000000017fffffffl; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test02551() { x = 0x0000000180000000l; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02552() { x = 0x00000001ffffffffl; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test02553() { x = 0xffffffff7fffffffl; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test02554() { x = 0xffffffff80000000l; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02555() { x = 0x00000001deadf00dl; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0x41d7075000000000l); }
@Test
public void test02556() { x = 0xffffffffdeadf00dl; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0x41d7075000000000l); }
@Test
public void test02557() { x = 0x7fffffffffffffffl; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test02558() { x = 0x7fffffff7fffffffl; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test02559() { x = 0x7fffffff80000000l; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02560() { x = 0x7fffffffdeadf00dl; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0x41d7075000000000l); }
@Test
public void test02561() { x = 0x8000000000000000l; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02562() { x = 0xffffffffffffffffl; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test02563() { x = 0xfffffffffffffffel; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee000000000l); }
@Test
public void test02564() { x = 0xefffffffffffffffl; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test02565() { x = 0xdeadf00ddeadf00dl; long result = x * 0x9000000000l; AssertJUnit.assertEquals("multiply", result, 0x41d7075000000000l); }
@Test
public void test02566() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0xfffffff700000012l); }
@Test
public void test02567() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0xfffffff700000000l); }
@Test
public void test02568() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000012l); }
@Test
public void test02569() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0xffffffe500000012l); }
@Test
public void test02570() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0xffffffe500000000l); }
@Test
public void test02571() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000012l); }
@Test
public void test02572() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0x0000000900000012l); }
@Test
public void test02573() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0x0000000900000000l); }
@Test
public void test02574() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0xffffffde57c51f16l); }
@Test
public void test02575() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0x0000000257c51f16l); }
@Test
public void test02576() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0x0000000000000012l); }
@Test
public void test02577() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0x0000000900000012l); }
@Test
public void test02578() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0x0000000900000000l); }
@Test
public void test02579() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0x0000000257c51f16l); }
@Test
public void test02580() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02581() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0x0000000000000012l); }
@Test
public void test02582() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0x0000000000000024l); }
@Test
public void test02583() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0x2000000000000012l); }
@Test
public void test02584() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffeel; AssertJUnit.assertEquals("multiply", result, 0x57c51f0657c51f16l); }
@Test
public void test02585() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000090l); }
@Test
public void test02586() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000000l); }
@Test
public void test02587() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000090l); }
@Test
public void test02588() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0xffffff2800000090l); }
@Test
public void test02589() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0xffffff2800000000l); }
@Test
public void test02590() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0xfffffee000000090l); }
@Test
public void test02591() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000090l); }
@Test
public void test02592() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000000l); }
@Test
public void test02593() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0xfffffef2be28f8b0l); }
@Test
public void test02594() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0x00000012be28f8b0l); }
@Test
public void test02595() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000090l); }
@Test
public void test02596() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000090l); }
@Test
public void test02597() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000000l); }
@Test
public void test02598() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0x00000012be28f8b0l); }
@Test
public void test02599() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02600() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000090l); }
@Test
public void test02601() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000120l); }
@Test
public void test02602() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000090l); }
@Test
public void test02603() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff70l; AssertJUnit.assertEquals("multiply", result, 0xbe28f832be28f8b0l); }
@Test
public void test02604() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0xfffff70000001200l); }
@Test
public void test02605() { x = 0x0000000080000000l; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0xfffff70000000000l); }
@Test
public void test02606() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0xffffee0000001200l); }
@Test
public void test02607() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0xffffe50000001200l); }
@Test
public void test02608() { x = 0x0000000180000000l; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0xffffe50000000000l); }
@Test
public void test02609() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0xffffdc0000001200l); }
@Test
public void test02610() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0x0000090000001200l); }
@Test
public void test02611() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0x0000090000000000l); }
@Test
public void test02612() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0xffffde57c51f1600l); }
@Test
public void test02613() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0x00000257c51f1600l); }
@Test
public void test02614() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001200l); }
@Test
public void test02615() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0x0000090000001200l); }
@Test
public void test02616() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0x0000090000000000l); }
@Test
public void test02617() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0x00000257c51f1600l); }
@Test
public void test02618() { x = 0x8000000000000000l; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02619() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001200l); }
@Test
public void test02620() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002400l); }
@Test
public void test02621() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001200l); }
@Test
public void test02622() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffee00l; AssertJUnit.assertEquals("multiply", result, 0xc51f0657c51f1600l); }
@Test
public void test02623() { x = 0x000000007fffffffl; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001200000000l); }
@Test
public void test02624() { x = 0x0000000080000000l; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02625() { x = 0x00000000ffffffffl; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001200000000l); }
@Test
public void test02626() { x = 0x000000017fffffffl; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001200000000l); }
@Test
public void test02627() { x = 0x0000000180000000l; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02628() { x = 0x00000001ffffffffl; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001200000000l); }
@Test
public void test02629() { x = 0xffffffff7fffffffl; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001200000000l); }
@Test
public void test02630() { x = 0xffffffff80000000l; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02631() { x = 0x00000001deadf00dl; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x57c51f1600000000l); }
@Test
public void test02632() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x57c51f1600000000l); }
@Test
public void test02633() { x = 0x7fffffffffffffffl; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001200000000l); }
@Test
public void test02634() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001200000000l); }
@Test
public void test02635() { x = 0x7fffffff80000000l; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02636() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x57c51f1600000000l); }
@Test
public void test02637() { x = 0x8000000000000000l; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02638() { x = 0xffffffffffffffffl; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001200000000l); }
@Test
public void test02639() { x = 0xfffffffffffffffel; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test02640() { x = 0xefffffffffffffffl; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001200000000l); }
@Test
public void test02641() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffee00000000l; AssertJUnit.assertEquals("multiply", result, 0x57c51f1600000000l); }
@Test
public void test02642() { x = 0x000000007fffffffl; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test02643() { x = 0x0000000080000000l; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02644() { x = 0x00000000ffffffffl; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test02645() { x = 0x000000017fffffffl; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test02646() { x = 0x0000000180000000l; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02647() { x = 0x00000001ffffffffl; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test02648() { x = 0xffffffff7fffffffl; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test02649() { x = 0xffffffff80000000l; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02650() { x = 0x00000001deadf00dl; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0xbe28f8b000000000l); }
@Test
public void test02651() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0xbe28f8b000000000l); }
@Test
public void test02652() { x = 0x7fffffffffffffffl; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test02653() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test02654() { x = 0x7fffffff80000000l; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02655() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0xbe28f8b000000000l); }
@Test
public void test02656() { x = 0x8000000000000000l; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02657() { x = 0xffffffffffffffffl; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test02658() { x = 0xfffffffffffffffel; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012000000000l); }
@Test
public void test02659() { x = 0xefffffffffffffffl; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test02660() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff7000000000l; AssertJUnit.assertEquals("multiply", result, 0xbe28f8b000000000l); }
@Test
public void test02661() { x = 0x000000007fffffffl; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0x000000097fffffedl); }
@Test
public void test02662() { x = 0x0000000080000000l; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0x0000000980000000l); }
@Test
public void test02663() { x = 0x00000000ffffffffl; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0x00000012ffffffedl); }
@Test
public void test02664() { x = 0x000000017fffffffl; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0x0000001c7fffffedl); }
@Test
public void test02665() { x = 0x0000000180000000l; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0x0000001c80000000l); }
@Test
public void test02666() { x = 0x00000001ffffffffl; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0x00000025ffffffedl); }
@Test
public void test02667() { x = 0xffffffff7fffffffl; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0xfffffff67fffffedl); }
@Test
public void test02668() { x = 0xffffffff80000000l; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0xfffffff680000000l); }
@Test
public void test02669() { x = 0x00000001deadf00dl; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0x0000002386e8d0f7l); }
@Test
public void test02670() { x = 0xffffffffdeadf00dl; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd86e8d0f7l); }
@Test
public void test02671() { x = 0x7fffffffffffffffl; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffedl); }
@Test
public void test02672() { x = 0x7fffffff7fffffffl; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff67fffffedl); }
@Test
public void test02673() { x = 0x7fffffff80000000l; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff680000000l); }
@Test
public void test02674() { x = 0x7fffffffdeadf00dl; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffd86e8d0f7l); }
@Test
public void test02675() { x = 0x8000000000000000l; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02676() { x = 0xffffffffffffffffl; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffedl); }
@Test
public void test02677() { x = 0xfffffffffffffffel; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffdal); }
@Test
public void test02678() { x = 0xefffffffffffffffl; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0xcfffffffffffffedl); }
@Test
public void test02679() { x = 0xdeadf00ddeadf00dl; long result = x * 0x13l; AssertJUnit.assertEquals("multiply", result, 0x86e8d10786e8d0f7l); }
@Test
public void test02680() { x = 0x000000007fffffffl; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0x0000004bffffff68l); }
@Test
public void test02681() { x = 0x0000000080000000l; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0x0000004c00000000l); }
@Test
public void test02682() { x = 0x00000000ffffffffl; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0x00000097ffffff68l); }
@Test
public void test02683() { x = 0x000000017fffffffl; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0x000000e3ffffff68l); }
@Test
public void test02684() { x = 0x0000000180000000l; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0x000000e400000000l); }
@Test
public void test02685() { x = 0x00000001ffffffffl; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0x0000012fffffff68l); }
@Test
public void test02686() { x = 0xffffffff7fffffffl; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0xffffffb3ffffff68l); }
@Test
public void test02687() { x = 0xffffffff80000000l; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0xffffffb400000000l); }
@Test
public void test02688() { x = 0x00000001deadf00dl; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0x0000011c374687b8l); }
@Test
public void test02689() { x = 0xffffffffdeadf00dl; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0xffffffec374687b8l); }
@Test
public void test02690() { x = 0x7fffffffffffffffl; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff68l); }
@Test
public void test02691() { x = 0x7fffffff7fffffffl; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0xffffffb3ffffff68l); }
@Test
public void test02692() { x = 0x7fffffff80000000l; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0xffffffb400000000l); }
@Test
public void test02693() { x = 0x7fffffffdeadf00dl; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0xffffffec374687b8l); }
@Test
public void test02694() { x = 0x8000000000000000l; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02695() { x = 0xffffffffffffffffl; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff68l); }
@Test
public void test02696() { x = 0xfffffffffffffffel; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffed0l); }
@Test
public void test02697() { x = 0xefffffffffffffffl; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff68l); }
@Test
public void test02698() { x = 0xdeadf00ddeadf00dl; long result = x * 0x98l; AssertJUnit.assertEquals("multiply", result, 0x3746883c374687b8l); }
@Test
public void test02699() { x = 0x000000007fffffffl; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0x0000097fffffed00l); }
@Test
public void test02700() { x = 0x0000000080000000l; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0x0000098000000000l); }
@Test
public void test02701() { x = 0x00000000ffffffffl; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0x000012ffffffed00l); }
@Test
public void test02702() { x = 0x000000017fffffffl; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0x00001c7fffffed00l); }
@Test
public void test02703() { x = 0x0000000180000000l; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0x00001c8000000000l); }
@Test
public void test02704() { x = 0x00000001ffffffffl; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0x000025ffffffed00l); }
@Test
public void test02705() { x = 0xffffffff7fffffffl; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0xfffff67fffffed00l); }
@Test
public void test02706() { x = 0xffffffff80000000l; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0xfffff68000000000l); }
@Test
public void test02707() { x = 0x00000001deadf00dl; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0x00002386e8d0f700l); }
@Test
public void test02708() { x = 0xffffffffdeadf00dl; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0xfffffd86e8d0f700l); }
@Test
public void test02709() { x = 0x7fffffffffffffffl; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffed00l); }
@Test
public void test02710() { x = 0x7fffffff7fffffffl; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0xfffff67fffffed00l); }
@Test
public void test02711() { x = 0x7fffffff80000000l; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0xfffff68000000000l); }
@Test
public void test02712() { x = 0x7fffffffdeadf00dl; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0xfffffd86e8d0f700l); }
@Test
public void test02713() { x = 0x8000000000000000l; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02714() { x = 0xffffffffffffffffl; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffed00l); }
@Test
public void test02715() { x = 0xfffffffffffffffel; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffda00l); }
@Test
public void test02716() { x = 0xefffffffffffffffl; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffed00l); }
@Test
public void test02717() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1300l; AssertJUnit.assertEquals("multiply", result, 0xe8d10786e8d0f700l); }
@Test
public void test02718() { x = 0x000000007fffffffl; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffed00000000l); }
@Test
public void test02719() { x = 0x0000000080000000l; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02720() { x = 0x00000000ffffffffl; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffed00000000l); }
@Test
public void test02721() { x = 0x000000017fffffffl; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffed00000000l); }
@Test
public void test02722() { x = 0x0000000180000000l; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02723() { x = 0x00000001ffffffffl; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffed00000000l); }
@Test
public void test02724() { x = 0xffffffff7fffffffl; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffed00000000l); }
@Test
public void test02725() { x = 0xffffffff80000000l; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02726() { x = 0x00000001deadf00dl; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0x86e8d0f700000000l); }
@Test
public void test02727() { x = 0xffffffffdeadf00dl; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0x86e8d0f700000000l); }
@Test
public void test02728() { x = 0x7fffffffffffffffl; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffed00000000l); }
@Test
public void test02729() { x = 0x7fffffff7fffffffl; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffed00000000l); }
@Test
public void test02730() { x = 0x7fffffff80000000l; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02731() { x = 0x7fffffffdeadf00dl; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0x86e8d0f700000000l); }
@Test
public void test02732() { x = 0x8000000000000000l; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02733() { x = 0xffffffffffffffffl; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffed00000000l); }
@Test
public void test02734() { x = 0xfffffffffffffffel; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffda00000000l); }
@Test
public void test02735() { x = 0xefffffffffffffffl; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffed00000000l); }
@Test
public void test02736() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1300000000l; AssertJUnit.assertEquals("multiply", result, 0x86e8d0f700000000l); }
@Test
public void test02737() { x = 0x000000007fffffffl; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6800000000l); }
@Test
public void test02738() { x = 0x0000000080000000l; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02739() { x = 0x00000000ffffffffl; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6800000000l); }
@Test
public void test02740() { x = 0x000000017fffffffl; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6800000000l); }
@Test
public void test02741() { x = 0x0000000180000000l; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02742() { x = 0x00000001ffffffffl; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6800000000l); }
@Test
public void test02743() { x = 0xffffffff7fffffffl; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6800000000l); }
@Test
public void test02744() { x = 0xffffffff80000000l; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02745() { x = 0x00000001deadf00dl; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0x374687b800000000l); }
@Test
public void test02746() { x = 0xffffffffdeadf00dl; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0x374687b800000000l); }
@Test
public void test02747() { x = 0x7fffffffffffffffl; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6800000000l); }
@Test
public void test02748() { x = 0x7fffffff7fffffffl; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6800000000l); }
@Test
public void test02749() { x = 0x7fffffff80000000l; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02750() { x = 0x7fffffffdeadf00dl; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0x374687b800000000l); }
@Test
public void test02751() { x = 0x8000000000000000l; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02752() { x = 0xffffffffffffffffl; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6800000000l); }
@Test
public void test02753() { x = 0xfffffffffffffffel; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffed000000000l); }
@Test
public void test02754() { x = 0xefffffffffffffffl; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6800000000l); }
@Test
public void test02755() { x = 0xdeadf00ddeadf00dl; long result = x * 0x9800000000l; AssertJUnit.assertEquals("multiply", result, 0x374687b800000000l); }
@Test
public void test02756() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0xfffffff680000013l); }
@Test
public void test02757() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0xfffffff680000000l); }
@Test
public void test02758() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0xffffffed00000013l); }
@Test
public void test02759() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0xffffffe380000013l); }
@Test
public void test02760() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0xffffffe380000000l); }
@Test
public void test02761() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0xffffffda00000013l); }
@Test
public void test02762() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0x0000000980000013l); }
@Test
public void test02763() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0x0000000980000000l); }
@Test
public void test02764() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0xffffffdc79172f09l); }
@Test
public void test02765() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0x0000000279172f09l); }
@Test
public void test02766() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000013l); }
@Test
public void test02767() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0x8000000980000013l); }
@Test
public void test02768() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0x8000000980000000l); }
@Test
public void test02769() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0x8000000279172f09l); }
@Test
public void test02770() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02771() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000013l); }
@Test
public void test02772() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000026l); }
@Test
public void test02773() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0x3000000000000013l); }
@Test
public void test02774() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffedl; AssertJUnit.assertEquals("multiply", result, 0x79172ef879172f09l); }
@Test
public void test02775() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0xffffffb400000098l); }
@Test
public void test02776() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0xffffffb400000000l); }
@Test
public void test02777() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0xffffff6800000098l); }
@Test
public void test02778() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0xffffff1c00000098l); }
@Test
public void test02779() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0xffffff1c00000000l); }
@Test
public void test02780() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0xfffffed000000098l); }
@Test
public void test02781() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0x0000004c00000098l); }
@Test
public void test02782() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0x0000004c00000000l); }
@Test
public void test02783() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0xfffffee3c8b97848l); }
@Test
public void test02784() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0x00000013c8b97848l); }
@Test
public void test02785() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000098l); }
@Test
public void test02786() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0x0000004c00000098l); }
@Test
public void test02787() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0x0000004c00000000l); }
@Test
public void test02788() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0x00000013c8b97848l); }
@Test
public void test02789() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02790() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000098l); }
@Test
public void test02791() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000130l); }
@Test
public void test02792() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000098l); }
@Test
public void test02793() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff68l; AssertJUnit.assertEquals("multiply", result, 0xc8b977c3c8b97848l); }
@Test
public void test02794() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0xfffff68000001300l); }
@Test
public void test02795() { x = 0x0000000080000000l; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0xfffff68000000000l); }
@Test
public void test02796() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0xffffed0000001300l); }
@Test
public void test02797() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0xffffe38000001300l); }
@Test
public void test02798() { x = 0x0000000180000000l; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0xffffe38000000000l); }
@Test
public void test02799() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0xffffda0000001300l); }
@Test
public void test02800() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0x0000098000001300l); }
@Test
public void test02801() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0x0000098000000000l); }
@Test
public void test02802() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0xffffdc79172f0900l); }
@Test
public void test02803() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0x00000279172f0900l); }
@Test
public void test02804() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001300l); }
@Test
public void test02805() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0x0000098000001300l); }
@Test
public void test02806() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0x0000098000000000l); }
@Test
public void test02807() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0x00000279172f0900l); }
@Test
public void test02808() { x = 0x8000000000000000l; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02809() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001300l); }
@Test
public void test02810() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002600l); }
@Test
public void test02811() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001300l); }
@Test
public void test02812() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffed00l; AssertJUnit.assertEquals("multiply", result, 0x172ef879172f0900l); }
@Test
public void test02813() { x = 0x000000007fffffffl; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001300000000l); }
@Test
public void test02814() { x = 0x0000000080000000l; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02815() { x = 0x00000000ffffffffl; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001300000000l); }
@Test
public void test02816() { x = 0x000000017fffffffl; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001300000000l); }
@Test
public void test02817() { x = 0x0000000180000000l; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02818() { x = 0x00000001ffffffffl; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001300000000l); }
@Test
public void test02819() { x = 0xffffffff7fffffffl; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001300000000l); }
@Test
public void test02820() { x = 0xffffffff80000000l; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02821() { x = 0x00000001deadf00dl; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x79172f0900000000l); }
@Test
public void test02822() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x79172f0900000000l); }
@Test
public void test02823() { x = 0x7fffffffffffffffl; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001300000000l); }
@Test
public void test02824() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001300000000l); }
@Test
public void test02825() { x = 0x7fffffff80000000l; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test02826() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x79172f0900000000l); }
@Test
public void test02827() { x = 0x8000000000000000l; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02828() { x = 0xffffffffffffffffl; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001300000000l); }
@Test
public void test02829() { x = 0xfffffffffffffffel; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002600000000l); }
@Test
public void test02830() { x = 0xefffffffffffffffl; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001300000000l); }
@Test
public void test02831() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffed00000000l; AssertJUnit.assertEquals("multiply", result, 0x79172f0900000000l); }
@Test
public void test02832() { x = 0x000000007fffffffl; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009800000000l); }
@Test
public void test02833() { x = 0x0000000080000000l; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02834() { x = 0x00000000ffffffffl; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009800000000l); }
@Test
public void test02835() { x = 0x000000017fffffffl; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009800000000l); }
@Test
public void test02836() { x = 0x0000000180000000l; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02837() { x = 0x00000001ffffffffl; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009800000000l); }
@Test
public void test02838() { x = 0xffffffff7fffffffl; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009800000000l); }
@Test
public void test02839() { x = 0xffffffff80000000l; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02840() { x = 0x00000001deadf00dl; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0xc8b9784800000000l); }
@Test
public void test02841() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0xc8b9784800000000l); }
@Test
public void test02842() { x = 0x7fffffffffffffffl; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009800000000l); }
@Test
public void test02843() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009800000000l); }
@Test
public void test02844() { x = 0x7fffffff80000000l; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02845() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0xc8b9784800000000l); }
@Test
public void test02846() { x = 0x8000000000000000l; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02847() { x = 0xffffffffffffffffl; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009800000000l); }
@Test
public void test02848() { x = 0xfffffffffffffffel; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000013000000000l); }
@Test
public void test02849() { x = 0xefffffffffffffffl; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009800000000l); }
@Test
public void test02850() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff6800000000l; AssertJUnit.assertEquals("multiply", result, 0xc8b9784800000000l); }
@Test
public void test02851() { x = 0x000000007fffffffl; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0x00000009ffffffecl); }
@Test
public void test02852() { x = 0x0000000080000000l; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000000l); }
@Test
public void test02853() { x = 0x00000000ffffffffl; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0x00000013ffffffecl); }
@Test
public void test02854() { x = 0x000000017fffffffl; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0x0000001dffffffecl); }
@Test
public void test02855() { x = 0x0000000180000000l; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0x0000001e00000000l); }
@Test
public void test02856() { x = 0x00000001ffffffffl; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0x00000027ffffffecl); }
@Test
public void test02857() { x = 0xffffffff7fffffffl; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0xfffffff5ffffffecl); }
@Test
public void test02858() { x = 0xffffffff80000000l; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000000l); }
@Test
public void test02859() { x = 0x00000001deadf00dl; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0x000000256596c104l); }
@Test
public void test02860() { x = 0xffffffffdeadf00dl; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd6596c104l); }
@Test
public void test02861() { x = 0x7fffffffffffffffl; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffecl); }
@Test
public void test02862() { x = 0x7fffffff7fffffffl; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0xfffffff5ffffffecl); }
@Test
public void test02863() { x = 0x7fffffff80000000l; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000000l); }
@Test
public void test02864() { x = 0x7fffffffdeadf00dl; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd6596c104l); }
@Test
public void test02865() { x = 0x8000000000000000l; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02866() { x = 0xffffffffffffffffl; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffecl); }
@Test
public void test02867() { x = 0xfffffffffffffffel; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd8l); }
@Test
public void test02868() { x = 0xefffffffffffffffl; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0xbfffffffffffffecl); }
@Test
public void test02869() { x = 0xdeadf00ddeadf00dl; long result = x * 0x14l; AssertJUnit.assertEquals("multiply", result, 0x6596c1156596c104l); }
@Test
public void test02870() { x = 0x000000007fffffffl; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0x0000004fffffff60l); }
@Test
public void test02871() { x = 0x0000000080000000l; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0x0000005000000000l); }
@Test
public void test02872() { x = 0x00000000ffffffffl; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0x0000009fffffff60l); }
@Test
public void test02873() { x = 0x000000017fffffffl; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0x000000efffffff60l); }
@Test
public void test02874() { x = 0x0000000180000000l; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0x000000f000000000l); }
@Test
public void test02875() { x = 0x00000001ffffffffl; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0x0000013fffffff60l); }
@Test
public void test02876() { x = 0xffffffff7fffffffl; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffafffffff60l); }
@Test
public void test02877() { x = 0xffffffff80000000l; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000000l); }
@Test
public void test02878() { x = 0x00000001deadf00dl; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0x0000012b2cb60820l); }
@Test
public void test02879() { x = 0xffffffffdeadf00dl; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffeb2cb60820l); }
@Test
public void test02880() { x = 0x7fffffffffffffffl; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff60l); }
@Test
public void test02881() { x = 0x7fffffff7fffffffl; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffafffffff60l); }
@Test
public void test02882() { x = 0x7fffffff80000000l; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000000l); }
@Test
public void test02883() { x = 0x7fffffffdeadf00dl; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffeb2cb60820l); }
@Test
public void test02884() { x = 0x8000000000000000l; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02885() { x = 0xffffffffffffffffl; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff60l); }
@Test
public void test02886() { x = 0xfffffffffffffffel; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffec0l); }
@Test
public void test02887() { x = 0xefffffffffffffffl; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff60l); }
@Test
public void test02888() { x = 0xdeadf00ddeadf00dl; long result = x * 0xa0l; AssertJUnit.assertEquals("multiply", result, 0x2cb608ab2cb60820l); }
@Test
public void test02889() { x = 0x000000007fffffffl; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0x000009ffffffec00l); }
@Test
public void test02890() { x = 0x0000000080000000l; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0x00000a0000000000l); }
@Test
public void test02891() { x = 0x00000000ffffffffl; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0x000013ffffffec00l); }
@Test
public void test02892() { x = 0x000000017fffffffl; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0x00001dffffffec00l); }
@Test
public void test02893() { x = 0x0000000180000000l; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0x00001e0000000000l); }
@Test
public void test02894() { x = 0x00000001ffffffffl; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0x000027ffffffec00l); }
@Test
public void test02895() { x = 0xffffffff7fffffffl; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0xfffff5ffffffec00l); }
@Test
public void test02896() { x = 0xffffffff80000000l; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0xfffff60000000000l); }
@Test
public void test02897() { x = 0x00000001deadf00dl; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0x0000256596c10400l); }
@Test
public void test02898() { x = 0xffffffffdeadf00dl; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6596c10400l); }
@Test
public void test02899() { x = 0x7fffffffffffffffl; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffec00l); }
@Test
public void test02900() { x = 0x7fffffff7fffffffl; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0xfffff5ffffffec00l); }
@Test
public void test02901() { x = 0x7fffffff80000000l; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0xfffff60000000000l); }
@Test
public void test02902() { x = 0x7fffffffdeadf00dl; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6596c10400l); }
@Test
public void test02903() { x = 0x8000000000000000l; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02904() { x = 0xffffffffffffffffl; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffec00l); }
@Test
public void test02905() { x = 0xfffffffffffffffel; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd800l); }
@Test
public void test02906() { x = 0xefffffffffffffffl; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffec00l); }
@Test
public void test02907() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1400l; AssertJUnit.assertEquals("multiply", result, 0x96c1156596c10400l); }
@Test
public void test02908() { x = 0x000000007fffffffl; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000000l); }
@Test
public void test02909() { x = 0x0000000080000000l; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02910() { x = 0x00000000ffffffffl; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000000l); }
@Test
public void test02911() { x = 0x000000017fffffffl; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000000l); }
@Test
public void test02912() { x = 0x0000000180000000l; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02913() { x = 0x00000001ffffffffl; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000000l); }
@Test
public void test02914() { x = 0xffffffff7fffffffl; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000000l); }
@Test
public void test02915() { x = 0xffffffff80000000l; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02916() { x = 0x00000001deadf00dl; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0x6596c10400000000l); }
@Test
public void test02917() { x = 0xffffffffdeadf00dl; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0x6596c10400000000l); }
@Test
public void test02918() { x = 0x7fffffffffffffffl; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000000l); }
@Test
public void test02919() { x = 0x7fffffff7fffffffl; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000000l); }
@Test
public void test02920() { x = 0x7fffffff80000000l; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02921() { x = 0x7fffffffdeadf00dl; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0x6596c10400000000l); }
@Test
public void test02922() { x = 0x8000000000000000l; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02923() { x = 0xffffffffffffffffl; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000000l); }
@Test
public void test02924() { x = 0xfffffffffffffffel; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000000l); }
@Test
public void test02925() { x = 0xefffffffffffffffl; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000000l); }
@Test
public void test02926() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1400000000l; AssertJUnit.assertEquals("multiply", result, 0x6596c10400000000l); }
@Test
public void test02927() { x = 0x000000007fffffffl; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6000000000l); }
@Test
public void test02928() { x = 0x0000000080000000l; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02929() { x = 0x00000000ffffffffl; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6000000000l); }
@Test
public void test02930() { x = 0x000000017fffffffl; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6000000000l); }
@Test
public void test02931() { x = 0x0000000180000000l; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02932() { x = 0x00000001ffffffffl; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6000000000l); }
@Test
public void test02933() { x = 0xffffffff7fffffffl; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6000000000l); }
@Test
public void test02934() { x = 0xffffffff80000000l; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02935() { x = 0x00000001deadf00dl; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0x2cb6082000000000l); }
@Test
public void test02936() { x = 0xffffffffdeadf00dl; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0x2cb6082000000000l); }
@Test
public void test02937() { x = 0x7fffffffffffffffl; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6000000000l); }
@Test
public void test02938() { x = 0x7fffffff7fffffffl; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6000000000l); }
@Test
public void test02939() { x = 0x7fffffff80000000l; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02940() { x = 0x7fffffffdeadf00dl; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0x2cb6082000000000l); }
@Test
public void test02941() { x = 0x8000000000000000l; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02942() { x = 0xffffffffffffffffl; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6000000000l); }
@Test
public void test02943() { x = 0xfffffffffffffffel; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffec000000000l); }
@Test
public void test02944() { x = 0xefffffffffffffffl; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6000000000l); }
@Test
public void test02945() { x = 0xdeadf00ddeadf00dl; long result = x * 0xa000000000l; AssertJUnit.assertEquals("multiply", result, 0x2cb6082000000000l); }
@Test
public void test02946() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000014l); }
@Test
public void test02947() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0xfffffff600000000l); }
@Test
public void test02948() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0xffffffec00000014l); }
@Test
public void test02949() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0xffffffe200000014l); }
@Test
public void test02950() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0xffffffe200000000l); }
@Test
public void test02951() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0xffffffd800000014l); }
@Test
public void test02952() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000014l); }
@Test
public void test02953() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000000l); }
@Test
public void test02954() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0xffffffda9a693efcl); }
@Test
public void test02955() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0x000000029a693efcl); }
@Test
public void test02956() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000014l); }
@Test
public void test02957() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000014l); }
@Test
public void test02958() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0x0000000a00000000l); }
@Test
public void test02959() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0x000000029a693efcl); }
@Test
public void test02960() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02961() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000014l); }
@Test
public void test02962() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000028l); }
@Test
public void test02963() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0x4000000000000014l); }
@Test
public void test02964() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffecl; AssertJUnit.assertEquals("multiply", result, 0x9a693eea9a693efcl); }
@Test
public void test02965() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0xffffffb0000000a0l); }
@Test
public void test02966() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0xffffffb000000000l); }
@Test
public void test02967() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0xffffff60000000a0l); }
@Test
public void test02968() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0xffffff10000000a0l); }
@Test
public void test02969() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0xffffff1000000000l); }
@Test
public void test02970() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0xfffffec0000000a0l); }
@Test
public void test02971() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0x00000050000000a0l); }
@Test
public void test02972() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0x0000005000000000l); }
@Test
public void test02973() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0xfffffed4d349f7e0l); }
@Test
public void test02974() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0x00000014d349f7e0l); }
@Test
public void test02975() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000a0l); }
@Test
public void test02976() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0x00000050000000a0l); }
@Test
public void test02977() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0x0000005000000000l); }
@Test
public void test02978() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0x00000014d349f7e0l); }
@Test
public void test02979() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02980() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000a0l); }
@Test
public void test02981() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000140l); }
@Test
public void test02982() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000a0l); }
@Test
public void test02983() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff60l; AssertJUnit.assertEquals("multiply", result, 0xd349f754d349f7e0l); }
@Test
public void test02984() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0xfffff60000001400l); }
@Test
public void test02985() { x = 0x0000000080000000l; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0xfffff60000000000l); }
@Test
public void test02986() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0xffffec0000001400l); }
@Test
public void test02987() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0xffffe20000001400l); }
@Test
public void test02988() { x = 0x0000000180000000l; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0xffffe20000000000l); }
@Test
public void test02989() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0xffffd80000001400l); }
@Test
public void test02990() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0x00000a0000001400l); }
@Test
public void test02991() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0x00000a0000000000l); }
@Test
public void test02992() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0xffffda9a693efc00l); }
@Test
public void test02993() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0x0000029a693efc00l); }
@Test
public void test02994() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001400l); }
@Test
public void test02995() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0x00000a0000001400l); }
@Test
public void test02996() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0x00000a0000000000l); }
@Test
public void test02997() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0x0000029a693efc00l); }
@Test
public void test02998() { x = 0x8000000000000000l; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test02999() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001400l); }
@Test
public void test03000() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002800l); }
@Test
public void test03001() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001400l); }
@Test
public void test03002() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffec00l; AssertJUnit.assertEquals("multiply", result, 0x693eea9a693efc00l); }
@Test
public void test03003() { x = 0x000000007fffffffl; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000000l); }
@Test
public void test03004() { x = 0x0000000080000000l; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03005() { x = 0x00000000ffffffffl; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000000l); }
@Test
public void test03006() { x = 0x000000017fffffffl; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000000l); }
@Test
public void test03007() { x = 0x0000000180000000l; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03008() { x = 0x00000001ffffffffl; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000000l); }
@Test
public void test03009() { x = 0xffffffff7fffffffl; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000000l); }
@Test
public void test03010() { x = 0xffffffff80000000l; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03011() { x = 0x00000001deadf00dl; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x9a693efc00000000l); }
@Test
public void test03012() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x9a693efc00000000l); }
@Test
public void test03013() { x = 0x7fffffffffffffffl; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000000l); }
@Test
public void test03014() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000000l); }
@Test
public void test03015() { x = 0x7fffffff80000000l; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03016() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x9a693efc00000000l); }
@Test
public void test03017() { x = 0x8000000000000000l; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03018() { x = 0xffffffffffffffffl; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000000l); }
@Test
public void test03019() { x = 0xfffffffffffffffel; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002800000000l); }
@Test
public void test03020() { x = 0xefffffffffffffffl; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001400000000l); }
@Test
public void test03021() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffec00000000l; AssertJUnit.assertEquals("multiply", result, 0x9a693efc00000000l); }
@Test
public void test03022() { x = 0x000000007fffffffl; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a000000000l); }
@Test
public void test03023() { x = 0x0000000080000000l; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03024() { x = 0x00000000ffffffffl; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a000000000l); }
@Test
public void test03025() { x = 0x000000017fffffffl; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a000000000l); }
@Test
public void test03026() { x = 0x0000000180000000l; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03027() { x = 0x00000001ffffffffl; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a000000000l); }
@Test
public void test03028() { x = 0xffffffff7fffffffl; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a000000000l); }
@Test
public void test03029() { x = 0xffffffff80000000l; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03030() { x = 0x00000001deadf00dl; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0xd349f7e000000000l); }
@Test
public void test03031() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0xd349f7e000000000l); }
@Test
public void test03032() { x = 0x7fffffffffffffffl; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a000000000l); }
@Test
public void test03033() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a000000000l); }
@Test
public void test03034() { x = 0x7fffffff80000000l; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03035() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0xd349f7e000000000l); }
@Test
public void test03036() { x = 0x8000000000000000l; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03037() { x = 0xffffffffffffffffl; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a000000000l); }
@Test
public void test03038() { x = 0xfffffffffffffffel; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000014000000000l); }
@Test
public void test03039() { x = 0xefffffffffffffffl; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a000000000l); }
@Test
public void test03040() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff6000000000l; AssertJUnit.assertEquals("multiply", result, 0xd349f7e000000000l); }
@Test
public void test03041() { x = 0x000000007fffffffl; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0x0000000a7fffffebl); }
@Test
public void test03042() { x = 0x0000000080000000l; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0x0000000a80000000l); }
@Test
public void test03043() { x = 0x00000000ffffffffl; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0x00000014ffffffebl); }
@Test
public void test03044() { x = 0x000000017fffffffl; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0x0000001f7fffffebl); }
@Test
public void test03045() { x = 0x0000000180000000l; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0x0000001f80000000l); }
@Test
public void test03046() { x = 0x00000001ffffffffl; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0x00000029ffffffebl); }
@Test
public void test03047() { x = 0xffffffff7fffffffl; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0xfffffff57fffffebl); }
@Test
public void test03048() { x = 0xffffffff80000000l; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0xfffffff580000000l); }
@Test
public void test03049() { x = 0x00000001deadf00dl; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0x000000274444b111l); }
@Test
public void test03050() { x = 0xffffffffdeadf00dl; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd4444b111l); }
@Test
public void test03051() { x = 0x7fffffffffffffffl; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffebl); }
@Test
public void test03052() { x = 0x7fffffff7fffffffl; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff57fffffebl); }
@Test
public void test03053() { x = 0x7fffffff80000000l; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff580000000l); }
@Test
public void test03054() { x = 0x7fffffffdeadf00dl; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffd4444b111l); }
@Test
public void test03055() { x = 0x8000000000000000l; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03056() { x = 0xffffffffffffffffl; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffebl); }
@Test
public void test03057() { x = 0xfffffffffffffffel; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd6l); }
@Test
public void test03058() { x = 0xefffffffffffffffl; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0xafffffffffffffebl); }
@Test
public void test03059() { x = 0xdeadf00ddeadf00dl; long result = x * 0x15l; AssertJUnit.assertEquals("multiply", result, 0x4444b1234444b111l); }
@Test
public void test03060() { x = 0x000000007fffffffl; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0x00000053ffffff58l); }
@Test
public void test03061() { x = 0x0000000080000000l; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0x0000005400000000l); }
@Test
public void test03062() { x = 0x00000000ffffffffl; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0x000000a7ffffff58l); }
@Test
public void test03063() { x = 0x000000017fffffffl; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0x000000fbffffff58l); }
@Test
public void test03064() { x = 0x0000000180000000l; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0x000000fc00000000l); }
@Test
public void test03065() { x = 0x00000001ffffffffl; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0x0000014fffffff58l); }
@Test
public void test03066() { x = 0xffffffff7fffffffl; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0xffffffabffffff58l); }
@Test
public void test03067() { x = 0xffffffff80000000l; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0xffffffac00000000l); }
@Test
public void test03068() { x = 0x00000001deadf00dl; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0x0000013a22258888l); }
@Test
public void test03069() { x = 0xffffffffdeadf00dl; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0xffffffea22258888l); }
@Test
public void test03070() { x = 0x7fffffffffffffffl; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff58l); }
@Test
public void test03071() { x = 0x7fffffff7fffffffl; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0xffffffabffffff58l); }
@Test
public void test03072() { x = 0x7fffffff80000000l; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0xffffffac00000000l); }
@Test
public void test03073() { x = 0x7fffffffdeadf00dl; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0xffffffea22258888l); }
@Test
public void test03074() { x = 0x8000000000000000l; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03075() { x = 0xffffffffffffffffl; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff58l); }
@Test
public void test03076() { x = 0xfffffffffffffffel; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffeb0l); }
@Test
public void test03077() { x = 0xefffffffffffffffl; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff58l); }
@Test
public void test03078() { x = 0xdeadf00ddeadf00dl; long result = x * 0xa8l; AssertJUnit.assertEquals("multiply", result, 0x2225891a22258888l); }
@Test
public void test03079() { x = 0x000000007fffffffl; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0x00000a7fffffeb00l); }
@Test
public void test03080() { x = 0x0000000080000000l; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0x00000a8000000000l); }
@Test
public void test03081() { x = 0x00000000ffffffffl; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0x000014ffffffeb00l); }
@Test
public void test03082() { x = 0x000000017fffffffl; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0x00001f7fffffeb00l); }
@Test
public void test03083() { x = 0x0000000180000000l; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0x00001f8000000000l); }
@Test
public void test03084() { x = 0x00000001ffffffffl; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0x000029ffffffeb00l); }
@Test
public void test03085() { x = 0xffffffff7fffffffl; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0xfffff57fffffeb00l); }
@Test
public void test03086() { x = 0xffffffff80000000l; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0xfffff58000000000l); }
@Test
public void test03087() { x = 0x00000001deadf00dl; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0x0000274444b11100l); }
@Test
public void test03088() { x = 0xffffffffdeadf00dl; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0xfffffd4444b11100l); }
@Test
public void test03089() { x = 0x7fffffffffffffffl; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffeb00l); }
@Test
public void test03090() { x = 0x7fffffff7fffffffl; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0xfffff57fffffeb00l); }
@Test
public void test03091() { x = 0x7fffffff80000000l; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0xfffff58000000000l); }
@Test
public void test03092() { x = 0x7fffffffdeadf00dl; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0xfffffd4444b11100l); }
@Test
public void test03093() { x = 0x8000000000000000l; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03094() { x = 0xffffffffffffffffl; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffeb00l); }
@Test
public void test03095() { x = 0xfffffffffffffffel; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd600l); }
@Test
public void test03096() { x = 0xefffffffffffffffl; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffeb00l); }
@Test
public void test03097() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1500l; AssertJUnit.assertEquals("multiply", result, 0x44b1234444b11100l); }
@Test
public void test03098() { x = 0x000000007fffffffl; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffeb00000000l); }
@Test
public void test03099() { x = 0x0000000080000000l; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03100() { x = 0x00000000ffffffffl; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffeb00000000l); }
@Test
public void test03101() { x = 0x000000017fffffffl; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffeb00000000l); }
@Test
public void test03102() { x = 0x0000000180000000l; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03103() { x = 0x00000001ffffffffl; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffeb00000000l); }
@Test
public void test03104() { x = 0xffffffff7fffffffl; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffeb00000000l); }
@Test
public void test03105() { x = 0xffffffff80000000l; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03106() { x = 0x00000001deadf00dl; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0x4444b11100000000l); }
@Test
public void test03107() { x = 0xffffffffdeadf00dl; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0x4444b11100000000l); }
@Test
public void test03108() { x = 0x7fffffffffffffffl; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffeb00000000l); }
@Test
public void test03109() { x = 0x7fffffff7fffffffl; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffeb00000000l); }
@Test
public void test03110() { x = 0x7fffffff80000000l; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03111() { x = 0x7fffffffdeadf00dl; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0x4444b11100000000l); }
@Test
public void test03112() { x = 0x8000000000000000l; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03113() { x = 0xffffffffffffffffl; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffeb00000000l); }
@Test
public void test03114() { x = 0xfffffffffffffffel; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd600000000l); }
@Test
public void test03115() { x = 0xefffffffffffffffl; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffeb00000000l); }
@Test
public void test03116() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1500000000l; AssertJUnit.assertEquals("multiply", result, 0x4444b11100000000l); }
@Test
public void test03117() { x = 0x000000007fffffffl; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5800000000l); }
@Test
public void test03118() { x = 0x0000000080000000l; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03119() { x = 0x00000000ffffffffl; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5800000000l); }
@Test
public void test03120() { x = 0x000000017fffffffl; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5800000000l); }
@Test
public void test03121() { x = 0x0000000180000000l; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03122() { x = 0x00000001ffffffffl; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5800000000l); }
@Test
public void test03123() { x = 0xffffffff7fffffffl; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5800000000l); }
@Test
public void test03124() { x = 0xffffffff80000000l; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03125() { x = 0x00000001deadf00dl; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0x2225888800000000l); }
@Test
public void test03126() { x = 0xffffffffdeadf00dl; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0x2225888800000000l); }
@Test
public void test03127() { x = 0x7fffffffffffffffl; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5800000000l); }
@Test
public void test03128() { x = 0x7fffffff7fffffffl; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5800000000l); }
@Test
public void test03129() { x = 0x7fffffff80000000l; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03130() { x = 0x7fffffffdeadf00dl; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0x2225888800000000l); }
@Test
public void test03131() { x = 0x8000000000000000l; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03132() { x = 0xffffffffffffffffl; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5800000000l); }
@Test
public void test03133() { x = 0xfffffffffffffffel; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb000000000l); }
@Test
public void test03134() { x = 0xefffffffffffffffl; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5800000000l); }
@Test
public void test03135() { x = 0xdeadf00ddeadf00dl; long result = x * 0xa800000000l; AssertJUnit.assertEquals("multiply", result, 0x2225888800000000l); }
@Test
public void test03136() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0xfffffff580000015l); }
@Test
public void test03137() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0xfffffff580000000l); }
@Test
public void test03138() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0xffffffeb00000015l); }
@Test
public void test03139() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0xffffffe080000015l); }
@Test
public void test03140() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0xffffffe080000000l); }
@Test
public void test03141() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0xffffffd600000015l); }
@Test
public void test03142() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0x0000000a80000015l); }
@Test
public void test03143() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0x0000000a80000000l); }
@Test
public void test03144() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0xffffffd8bbbb4eefl); }
@Test
public void test03145() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0x00000002bbbb4eefl); }
@Test
public void test03146() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000015l); }
@Test
public void test03147() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0x8000000a80000015l); }
@Test
public void test03148() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0x8000000a80000000l); }
@Test
public void test03149() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0x80000002bbbb4eefl); }
@Test
public void test03150() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03151() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000015l); }
@Test
public void test03152() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0x000000000000002al); }
@Test
public void test03153() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0x5000000000000015l); }
@Test
public void test03154() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffebl; AssertJUnit.assertEquals("multiply", result, 0xbbbb4edcbbbb4eefl); }
@Test
public void test03155() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0xffffffac000000a8l); }
@Test
public void test03156() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0xffffffac00000000l); }
@Test
public void test03157() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0xffffff58000000a8l); }
@Test
public void test03158() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0xffffff04000000a8l); }
@Test
public void test03159() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0xffffff0400000000l); }
@Test
public void test03160() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb0000000a8l); }
@Test
public void test03161() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0x00000054000000a8l); }
@Test
public void test03162() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0x0000005400000000l); }
@Test
public void test03163() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0xfffffec5ddda7778l); }
@Test
public void test03164() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0x00000015ddda7778l); }
@Test
public void test03165() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000a8l); }
@Test
public void test03166() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0x00000054000000a8l); }
@Test
public void test03167() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0x0000005400000000l); }
@Test
public void test03168() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0x00000015ddda7778l); }
@Test
public void test03169() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03170() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000a8l); }
@Test
public void test03171() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000150l); }
@Test
public void test03172() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0x80000000000000a8l); }
@Test
public void test03173() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff58l; AssertJUnit.assertEquals("multiply", result, 0xddda76e5ddda7778l); }
@Test
public void test03174() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0xfffff58000001500l); }
@Test
public void test03175() { x = 0x0000000080000000l; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0xfffff58000000000l); }
@Test
public void test03176() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0xffffeb0000001500l); }
@Test
public void test03177() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0xffffe08000001500l); }
@Test
public void test03178() { x = 0x0000000180000000l; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0xffffe08000000000l); }
@Test
public void test03179() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0xffffd60000001500l); }
@Test
public void test03180() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0x00000a8000001500l); }
@Test
public void test03181() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0x00000a8000000000l); }
@Test
public void test03182() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0xffffd8bbbb4eef00l); }
@Test
public void test03183() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0x000002bbbb4eef00l); }
@Test
public void test03184() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001500l); }
@Test
public void test03185() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0x00000a8000001500l); }
@Test
public void test03186() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0x00000a8000000000l); }
@Test
public void test03187() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0x000002bbbb4eef00l); }
@Test
public void test03188() { x = 0x8000000000000000l; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03189() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001500l); }
@Test
public void test03190() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002a00l); }
@Test
public void test03191() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001500l); }
@Test
public void test03192() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffeb00l; AssertJUnit.assertEquals("multiply", result, 0xbb4edcbbbb4eef00l); }
@Test
public void test03193() { x = 0x000000007fffffffl; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001500000000l); }
@Test
public void test03194() { x = 0x0000000080000000l; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03195() { x = 0x00000000ffffffffl; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001500000000l); }
@Test
public void test03196() { x = 0x000000017fffffffl; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001500000000l); }
@Test
public void test03197() { x = 0x0000000180000000l; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03198() { x = 0x00000001ffffffffl; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001500000000l); }
@Test
public void test03199() { x = 0xffffffff7fffffffl; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001500000000l); }
@Test
public void test03200() { x = 0xffffffff80000000l; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03201() { x = 0x00000001deadf00dl; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0xbbbb4eef00000000l); }
@Test
public void test03202() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0xbbbb4eef00000000l); }
@Test
public void test03203() { x = 0x7fffffffffffffffl; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001500000000l); }
@Test
public void test03204() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001500000000l); }
@Test
public void test03205() { x = 0x7fffffff80000000l; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03206() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0xbbbb4eef00000000l); }
@Test
public void test03207() { x = 0x8000000000000000l; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03208() { x = 0xffffffffffffffffl; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001500000000l); }
@Test
public void test03209() { x = 0xfffffffffffffffel; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002a00000000l); }
@Test
public void test03210() { x = 0xefffffffffffffffl; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001500000000l); }
@Test
public void test03211() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffeb00000000l; AssertJUnit.assertEquals("multiply", result, 0xbbbb4eef00000000l); }
@Test
public void test03212() { x = 0x000000007fffffffl; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a800000000l); }
@Test
public void test03213() { x = 0x0000000080000000l; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03214() { x = 0x00000000ffffffffl; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a800000000l); }
@Test
public void test03215() { x = 0x000000017fffffffl; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a800000000l); }
@Test
public void test03216() { x = 0x0000000180000000l; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03217() { x = 0x00000001ffffffffl; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a800000000l); }
@Test
public void test03218() { x = 0xffffffff7fffffffl; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a800000000l); }
@Test
public void test03219() { x = 0xffffffff80000000l; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03220() { x = 0x00000001deadf00dl; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0xddda777800000000l); }
@Test
public void test03221() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0xddda777800000000l); }
@Test
public void test03222() { x = 0x7fffffffffffffffl; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a800000000l); }
@Test
public void test03223() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a800000000l); }
@Test
public void test03224() { x = 0x7fffffff80000000l; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03225() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0xddda777800000000l); }
@Test
public void test03226() { x = 0x8000000000000000l; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03227() { x = 0xffffffffffffffffl; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a800000000l); }
@Test
public void test03228() { x = 0xfffffffffffffffel; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015000000000l); }
@Test
public void test03229() { x = 0xefffffffffffffffl; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a800000000l); }
@Test
public void test03230() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff5800000000l; AssertJUnit.assertEquals("multiply", result, 0xddda777800000000l); }
@Test
public void test03231() { x = 0x000000007fffffffl; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0x0000000affffffeal); }
@Test
public void test03232() { x = 0x0000000080000000l; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0x0000000b00000000l); }
@Test
public void test03233() { x = 0x00000000ffffffffl; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0x00000015ffffffeal); }
@Test
public void test03234() { x = 0x000000017fffffffl; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0x00000020ffffffeal); }
@Test
public void test03235() { x = 0x0000000180000000l; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0x0000002100000000l); }
@Test
public void test03236() { x = 0x00000001ffffffffl; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0x0000002bffffffeal); }
@Test
public void test03237() { x = 0xffffffff7fffffffl; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0xfffffff4ffffffeal); }
@Test
public void test03238() { x = 0xffffffff80000000l; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0xfffffff500000000l); }
@Test
public void test03239() { x = 0x00000001deadf00dl; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0x0000002922f2a11el); }
@Test
public void test03240() { x = 0xffffffffdeadf00dl; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd22f2a11el); }
@Test
public void test03241() { x = 0x7fffffffffffffffl; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffeal); }
@Test
public void test03242() { x = 0x7fffffff7fffffffl; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0xfffffff4ffffffeal); }
@Test
public void test03243() { x = 0x7fffffff80000000l; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0xfffffff500000000l); }
@Test
public void test03244() { x = 0x7fffffffdeadf00dl; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd22f2a11el); }
@Test
public void test03245() { x = 0x8000000000000000l; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03246() { x = 0xffffffffffffffffl; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffeal); }
@Test
public void test03247() { x = 0xfffffffffffffffel; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd4l); }
@Test
public void test03248() { x = 0xefffffffffffffffl; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0x9fffffffffffffeal); }
@Test
public void test03249() { x = 0xdeadf00ddeadf00dl; long result = x * 0x16l; AssertJUnit.assertEquals("multiply", result, 0x22f2a13122f2a11el); }
@Test
public void test03250() { x = 0x000000007fffffffl; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0x00000057ffffff50l); }
@Test
public void test03251() { x = 0x0000000080000000l; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0x0000005800000000l); }
@Test
public void test03252() { x = 0x00000000ffffffffl; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0x000000afffffff50l); }
@Test
public void test03253() { x = 0x000000017fffffffl; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0x00000107ffffff50l); }
@Test
public void test03254() { x = 0x0000000180000000l; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0x0000010800000000l); }
@Test
public void test03255() { x = 0x00000001ffffffffl; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0x0000015fffffff50l); }
@Test
public void test03256() { x = 0xffffffff7fffffffl; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0xffffffa7ffffff50l); }
@Test
public void test03257() { x = 0xffffffff80000000l; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0xffffffa800000000l); }
@Test
public void test03258() { x = 0x00000001deadf00dl; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0x00000149179508f0l); }
@Test
public void test03259() { x = 0xffffffffdeadf00dl; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0xffffffe9179508f0l); }
@Test
public void test03260() { x = 0x7fffffffffffffffl; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff50l); }
@Test
public void test03261() { x = 0x7fffffff7fffffffl; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0xffffffa7ffffff50l); }
@Test
public void test03262() { x = 0x7fffffff80000000l; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0xffffffa800000000l); }
@Test
public void test03263() { x = 0x7fffffffdeadf00dl; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0xffffffe9179508f0l); }
@Test
public void test03264() { x = 0x8000000000000000l; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03265() { x = 0xffffffffffffffffl; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff50l); }
@Test
public void test03266() { x = 0xfffffffffffffffel; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffea0l); }
@Test
public void test03267() { x = 0xefffffffffffffffl; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff50l); }
@Test
public void test03268() { x = 0xdeadf00ddeadf00dl; long result = x * 0xb0l; AssertJUnit.assertEquals("multiply", result, 0x17950989179508f0l); }
@Test
public void test03269() { x = 0x000000007fffffffl; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0x00000affffffea00l); }
@Test
public void test03270() { x = 0x0000000080000000l; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0x00000b0000000000l); }
@Test
public void test03271() { x = 0x00000000ffffffffl; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0x000015ffffffea00l); }
@Test
public void test03272() { x = 0x000000017fffffffl; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0x000020ffffffea00l); }
@Test
public void test03273() { x = 0x0000000180000000l; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0x0000210000000000l); }
@Test
public void test03274() { x = 0x00000001ffffffffl; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0x00002bffffffea00l); }
@Test
public void test03275() { x = 0xffffffff7fffffffl; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0xfffff4ffffffea00l); }
@Test
public void test03276() { x = 0xffffffff80000000l; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0xfffff50000000000l); }
@Test
public void test03277() { x = 0x00000001deadf00dl; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0x00002922f2a11e00l); }
@Test
public void test03278() { x = 0xffffffffdeadf00dl; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0xfffffd22f2a11e00l); }
@Test
public void test03279() { x = 0x7fffffffffffffffl; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffea00l); }
@Test
public void test03280() { x = 0x7fffffff7fffffffl; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0xfffff4ffffffea00l); }
@Test
public void test03281() { x = 0x7fffffff80000000l; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0xfffff50000000000l); }
@Test
public void test03282() { x = 0x7fffffffdeadf00dl; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0xfffffd22f2a11e00l); }
@Test
public void test03283() { x = 0x8000000000000000l; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03284() { x = 0xffffffffffffffffl; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffea00l); }
@Test
public void test03285() { x = 0xfffffffffffffffel; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd400l); }
@Test
public void test03286() { x = 0xefffffffffffffffl; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffea00l); }
@Test
public void test03287() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1600l; AssertJUnit.assertEquals("multiply", result, 0xf2a13122f2a11e00l); }
@Test
public void test03288() { x = 0x000000007fffffffl; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffea00000000l); }
@Test
public void test03289() { x = 0x0000000080000000l; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03290() { x = 0x00000000ffffffffl; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffea00000000l); }
@Test
public void test03291() { x = 0x000000017fffffffl; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffea00000000l); }
@Test
public void test03292() { x = 0x0000000180000000l; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03293() { x = 0x00000001ffffffffl; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffea00000000l); }
@Test
public void test03294() { x = 0xffffffff7fffffffl; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffea00000000l); }
@Test
public void test03295() { x = 0xffffffff80000000l; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03296() { x = 0x00000001deadf00dl; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0x22f2a11e00000000l); }
@Test
public void test03297() { x = 0xffffffffdeadf00dl; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0x22f2a11e00000000l); }
@Test
public void test03298() { x = 0x7fffffffffffffffl; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffea00000000l); }
@Test
public void test03299() { x = 0x7fffffff7fffffffl; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffea00000000l); }
@Test
public void test03300() { x = 0x7fffffff80000000l; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03301() { x = 0x7fffffffdeadf00dl; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0x22f2a11e00000000l); }
@Test
public void test03302() { x = 0x8000000000000000l; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03303() { x = 0xffffffffffffffffl; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffea00000000l); }
@Test
public void test03304() { x = 0xfffffffffffffffel; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000000l); }
@Test
public void test03305() { x = 0xefffffffffffffffl; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffea00000000l); }
@Test
public void test03306() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1600000000l; AssertJUnit.assertEquals("multiply", result, 0x22f2a11e00000000l); }
@Test
public void test03307() { x = 0x000000007fffffffl; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000000l); }
@Test
public void test03308() { x = 0x0000000080000000l; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03309() { x = 0x00000000ffffffffl; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000000l); }
@Test
public void test03310() { x = 0x000000017fffffffl; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000000l); }
@Test
public void test03311() { x = 0x0000000180000000l; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03312() { x = 0x00000001ffffffffl; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000000l); }
@Test
public void test03313() { x = 0xffffffff7fffffffl; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000000l); }
@Test
public void test03314() { x = 0xffffffff80000000l; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03315() { x = 0x00000001deadf00dl; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0x179508f000000000l); }
@Test
public void test03316() { x = 0xffffffffdeadf00dl; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0x179508f000000000l); }
@Test
public void test03317() { x = 0x7fffffffffffffffl; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000000l); }
@Test
public void test03318() { x = 0x7fffffff7fffffffl; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000000l); }
@Test
public void test03319() { x = 0x7fffffff80000000l; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03320() { x = 0x7fffffffdeadf00dl; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0x179508f000000000l); }
@Test
public void test03321() { x = 0x8000000000000000l; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03322() { x = 0xffffffffffffffffl; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000000l); }
@Test
public void test03323() { x = 0xfffffffffffffffel; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffea000000000l); }
@Test
public void test03324() { x = 0xefffffffffffffffl; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000000l); }
@Test
public void test03325() { x = 0xdeadf00ddeadf00dl; long result = x * 0xb000000000l; AssertJUnit.assertEquals("multiply", result, 0x179508f000000000l); }
@Test
public void test03326() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0xfffffff500000016l); }
@Test
public void test03327() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0xfffffff500000000l); }
@Test
public void test03328() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0xffffffea00000016l); }
@Test
public void test03329() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0xffffffdf00000016l); }
@Test
public void test03330() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0xffffffdf00000000l); }
@Test
public void test03331() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000016l); }
@Test
public void test03332() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0x0000000b00000016l); }
@Test
public void test03333() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0x0000000b00000000l); }
@Test
public void test03334() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0xffffffd6dd0d5ee2l); }
@Test
public void test03335() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0x00000002dd0d5ee2l); }
@Test
public void test03336() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000016l); }
@Test
public void test03337() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0x0000000b00000016l); }
@Test
public void test03338() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0x0000000b00000000l); }
@Test
public void test03339() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0x00000002dd0d5ee2l); }
@Test
public void test03340() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03341() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000016l); }
@Test
public void test03342() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0x000000000000002cl); }
@Test
public void test03343() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0x6000000000000016l); }
@Test
public void test03344() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffeal; AssertJUnit.assertEquals("multiply", result, 0xdd0d5ecedd0d5ee2l); }
@Test
public void test03345() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0xffffffa8000000b0l); }
@Test
public void test03346() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0xffffffa800000000l); }
@Test
public void test03347() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0xffffff50000000b0l); }
@Test
public void test03348() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0xfffffef8000000b0l); }
@Test
public void test03349() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0xfffffef800000000l); }
@Test
public void test03350() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0xfffffea0000000b0l); }
@Test
public void test03351() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0x00000058000000b0l); }
@Test
public void test03352() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0x0000005800000000l); }
@Test
public void test03353() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb6e86af710l); }
@Test
public void test03354() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0x00000016e86af710l); }
@Test
public void test03355() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000b0l); }
@Test
public void test03356() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0x00000058000000b0l); }
@Test
public void test03357() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0x0000005800000000l); }
@Test
public void test03358() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0x00000016e86af710l); }
@Test
public void test03359() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03360() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000b0l); }
@Test
public void test03361() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000160l); }
@Test
public void test03362() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000b0l); }
@Test
public void test03363() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff50l; AssertJUnit.assertEquals("multiply", result, 0xe86af676e86af710l); }
@Test
public void test03364() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0xfffff50000001600l); }
@Test
public void test03365() { x = 0x0000000080000000l; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0xfffff50000000000l); }
@Test
public void test03366() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0xffffea0000001600l); }
@Test
public void test03367() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0xffffdf0000001600l); }
@Test
public void test03368() { x = 0x0000000180000000l; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0xffffdf0000000000l); }
@Test
public void test03369() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0xffffd40000001600l); }
@Test
public void test03370() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0x00000b0000001600l); }
@Test
public void test03371() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0x00000b0000000000l); }
@Test
public void test03372() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0xffffd6dd0d5ee200l); }
@Test
public void test03373() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0x000002dd0d5ee200l); }
@Test
public void test03374() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001600l); }
@Test
public void test03375() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0x00000b0000001600l); }
@Test
public void test03376() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0x00000b0000000000l); }
@Test
public void test03377() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0x000002dd0d5ee200l); }
@Test
public void test03378() { x = 0x8000000000000000l; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03379() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001600l); }
@Test
public void test03380() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002c00l); }
@Test
public void test03381() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001600l); }
@Test
public void test03382() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffea00l; AssertJUnit.assertEquals("multiply", result, 0x0d5ecedd0d5ee200l); }
@Test
public void test03383() { x = 0x000000007fffffffl; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001600000000l); }
@Test
public void test03384() { x = 0x0000000080000000l; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03385() { x = 0x00000000ffffffffl; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001600000000l); }
@Test
public void test03386() { x = 0x000000017fffffffl; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001600000000l); }
@Test
public void test03387() { x = 0x0000000180000000l; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03388() { x = 0x00000001ffffffffl; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001600000000l); }
@Test
public void test03389() { x = 0xffffffff7fffffffl; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001600000000l); }
@Test
public void test03390() { x = 0xffffffff80000000l; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03391() { x = 0x00000001deadf00dl; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0xdd0d5ee200000000l); }
@Test
public void test03392() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0xdd0d5ee200000000l); }
@Test
public void test03393() { x = 0x7fffffffffffffffl; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001600000000l); }
@Test
public void test03394() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001600000000l); }
@Test
public void test03395() { x = 0x7fffffff80000000l; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03396() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0xdd0d5ee200000000l); }
@Test
public void test03397() { x = 0x8000000000000000l; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03398() { x = 0xffffffffffffffffl; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001600000000l); }
@Test
public void test03399() { x = 0xfffffffffffffffel; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000000l); }
@Test
public void test03400() { x = 0xefffffffffffffffl; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001600000000l); }
@Test
public void test03401() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffea00000000l; AssertJUnit.assertEquals("multiply", result, 0xdd0d5ee200000000l); }
@Test
public void test03402() { x = 0x000000007fffffffl; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000000l); }
@Test
public void test03403() { x = 0x0000000080000000l; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03404() { x = 0x00000000ffffffffl; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000000l); }
@Test
public void test03405() { x = 0x000000017fffffffl; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000000l); }
@Test
public void test03406() { x = 0x0000000180000000l; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03407() { x = 0x00000001ffffffffl; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000000l); }
@Test
public void test03408() { x = 0xffffffff7fffffffl; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000000l); }
@Test
public void test03409() { x = 0xffffffff80000000l; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03410() { x = 0x00000001deadf00dl; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0xe86af71000000000l); }
@Test
public void test03411() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0xe86af71000000000l); }
@Test
public void test03412() { x = 0x7fffffffffffffffl; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000000l); }
@Test
public void test03413() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000000l); }
@Test
public void test03414() { x = 0x7fffffff80000000l; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03415() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0xe86af71000000000l); }
@Test
public void test03416() { x = 0x8000000000000000l; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03417() { x = 0xffffffffffffffffl; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000000l); }
@Test
public void test03418() { x = 0xfffffffffffffffel; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016000000000l); }
@Test
public void test03419() { x = 0xefffffffffffffffl; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000000l); }
@Test
public void test03420() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff5000000000l; AssertJUnit.assertEquals("multiply", result, 0xe86af71000000000l); }
@Test
public void test03421() { x = 0x000000007fffffffl; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0x0000000b7fffffe9l); }
@Test
public void test03422() { x = 0x0000000080000000l; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0x0000000b80000000l); }
@Test
public void test03423() { x = 0x00000000ffffffffl; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0x00000016ffffffe9l); }
@Test
public void test03424() { x = 0x000000017fffffffl; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0x000000227fffffe9l); }
@Test
public void test03425() { x = 0x0000000180000000l; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0x0000002280000000l); }
@Test
public void test03426() { x = 0x00000001ffffffffl; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0x0000002dffffffe9l); }
@Test
public void test03427() { x = 0xffffffff7fffffffl; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0xfffffff47fffffe9l); }
@Test
public void test03428() { x = 0xffffffff80000000l; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0xfffffff480000000l); }
@Test
public void test03429() { x = 0x00000001deadf00dl; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0x0000002b01a0912bl); }
@Test
public void test03430() { x = 0xffffffffdeadf00dl; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0xfffffffd01a0912bl); }
@Test
public void test03431() { x = 0x7fffffffffffffffl; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffe9l); }
@Test
public void test03432() { x = 0x7fffffff7fffffffl; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff47fffffe9l); }
@Test
public void test03433() { x = 0x7fffffff80000000l; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff480000000l); }
@Test
public void test03434() { x = 0x7fffffffdeadf00dl; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffd01a0912bl); }
@Test
public void test03435() { x = 0x8000000000000000l; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03436() { x = 0xffffffffffffffffl; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe9l); }
@Test
public void test03437() { x = 0xfffffffffffffffel; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd2l); }
@Test
public void test03438() { x = 0xefffffffffffffffl; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0x8fffffffffffffe9l); }
@Test
public void test03439() { x = 0xdeadf00ddeadf00dl; long result = x * 0x17l; AssertJUnit.assertEquals("multiply", result, 0x01a0913f01a0912bl); }
@Test
public void test03440() { x = 0x000000007fffffffl; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0x0000005bffffff48l); }
@Test
public void test03441() { x = 0x0000000080000000l; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0x0000005c00000000l); }
@Test
public void test03442() { x = 0x00000000ffffffffl; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0x000000b7ffffff48l); }
@Test
public void test03443() { x = 0x000000017fffffffl; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0x00000113ffffff48l); }
@Test
public void test03444() { x = 0x0000000180000000l; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0x0000011400000000l); }
@Test
public void test03445() { x = 0x00000001ffffffffl; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0x0000016fffffff48l); }
@Test
public void test03446() { x = 0xffffffff7fffffffl; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0xffffffa3ffffff48l); }
@Test
public void test03447() { x = 0xffffffff80000000l; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0xffffffa400000000l); }
@Test
public void test03448() { x = 0x00000001deadf00dl; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0x000001580d048958l); }
@Test
public void test03449() { x = 0xffffffffdeadf00dl; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0xffffffe80d048958l); }
@Test
public void test03450() { x = 0x7fffffffffffffffl; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff48l); }
@Test
public void test03451() { x = 0x7fffffff7fffffffl; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0xffffffa3ffffff48l); }
@Test
public void test03452() { x = 0x7fffffff80000000l; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0xffffffa400000000l); }
@Test
public void test03453() { x = 0x7fffffffdeadf00dl; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0xffffffe80d048958l); }
@Test
public void test03454() { x = 0x8000000000000000l; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03455() { x = 0xffffffffffffffffl; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff48l); }
@Test
public void test03456() { x = 0xfffffffffffffffel; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe90l); }
@Test
public void test03457() { x = 0xefffffffffffffffl; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff48l); }
@Test
public void test03458() { x = 0xdeadf00ddeadf00dl; long result = x * 0xb8l; AssertJUnit.assertEquals("multiply", result, 0x0d0489f80d048958l); }
@Test
public void test03459() { x = 0x000000007fffffffl; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0x00000b7fffffe900l); }
@Test
public void test03460() { x = 0x0000000080000000l; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0x00000b8000000000l); }
@Test
public void test03461() { x = 0x00000000ffffffffl; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0x000016ffffffe900l); }
@Test
public void test03462() { x = 0x000000017fffffffl; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0x0000227fffffe900l); }
@Test
public void test03463() { x = 0x0000000180000000l; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0x0000228000000000l); }
@Test
public void test03464() { x = 0x00000001ffffffffl; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0x00002dffffffe900l); }
@Test
public void test03465() { x = 0xffffffff7fffffffl; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0xfffff47fffffe900l); }
@Test
public void test03466() { x = 0xffffffff80000000l; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0xfffff48000000000l); }
@Test
public void test03467() { x = 0x00000001deadf00dl; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0x00002b01a0912b00l); }
@Test
public void test03468() { x = 0xffffffffdeadf00dl; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0xfffffd01a0912b00l); }
@Test
public void test03469() { x = 0x7fffffffffffffffl; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe900l); }
@Test
public void test03470() { x = 0x7fffffff7fffffffl; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0xfffff47fffffe900l); }
@Test
public void test03471() { x = 0x7fffffff80000000l; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0xfffff48000000000l); }
@Test
public void test03472() { x = 0x7fffffffdeadf00dl; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0xfffffd01a0912b00l); }
@Test
public void test03473() { x = 0x8000000000000000l; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03474() { x = 0xffffffffffffffffl; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe900l); }
@Test
public void test03475() { x = 0xfffffffffffffffel; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd200l); }
@Test
public void test03476() { x = 0xefffffffffffffffl; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe900l); }
@Test
public void test03477() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1700l; AssertJUnit.assertEquals("multiply", result, 0xa0913f01a0912b00l); }
@Test
public void test03478() { x = 0x000000007fffffffl; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe900000000l); }
@Test
public void test03479() { x = 0x0000000080000000l; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03480() { x = 0x00000000ffffffffl; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe900000000l); }
@Test
public void test03481() { x = 0x000000017fffffffl; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe900000000l); }
@Test
public void test03482() { x = 0x0000000180000000l; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03483() { x = 0x00000001ffffffffl; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe900000000l); }
@Test
public void test03484() { x = 0xffffffff7fffffffl; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe900000000l); }
@Test
public void test03485() { x = 0xffffffff80000000l; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03486() { x = 0x00000001deadf00dl; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0x01a0912b00000000l); }
@Test
public void test03487() { x = 0xffffffffdeadf00dl; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0x01a0912b00000000l); }
@Test
public void test03488() { x = 0x7fffffffffffffffl; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe900000000l); }
@Test
public void test03489() { x = 0x7fffffff7fffffffl; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe900000000l); }
@Test
public void test03490() { x = 0x7fffffff80000000l; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03491() { x = 0x7fffffffdeadf00dl; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0x01a0912b00000000l); }
@Test
public void test03492() { x = 0x8000000000000000l; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03493() { x = 0xffffffffffffffffl; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe900000000l); }
@Test
public void test03494() { x = 0xfffffffffffffffel; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd200000000l); }
@Test
public void test03495() { x = 0xefffffffffffffffl; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe900000000l); }
@Test
public void test03496() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1700000000l; AssertJUnit.assertEquals("multiply", result, 0x01a0912b00000000l); }
@Test
public void test03497() { x = 0x000000007fffffffl; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4800000000l); }
@Test
public void test03498() { x = 0x0000000080000000l; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03499() { x = 0x00000000ffffffffl; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4800000000l); }
@Test
public void test03500() { x = 0x000000017fffffffl; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4800000000l); }
@Test
public void test03501() { x = 0x0000000180000000l; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03502() { x = 0x00000001ffffffffl; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4800000000l); }
@Test
public void test03503() { x = 0xffffffff7fffffffl; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4800000000l); }
@Test
public void test03504() { x = 0xffffffff80000000l; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03505() { x = 0x00000001deadf00dl; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0d04895800000000l); }
@Test
public void test03506() { x = 0xffffffffdeadf00dl; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0d04895800000000l); }
@Test
public void test03507() { x = 0x7fffffffffffffffl; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4800000000l); }
@Test
public void test03508() { x = 0x7fffffff7fffffffl; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4800000000l); }
@Test
public void test03509() { x = 0x7fffffff80000000l; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03510() { x = 0x7fffffffdeadf00dl; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0d04895800000000l); }
@Test
public void test03511() { x = 0x8000000000000000l; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03512() { x = 0xffffffffffffffffl; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4800000000l); }
@Test
public void test03513() { x = 0xfffffffffffffffel; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9000000000l); }
@Test
public void test03514() { x = 0xefffffffffffffffl; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4800000000l); }
@Test
public void test03515() { x = 0xdeadf00ddeadf00dl; long result = x * 0xb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0d04895800000000l); }
@Test
public void test03516() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0xfffffff480000017l); }
@Test
public void test03517() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0xfffffff480000000l); }
@Test
public void test03518() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0xffffffe900000017l); }
@Test
public void test03519() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0xffffffdd80000017l); }
@Test
public void test03520() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0xffffffdd80000000l); }
@Test
public void test03521() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0xffffffd200000017l); }
@Test
public void test03522() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0x0000000b80000017l); }
@Test
public void test03523() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0x0000000b80000000l); }
@Test
public void test03524() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0xffffffd4fe5f6ed5l); }
@Test
public void test03525() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0x00000002fe5f6ed5l); }
@Test
public void test03526() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000017l); }
@Test
public void test03527() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0x8000000b80000017l); }
@Test
public void test03528() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0x8000000b80000000l); }
@Test
public void test03529() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0x80000002fe5f6ed5l); }
@Test
public void test03530() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03531() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000017l); }
@Test
public void test03532() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0x000000000000002el); }
@Test
public void test03533() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0x7000000000000017l); }
@Test
public void test03534() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffe9l; AssertJUnit.assertEquals("multiply", result, 0xfe5f6ec0fe5f6ed5l); }
@Test
public void test03535() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0xffffffa4000000b8l); }
@Test
public void test03536() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0xffffffa400000000l); }
@Test
public void test03537() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0xffffff48000000b8l); }
@Test
public void test03538() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0xfffffeec000000b8l); }
@Test
public void test03539() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0xfffffeec00000000l); }
@Test
public void test03540() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0xfffffe90000000b8l); }
@Test
public void test03541() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0x0000005c000000b8l); }
@Test
public void test03542() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0x0000005c00000000l); }
@Test
public void test03543() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0xfffffea7f2fb76a8l); }
@Test
public void test03544() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0x00000017f2fb76a8l); }
@Test
public void test03545() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000b8l); }
@Test
public void test03546() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0x0000005c000000b8l); }
@Test
public void test03547() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0x0000005c00000000l); }
@Test
public void test03548() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0x00000017f2fb76a8l); }
@Test
public void test03549() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03550() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000b8l); }
@Test
public void test03551() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000170l); }
@Test
public void test03552() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0x80000000000000b8l); }
@Test
public void test03553() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff48l; AssertJUnit.assertEquals("multiply", result, 0xf2fb7607f2fb76a8l); }
@Test
public void test03554() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0xfffff48000001700l); }
@Test
public void test03555() { x = 0x0000000080000000l; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0xfffff48000000000l); }
@Test
public void test03556() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0xffffe90000001700l); }
@Test
public void test03557() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0xffffdd8000001700l); }
@Test
public void test03558() { x = 0x0000000180000000l; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0xffffdd8000000000l); }
@Test
public void test03559() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0xffffd20000001700l); }
@Test
public void test03560() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0x00000b8000001700l); }
@Test
public void test03561() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0x00000b8000000000l); }
@Test
public void test03562() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0xffffd4fe5f6ed500l); }
@Test
public void test03563() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0x000002fe5f6ed500l); }
@Test
public void test03564() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001700l); }
@Test
public void test03565() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0x00000b8000001700l); }
@Test
public void test03566() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0x00000b8000000000l); }
@Test
public void test03567() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0x000002fe5f6ed500l); }
@Test
public void test03568() { x = 0x8000000000000000l; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03569() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001700l); }
@Test
public void test03570() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002e00l); }
@Test
public void test03571() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001700l); }
@Test
public void test03572() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffe900l; AssertJUnit.assertEquals("multiply", result, 0x5f6ec0fe5f6ed500l); }
@Test
public void test03573() { x = 0x000000007fffffffl; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001700000000l); }
@Test
public void test03574() { x = 0x0000000080000000l; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03575() { x = 0x00000000ffffffffl; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001700000000l); }
@Test
public void test03576() { x = 0x000000017fffffffl; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001700000000l); }
@Test
public void test03577() { x = 0x0000000180000000l; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03578() { x = 0x00000001ffffffffl; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001700000000l); }
@Test
public void test03579() { x = 0xffffffff7fffffffl; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001700000000l); }
@Test
public void test03580() { x = 0xffffffff80000000l; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03581() { x = 0x00000001deadf00dl; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0xfe5f6ed500000000l); }
@Test
public void test03582() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0xfe5f6ed500000000l); }
@Test
public void test03583() { x = 0x7fffffffffffffffl; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001700000000l); }
@Test
public void test03584() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001700000000l); }
@Test
public void test03585() { x = 0x7fffffff80000000l; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03586() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0xfe5f6ed500000000l); }
@Test
public void test03587() { x = 0x8000000000000000l; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03588() { x = 0xffffffffffffffffl; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001700000000l); }
@Test
public void test03589() { x = 0xfffffffffffffffel; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002e00000000l); }
@Test
public void test03590() { x = 0xefffffffffffffffl; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001700000000l); }
@Test
public void test03591() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffe900000000l; AssertJUnit.assertEquals("multiply", result, 0xfe5f6ed500000000l); }
@Test
public void test03592() { x = 0x000000007fffffffl; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b800000000l); }
@Test
public void test03593() { x = 0x0000000080000000l; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03594() { x = 0x00000000ffffffffl; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b800000000l); }
@Test
public void test03595() { x = 0x000000017fffffffl; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b800000000l); }
@Test
public void test03596() { x = 0x0000000180000000l; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03597() { x = 0x00000001ffffffffl; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b800000000l); }
@Test
public void test03598() { x = 0xffffffff7fffffffl; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b800000000l); }
@Test
public void test03599() { x = 0xffffffff80000000l; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03600() { x = 0x00000001deadf00dl; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0xf2fb76a800000000l); }
@Test
public void test03601() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0xf2fb76a800000000l); }
@Test
public void test03602() { x = 0x7fffffffffffffffl; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b800000000l); }
@Test
public void test03603() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b800000000l); }
@Test
public void test03604() { x = 0x7fffffff80000000l; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03605() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0xf2fb76a800000000l); }
@Test
public void test03606() { x = 0x8000000000000000l; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03607() { x = 0xffffffffffffffffl; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b800000000l); }
@Test
public void test03608() { x = 0xfffffffffffffffel; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000017000000000l); }
@Test
public void test03609() { x = 0xefffffffffffffffl; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b800000000l); }
@Test
public void test03610() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff4800000000l; AssertJUnit.assertEquals("multiply", result, 0xf2fb76a800000000l); }
@Test
public void test03611() { x = 0x000000007fffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x0000000bffffffe8l); }
@Test
public void test03612() { x = 0x0000000080000000l; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test03613() { x = 0x00000000ffffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x00000017ffffffe8l); }
@Test
public void test03614() { x = 0x000000017fffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x00000023ffffffe8l); }
@Test
public void test03615() { x = 0x0000000180000000l; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test03616() { x = 0x00000001ffffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x0000002fffffffe8l); }
@Test
public void test03617() { x = 0xffffffff7fffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xfffffff3ffffffe8l); }
@Test
public void test03618() { x = 0xffffffff80000000l; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test03619() { x = 0x00000001deadf00dl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x0000002ce04e8138l); }
@Test
public void test03620() { x = 0xffffffffdeadf00dl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xfffffffce04e8138l); }
@Test
public void test03621() { x = 0x7fffffffffffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe8l); }
@Test
public void test03622() { x = 0x7fffffff7fffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xfffffff3ffffffe8l); }
@Test
public void test03623() { x = 0x7fffffff80000000l; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test03624() { x = 0x7fffffffdeadf00dl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xfffffffce04e8138l); }
@Test
public void test03625() { x = 0x8000000000000000l; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03626() { x = 0xffffffffffffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe8l); }
@Test
public void test03627() { x = 0xfffffffffffffffel; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd0l); }
@Test
public void test03628() { x = 0xefffffffffffffffl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffe8l); }
@Test
public void test03629() { x = 0xdeadf00ddeadf00dl; long result = x * 0x18l; AssertJUnit.assertEquals("multiply", result, 0xe04e814ce04e8138l); }
@Test
public void test03630() { x = 0x000000007fffffffl; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0x0000005fffffff40l); }
@Test
public void test03631() { x = 0x0000000080000000l; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test03632() { x = 0x00000000ffffffffl; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0x000000bfffffff40l); }
@Test
public void test03633() { x = 0x000000017fffffffl; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0x0000011fffffff40l); }
@Test
public void test03634() { x = 0x0000000180000000l; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0x0000012000000000l); }
@Test
public void test03635() { x = 0x00000001ffffffffl; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0x0000017fffffff40l); }
@Test
public void test03636() { x = 0xffffffff7fffffffl; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0xffffff9fffffff40l); }
@Test
public void test03637() { x = 0xffffffff80000000l; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test03638() { x = 0x00000001deadf00dl; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0x00000167027409c0l); }
@Test
public void test03639() { x = 0xffffffffdeadf00dl; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0xffffffe7027409c0l); }
@Test
public void test03640() { x = 0x7fffffffffffffffl; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff40l); }
@Test
public void test03641() { x = 0x7fffffff7fffffffl; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0xffffff9fffffff40l); }
@Test
public void test03642() { x = 0x7fffffff80000000l; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test03643() { x = 0x7fffffffdeadf00dl; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0xffffffe7027409c0l); }
@Test
public void test03644() { x = 0x8000000000000000l; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03645() { x = 0xffffffffffffffffl; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff40l); }
@Test
public void test03646() { x = 0xfffffffffffffffel; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe80l); }
@Test
public void test03647() { x = 0xefffffffffffffffl; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff40l); }
@Test
public void test03648() { x = 0xdeadf00ddeadf00dl; long result = x * 0xc0l; AssertJUnit.assertEquals("multiply", result, 0x02740a67027409c0l); }
@Test
public void test03649() { x = 0x000000007fffffffl; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0x00000bffffffe800l); }
@Test
public void test03650() { x = 0x0000000080000000l; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0x00000c0000000000l); }
@Test
public void test03651() { x = 0x00000000ffffffffl; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0x000017ffffffe800l); }
@Test
public void test03652() { x = 0x000000017fffffffl; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0x000023ffffffe800l); }
@Test
public void test03653() { x = 0x0000000180000000l; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0x0000240000000000l); }
@Test
public void test03654() { x = 0x00000001ffffffffl; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0x00002fffffffe800l); }
@Test
public void test03655() { x = 0xffffffff7fffffffl; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0xfffff3ffffffe800l); }
@Test
public void test03656() { x = 0xffffffff80000000l; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0xfffff40000000000l); }
@Test
public void test03657() { x = 0x00000001deadf00dl; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0x00002ce04e813800l); }
@Test
public void test03658() { x = 0xffffffffdeadf00dl; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0xfffffce04e813800l); }
@Test
public void test03659() { x = 0x7fffffffffffffffl; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe800l); }
@Test
public void test03660() { x = 0x7fffffff7fffffffl; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0xfffff3ffffffe800l); }
@Test
public void test03661() { x = 0x7fffffff80000000l; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0xfffff40000000000l); }
@Test
public void test03662() { x = 0x7fffffffdeadf00dl; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0xfffffce04e813800l); }
@Test
public void test03663() { x = 0x8000000000000000l; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03664() { x = 0xffffffffffffffffl; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe800l); }
@Test
public void test03665() { x = 0xfffffffffffffffel; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd000l); }
@Test
public void test03666() { x = 0xefffffffffffffffl; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe800l); }
@Test
public void test03667() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1800l; AssertJUnit.assertEquals("multiply", result, 0x4e814ce04e813800l); }
@Test
public void test03668() { x = 0x000000007fffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test03669() { x = 0x0000000080000000l; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03670() { x = 0x00000000ffffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test03671() { x = 0x000000017fffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test03672() { x = 0x0000000180000000l; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03673() { x = 0x00000001ffffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test03674() { x = 0xffffffff7fffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test03675() { x = 0xffffffff80000000l; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03676() { x = 0x00000001deadf00dl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xe04e813800000000l); }
@Test
public void test03677() { x = 0xffffffffdeadf00dl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xe04e813800000000l); }
@Test
public void test03678() { x = 0x7fffffffffffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test03679() { x = 0x7fffffff7fffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test03680() { x = 0x7fffffff80000000l; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03681() { x = 0x7fffffffdeadf00dl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xe04e813800000000l); }
@Test
public void test03682() { x = 0x8000000000000000l; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03683() { x = 0xffffffffffffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test03684() { x = 0xfffffffffffffffel; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test03685() { x = 0xefffffffffffffffl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000000l); }
@Test
public void test03686() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1800000000l; AssertJUnit.assertEquals("multiply", result, 0xe04e813800000000l); }
@Test
public void test03687() { x = 0x000000007fffffffl; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4000000000l); }
@Test
public void test03688() { x = 0x0000000080000000l; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03689() { x = 0x00000000ffffffffl; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4000000000l); }
@Test
public void test03690() { x = 0x000000017fffffffl; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4000000000l); }
@Test
public void test03691() { x = 0x0000000180000000l; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03692() { x = 0x00000001ffffffffl; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4000000000l); }
@Test
public void test03693() { x = 0xffffffff7fffffffl; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4000000000l); }
@Test
public void test03694() { x = 0xffffffff80000000l; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03695() { x = 0x00000001deadf00dl; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0x027409c000000000l); }
@Test
public void test03696() { x = 0xffffffffdeadf00dl; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0x027409c000000000l); }
@Test
public void test03697() { x = 0x7fffffffffffffffl; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4000000000l); }
@Test
public void test03698() { x = 0x7fffffff7fffffffl; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4000000000l); }
@Test
public void test03699() { x = 0x7fffffff80000000l; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03700() { x = 0x7fffffffdeadf00dl; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0x027409c000000000l); }
@Test
public void test03701() { x = 0x8000000000000000l; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03702() { x = 0xffffffffffffffffl; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4000000000l); }
@Test
public void test03703() { x = 0xfffffffffffffffel; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8000000000l); }
@Test
public void test03704() { x = 0xefffffffffffffffl; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4000000000l); }
@Test
public void test03705() { x = 0xdeadf00ddeadf00dl; long result = x * 0xc000000000l; AssertJUnit.assertEquals("multiply", result, 0x027409c000000000l); }
@Test
public void test03706() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000018l); }
@Test
public void test03707() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0xfffffff400000000l); }
@Test
public void test03708() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffe800000018l); }
@Test
public void test03709() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000018l); }
@Test
public void test03710() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test03711() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000018l); }
@Test
public void test03712() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000018l); }
@Test
public void test03713() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test03714() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffd31fb17ec8l); }
@Test
public void test03715() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x000000031fb17ec8l); }
@Test
public void test03716() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000018l); }
@Test
public void test03717() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000018l); }
@Test
public void test03718() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000c00000000l); }
@Test
public void test03719() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x000000031fb17ec8l); }
@Test
public void test03720() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03721() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000018l); }
@Test
public void test03722() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000030l); }
@Test
public void test03723() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000018l); }
@Test
public void test03724() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffe8l; AssertJUnit.assertEquals("multiply", result, 0x1fb17eb31fb17ec8l); }
@Test
public void test03725() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0xffffffa0000000c0l); }
@Test
public void test03726() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test03727() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0xffffff40000000c0l); }
@Test
public void test03728() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0xfffffee0000000c0l); }
@Test
public void test03729() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0xfffffee000000000l); }
@Test
public void test03730() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0xfffffe80000000c0l); }
@Test
public void test03731() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0x00000060000000c0l); }
@Test
public void test03732() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test03733() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0xfffffe98fd8bf640l); }
@Test
public void test03734() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0x00000018fd8bf640l); }
@Test
public void test03735() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000c0l); }
@Test
public void test03736() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0x00000060000000c0l); }
@Test
public void test03737() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test03738() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0x00000018fd8bf640l); }
@Test
public void test03739() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03740() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000c0l); }
@Test
public void test03741() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000180l); }
@Test
public void test03742() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000c0l); }
@Test
public void test03743() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff40l; AssertJUnit.assertEquals("multiply", result, 0xfd8bf598fd8bf640l); }
@Test
public void test03744() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0xfffff40000001800l); }
@Test
public void test03745() { x = 0x0000000080000000l; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0xfffff40000000000l); }
@Test
public void test03746() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0xffffe80000001800l); }
@Test
public void test03747() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0xffffdc0000001800l); }
@Test
public void test03748() { x = 0x0000000180000000l; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0xffffdc0000000000l); }
@Test
public void test03749() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0xffffd00000001800l); }
@Test
public void test03750() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0x00000c0000001800l); }
@Test
public void test03751() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0x00000c0000000000l); }
@Test
public void test03752() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0xffffd31fb17ec800l); }
@Test
public void test03753() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0x0000031fb17ec800l); }
@Test
public void test03754() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001800l); }
@Test
public void test03755() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0x00000c0000001800l); }
@Test
public void test03756() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0x00000c0000000000l); }
@Test
public void test03757() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0x0000031fb17ec800l); }
@Test
public void test03758() { x = 0x8000000000000000l; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03759() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001800l); }
@Test
public void test03760() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003000l); }
@Test
public void test03761() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001800l); }
@Test
public void test03762() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffe800l; AssertJUnit.assertEquals("multiply", result, 0xb17eb31fb17ec800l); }
@Test
public void test03763() { x = 0x000000007fffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test03764() { x = 0x0000000080000000l; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03765() { x = 0x00000000ffffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test03766() { x = 0x000000017fffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test03767() { x = 0x0000000180000000l; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03768() { x = 0x00000001ffffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test03769() { x = 0xffffffff7fffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test03770() { x = 0xffffffff80000000l; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03771() { x = 0x00000001deadf00dl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x1fb17ec800000000l); }
@Test
public void test03772() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x1fb17ec800000000l); }
@Test
public void test03773() { x = 0x7fffffffffffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test03774() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test03775() { x = 0x7fffffff80000000l; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03776() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x1fb17ec800000000l); }
@Test
public void test03777() { x = 0x8000000000000000l; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03778() { x = 0xffffffffffffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test03779() { x = 0xfffffffffffffffel; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test03780() { x = 0xefffffffffffffffl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001800000000l); }
@Test
public void test03781() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x1fb17ec800000000l); }
@Test
public void test03782() { x = 0x000000007fffffffl; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c000000000l); }
@Test
public void test03783() { x = 0x0000000080000000l; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03784() { x = 0x00000000ffffffffl; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c000000000l); }
@Test
public void test03785() { x = 0x000000017fffffffl; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c000000000l); }
@Test
public void test03786() { x = 0x0000000180000000l; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03787() { x = 0x00000001ffffffffl; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c000000000l); }
@Test
public void test03788() { x = 0xffffffff7fffffffl; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c000000000l); }
@Test
public void test03789() { x = 0xffffffff80000000l; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03790() { x = 0x00000001deadf00dl; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0xfd8bf64000000000l); }
@Test
public void test03791() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0xfd8bf64000000000l); }
@Test
public void test03792() { x = 0x7fffffffffffffffl; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c000000000l); }
@Test
public void test03793() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c000000000l); }
@Test
public void test03794() { x = 0x7fffffff80000000l; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03795() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0xfd8bf64000000000l); }
@Test
public void test03796() { x = 0x8000000000000000l; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03797() { x = 0xffffffffffffffffl; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c000000000l); }
@Test
public void test03798() { x = 0xfffffffffffffffel; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000018000000000l); }
@Test
public void test03799() { x = 0xefffffffffffffffl; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c000000000l); }
@Test
public void test03800() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff4000000000l; AssertJUnit.assertEquals("multiply", result, 0xfd8bf64000000000l); }
@Test
public void test03801() { x = 0x000000007fffffffl; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0x0000000c7fffffe7l); }
@Test
public void test03802() { x = 0x0000000080000000l; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0x0000000c80000000l); }
@Test
public void test03803() { x = 0x00000000ffffffffl; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0x00000018ffffffe7l); }
@Test
public void test03804() { x = 0x000000017fffffffl; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0x000000257fffffe7l); }
@Test
public void test03805() { x = 0x0000000180000000l; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0x0000002580000000l); }
@Test
public void test03806() { x = 0x00000001ffffffffl; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0x00000031ffffffe7l); }
@Test
public void test03807() { x = 0xffffffff7fffffffl; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0xfffffff37fffffe7l); }
@Test
public void test03808() { x = 0xffffffff80000000l; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0xfffffff380000000l); }
@Test
public void test03809() { x = 0x00000001deadf00dl; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0x0000002ebefc7145l); }
@Test
public void test03810() { x = 0xffffffffdeadf00dl; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0xfffffffcbefc7145l); }
@Test
public void test03811() { x = 0x7fffffffffffffffl; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffe7l); }
@Test
public void test03812() { x = 0x7fffffff7fffffffl; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff37fffffe7l); }
@Test
public void test03813() { x = 0x7fffffff80000000l; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff380000000l); }
@Test
public void test03814() { x = 0x7fffffffdeadf00dl; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffcbefc7145l); }
@Test
public void test03815() { x = 0x8000000000000000l; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03816() { x = 0xffffffffffffffffl; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe7l); }
@Test
public void test03817() { x = 0xfffffffffffffffel; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffcel); }
@Test
public void test03818() { x = 0xefffffffffffffffl; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0x6fffffffffffffe7l); }
@Test
public void test03819() { x = 0xdeadf00ddeadf00dl; long result = x * 0x19l; AssertJUnit.assertEquals("multiply", result, 0xbefc715abefc7145l); }
@Test
public void test03820() { x = 0x000000007fffffffl; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0x00000063ffffff38l); }
@Test
public void test03821() { x = 0x0000000080000000l; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0x0000006400000000l); }
@Test
public void test03822() { x = 0x00000000ffffffffl; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0x000000c7ffffff38l); }
@Test
public void test03823() { x = 0x000000017fffffffl; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0x0000012bffffff38l); }
@Test
public void test03824() { x = 0x0000000180000000l; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0x0000012c00000000l); }
@Test
public void test03825() { x = 0x00000001ffffffffl; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0x0000018fffffff38l); }
@Test
public void test03826() { x = 0xffffffff7fffffffl; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0xffffff9bffffff38l); }
@Test
public void test03827() { x = 0xffffffff80000000l; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0xffffff9c00000000l); }
@Test
public void test03828() { x = 0x00000001deadf00dl; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0x00000175f7e38a28l); }
@Test
public void test03829() { x = 0xffffffffdeadf00dl; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0xffffffe5f7e38a28l); }
@Test
public void test03830() { x = 0x7fffffffffffffffl; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff38l); }
@Test
public void test03831() { x = 0x7fffffff7fffffffl; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0xffffff9bffffff38l); }
@Test
public void test03832() { x = 0x7fffffff80000000l; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0xffffff9c00000000l); }
@Test
public void test03833() { x = 0x7fffffffdeadf00dl; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0xffffffe5f7e38a28l); }
@Test
public void test03834() { x = 0x8000000000000000l; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03835() { x = 0xffffffffffffffffl; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff38l); }
@Test
public void test03836() { x = 0xfffffffffffffffel; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe70l); }
@Test
public void test03837() { x = 0xefffffffffffffffl; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff38l); }
@Test
public void test03838() { x = 0xdeadf00ddeadf00dl; long result = x * 0xc8l; AssertJUnit.assertEquals("multiply", result, 0xf7e38ad5f7e38a28l); }
@Test
public void test03839() { x = 0x000000007fffffffl; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0x00000c7fffffe700l); }
@Test
public void test03840() { x = 0x0000000080000000l; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0x00000c8000000000l); }
@Test
public void test03841() { x = 0x00000000ffffffffl; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0x000018ffffffe700l); }
@Test
public void test03842() { x = 0x000000017fffffffl; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0x0000257fffffe700l); }
@Test
public void test03843() { x = 0x0000000180000000l; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0x0000258000000000l); }
@Test
public void test03844() { x = 0x00000001ffffffffl; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0x000031ffffffe700l); }
@Test
public void test03845() { x = 0xffffffff7fffffffl; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0xfffff37fffffe700l); }
@Test
public void test03846() { x = 0xffffffff80000000l; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0xfffff38000000000l); }
@Test
public void test03847() { x = 0x00000001deadf00dl; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0x00002ebefc714500l); }
@Test
public void test03848() { x = 0xffffffffdeadf00dl; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0xfffffcbefc714500l); }
@Test
public void test03849() { x = 0x7fffffffffffffffl; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe700l); }
@Test
public void test03850() { x = 0x7fffffff7fffffffl; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0xfffff37fffffe700l); }
@Test
public void test03851() { x = 0x7fffffff80000000l; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0xfffff38000000000l); }
@Test
public void test03852() { x = 0x7fffffffdeadf00dl; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0xfffffcbefc714500l); }
@Test
public void test03853() { x = 0x8000000000000000l; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03854() { x = 0xffffffffffffffffl; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe700l); }
@Test
public void test03855() { x = 0xfffffffffffffffel; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffce00l); }
@Test
public void test03856() { x = 0xefffffffffffffffl; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe700l); }
@Test
public void test03857() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1900l; AssertJUnit.assertEquals("multiply", result, 0xfc715abefc714500l); }
@Test
public void test03858() { x = 0x000000007fffffffl; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe700000000l); }
@Test
public void test03859() { x = 0x0000000080000000l; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03860() { x = 0x00000000ffffffffl; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe700000000l); }
@Test
public void test03861() { x = 0x000000017fffffffl; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe700000000l); }
@Test
public void test03862() { x = 0x0000000180000000l; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03863() { x = 0x00000001ffffffffl; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe700000000l); }
@Test
public void test03864() { x = 0xffffffff7fffffffl; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe700000000l); }
@Test
public void test03865() { x = 0xffffffff80000000l; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03866() { x = 0x00000001deadf00dl; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0xbefc714500000000l); }
@Test
public void test03867() { x = 0xffffffffdeadf00dl; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0xbefc714500000000l); }
@Test
public void test03868() { x = 0x7fffffffffffffffl; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe700000000l); }
@Test
public void test03869() { x = 0x7fffffff7fffffffl; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe700000000l); }
@Test
public void test03870() { x = 0x7fffffff80000000l; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03871() { x = 0x7fffffffdeadf00dl; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0xbefc714500000000l); }
@Test
public void test03872() { x = 0x8000000000000000l; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03873() { x = 0xffffffffffffffffl; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe700000000l); }
@Test
public void test03874() { x = 0xfffffffffffffffel; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffce00000000l); }
@Test
public void test03875() { x = 0xefffffffffffffffl; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe700000000l); }
@Test
public void test03876() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1900000000l; AssertJUnit.assertEquals("multiply", result, 0xbefc714500000000l); }
@Test
public void test03877() { x = 0x000000007fffffffl; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3800000000l); }
@Test
public void test03878() { x = 0x0000000080000000l; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03879() { x = 0x00000000ffffffffl; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3800000000l); }
@Test
public void test03880() { x = 0x000000017fffffffl; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3800000000l); }
@Test
public void test03881() { x = 0x0000000180000000l; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03882() { x = 0x00000001ffffffffl; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3800000000l); }
@Test
public void test03883() { x = 0xffffffff7fffffffl; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3800000000l); }
@Test
public void test03884() { x = 0xffffffff80000000l; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03885() { x = 0x00000001deadf00dl; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0xf7e38a2800000000l); }
@Test
public void test03886() { x = 0xffffffffdeadf00dl; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0xf7e38a2800000000l); }
@Test
public void test03887() { x = 0x7fffffffffffffffl; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3800000000l); }
@Test
public void test03888() { x = 0x7fffffff7fffffffl; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3800000000l); }
@Test
public void test03889() { x = 0x7fffffff80000000l; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03890() { x = 0x7fffffffdeadf00dl; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0xf7e38a2800000000l); }
@Test
public void test03891() { x = 0x8000000000000000l; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03892() { x = 0xffffffffffffffffl; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3800000000l); }
@Test
public void test03893() { x = 0xfffffffffffffffel; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7000000000l); }
@Test
public void test03894() { x = 0xefffffffffffffffl; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3800000000l); }
@Test
public void test03895() { x = 0xdeadf00ddeadf00dl; long result = x * 0xc800000000l; AssertJUnit.assertEquals("multiply", result, 0xf7e38a2800000000l); }
@Test
public void test03896() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0xfffffff380000019l); }
@Test
public void test03897() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0xfffffff380000000l); }
@Test
public void test03898() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0xffffffe700000019l); }
@Test
public void test03899() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0xffffffda80000019l); }
@Test
public void test03900() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0xffffffda80000000l); }
@Test
public void test03901() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0xffffffce00000019l); }
@Test
public void test03902() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0x0000000c80000019l); }
@Test
public void test03903() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0x0000000c80000000l); }
@Test
public void test03904() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0xffffffd141038ebbl); }
@Test
public void test03905() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0x0000000341038ebbl); }
@Test
public void test03906() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000019l); }
@Test
public void test03907() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0x8000000c80000019l); }
@Test
public void test03908() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0x8000000c80000000l); }
@Test
public void test03909() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0x8000000341038ebbl); }
@Test
public void test03910() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03911() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000019l); }
@Test
public void test03912() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000032l); }
@Test
public void test03913() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0x9000000000000019l); }
@Test
public void test03914() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffe7l; AssertJUnit.assertEquals("multiply", result, 0x41038ea541038ebbl); }
@Test
public void test03915() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0xffffff9c000000c8l); }
@Test
public void test03916() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0xffffff9c00000000l); }
@Test
public void test03917() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0xffffff38000000c8l); }
@Test
public void test03918() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0xfffffed4000000c8l); }
@Test
public void test03919() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0xfffffed400000000l); }
@Test
public void test03920() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0xfffffe70000000c8l); }
@Test
public void test03921() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0x00000064000000c8l); }
@Test
public void test03922() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0x0000006400000000l); }
@Test
public void test03923() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8a081c75d8l); }
@Test
public void test03924() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0x0000001a081c75d8l); }
@Test
public void test03925() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000c8l); }
@Test
public void test03926() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0x00000064000000c8l); }
@Test
public void test03927() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0x0000006400000000l); }
@Test
public void test03928() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0x0000001a081c75d8l); }
@Test
public void test03929() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03930() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000c8l); }
@Test
public void test03931() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000190l); }
@Test
public void test03932() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0x80000000000000c8l); }
@Test
public void test03933() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff38l; AssertJUnit.assertEquals("multiply", result, 0x081c752a081c75d8l); }
@Test
public void test03934() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0xfffff38000001900l); }
@Test
public void test03935() { x = 0x0000000080000000l; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0xfffff38000000000l); }
@Test
public void test03936() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0xffffe70000001900l); }
@Test
public void test03937() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0xffffda8000001900l); }
@Test
public void test03938() { x = 0x0000000180000000l; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0xffffda8000000000l); }
@Test
public void test03939() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0xffffce0000001900l); }
@Test
public void test03940() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0x00000c8000001900l); }
@Test
public void test03941() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0x00000c8000000000l); }
@Test
public void test03942() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0xffffd141038ebb00l); }
@Test
public void test03943() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0x00000341038ebb00l); }
@Test
public void test03944() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001900l); }
@Test
public void test03945() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0x00000c8000001900l); }
@Test
public void test03946() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0x00000c8000000000l); }
@Test
public void test03947() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0x00000341038ebb00l); }
@Test
public void test03948() { x = 0x8000000000000000l; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03949() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001900l); }
@Test
public void test03950() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003200l); }
@Test
public void test03951() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001900l); }
@Test
public void test03952() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffe700l; AssertJUnit.assertEquals("multiply", result, 0x038ea541038ebb00l); }
@Test
public void test03953() { x = 0x000000007fffffffl; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001900000000l); }
@Test
public void test03954() { x = 0x0000000080000000l; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03955() { x = 0x00000000ffffffffl; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001900000000l); }
@Test
public void test03956() { x = 0x000000017fffffffl; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001900000000l); }
@Test
public void test03957() { x = 0x0000000180000000l; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03958() { x = 0x00000001ffffffffl; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001900000000l); }
@Test
public void test03959() { x = 0xffffffff7fffffffl; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001900000000l); }
@Test
public void test03960() { x = 0xffffffff80000000l; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03961() { x = 0x00000001deadf00dl; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x41038ebb00000000l); }
@Test
public void test03962() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x41038ebb00000000l); }
@Test
public void test03963() { x = 0x7fffffffffffffffl; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001900000000l); }
@Test
public void test03964() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001900000000l); }
@Test
public void test03965() { x = 0x7fffffff80000000l; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test03966() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x41038ebb00000000l); }
@Test
public void test03967() { x = 0x8000000000000000l; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03968() { x = 0xffffffffffffffffl; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001900000000l); }
@Test
public void test03969() { x = 0xfffffffffffffffel; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003200000000l); }
@Test
public void test03970() { x = 0xefffffffffffffffl; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001900000000l); }
@Test
public void test03971() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffe700000000l; AssertJUnit.assertEquals("multiply", result, 0x41038ebb00000000l); }
@Test
public void test03972() { x = 0x000000007fffffffl; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c800000000l); }
@Test
public void test03973() { x = 0x0000000080000000l; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03974() { x = 0x00000000ffffffffl; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c800000000l); }
@Test
public void test03975() { x = 0x000000017fffffffl; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c800000000l); }
@Test
public void test03976() { x = 0x0000000180000000l; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03977() { x = 0x00000001ffffffffl; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c800000000l); }
@Test
public void test03978() { x = 0xffffffff7fffffffl; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c800000000l); }
@Test
public void test03979() { x = 0xffffffff80000000l; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03980() { x = 0x00000001deadf00dl; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x081c75d800000000l); }
@Test
public void test03981() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x081c75d800000000l); }
@Test
public void test03982() { x = 0x7fffffffffffffffl; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c800000000l); }
@Test
public void test03983() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c800000000l); }
@Test
public void test03984() { x = 0x7fffffff80000000l; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03985() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x081c75d800000000l); }
@Test
public void test03986() { x = 0x8000000000000000l; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test03987() { x = 0xffffffffffffffffl; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c800000000l); }
@Test
public void test03988() { x = 0xfffffffffffffffel; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019000000000l); }
@Test
public void test03989() { x = 0xefffffffffffffffl; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c800000000l); }
@Test
public void test03990() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff3800000000l; AssertJUnit.assertEquals("multiply", result, 0x081c75d800000000l); }
@Test
public void test03991() { x = 0x000000007fffffffl; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0x0000000cffffffe6l); }
@Test
public void test03992() { x = 0x0000000080000000l; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0x0000000d00000000l); }
@Test
public void test03993() { x = 0x00000000ffffffffl; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0x00000019ffffffe6l); }
@Test
public void test03994() { x = 0x000000017fffffffl; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0x00000026ffffffe6l); }
@Test
public void test03995() { x = 0x0000000180000000l; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0x0000002700000000l); }
@Test
public void test03996() { x = 0x00000001ffffffffl; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0x00000033ffffffe6l); }
@Test
public void test03997() { x = 0xffffffff7fffffffl; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0xfffffff2ffffffe6l); }
@Test
public void test03998() { x = 0xffffffff80000000l; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0xfffffff300000000l); }
@Test
public void test03999() { x = 0x00000001deadf00dl; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0x000000309daa6152l); }
@Test
public void test04000() { x = 0xffffffffdeadf00dl; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0xfffffffc9daa6152l); }
@Test
public void test04001() { x = 0x7fffffffffffffffl; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe6l); }
@Test
public void test04002() { x = 0x7fffffff7fffffffl; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0xfffffff2ffffffe6l); }
@Test
public void test04003() { x = 0x7fffffff80000000l; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0xfffffff300000000l); }
@Test
public void test04004() { x = 0x7fffffffdeadf00dl; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0xfffffffc9daa6152l); }
@Test
public void test04005() { x = 0x8000000000000000l; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04006() { x = 0xffffffffffffffffl; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe6l); }
@Test
public void test04007() { x = 0xfffffffffffffffel; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffccl); }
@Test
public void test04008() { x = 0xefffffffffffffffl; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0x5fffffffffffffe6l); }
@Test
public void test04009() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1al; AssertJUnit.assertEquals("multiply", result, 0x9daa61689daa6152l); }
@Test
public void test04010() { x = 0x000000007fffffffl; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0x00000067ffffff30l); }
@Test
public void test04011() { x = 0x0000000080000000l; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0x0000006800000000l); }
@Test
public void test04012() { x = 0x00000000ffffffffl; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0x000000cfffffff30l); }
@Test
public void test04013() { x = 0x000000017fffffffl; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0x00000137ffffff30l); }
@Test
public void test04014() { x = 0x0000000180000000l; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0x0000013800000000l); }
@Test
public void test04015() { x = 0x00000001ffffffffl; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0x0000019fffffff30l); }
@Test
public void test04016() { x = 0xffffffff7fffffffl; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0xffffff97ffffff30l); }
@Test
public void test04017() { x = 0xffffffff80000000l; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000000l); }
@Test
public void test04018() { x = 0x00000001deadf00dl; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0x00000184ed530a90l); }
@Test
public void test04019() { x = 0xffffffffdeadf00dl; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0xffffffe4ed530a90l); }
@Test
public void test04020() { x = 0x7fffffffffffffffl; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff30l); }
@Test
public void test04021() { x = 0x7fffffff7fffffffl; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0xffffff97ffffff30l); }
@Test
public void test04022() { x = 0x7fffffff80000000l; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000000l); }
@Test
public void test04023() { x = 0x7fffffffdeadf00dl; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0xffffffe4ed530a90l); }
@Test
public void test04024() { x = 0x8000000000000000l; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04025() { x = 0xffffffffffffffffl; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff30l); }
@Test
public void test04026() { x = 0xfffffffffffffffel; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe60l); }
@Test
public void test04027() { x = 0xefffffffffffffffl; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff30l); }
@Test
public void test04028() { x = 0xdeadf00ddeadf00dl; long result = x * 0xd0l; AssertJUnit.assertEquals("multiply", result, 0xed530b44ed530a90l); }
@Test
public void test04029() { x = 0x000000007fffffffl; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0x00000cffffffe600l); }
@Test
public void test04030() { x = 0x0000000080000000l; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0x00000d0000000000l); }
@Test
public void test04031() { x = 0x00000000ffffffffl; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0x000019ffffffe600l); }
@Test
public void test04032() { x = 0x000000017fffffffl; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0x000026ffffffe600l); }
@Test
public void test04033() { x = 0x0000000180000000l; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0x0000270000000000l); }
@Test
public void test04034() { x = 0x00000001ffffffffl; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0x000033ffffffe600l); }
@Test
public void test04035() { x = 0xffffffff7fffffffl; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0xfffff2ffffffe600l); }
@Test
public void test04036() { x = 0xffffffff80000000l; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0xfffff30000000000l); }
@Test
public void test04037() { x = 0x00000001deadf00dl; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0x0000309daa615200l); }
@Test
public void test04038() { x = 0xffffffffdeadf00dl; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0xfffffc9daa615200l); }
@Test
public void test04039() { x = 0x7fffffffffffffffl; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe600l); }
@Test
public void test04040() { x = 0x7fffffff7fffffffl; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0xfffff2ffffffe600l); }
@Test
public void test04041() { x = 0x7fffffff80000000l; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0xfffff30000000000l); }
@Test
public void test04042() { x = 0x7fffffffdeadf00dl; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0xfffffc9daa615200l); }
@Test
public void test04043() { x = 0x8000000000000000l; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04044() { x = 0xffffffffffffffffl; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe600l); }
@Test
public void test04045() { x = 0xfffffffffffffffel; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffcc00l); }
@Test
public void test04046() { x = 0xefffffffffffffffl; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe600l); }
@Test
public void test04047() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1a00l; AssertJUnit.assertEquals("multiply", result, 0xaa61689daa615200l); }
@Test
public void test04048() { x = 0x000000007fffffffl; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe600000000l); }
@Test
public void test04049() { x = 0x0000000080000000l; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04050() { x = 0x00000000ffffffffl; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe600000000l); }
@Test
public void test04051() { x = 0x000000017fffffffl; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe600000000l); }
@Test
public void test04052() { x = 0x0000000180000000l; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04053() { x = 0x00000001ffffffffl; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe600000000l); }
@Test
public void test04054() { x = 0xffffffff7fffffffl; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe600000000l); }
@Test
public void test04055() { x = 0xffffffff80000000l; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04056() { x = 0x00000001deadf00dl; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0x9daa615200000000l); }
@Test
public void test04057() { x = 0xffffffffdeadf00dl; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0x9daa615200000000l); }
@Test
public void test04058() { x = 0x7fffffffffffffffl; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe600000000l); }
@Test
public void test04059() { x = 0x7fffffff7fffffffl; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe600000000l); }
@Test
public void test04060() { x = 0x7fffffff80000000l; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04061() { x = 0x7fffffffdeadf00dl; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0x9daa615200000000l); }
@Test
public void test04062() { x = 0x8000000000000000l; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04063() { x = 0xffffffffffffffffl; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe600000000l); }
@Test
public void test04064() { x = 0xfffffffffffffffel; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000000l); }
@Test
public void test04065() { x = 0xefffffffffffffffl; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe600000000l); }
@Test
public void test04066() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1a00000000l; AssertJUnit.assertEquals("multiply", result, 0x9daa615200000000l); }
@Test
public void test04067() { x = 0x000000007fffffffl; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3000000000l); }
@Test
public void test04068() { x = 0x0000000080000000l; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04069() { x = 0x00000000ffffffffl; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3000000000l); }
@Test
public void test04070() { x = 0x000000017fffffffl; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3000000000l); }
@Test
public void test04071() { x = 0x0000000180000000l; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04072() { x = 0x00000001ffffffffl; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3000000000l); }
@Test
public void test04073() { x = 0xffffffff7fffffffl; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3000000000l); }
@Test
public void test04074() { x = 0xffffffff80000000l; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04075() { x = 0x00000001deadf00dl; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0xed530a9000000000l); }
@Test
public void test04076() { x = 0xffffffffdeadf00dl; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0xed530a9000000000l); }
@Test
public void test04077() { x = 0x7fffffffffffffffl; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3000000000l); }
@Test
public void test04078() { x = 0x7fffffff7fffffffl; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3000000000l); }
@Test
public void test04079() { x = 0x7fffffff80000000l; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04080() { x = 0x7fffffffdeadf00dl; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0xed530a9000000000l); }
@Test
public void test04081() { x = 0x8000000000000000l; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04082() { x = 0xffffffffffffffffl; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3000000000l); }
@Test
public void test04083() { x = 0xfffffffffffffffel; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6000000000l); }
@Test
public void test04084() { x = 0xefffffffffffffffl; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3000000000l); }
@Test
public void test04085() { x = 0xdeadf00ddeadf00dl; long result = x * 0xd000000000l; AssertJUnit.assertEquals("multiply", result, 0xed530a9000000000l); }
@Test
public void test04086() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0xfffffff30000001al); }
@Test
public void test04087() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0xfffffff300000000l); }
@Test
public void test04088() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0xffffffe60000001al); }
@Test
public void test04089() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0xffffffd90000001al); }
@Test
public void test04090() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0xffffffd900000000l); }
@Test
public void test04091() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc0000001al); }
@Test
public void test04092() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0x0000000d0000001al); }
@Test
public void test04093() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0x0000000d00000000l); }
@Test
public void test04094() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0xffffffcf62559eael); }
@Test
public void test04095() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0x0000000362559eael); }
@Test
public void test04096() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0x000000000000001al); }
@Test
public void test04097() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0x0000000d0000001al); }
@Test
public void test04098() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0x0000000d00000000l); }
@Test
public void test04099() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0x0000000362559eael); }
@Test
public void test04100() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04101() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0x000000000000001al); }
@Test
public void test04102() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000034l); }
@Test
public void test04103() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0xa00000000000001al); }
@Test
public void test04104() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffe6l; AssertJUnit.assertEquals("multiply", result, 0x62559e9762559eael); }
@Test
public void test04105() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0xffffff98000000d0l); }
@Test
public void test04106() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000000l); }
@Test
public void test04107() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0xffffff30000000d0l); }
@Test
public void test04108() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0xfffffec8000000d0l); }
@Test
public void test04109() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0xfffffec800000000l); }
@Test
public void test04110() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0xfffffe60000000d0l); }
@Test
public void test04111() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0x00000068000000d0l); }
@Test
public void test04112() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0x0000006800000000l); }
@Test
public void test04113() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7b12acf570l); }
@Test
public void test04114() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0x0000001b12acf570l); }
@Test
public void test04115() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000d0l); }
@Test
public void test04116() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0x00000068000000d0l); }
@Test
public void test04117() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0x0000006800000000l); }
@Test
public void test04118() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0x0000001b12acf570l); }
@Test
public void test04119() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04120() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000d0l); }
@Test
public void test04121() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001a0l); }
@Test
public void test04122() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000d0l); }
@Test
public void test04123() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff30l; AssertJUnit.assertEquals("multiply", result, 0x12acf4bb12acf570l); }
@Test
public void test04124() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0xfffff30000001a00l); }
@Test
public void test04125() { x = 0x0000000080000000l; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0xfffff30000000000l); }
@Test
public void test04126() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0xffffe60000001a00l); }
@Test
public void test04127() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0xffffd90000001a00l); }
@Test
public void test04128() { x = 0x0000000180000000l; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0xffffd90000000000l); }
@Test
public void test04129() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0xffffcc0000001a00l); }
@Test
public void test04130() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0x00000d0000001a00l); }
@Test
public void test04131() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0x00000d0000000000l); }
@Test
public void test04132() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0xffffcf62559eae00l); }
@Test
public void test04133() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0x00000362559eae00l); }
@Test
public void test04134() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001a00l); }
@Test
public void test04135() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0x00000d0000001a00l); }
@Test
public void test04136() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0x00000d0000000000l); }
@Test
public void test04137() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0x00000362559eae00l); }
@Test
public void test04138() { x = 0x8000000000000000l; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04139() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001a00l); }
@Test
public void test04140() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003400l); }
@Test
public void test04141() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001a00l); }
@Test
public void test04142() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffe600l; AssertJUnit.assertEquals("multiply", result, 0x559e9762559eae00l); }
@Test
public void test04143() { x = 0x000000007fffffffl; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000000l); }
@Test
public void test04144() { x = 0x0000000080000000l; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04145() { x = 0x00000000ffffffffl; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000000l); }
@Test
public void test04146() { x = 0x000000017fffffffl; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000000l); }
@Test
public void test04147() { x = 0x0000000180000000l; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04148() { x = 0x00000001ffffffffl; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000000l); }
@Test
public void test04149() { x = 0xffffffff7fffffffl; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000000l); }
@Test
public void test04150() { x = 0xffffffff80000000l; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04151() { x = 0x00000001deadf00dl; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x62559eae00000000l); }
@Test
public void test04152() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x62559eae00000000l); }
@Test
public void test04153() { x = 0x7fffffffffffffffl; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000000l); }
@Test
public void test04154() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000000l); }
@Test
public void test04155() { x = 0x7fffffff80000000l; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04156() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x62559eae00000000l); }
@Test
public void test04157() { x = 0x8000000000000000l; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04158() { x = 0xffffffffffffffffl; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000000l); }
@Test
public void test04159() { x = 0xfffffffffffffffel; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000000l); }
@Test
public void test04160() { x = 0xefffffffffffffffl; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000000l); }
@Test
public void test04161() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffe600000000l; AssertJUnit.assertEquals("multiply", result, 0x62559eae00000000l); }
@Test
public void test04162() { x = 0x000000007fffffffl; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d000000000l); }
@Test
public void test04163() { x = 0x0000000080000000l; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04164() { x = 0x00000000ffffffffl; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d000000000l); }
@Test
public void test04165() { x = 0x000000017fffffffl; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d000000000l); }
@Test
public void test04166() { x = 0x0000000180000000l; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04167() { x = 0x00000001ffffffffl; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d000000000l); }
@Test
public void test04168() { x = 0xffffffff7fffffffl; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d000000000l); }
@Test
public void test04169() { x = 0xffffffff80000000l; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04170() { x = 0x00000001deadf00dl; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x12acf57000000000l); }
@Test
public void test04171() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x12acf57000000000l); }
@Test
public void test04172() { x = 0x7fffffffffffffffl; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d000000000l); }
@Test
public void test04173() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d000000000l); }
@Test
public void test04174() { x = 0x7fffffff80000000l; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04175() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x12acf57000000000l); }
@Test
public void test04176() { x = 0x8000000000000000l; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04177() { x = 0xffffffffffffffffl; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d000000000l); }
@Test
public void test04178() { x = 0xfffffffffffffffel; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a000000000l); }
@Test
public void test04179() { x = 0xefffffffffffffffl; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d000000000l); }
@Test
public void test04180() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff3000000000l; AssertJUnit.assertEquals("multiply", result, 0x12acf57000000000l); }
@Test
public void test04181() { x = 0x000000007fffffffl; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0x0000000d7fffffe5l); }
@Test
public void test04182() { x = 0x0000000080000000l; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0x0000000d80000000l); }
@Test
public void test04183() { x = 0x00000000ffffffffl; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0x0000001affffffe5l); }
@Test
public void test04184() { x = 0x000000017fffffffl; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0x000000287fffffe5l); }
@Test
public void test04185() { x = 0x0000000180000000l; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0x0000002880000000l); }
@Test
public void test04186() { x = 0x00000001ffffffffl; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0x00000035ffffffe5l); }
@Test
public void test04187() { x = 0xffffffff7fffffffl; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0xfffffff27fffffe5l); }
@Test
public void test04188() { x = 0xffffffff80000000l; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0xfffffff280000000l); }
@Test
public void test04189() { x = 0x00000001deadf00dl; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0x000000327c58515fl); }
@Test
public void test04190() { x = 0xffffffffdeadf00dl; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0xfffffffc7c58515fl); }
@Test
public void test04191() { x = 0x7fffffffffffffffl; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffe5l); }
@Test
public void test04192() { x = 0x7fffffff7fffffffl; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0x7ffffff27fffffe5l); }
@Test
public void test04193() { x = 0x7fffffff80000000l; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0x7ffffff280000000l); }
@Test
public void test04194() { x = 0x7fffffffdeadf00dl; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0x7ffffffc7c58515fl); }
@Test
public void test04195() { x = 0x8000000000000000l; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04196() { x = 0xffffffffffffffffl; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe5l); }
@Test
public void test04197() { x = 0xfffffffffffffffel; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffcal); }
@Test
public void test04198() { x = 0xefffffffffffffffl; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0x4fffffffffffffe5l); }
@Test
public void test04199() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1bl; AssertJUnit.assertEquals("multiply", result, 0x7c5851767c58515fl); }
@Test
public void test04200() { x = 0x000000007fffffffl; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0x0000006bffffff28l); }
@Test
public void test04201() { x = 0x0000000080000000l; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0x0000006c00000000l); }
@Test
public void test04202() { x = 0x00000000ffffffffl; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0x000000d7ffffff28l); }
@Test
public void test04203() { x = 0x000000017fffffffl; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0x00000143ffffff28l); }
@Test
public void test04204() { x = 0x0000000180000000l; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0x0000014400000000l); }
@Test
public void test04205() { x = 0x00000001ffffffffl; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0x000001afffffff28l); }
@Test
public void test04206() { x = 0xffffffff7fffffffl; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0xffffff93ffffff28l); }
@Test
public void test04207() { x = 0xffffffff80000000l; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0xffffff9400000000l); }
@Test
public void test04208() { x = 0x00000001deadf00dl; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0x00000193e2c28af8l); }
@Test
public void test04209() { x = 0xffffffffdeadf00dl; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0xffffffe3e2c28af8l); }
@Test
public void test04210() { x = 0x7fffffffffffffffl; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff28l); }
@Test
public void test04211() { x = 0x7fffffff7fffffffl; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0xffffff93ffffff28l); }
@Test
public void test04212() { x = 0x7fffffff80000000l; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0xffffff9400000000l); }
@Test
public void test04213() { x = 0x7fffffffdeadf00dl; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0xffffffe3e2c28af8l); }
@Test
public void test04214() { x = 0x8000000000000000l; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04215() { x = 0xffffffffffffffffl; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff28l); }
@Test
public void test04216() { x = 0xfffffffffffffffel; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe50l); }
@Test
public void test04217() { x = 0xefffffffffffffffl; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff28l); }
@Test
public void test04218() { x = 0xdeadf00ddeadf00dl; long result = x * 0xd8l; AssertJUnit.assertEquals("multiply", result, 0xe2c28bb3e2c28af8l); }
@Test
public void test04219() { x = 0x000000007fffffffl; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0x00000d7fffffe500l); }
@Test
public void test04220() { x = 0x0000000080000000l; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0x00000d8000000000l); }
@Test
public void test04221() { x = 0x00000000ffffffffl; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0x00001affffffe500l); }
@Test
public void test04222() { x = 0x000000017fffffffl; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0x0000287fffffe500l); }
@Test
public void test04223() { x = 0x0000000180000000l; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0x0000288000000000l); }
@Test
public void test04224() { x = 0x00000001ffffffffl; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0x000035ffffffe500l); }
@Test
public void test04225() { x = 0xffffffff7fffffffl; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0xfffff27fffffe500l); }
@Test
public void test04226() { x = 0xffffffff80000000l; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0xfffff28000000000l); }
@Test
public void test04227() { x = 0x00000001deadf00dl; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0x0000327c58515f00l); }
@Test
public void test04228() { x = 0xffffffffdeadf00dl; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0xfffffc7c58515f00l); }
@Test
public void test04229() { x = 0x7fffffffffffffffl; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe500l); }
@Test
public void test04230() { x = 0x7fffffff7fffffffl; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0xfffff27fffffe500l); }
@Test
public void test04231() { x = 0x7fffffff80000000l; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0xfffff28000000000l); }
@Test
public void test04232() { x = 0x7fffffffdeadf00dl; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0xfffffc7c58515f00l); }
@Test
public void test04233() { x = 0x8000000000000000l; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04234() { x = 0xffffffffffffffffl; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe500l); }
@Test
public void test04235() { x = 0xfffffffffffffffel; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffca00l); }
@Test
public void test04236() { x = 0xefffffffffffffffl; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe500l); }
@Test
public void test04237() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1b00l; AssertJUnit.assertEquals("multiply", result, 0x5851767c58515f00l); }
@Test
public void test04238() { x = 0x000000007fffffffl; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe500000000l); }
@Test
public void test04239() { x = 0x0000000080000000l; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04240() { x = 0x00000000ffffffffl; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe500000000l); }
@Test
public void test04241() { x = 0x000000017fffffffl; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe500000000l); }
@Test
public void test04242() { x = 0x0000000180000000l; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04243() { x = 0x00000001ffffffffl; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe500000000l); }
@Test
public void test04244() { x = 0xffffffff7fffffffl; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe500000000l); }
@Test
public void test04245() { x = 0xffffffff80000000l; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04246() { x = 0x00000001deadf00dl; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7c58515f00000000l); }
@Test
public void test04247() { x = 0xffffffffdeadf00dl; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7c58515f00000000l); }
@Test
public void test04248() { x = 0x7fffffffffffffffl; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe500000000l); }
@Test
public void test04249() { x = 0x7fffffff7fffffffl; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe500000000l); }
@Test
public void test04250() { x = 0x7fffffff80000000l; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04251() { x = 0x7fffffffdeadf00dl; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7c58515f00000000l); }
@Test
public void test04252() { x = 0x8000000000000000l; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04253() { x = 0xffffffffffffffffl; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe500000000l); }
@Test
public void test04254() { x = 0xfffffffffffffffel; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffca00000000l); }
@Test
public void test04255() { x = 0xefffffffffffffffl; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe500000000l); }
@Test
public void test04256() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7c58515f00000000l); }
@Test
public void test04257() { x = 0x000000007fffffffl; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2800000000l); }
@Test
public void test04258() { x = 0x0000000080000000l; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04259() { x = 0x00000000ffffffffl; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2800000000l); }
@Test
public void test04260() { x = 0x000000017fffffffl; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2800000000l); }
@Test
public void test04261() { x = 0x0000000180000000l; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04262() { x = 0x00000001ffffffffl; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2800000000l); }
@Test
public void test04263() { x = 0xffffffff7fffffffl; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2800000000l); }
@Test
public void test04264() { x = 0xffffffff80000000l; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04265() { x = 0x00000001deadf00dl; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0xe2c28af800000000l); }
@Test
public void test04266() { x = 0xffffffffdeadf00dl; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0xe2c28af800000000l); }
@Test
public void test04267() { x = 0x7fffffffffffffffl; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2800000000l); }
@Test
public void test04268() { x = 0x7fffffff7fffffffl; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2800000000l); }
@Test
public void test04269() { x = 0x7fffffff80000000l; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04270() { x = 0x7fffffffdeadf00dl; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0xe2c28af800000000l); }
@Test
public void test04271() { x = 0x8000000000000000l; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04272() { x = 0xffffffffffffffffl; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2800000000l); }
@Test
public void test04273() { x = 0xfffffffffffffffel; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5000000000l); }
@Test
public void test04274() { x = 0xefffffffffffffffl; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2800000000l); }
@Test
public void test04275() { x = 0xdeadf00ddeadf00dl; long result = x * 0xd800000000l; AssertJUnit.assertEquals("multiply", result, 0xe2c28af800000000l); }
@Test
public void test04276() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0xfffffff28000001bl); }
@Test
public void test04277() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0xfffffff280000000l); }
@Test
public void test04278() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0xffffffe50000001bl); }
@Test
public void test04279() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0xffffffd78000001bl); }
@Test
public void test04280() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0xffffffd780000000l); }
@Test
public void test04281() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0xffffffca0000001bl); }
@Test
public void test04282() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0x0000000d8000001bl); }
@Test
public void test04283() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0x0000000d80000000l); }
@Test
public void test04284() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0xffffffcd83a7aea1l); }
@Test
public void test04285() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0x0000000383a7aea1l); }
@Test
public void test04286() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0x800000000000001bl); }
@Test
public void test04287() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0x8000000d8000001bl); }
@Test
public void test04288() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0x8000000d80000000l); }
@Test
public void test04289() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0x8000000383a7aea1l); }
@Test
public void test04290() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04291() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0x000000000000001bl); }
@Test
public void test04292() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000036l); }
@Test
public void test04293() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0xb00000000000001bl); }
@Test
public void test04294() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffe5l; AssertJUnit.assertEquals("multiply", result, 0x83a7ae8983a7aea1l); }
@Test
public void test04295() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0xffffff94000000d8l); }
@Test
public void test04296() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0xffffff9400000000l); }
@Test
public void test04297() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0xffffff28000000d8l); }
@Test
public void test04298() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0xfffffebc000000d8l); }
@Test
public void test04299() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0xfffffebc00000000l); }
@Test
public void test04300() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0xfffffe50000000d8l); }
@Test
public void test04301() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0x0000006c000000d8l); }
@Test
public void test04302() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0x0000006c00000000l); }
@Test
public void test04303() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6c1d3d7508l); }
@Test
public void test04304() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0x0000001c1d3d7508l); }
@Test
public void test04305() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000d8l); }
@Test
public void test04306() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0x0000006c000000d8l); }
@Test
public void test04307() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0x0000006c00000000l); }
@Test
public void test04308() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0x0000001c1d3d7508l); }
@Test
public void test04309() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04310() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000d8l); }
@Test
public void test04311() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001b0l); }
@Test
public void test04312() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0x80000000000000d8l); }
@Test
public void test04313() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff28l; AssertJUnit.assertEquals("multiply", result, 0x1d3d744c1d3d7508l); }
@Test
public void test04314() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0xfffff28000001b00l); }
@Test
public void test04315() { x = 0x0000000080000000l; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0xfffff28000000000l); }
@Test
public void test04316() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0xffffe50000001b00l); }
@Test
public void test04317() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0xffffd78000001b00l); }
@Test
public void test04318() { x = 0x0000000180000000l; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0xffffd78000000000l); }
@Test
public void test04319() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0xffffca0000001b00l); }
@Test
public void test04320() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0x00000d8000001b00l); }
@Test
public void test04321() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0x00000d8000000000l); }
@Test
public void test04322() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0xffffcd83a7aea100l); }
@Test
public void test04323() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0x00000383a7aea100l); }
@Test
public void test04324() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001b00l); }
@Test
public void test04325() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0x00000d8000001b00l); }
@Test
public void test04326() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0x00000d8000000000l); }
@Test
public void test04327() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0x00000383a7aea100l); }
@Test
public void test04328() { x = 0x8000000000000000l; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04329() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001b00l); }
@Test
public void test04330() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003600l); }
@Test
public void test04331() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001b00l); }
@Test
public void test04332() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffe500l; AssertJUnit.assertEquals("multiply", result, 0xa7ae8983a7aea100l); }
@Test
public void test04333() { x = 0x000000007fffffffl; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001b00000000l); }
@Test
public void test04334() { x = 0x0000000080000000l; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04335() { x = 0x00000000ffffffffl; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001b00000000l); }
@Test
public void test04336() { x = 0x000000017fffffffl; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001b00000000l); }
@Test
public void test04337() { x = 0x0000000180000000l; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04338() { x = 0x00000001ffffffffl; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001b00000000l); }
@Test
public void test04339() { x = 0xffffffff7fffffffl; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001b00000000l); }
@Test
public void test04340() { x = 0xffffffff80000000l; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04341() { x = 0x00000001deadf00dl; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x83a7aea100000000l); }
@Test
public void test04342() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x83a7aea100000000l); }
@Test
public void test04343() { x = 0x7fffffffffffffffl; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001b00000000l); }
@Test
public void test04344() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001b00000000l); }
@Test
public void test04345() { x = 0x7fffffff80000000l; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04346() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x83a7aea100000000l); }
@Test
public void test04347() { x = 0x8000000000000000l; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04348() { x = 0xffffffffffffffffl; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001b00000000l); }
@Test
public void test04349() { x = 0xfffffffffffffffel; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003600000000l); }
@Test
public void test04350() { x = 0xefffffffffffffffl; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001b00000000l); }
@Test
public void test04351() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffe500000000l; AssertJUnit.assertEquals("multiply", result, 0x83a7aea100000000l); }
@Test
public void test04352() { x = 0x000000007fffffffl; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d800000000l); }
@Test
public void test04353() { x = 0x0000000080000000l; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04354() { x = 0x00000000ffffffffl; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d800000000l); }
@Test
public void test04355() { x = 0x000000017fffffffl; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d800000000l); }
@Test
public void test04356() { x = 0x0000000180000000l; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04357() { x = 0x00000001ffffffffl; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d800000000l); }
@Test
public void test04358() { x = 0xffffffff7fffffffl; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d800000000l); }
@Test
public void test04359() { x = 0xffffffff80000000l; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04360() { x = 0x00000001deadf00dl; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x1d3d750800000000l); }
@Test
public void test04361() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x1d3d750800000000l); }
@Test
public void test04362() { x = 0x7fffffffffffffffl; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d800000000l); }
@Test
public void test04363() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d800000000l); }
@Test
public void test04364() { x = 0x7fffffff80000000l; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04365() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x1d3d750800000000l); }
@Test
public void test04366() { x = 0x8000000000000000l; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04367() { x = 0xffffffffffffffffl; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d800000000l); }
@Test
public void test04368() { x = 0xfffffffffffffffel; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b000000000l); }
@Test
public void test04369() { x = 0xefffffffffffffffl; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000d800000000l); }
@Test
public void test04370() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff2800000000l; AssertJUnit.assertEquals("multiply", result, 0x1d3d750800000000l); }
@Test
public void test04371() { x = 0x000000007fffffffl; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0x0000000dffffffe4l); }
@Test
public void test04372() { x = 0x0000000080000000l; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0x0000000e00000000l); }
@Test
public void test04373() { x = 0x00000000ffffffffl; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0x0000001bffffffe4l); }
@Test
public void test04374() { x = 0x000000017fffffffl; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0x00000029ffffffe4l); }
@Test
public void test04375() { x = 0x0000000180000000l; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0x0000002a00000000l); }
@Test
public void test04376() { x = 0x00000001ffffffffl; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0x00000037ffffffe4l); }
@Test
public void test04377() { x = 0xffffffff7fffffffl; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0xfffffff1ffffffe4l); }
@Test
public void test04378() { x = 0xffffffff80000000l; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0xfffffff200000000l); }
@Test
public void test04379() { x = 0x00000001deadf00dl; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0x000000345b06416cl); }
@Test
public void test04380() { x = 0xffffffffdeadf00dl; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0xfffffffc5b06416cl); }
@Test
public void test04381() { x = 0x7fffffffffffffffl; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe4l); }
@Test
public void test04382() { x = 0x7fffffff7fffffffl; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0xfffffff1ffffffe4l); }
@Test
public void test04383() { x = 0x7fffffff80000000l; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0xfffffff200000000l); }
@Test
public void test04384() { x = 0x7fffffffdeadf00dl; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0xfffffffc5b06416cl); }
@Test
public void test04385() { x = 0x8000000000000000l; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04386() { x = 0xffffffffffffffffl; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe4l); }
@Test
public void test04387() { x = 0xfffffffffffffffel; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffc8l); }
@Test
public void test04388() { x = 0xefffffffffffffffl; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0x3fffffffffffffe4l); }
@Test
public void test04389() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1cl; AssertJUnit.assertEquals("multiply", result, 0x5b0641845b06416cl); }
@Test
public void test04390() { x = 0x000000007fffffffl; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0x0000006fffffff20l); }
@Test
public void test04391() { x = 0x0000000080000000l; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0x0000007000000000l); }
@Test
public void test04392() { x = 0x00000000ffffffffl; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0x000000dfffffff20l); }
@Test
public void test04393() { x = 0x000000017fffffffl; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0x0000014fffffff20l); }
@Test
public void test04394() { x = 0x0000000180000000l; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0x0000015000000000l); }
@Test
public void test04395() { x = 0x00000001ffffffffl; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0x000001bfffffff20l); }
@Test
public void test04396() { x = 0xffffffff7fffffffl; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0xffffff8fffffff20l); }
@Test
public void test04397() { x = 0xffffffff80000000l; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000000l); }
@Test
public void test04398() { x = 0x00000001deadf00dl; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0x000001a2d8320b60l); }
@Test
public void test04399() { x = 0xffffffffdeadf00dl; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0xffffffe2d8320b60l); }
@Test
public void test04400() { x = 0x7fffffffffffffffl; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff20l); }
@Test
public void test04401() { x = 0x7fffffff7fffffffl; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0xffffff8fffffff20l); }
@Test
public void test04402() { x = 0x7fffffff80000000l; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000000l); }
@Test
public void test04403() { x = 0x7fffffffdeadf00dl; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0xffffffe2d8320b60l); }
@Test
public void test04404() { x = 0x8000000000000000l; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04405() { x = 0xffffffffffffffffl; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff20l); }
@Test
public void test04406() { x = 0xfffffffffffffffel; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe40l); }
@Test
public void test04407() { x = 0xefffffffffffffffl; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff20l); }
@Test
public void test04408() { x = 0xdeadf00ddeadf00dl; long result = x * 0xe0l; AssertJUnit.assertEquals("multiply", result, 0xd8320c22d8320b60l); }
@Test
public void test04409() { x = 0x000000007fffffffl; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0x00000dffffffe400l); }
@Test
public void test04410() { x = 0x0000000080000000l; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0x00000e0000000000l); }
@Test
public void test04411() { x = 0x00000000ffffffffl; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0x00001bffffffe400l); }
@Test
public void test04412() { x = 0x000000017fffffffl; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0x000029ffffffe400l); }
@Test
public void test04413() { x = 0x0000000180000000l; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0x00002a0000000000l); }
@Test
public void test04414() { x = 0x00000001ffffffffl; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0x000037ffffffe400l); }
@Test
public void test04415() { x = 0xffffffff7fffffffl; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0xfffff1ffffffe400l); }
@Test
public void test04416() { x = 0xffffffff80000000l; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0xfffff20000000000l); }
@Test
public void test04417() { x = 0x00000001deadf00dl; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0x0000345b06416c00l); }
@Test
public void test04418() { x = 0xffffffffdeadf00dl; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0xfffffc5b06416c00l); }
@Test
public void test04419() { x = 0x7fffffffffffffffl; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe400l); }
@Test
public void test04420() { x = 0x7fffffff7fffffffl; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0xfffff1ffffffe400l); }
@Test
public void test04421() { x = 0x7fffffff80000000l; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0xfffff20000000000l); }
@Test
public void test04422() { x = 0x7fffffffdeadf00dl; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0xfffffc5b06416c00l); }
@Test
public void test04423() { x = 0x8000000000000000l; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04424() { x = 0xffffffffffffffffl; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe400l); }
@Test
public void test04425() { x = 0xfffffffffffffffel; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc800l); }
@Test
public void test04426() { x = 0xefffffffffffffffl; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe400l); }
@Test
public void test04427() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1c00l; AssertJUnit.assertEquals("multiply", result, 0x0641845b06416c00l); }
@Test
public void test04428() { x = 0x000000007fffffffl; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test04429() { x = 0x0000000080000000l; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04430() { x = 0x00000000ffffffffl; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test04431() { x = 0x000000017fffffffl; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test04432() { x = 0x0000000180000000l; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04433() { x = 0x00000001ffffffffl; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test04434() { x = 0xffffffff7fffffffl; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test04435() { x = 0xffffffff80000000l; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04436() { x = 0x00000001deadf00dl; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0x5b06416c00000000l); }
@Test
public void test04437() { x = 0xffffffffdeadf00dl; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0x5b06416c00000000l); }
@Test
public void test04438() { x = 0x7fffffffffffffffl; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test04439() { x = 0x7fffffff7fffffffl; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test04440() { x = 0x7fffffff80000000l; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04441() { x = 0x7fffffffdeadf00dl; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0x5b06416c00000000l); }
@Test
public void test04442() { x = 0x8000000000000000l; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04443() { x = 0xffffffffffffffffl; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test04444() { x = 0xfffffffffffffffel; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test04445() { x = 0xefffffffffffffffl; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test04446() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1c00000000l; AssertJUnit.assertEquals("multiply", result, 0x5b06416c00000000l); }
@Test
public void test04447() { x = 0x000000007fffffffl; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2000000000l); }
@Test
public void test04448() { x = 0x0000000080000000l; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04449() { x = 0x00000000ffffffffl; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2000000000l); }
@Test
public void test04450() { x = 0x000000017fffffffl; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2000000000l); }
@Test
public void test04451() { x = 0x0000000180000000l; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04452() { x = 0x00000001ffffffffl; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2000000000l); }
@Test
public void test04453() { x = 0xffffffff7fffffffl; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2000000000l); }
@Test
public void test04454() { x = 0xffffffff80000000l; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04455() { x = 0x00000001deadf00dl; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0xd8320b6000000000l); }
@Test
public void test04456() { x = 0xffffffffdeadf00dl; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0xd8320b6000000000l); }
@Test
public void test04457() { x = 0x7fffffffffffffffl; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2000000000l); }
@Test
public void test04458() { x = 0x7fffffff7fffffffl; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2000000000l); }
@Test
public void test04459() { x = 0x7fffffff80000000l; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04460() { x = 0x7fffffffdeadf00dl; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0xd8320b6000000000l); }
@Test
public void test04461() { x = 0x8000000000000000l; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04462() { x = 0xffffffffffffffffl; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2000000000l); }
@Test
public void test04463() { x = 0xfffffffffffffffel; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4000000000l); }
@Test
public void test04464() { x = 0xefffffffffffffffl; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff2000000000l); }
@Test
public void test04465() { x = 0xdeadf00ddeadf00dl; long result = x * 0xe000000000l; AssertJUnit.assertEquals("multiply", result, 0xd8320b6000000000l); }
@Test
public void test04466() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0xfffffff20000001cl); }
@Test
public void test04467() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0xfffffff200000000l); }
@Test
public void test04468() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0xffffffe40000001cl); }
@Test
public void test04469() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0xffffffd60000001cl); }
@Test
public void test04470() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0xffffffd600000000l); }
@Test
public void test04471() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0xffffffc80000001cl); }
@Test
public void test04472() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0x0000000e0000001cl); }
@Test
public void test04473() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0x0000000e00000000l); }
@Test
public void test04474() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0xffffffcba4f9be94l); }
@Test
public void test04475() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0x00000003a4f9be94l); }
@Test
public void test04476() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0x000000000000001cl); }
@Test
public void test04477() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0x0000000e0000001cl); }
@Test
public void test04478() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0x0000000e00000000l); }
@Test
public void test04479() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0x00000003a4f9be94l); }
@Test
public void test04480() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04481() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0x000000000000001cl); }
@Test
public void test04482() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000038l); }
@Test
public void test04483() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0xc00000000000001cl); }
@Test
public void test04484() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffe4l; AssertJUnit.assertEquals("multiply", result, 0xa4f9be7ba4f9be94l); }
@Test
public void test04485() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0xffffff90000000e0l); }
@Test
public void test04486() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000000l); }
@Test
public void test04487() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0xffffff20000000e0l); }
@Test
public void test04488() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb0000000e0l); }
@Test
public void test04489() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb000000000l); }
@Test
public void test04490() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0xfffffe40000000e0l); }
@Test
public void test04491() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0x00000070000000e0l); }
@Test
public void test04492() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0x0000007000000000l); }
@Test
public void test04493() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5d27cdf4a0l); }
@Test
public void test04494() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0x0000001d27cdf4a0l); }
@Test
public void test04495() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000e0l); }
@Test
public void test04496() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0x00000070000000e0l); }
@Test
public void test04497() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0x0000007000000000l); }
@Test
public void test04498() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0x0000001d27cdf4a0l); }
@Test
public void test04499() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04500() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000e0l); }
@Test
public void test04501() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001c0l); }
@Test
public void test04502() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000e0l); }
@Test
public void test04503() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff20l; AssertJUnit.assertEquals("multiply", result, 0x27cdf3dd27cdf4a0l); }
@Test
public void test04504() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0xfffff20000001c00l); }
@Test
public void test04505() { x = 0x0000000080000000l; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0xfffff20000000000l); }
@Test
public void test04506() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0xffffe40000001c00l); }
@Test
public void test04507() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0xffffd60000001c00l); }
@Test
public void test04508() { x = 0x0000000180000000l; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0xffffd60000000000l); }
@Test
public void test04509() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0xffffc80000001c00l); }
@Test
public void test04510() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0x00000e0000001c00l); }
@Test
public void test04511() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0x00000e0000000000l); }
@Test
public void test04512() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0xffffcba4f9be9400l); }
@Test
public void test04513() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0x000003a4f9be9400l); }
@Test
public void test04514() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001c00l); }
@Test
public void test04515() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0x00000e0000001c00l); }
@Test
public void test04516() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0x00000e0000000000l); }
@Test
public void test04517() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0x000003a4f9be9400l); }
@Test
public void test04518() { x = 0x8000000000000000l; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04519() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001c00l); }
@Test
public void test04520() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003800l); }
@Test
public void test04521() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001c00l); }
@Test
public void test04522() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffe400l; AssertJUnit.assertEquals("multiply", result, 0xf9be7ba4f9be9400l); }
@Test
public void test04523() { x = 0x000000007fffffffl; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test04524() { x = 0x0000000080000000l; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04525() { x = 0x00000000ffffffffl; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test04526() { x = 0x000000017fffffffl; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test04527() { x = 0x0000000180000000l; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04528() { x = 0x00000001ffffffffl; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test04529() { x = 0xffffffff7fffffffl; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test04530() { x = 0xffffffff80000000l; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04531() { x = 0x00000001deadf00dl; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0xa4f9be9400000000l); }
@Test
public void test04532() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0xa4f9be9400000000l); }
@Test
public void test04533() { x = 0x7fffffffffffffffl; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test04534() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test04535() { x = 0x7fffffff80000000l; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04536() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0xa4f9be9400000000l); }
@Test
public void test04537() { x = 0x8000000000000000l; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04538() { x = 0xffffffffffffffffl; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test04539() { x = 0xfffffffffffffffel; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test04540() { x = 0xefffffffffffffffl; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test04541() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffe400000000l; AssertJUnit.assertEquals("multiply", result, 0xa4f9be9400000000l); }
@Test
public void test04542() { x = 0x000000007fffffffl; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e000000000l); }
@Test
public void test04543() { x = 0x0000000080000000l; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04544() { x = 0x00000000ffffffffl; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e000000000l); }
@Test
public void test04545() { x = 0x000000017fffffffl; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e000000000l); }
@Test
public void test04546() { x = 0x0000000180000000l; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04547() { x = 0x00000001ffffffffl; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e000000000l); }
@Test
public void test04548() { x = 0xffffffff7fffffffl; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e000000000l); }
@Test
public void test04549() { x = 0xffffffff80000000l; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04550() { x = 0x00000001deadf00dl; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x27cdf4a000000000l); }
@Test
public void test04551() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x27cdf4a000000000l); }
@Test
public void test04552() { x = 0x7fffffffffffffffl; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e000000000l); }
@Test
public void test04553() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e000000000l); }
@Test
public void test04554() { x = 0x7fffffff80000000l; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04555() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x27cdf4a000000000l); }
@Test
public void test04556() { x = 0x8000000000000000l; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04557() { x = 0xffffffffffffffffl; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e000000000l); }
@Test
public void test04558() { x = 0xfffffffffffffffel; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001c000000000l); }
@Test
public void test04559() { x = 0xefffffffffffffffl; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e000000000l); }
@Test
public void test04560() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff2000000000l; AssertJUnit.assertEquals("multiply", result, 0x27cdf4a000000000l); }
@Test
public void test04561() { x = 0x000000007fffffffl; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0x0000000e7fffffe3l); }
@Test
public void test04562() { x = 0x0000000080000000l; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0x0000000e80000000l); }
@Test
public void test04563() { x = 0x00000000ffffffffl; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0x0000001cffffffe3l); }
@Test
public void test04564() { x = 0x000000017fffffffl; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0x0000002b7fffffe3l); }
@Test
public void test04565() { x = 0x0000000180000000l; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0x0000002b80000000l); }
@Test
public void test04566() { x = 0x00000001ffffffffl; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0x00000039ffffffe3l); }
@Test
public void test04567() { x = 0xffffffff7fffffffl; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0xfffffff17fffffe3l); }
@Test
public void test04568() { x = 0xffffffff80000000l; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0xfffffff180000000l); }
@Test
public void test04569() { x = 0x00000001deadf00dl; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0x0000003639b43179l); }
@Test
public void test04570() { x = 0xffffffffdeadf00dl; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0xfffffffc39b43179l); }
@Test
public void test04571() { x = 0x7fffffffffffffffl; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffe3l); }
@Test
public void test04572() { x = 0x7fffffff7fffffffl; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0x7ffffff17fffffe3l); }
@Test
public void test04573() { x = 0x7fffffff80000000l; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0x7ffffff180000000l); }
@Test
public void test04574() { x = 0x7fffffffdeadf00dl; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0x7ffffffc39b43179l); }
@Test
public void test04575() { x = 0x8000000000000000l; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04576() { x = 0xffffffffffffffffl; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe3l); }
@Test
public void test04577() { x = 0xfffffffffffffffel; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffc6l); }
@Test
public void test04578() { x = 0xefffffffffffffffl; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0x2fffffffffffffe3l); }
@Test
public void test04579() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1dl; AssertJUnit.assertEquals("multiply", result, 0x39b4319239b43179l); }
@Test
public void test04580() { x = 0x000000007fffffffl; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0x00000073ffffff18l); }
@Test
public void test04581() { x = 0x0000000080000000l; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0x0000007400000000l); }
@Test
public void test04582() { x = 0x00000000ffffffffl; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0x000000e7ffffff18l); }
@Test
public void test04583() { x = 0x000000017fffffffl; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0x0000015bffffff18l); }
@Test
public void test04584() { x = 0x0000000180000000l; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0x0000015c00000000l); }
@Test
public void test04585() { x = 0x00000001ffffffffl; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0x000001cfffffff18l); }
@Test
public void test04586() { x = 0xffffffff7fffffffl; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0xffffff8bffffff18l); }
@Test
public void test04587() { x = 0xffffffff80000000l; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0xffffff8c00000000l); }
@Test
public void test04588() { x = 0x00000001deadf00dl; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0x000001b1cda18bc8l); }
@Test
public void test04589() { x = 0xffffffffdeadf00dl; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffe1cda18bc8l); }
@Test
public void test04590() { x = 0x7fffffffffffffffl; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff18l); }
@Test
public void test04591() { x = 0x7fffffff7fffffffl; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0xffffff8bffffff18l); }
@Test
public void test04592() { x = 0x7fffffff80000000l; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0xffffff8c00000000l); }
@Test
public void test04593() { x = 0x7fffffffdeadf00dl; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffe1cda18bc8l); }
@Test
public void test04594() { x = 0x8000000000000000l; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04595() { x = 0xffffffffffffffffl; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff18l); }
@Test
public void test04596() { x = 0xfffffffffffffffel; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe30l); }
@Test
public void test04597() { x = 0xefffffffffffffffl; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff18l); }
@Test
public void test04598() { x = 0xdeadf00ddeadf00dl; long result = x * 0xe8l; AssertJUnit.assertEquals("multiply", result, 0xcda18c91cda18bc8l); }
@Test
public void test04599() { x = 0x000000007fffffffl; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0x00000e7fffffe300l); }
@Test
public void test04600() { x = 0x0000000080000000l; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0x00000e8000000000l); }
@Test
public void test04601() { x = 0x00000000ffffffffl; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0x00001cffffffe300l); }
@Test
public void test04602() { x = 0x000000017fffffffl; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0x00002b7fffffe300l); }
@Test
public void test04603() { x = 0x0000000180000000l; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0x00002b8000000000l); }
@Test
public void test04604() { x = 0x00000001ffffffffl; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0x000039ffffffe300l); }
@Test
public void test04605() { x = 0xffffffff7fffffffl; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0xfffff17fffffe300l); }
@Test
public void test04606() { x = 0xffffffff80000000l; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0xfffff18000000000l); }
@Test
public void test04607() { x = 0x00000001deadf00dl; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0x00003639b4317900l); }
@Test
public void test04608() { x = 0xffffffffdeadf00dl; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0xfffffc39b4317900l); }
@Test
public void test04609() { x = 0x7fffffffffffffffl; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe300l); }
@Test
public void test04610() { x = 0x7fffffff7fffffffl; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0xfffff17fffffe300l); }
@Test
public void test04611() { x = 0x7fffffff80000000l; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0xfffff18000000000l); }
@Test
public void test04612() { x = 0x7fffffffdeadf00dl; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0xfffffc39b4317900l); }
@Test
public void test04613() { x = 0x8000000000000000l; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04614() { x = 0xffffffffffffffffl; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe300l); }
@Test
public void test04615() { x = 0xfffffffffffffffel; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc600l); }
@Test
public void test04616() { x = 0xefffffffffffffffl; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe300l); }
@Test
public void test04617() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1d00l; AssertJUnit.assertEquals("multiply", result, 0xb4319239b4317900l); }
@Test
public void test04618() { x = 0x000000007fffffffl; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe300000000l); }
@Test
public void test04619() { x = 0x0000000080000000l; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04620() { x = 0x00000000ffffffffl; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe300000000l); }
@Test
public void test04621() { x = 0x000000017fffffffl; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe300000000l); }
@Test
public void test04622() { x = 0x0000000180000000l; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04623() { x = 0x00000001ffffffffl; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe300000000l); }
@Test
public void test04624() { x = 0xffffffff7fffffffl; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe300000000l); }
@Test
public void test04625() { x = 0xffffffff80000000l; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04626() { x = 0x00000001deadf00dl; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0x39b4317900000000l); }
@Test
public void test04627() { x = 0xffffffffdeadf00dl; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0x39b4317900000000l); }
@Test
public void test04628() { x = 0x7fffffffffffffffl; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe300000000l); }
@Test
public void test04629() { x = 0x7fffffff7fffffffl; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe300000000l); }
@Test
public void test04630() { x = 0x7fffffff80000000l; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04631() { x = 0x7fffffffdeadf00dl; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0x39b4317900000000l); }
@Test
public void test04632() { x = 0x8000000000000000l; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04633() { x = 0xffffffffffffffffl; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe300000000l); }
@Test
public void test04634() { x = 0xfffffffffffffffel; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc600000000l); }
@Test
public void test04635() { x = 0xefffffffffffffffl; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe300000000l); }
@Test
public void test04636() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1d00000000l; AssertJUnit.assertEquals("multiply", result, 0x39b4317900000000l); }
@Test
public void test04637() { x = 0x000000007fffffffl; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1800000000l); }
@Test
public void test04638() { x = 0x0000000080000000l; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04639() { x = 0x00000000ffffffffl; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1800000000l); }
@Test
public void test04640() { x = 0x000000017fffffffl; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1800000000l); }
@Test
public void test04641() { x = 0x0000000180000000l; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04642() { x = 0x00000001ffffffffl; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1800000000l); }
@Test
public void test04643() { x = 0xffffffff7fffffffl; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1800000000l); }
@Test
public void test04644() { x = 0xffffffff80000000l; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04645() { x = 0x00000001deadf00dl; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0xcda18bc800000000l); }
@Test
public void test04646() { x = 0xffffffffdeadf00dl; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0xcda18bc800000000l); }
@Test
public void test04647() { x = 0x7fffffffffffffffl; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1800000000l); }
@Test
public void test04648() { x = 0x7fffffff7fffffffl; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1800000000l); }
@Test
public void test04649() { x = 0x7fffffff80000000l; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04650() { x = 0x7fffffffdeadf00dl; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0xcda18bc800000000l); }
@Test
public void test04651() { x = 0x8000000000000000l; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04652() { x = 0xffffffffffffffffl; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1800000000l); }
@Test
public void test04653() { x = 0xfffffffffffffffel; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe3000000000l); }
@Test
public void test04654() { x = 0xefffffffffffffffl; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1800000000l); }
@Test
public void test04655() { x = 0xdeadf00ddeadf00dl; long result = x * 0xe800000000l; AssertJUnit.assertEquals("multiply", result, 0xcda18bc800000000l); }
@Test
public void test04656() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0xfffffff18000001dl); }
@Test
public void test04657() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0xfffffff180000000l); }
@Test
public void test04658() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0xffffffe30000001dl); }
@Test
public void test04659() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0xffffffd48000001dl); }
@Test
public void test04660() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0xffffffd480000000l); }
@Test
public void test04661() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0xffffffc60000001dl); }
@Test
public void test04662() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0x0000000e8000001dl); }
@Test
public void test04663() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0x0000000e80000000l); }
@Test
public void test04664() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0xffffffc9c64bce87l); }
@Test
public void test04665() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0x00000003c64bce87l); }
@Test
public void test04666() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0x800000000000001dl); }
@Test
public void test04667() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0x8000000e8000001dl); }
@Test
public void test04668() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0x8000000e80000000l); }
@Test
public void test04669() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0x80000003c64bce87l); }
@Test
public void test04670() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04671() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0x000000000000001dl); }
@Test
public void test04672() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0x000000000000003al); }
@Test
public void test04673() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0xd00000000000001dl); }
@Test
public void test04674() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffe3l; AssertJUnit.assertEquals("multiply", result, 0xc64bce6dc64bce87l); }
@Test
public void test04675() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0xffffff8c000000e8l); }
@Test
public void test04676() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0xffffff8c00000000l); }
@Test
public void test04677() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0xffffff18000000e8l); }
@Test
public void test04678() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0xfffffea4000000e8l); }
@Test
public void test04679() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0xfffffea400000000l); }
@Test
public void test04680() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0xfffffe30000000e8l); }
@Test
public void test04681() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0x00000074000000e8l); }
@Test
public void test04682() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0x0000007400000000l); }
@Test
public void test04683() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4e325e7438l); }
@Test
public void test04684() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0x0000001e325e7438l); }
@Test
public void test04685() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000e8l); }
@Test
public void test04686() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0x00000074000000e8l); }
@Test
public void test04687() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0x0000007400000000l); }
@Test
public void test04688() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0x0000001e325e7438l); }
@Test
public void test04689() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04690() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000e8l); }
@Test
public void test04691() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001d0l); }
@Test
public void test04692() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0x80000000000000e8l); }
@Test
public void test04693() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff18l; AssertJUnit.assertEquals("multiply", result, 0x325e736e325e7438l); }
@Test
public void test04694() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0xfffff18000001d00l); }
@Test
public void test04695() { x = 0x0000000080000000l; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0xfffff18000000000l); }
@Test
public void test04696() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0xffffe30000001d00l); }
@Test
public void test04697() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0xffffd48000001d00l); }
@Test
public void test04698() { x = 0x0000000180000000l; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0xffffd48000000000l); }
@Test
public void test04699() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0xffffc60000001d00l); }
@Test
public void test04700() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0x00000e8000001d00l); }
@Test
public void test04701() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0x00000e8000000000l); }
@Test
public void test04702() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0xffffc9c64bce8700l); }
@Test
public void test04703() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0x000003c64bce8700l); }
@Test
public void test04704() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001d00l); }
@Test
public void test04705() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0x00000e8000001d00l); }
@Test
public void test04706() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0x00000e8000000000l); }
@Test
public void test04707() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0x000003c64bce8700l); }
@Test
public void test04708() { x = 0x8000000000000000l; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04709() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001d00l); }
@Test
public void test04710() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003a00l); }
@Test
public void test04711() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001d00l); }
@Test
public void test04712() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffe300l; AssertJUnit.assertEquals("multiply", result, 0x4bce6dc64bce8700l); }
@Test
public void test04713() { x = 0x000000007fffffffl; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001d00000000l); }
@Test
public void test04714() { x = 0x0000000080000000l; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04715() { x = 0x00000000ffffffffl; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001d00000000l); }
@Test
public void test04716() { x = 0x000000017fffffffl; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001d00000000l); }
@Test
public void test04717() { x = 0x0000000180000000l; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04718() { x = 0x00000001ffffffffl; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001d00000000l); }
@Test
public void test04719() { x = 0xffffffff7fffffffl; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001d00000000l); }
@Test
public void test04720() { x = 0xffffffff80000000l; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04721() { x = 0x00000001deadf00dl; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0xc64bce8700000000l); }
@Test
public void test04722() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0xc64bce8700000000l); }
@Test
public void test04723() { x = 0x7fffffffffffffffl; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001d00000000l); }
@Test
public void test04724() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001d00000000l); }
@Test
public void test04725() { x = 0x7fffffff80000000l; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04726() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0xc64bce8700000000l); }
@Test
public void test04727() { x = 0x8000000000000000l; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04728() { x = 0xffffffffffffffffl; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001d00000000l); }
@Test
public void test04729() { x = 0xfffffffffffffffel; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003a00000000l); }
@Test
public void test04730() { x = 0xefffffffffffffffl; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001d00000000l); }
@Test
public void test04731() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffe300000000l; AssertJUnit.assertEquals("multiply", result, 0xc64bce8700000000l); }
@Test
public void test04732() { x = 0x000000007fffffffl; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e800000000l); }
@Test
public void test04733() { x = 0x0000000080000000l; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04734() { x = 0x00000000ffffffffl; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e800000000l); }
@Test
public void test04735() { x = 0x000000017fffffffl; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e800000000l); }
@Test
public void test04736() { x = 0x0000000180000000l; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04737() { x = 0x00000001ffffffffl; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e800000000l); }
@Test
public void test04738() { x = 0xffffffff7fffffffl; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e800000000l); }
@Test
public void test04739() { x = 0xffffffff80000000l; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04740() { x = 0x00000001deadf00dl; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x325e743800000000l); }
@Test
public void test04741() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x325e743800000000l); }
@Test
public void test04742() { x = 0x7fffffffffffffffl; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e800000000l); }
@Test
public void test04743() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e800000000l); }
@Test
public void test04744() { x = 0x7fffffff80000000l; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04745() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x325e743800000000l); }
@Test
public void test04746() { x = 0x8000000000000000l; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04747() { x = 0xffffffffffffffffl; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e800000000l); }
@Test
public void test04748() { x = 0xfffffffffffffffel; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001d000000000l); }
@Test
public void test04749() { x = 0xefffffffffffffffl; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e800000000l); }
@Test
public void test04750() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff1800000000l; AssertJUnit.assertEquals("multiply", result, 0x325e743800000000l); }
@Test
public void test04751() { x = 0x000000007fffffffl; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0x0000000effffffe2l); }
@Test
public void test04752() { x = 0x0000000080000000l; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0x0000000f00000000l); }
@Test
public void test04753() { x = 0x00000000ffffffffl; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0x0000001dffffffe2l); }
@Test
public void test04754() { x = 0x000000017fffffffl; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0x0000002cffffffe2l); }
@Test
public void test04755() { x = 0x0000000180000000l; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0x0000002d00000000l); }
@Test
public void test04756() { x = 0x00000001ffffffffl; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0x0000003bffffffe2l); }
@Test
public void test04757() { x = 0xffffffff7fffffffl; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0xfffffff0ffffffe2l); }
@Test
public void test04758() { x = 0xffffffff80000000l; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0xfffffff100000000l); }
@Test
public void test04759() { x = 0x00000001deadf00dl; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0x0000003818622186l); }
@Test
public void test04760() { x = 0xffffffffdeadf00dl; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0xfffffffc18622186l); }
@Test
public void test04761() { x = 0x7fffffffffffffffl; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe2l); }
@Test
public void test04762() { x = 0x7fffffff7fffffffl; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0xfffffff0ffffffe2l); }
@Test
public void test04763() { x = 0x7fffffff80000000l; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0xfffffff100000000l); }
@Test
public void test04764() { x = 0x7fffffffdeadf00dl; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0xfffffffc18622186l); }
@Test
public void test04765() { x = 0x8000000000000000l; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04766() { x = 0xffffffffffffffffl; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe2l); }
@Test
public void test04767() { x = 0xfffffffffffffffel; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffc4l); }
@Test
public void test04768() { x = 0xefffffffffffffffl; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0x1fffffffffffffe2l); }
@Test
public void test04769() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1el; AssertJUnit.assertEquals("multiply", result, 0x186221a018622186l); }
@Test
public void test04770() { x = 0x000000007fffffffl; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0x00000077ffffff10l); }
@Test
public void test04771() { x = 0x0000000080000000l; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0x0000007800000000l); }
@Test
public void test04772() { x = 0x00000000ffffffffl; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0x000000efffffff10l); }
@Test
public void test04773() { x = 0x000000017fffffffl; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0x00000167ffffff10l); }
@Test
public void test04774() { x = 0x0000000180000000l; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0x0000016800000000l); }
@Test
public void test04775() { x = 0x00000001ffffffffl; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0x000001dfffffff10l); }
@Test
public void test04776() { x = 0xffffffff7fffffffl; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0xffffff87ffffff10l); }
@Test
public void test04777() { x = 0xffffffff80000000l; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000000l); }
@Test
public void test04778() { x = 0x00000001deadf00dl; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0x000001c0c3110c30l); }
@Test
public void test04779() { x = 0xffffffffdeadf00dl; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0xffffffe0c3110c30l); }
@Test
public void test04780() { x = 0x7fffffffffffffffl; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff10l); }
@Test
public void test04781() { x = 0x7fffffff7fffffffl; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0xffffff87ffffff10l); }
@Test
public void test04782() { x = 0x7fffffff80000000l; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000000l); }
@Test
public void test04783() { x = 0x7fffffffdeadf00dl; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0xffffffe0c3110c30l); }
@Test
public void test04784() { x = 0x8000000000000000l; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04785() { x = 0xffffffffffffffffl; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff10l); }
@Test
public void test04786() { x = 0xfffffffffffffffel; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe20l); }
@Test
public void test04787() { x = 0xefffffffffffffffl; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff10l); }
@Test
public void test04788() { x = 0xdeadf00ddeadf00dl; long result = x * 0xf0l; AssertJUnit.assertEquals("multiply", result, 0xc3110d00c3110c30l); }
@Test
public void test04789() { x = 0x000000007fffffffl; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0x00000effffffe200l); }
@Test
public void test04790() { x = 0x0000000080000000l; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0x00000f0000000000l); }
@Test
public void test04791() { x = 0x00000000ffffffffl; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0x00001dffffffe200l); }
@Test
public void test04792() { x = 0x000000017fffffffl; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0x00002cffffffe200l); }
@Test
public void test04793() { x = 0x0000000180000000l; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0x00002d0000000000l); }
@Test
public void test04794() { x = 0x00000001ffffffffl; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0x00003bffffffe200l); }
@Test
public void test04795() { x = 0xffffffff7fffffffl; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0xfffff0ffffffe200l); }
@Test
public void test04796() { x = 0xffffffff80000000l; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0xfffff10000000000l); }
@Test
public void test04797() { x = 0x00000001deadf00dl; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0x0000381862218600l); }
@Test
public void test04798() { x = 0xffffffffdeadf00dl; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1862218600l); }
@Test
public void test04799() { x = 0x7fffffffffffffffl; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe200l); }
@Test
public void test04800() { x = 0x7fffffff7fffffffl; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0xfffff0ffffffe200l); }
@Test
public void test04801() { x = 0x7fffffff80000000l; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0xfffff10000000000l); }
@Test
public void test04802() { x = 0x7fffffffdeadf00dl; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1862218600l); }
@Test
public void test04803() { x = 0x8000000000000000l; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04804() { x = 0xffffffffffffffffl; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe200l); }
@Test
public void test04805() { x = 0xfffffffffffffffel; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc400l); }
@Test
public void test04806() { x = 0xefffffffffffffffl; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe200l); }
@Test
public void test04807() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1e00l; AssertJUnit.assertEquals("multiply", result, 0x6221a01862218600l); }
@Test
public void test04808() { x = 0x000000007fffffffl; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe200000000l); }
@Test
public void test04809() { x = 0x0000000080000000l; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04810() { x = 0x00000000ffffffffl; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe200000000l); }
@Test
public void test04811() { x = 0x000000017fffffffl; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe200000000l); }
@Test
public void test04812() { x = 0x0000000180000000l; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04813() { x = 0x00000001ffffffffl; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe200000000l); }
@Test
public void test04814() { x = 0xffffffff7fffffffl; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe200000000l); }
@Test
public void test04815() { x = 0xffffffff80000000l; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04816() { x = 0x00000001deadf00dl; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x1862218600000000l); }
@Test
public void test04817() { x = 0xffffffffdeadf00dl; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x1862218600000000l); }
@Test
public void test04818() { x = 0x7fffffffffffffffl; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe200000000l); }
@Test
public void test04819() { x = 0x7fffffff7fffffffl; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe200000000l); }
@Test
public void test04820() { x = 0x7fffffff80000000l; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04821() { x = 0x7fffffffdeadf00dl; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x1862218600000000l); }
@Test
public void test04822() { x = 0x8000000000000000l; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04823() { x = 0xffffffffffffffffl; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe200000000l); }
@Test
public void test04824() { x = 0xfffffffffffffffel; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc400000000l); }
@Test
public void test04825() { x = 0xefffffffffffffffl; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe200000000l); }
@Test
public void test04826() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x1862218600000000l); }
@Test
public void test04827() { x = 0x000000007fffffffl; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1000000000l); }
@Test
public void test04828() { x = 0x0000000080000000l; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04829() { x = 0x00000000ffffffffl; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1000000000l); }
@Test
public void test04830() { x = 0x000000017fffffffl; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1000000000l); }
@Test
public void test04831() { x = 0x0000000180000000l; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04832() { x = 0x00000001ffffffffl; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1000000000l); }
@Test
public void test04833() { x = 0xffffffff7fffffffl; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1000000000l); }
@Test
public void test04834() { x = 0xffffffff80000000l; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04835() { x = 0x00000001deadf00dl; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0xc3110c3000000000l); }
@Test
public void test04836() { x = 0xffffffffdeadf00dl; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0xc3110c3000000000l); }
@Test
public void test04837() { x = 0x7fffffffffffffffl; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1000000000l); }
@Test
public void test04838() { x = 0x7fffffff7fffffffl; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1000000000l); }
@Test
public void test04839() { x = 0x7fffffff80000000l; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04840() { x = 0x7fffffffdeadf00dl; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0xc3110c3000000000l); }
@Test
public void test04841() { x = 0x8000000000000000l; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04842() { x = 0xffffffffffffffffl; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1000000000l); }
@Test
public void test04843() { x = 0xfffffffffffffffel; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe2000000000l); }
@Test
public void test04844() { x = 0xefffffffffffffffl; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1000000000l); }
@Test
public void test04845() { x = 0xdeadf00ddeadf00dl; long result = x * 0xf000000000l; AssertJUnit.assertEquals("multiply", result, 0xc3110c3000000000l); }
@Test
public void test04846() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0xfffffff10000001el); }
@Test
public void test04847() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0xfffffff100000000l); }
@Test
public void test04848() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0xffffffe20000001el); }
@Test
public void test04849() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0xffffffd30000001el); }
@Test
public void test04850() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0xffffffd300000000l); }
@Test
public void test04851() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0xffffffc40000001el); }
@Test
public void test04852() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0x0000000f0000001el); }
@Test
public void test04853() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0x0000000f00000000l); }
@Test
public void test04854() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0xffffffc7e79dde7al); }
@Test
public void test04855() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0x00000003e79dde7al); }
@Test
public void test04856() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0x000000000000001el); }
@Test
public void test04857() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0x0000000f0000001el); }
@Test
public void test04858() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0x0000000f00000000l); }
@Test
public void test04859() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0x00000003e79dde7al); }
@Test
public void test04860() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04861() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0x000000000000001el); }
@Test
public void test04862() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0x000000000000003cl); }
@Test
public void test04863() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0xe00000000000001el); }
@Test
public void test04864() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffe2l; AssertJUnit.assertEquals("multiply", result, 0xe79dde5fe79dde7al); }
@Test
public void test04865() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0xffffff88000000f0l); }
@Test
public void test04866() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0xffffff8800000000l); }
@Test
public void test04867() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0xffffff10000000f0l); }
@Test
public void test04868() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0xfffffe98000000f0l); }
@Test
public void test04869() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9800000000l); }
@Test
public void test04870() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0xfffffe20000000f0l); }
@Test
public void test04871() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0x00000078000000f0l); }
@Test
public void test04872() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0x0000007800000000l); }
@Test
public void test04873() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0xfffffe3f3ceef3d0l); }
@Test
public void test04874() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0x0000001f3ceef3d0l); }
@Test
public void test04875() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000f0l); }
@Test
public void test04876() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0x00000078000000f0l); }
@Test
public void test04877() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0x0000007800000000l); }
@Test
public void test04878() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0x0000001f3ceef3d0l); }
@Test
public void test04879() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04880() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000f0l); }
@Test
public void test04881() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001e0l); }
@Test
public void test04882() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000f0l); }
@Test
public void test04883() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff10l; AssertJUnit.assertEquals("multiply", result, 0x3ceef2ff3ceef3d0l); }
@Test
public void test04884() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0xfffff10000001e00l); }
@Test
public void test04885() { x = 0x0000000080000000l; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0xfffff10000000000l); }
@Test
public void test04886() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0xffffe20000001e00l); }
@Test
public void test04887() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0xffffd30000001e00l); }
@Test
public void test04888() { x = 0x0000000180000000l; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0xffffd30000000000l); }
@Test
public void test04889() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0xffffc40000001e00l); }
@Test
public void test04890() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0x00000f0000001e00l); }
@Test
public void test04891() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0x00000f0000000000l); }
@Test
public void test04892() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0xffffc7e79dde7a00l); }
@Test
public void test04893() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0x000003e79dde7a00l); }
@Test
public void test04894() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001e00l); }
@Test
public void test04895() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0x00000f0000001e00l); }
@Test
public void test04896() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0x00000f0000000000l); }
@Test
public void test04897() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0x000003e79dde7a00l); }
@Test
public void test04898() { x = 0x8000000000000000l; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04899() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001e00l); }
@Test
public void test04900() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003c00l); }
@Test
public void test04901() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001e00l); }
@Test
public void test04902() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffe200l; AssertJUnit.assertEquals("multiply", result, 0x9dde5fe79dde7a00l); }
@Test
public void test04903() { x = 0x000000007fffffffl; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001e00000000l); }
@Test
public void test04904() { x = 0x0000000080000000l; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04905() { x = 0x00000000ffffffffl; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001e00000000l); }
@Test
public void test04906() { x = 0x000000017fffffffl; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001e00000000l); }
@Test
public void test04907() { x = 0x0000000180000000l; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04908() { x = 0x00000001ffffffffl; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001e00000000l); }
@Test
public void test04909() { x = 0xffffffff7fffffffl; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001e00000000l); }
@Test
public void test04910() { x = 0xffffffff80000000l; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04911() { x = 0x00000001deadf00dl; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0xe79dde7a00000000l); }
@Test
public void test04912() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0xe79dde7a00000000l); }
@Test
public void test04913() { x = 0x7fffffffffffffffl; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001e00000000l); }
@Test
public void test04914() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001e00000000l); }
@Test
public void test04915() { x = 0x7fffffff80000000l; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04916() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0xe79dde7a00000000l); }
@Test
public void test04917() { x = 0x8000000000000000l; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04918() { x = 0xffffffffffffffffl; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001e00000000l); }
@Test
public void test04919() { x = 0xfffffffffffffffel; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003c00000000l); }
@Test
public void test04920() { x = 0xefffffffffffffffl; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001e00000000l); }
@Test
public void test04921() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffe200000000l; AssertJUnit.assertEquals("multiply", result, 0xe79dde7a00000000l); }
@Test
public void test04922() { x = 0x000000007fffffffl; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f000000000l); }
@Test
public void test04923() { x = 0x0000000080000000l; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04924() { x = 0x00000000ffffffffl; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f000000000l); }
@Test
public void test04925() { x = 0x000000017fffffffl; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f000000000l); }
@Test
public void test04926() { x = 0x0000000180000000l; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04927() { x = 0x00000001ffffffffl; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f000000000l); }
@Test
public void test04928() { x = 0xffffffff7fffffffl; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f000000000l); }
@Test
public void test04929() { x = 0xffffffff80000000l; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04930() { x = 0x00000001deadf00dl; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x3ceef3d000000000l); }
@Test
public void test04931() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x3ceef3d000000000l); }
@Test
public void test04932() { x = 0x7fffffffffffffffl; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f000000000l); }
@Test
public void test04933() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f000000000l); }
@Test
public void test04934() { x = 0x7fffffff80000000l; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04935() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x3ceef3d000000000l); }
@Test
public void test04936() { x = 0x8000000000000000l; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04937() { x = 0xffffffffffffffffl; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f000000000l); }
@Test
public void test04938() { x = 0xfffffffffffffffel; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e000000000l); }
@Test
public void test04939() { x = 0xefffffffffffffffl; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f000000000l); }
@Test
public void test04940() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff1000000000l; AssertJUnit.assertEquals("multiply", result, 0x3ceef3d000000000l); }
@Test
public void test04941() { x = 0x000000007fffffffl; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0x0000000f7fffffe1l); }
@Test
public void test04942() { x = 0x0000000080000000l; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0x0000000f80000000l); }
@Test
public void test04943() { x = 0x00000000ffffffffl; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0x0000001effffffe1l); }
@Test
public void test04944() { x = 0x000000017fffffffl; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0x0000002e7fffffe1l); }
@Test
public void test04945() { x = 0x0000000180000000l; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0x0000002e80000000l); }
@Test
public void test04946() { x = 0x00000001ffffffffl; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0x0000003dffffffe1l); }
@Test
public void test04947() { x = 0xffffffff7fffffffl; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0xfffffff07fffffe1l); }
@Test
public void test04948() { x = 0xffffffff80000000l; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0xfffffff080000000l); }
@Test
public void test04949() { x = 0x00000001deadf00dl; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0x00000039f7101193l); }
@Test
public void test04950() { x = 0xffffffffdeadf00dl; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0xfffffffbf7101193l); }
@Test
public void test04951() { x = 0x7fffffffffffffffl; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffe1l); }
@Test
public void test04952() { x = 0x7fffffff7fffffffl; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0x7ffffff07fffffe1l); }
@Test
public void test04953() { x = 0x7fffffff80000000l; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0x7ffffff080000000l); }
@Test
public void test04954() { x = 0x7fffffffdeadf00dl; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0x7ffffffbf7101193l); }
@Test
public void test04955() { x = 0x8000000000000000l; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test04956() { x = 0xffffffffffffffffl; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffe1l); }
@Test
public void test04957() { x = 0xfffffffffffffffel; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffc2l); }
@Test
public void test04958() { x = 0xefffffffffffffffl; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0x0fffffffffffffe1l); }
@Test
public void test04959() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1fl; AssertJUnit.assertEquals("multiply", result, 0xf71011adf7101193l); }
@Test
public void test04960() { x = 0x000000007fffffffl; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0x0000007bffffff08l); }
@Test
public void test04961() { x = 0x0000000080000000l; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0x0000007c00000000l); }
@Test
public void test04962() { x = 0x00000000ffffffffl; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0x000000f7ffffff08l); }
@Test
public void test04963() { x = 0x000000017fffffffl; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0x00000173ffffff08l); }
@Test
public void test04964() { x = 0x0000000180000000l; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0x0000017400000000l); }
@Test
public void test04965() { x = 0x00000001ffffffffl; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0x000001efffffff08l); }
@Test
public void test04966() { x = 0xffffffff7fffffffl; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0xffffff83ffffff08l); }
@Test
public void test04967() { x = 0xffffffff80000000l; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0xffffff8400000000l); }
@Test
public void test04968() { x = 0x00000001deadf00dl; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0x000001cfb8808c98l); }
@Test
public void test04969() { x = 0xffffffffdeadf00dl; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0xffffffdfb8808c98l); }
@Test
public void test04970() { x = 0x7fffffffffffffffl; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff08l); }
@Test
public void test04971() { x = 0x7fffffff7fffffffl; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0xffffff83ffffff08l); }
@Test
public void test04972() { x = 0x7fffffff80000000l; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0xffffff8400000000l); }
@Test
public void test04973() { x = 0x7fffffffdeadf00dl; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0xffffffdfb8808c98l); }
@Test
public void test04974() { x = 0x8000000000000000l; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04975() { x = 0xffffffffffffffffl; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff08l); }
@Test
public void test04976() { x = 0xfffffffffffffffel; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe10l); }
@Test
public void test04977() { x = 0xefffffffffffffffl; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff08l); }
@Test
public void test04978() { x = 0xdeadf00ddeadf00dl; long result = x * 0xf8l; AssertJUnit.assertEquals("multiply", result, 0xb8808d6fb8808c98l); }
@Test
public void test04979() { x = 0x000000007fffffffl; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0x00000f7fffffe100l); }
@Test
public void test04980() { x = 0x0000000080000000l; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0x00000f8000000000l); }
@Test
public void test04981() { x = 0x00000000ffffffffl; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0x00001effffffe100l); }
@Test
public void test04982() { x = 0x000000017fffffffl; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0x00002e7fffffe100l); }
@Test
public void test04983() { x = 0x0000000180000000l; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0x00002e8000000000l); }
@Test
public void test04984() { x = 0x00000001ffffffffl; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0x00003dffffffe100l); }
@Test
public void test04985() { x = 0xffffffff7fffffffl; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0xfffff07fffffe100l); }
@Test
public void test04986() { x = 0xffffffff80000000l; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0xfffff08000000000l); }
@Test
public void test04987() { x = 0x00000001deadf00dl; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0x000039f710119300l); }
@Test
public void test04988() { x = 0xffffffffdeadf00dl; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0xfffffbf710119300l); }
@Test
public void test04989() { x = 0x7fffffffffffffffl; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe100l); }
@Test
public void test04990() { x = 0x7fffffff7fffffffl; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0xfffff07fffffe100l); }
@Test
public void test04991() { x = 0x7fffffff80000000l; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0xfffff08000000000l); }
@Test
public void test04992() { x = 0x7fffffffdeadf00dl; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0xfffffbf710119300l); }
@Test
public void test04993() { x = 0x8000000000000000l; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test04994() { x = 0xffffffffffffffffl; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe100l); }
@Test
public void test04995() { x = 0xfffffffffffffffel; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc200l); }
@Test
public void test04996() { x = 0xefffffffffffffffl; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe100l); }
@Test
public void test04997() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1f00l; AssertJUnit.assertEquals("multiply", result, 0x1011adf710119300l); }
@Test
public void test04998() { x = 0x000000007fffffffl; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe100000000l); }
@Test
public void test04999() { x = 0x0000000080000000l; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05000() { x = 0x00000000ffffffffl; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe100000000l); }
@Test
public void test05001() { x = 0x000000017fffffffl; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe100000000l); }
@Test
public void test05002() { x = 0x0000000180000000l; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05003() { x = 0x00000001ffffffffl; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe100000000l); }
@Test
public void test05004() { x = 0xffffffff7fffffffl; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe100000000l); }
@Test
public void test05005() { x = 0xffffffff80000000l; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05006() { x = 0x00000001deadf00dl; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0xf710119300000000l); }
@Test
public void test05007() { x = 0xffffffffdeadf00dl; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0xf710119300000000l); }
@Test
public void test05008() { x = 0x7fffffffffffffffl; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe100000000l); }
@Test
public void test05009() { x = 0x7fffffff7fffffffl; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe100000000l); }
@Test
public void test05010() { x = 0x7fffffff80000000l; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05011() { x = 0x7fffffffdeadf00dl; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0xf710119300000000l); }
@Test
public void test05012() { x = 0x8000000000000000l; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05013() { x = 0xffffffffffffffffl; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe100000000l); }
@Test
public void test05014() { x = 0xfffffffffffffffel; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc200000000l); }
@Test
public void test05015() { x = 0xefffffffffffffffl; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffe100000000l); }
@Test
public void test05016() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1f00000000l; AssertJUnit.assertEquals("multiply", result, 0xf710119300000000l); }
@Test
public void test05017() { x = 0x000000007fffffffl; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0800000000l); }
@Test
public void test05018() { x = 0x0000000080000000l; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05019() { x = 0x00000000ffffffffl; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0800000000l); }
@Test
public void test05020() { x = 0x000000017fffffffl; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0800000000l); }
@Test
public void test05021() { x = 0x0000000180000000l; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05022() { x = 0x00000001ffffffffl; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0800000000l); }
@Test
public void test05023() { x = 0xffffffff7fffffffl; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0800000000l); }
@Test
public void test05024() { x = 0xffffffff80000000l; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05025() { x = 0x00000001deadf00dl; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0xb8808c9800000000l); }
@Test
public void test05026() { x = 0xffffffffdeadf00dl; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0xb8808c9800000000l); }
@Test
public void test05027() { x = 0x7fffffffffffffffl; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0800000000l); }
@Test
public void test05028() { x = 0x7fffffff7fffffffl; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0800000000l); }
@Test
public void test05029() { x = 0x7fffffff80000000l; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05030() { x = 0x7fffffffdeadf00dl; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0xb8808c9800000000l); }
@Test
public void test05031() { x = 0x8000000000000000l; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05032() { x = 0xffffffffffffffffl; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0800000000l); }
@Test
public void test05033() { x = 0xfffffffffffffffel; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1000000000l); }
@Test
public void test05034() { x = 0xefffffffffffffffl; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0800000000l); }
@Test
public void test05035() { x = 0xdeadf00ddeadf00dl; long result = x * 0xf800000000l; AssertJUnit.assertEquals("multiply", result, 0xb8808c9800000000l); }
@Test
public void test05036() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0xfffffff08000001fl); }
@Test
public void test05037() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0xfffffff080000000l); }
@Test
public void test05038() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0xffffffe10000001fl); }
@Test
public void test05039() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0xffffffd18000001fl); }
@Test
public void test05040() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0xffffffd180000000l); }
@Test
public void test05041() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0xffffffc20000001fl); }
@Test
public void test05042() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0x0000000f8000001fl); }
@Test
public void test05043() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0x0000000f80000000l); }
@Test
public void test05044() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0xffffffc608efee6dl); }
@Test
public void test05045() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0x0000000408efee6dl); }
@Test
public void test05046() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0x800000000000001fl); }
@Test
public void test05047() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0x8000000f8000001fl); }
@Test
public void test05048() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0x8000000f80000000l); }
@Test
public void test05049() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0x8000000408efee6dl); }
@Test
public void test05050() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05051() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0x000000000000001fl); }
@Test
public void test05052() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0x000000000000003el); }
@Test
public void test05053() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0xf00000000000001fl); }
@Test
public void test05054() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffe1l; AssertJUnit.assertEquals("multiply", result, 0x08efee5208efee6dl); }
@Test
public void test05055() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0xffffff84000000f8l); }
@Test
public void test05056() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0xffffff8400000000l); }
@Test
public void test05057() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0xffffff08000000f8l); }
@Test
public void test05058() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8c000000f8l); }
@Test
public void test05059() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8c00000000l); }
@Test
public void test05060() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0xfffffe10000000f8l); }
@Test
public void test05061() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0x0000007c000000f8l); }
@Test
public void test05062() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0x0000007c00000000l); }
@Test
public void test05063() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0xfffffe30477f7368l); }
@Test
public void test05064() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0x00000020477f7368l); }
@Test
public void test05065() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000f8l); }
@Test
public void test05066() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0x0000007c000000f8l); }
@Test
public void test05067() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0x0000007c00000000l); }
@Test
public void test05068() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0x00000020477f7368l); }
@Test
public void test05069() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05070() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000f8l); }
@Test
public void test05071() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001f0l); }
@Test
public void test05072() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0x80000000000000f8l); }
@Test
public void test05073() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff08l; AssertJUnit.assertEquals("multiply", result, 0x477f7290477f7368l); }
@Test
public void test05074() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0xfffff08000001f00l); }
@Test
public void test05075() { x = 0x0000000080000000l; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0xfffff08000000000l); }
@Test
public void test05076() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0xffffe10000001f00l); }
@Test
public void test05077() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0xffffd18000001f00l); }
@Test
public void test05078() { x = 0x0000000180000000l; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0xffffd18000000000l); }
@Test
public void test05079() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0xffffc20000001f00l); }
@Test
public void test05080() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0x00000f8000001f00l); }
@Test
public void test05081() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0x00000f8000000000l); }
@Test
public void test05082() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0xffffc608efee6d00l); }
@Test
public void test05083() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0x00000408efee6d00l); }
@Test
public void test05084() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001f00l); }
@Test
public void test05085() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0x00000f8000001f00l); }
@Test
public void test05086() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0x00000f8000000000l); }
@Test
public void test05087() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0x00000408efee6d00l); }
@Test
public void test05088() { x = 0x8000000000000000l; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05089() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001f00l); }
@Test
public void test05090() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003e00l); }
@Test
public void test05091() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001f00l); }
@Test
public void test05092() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffe100l; AssertJUnit.assertEquals("multiply", result, 0xefee5208efee6d00l); }
@Test
public void test05093() { x = 0x000000007fffffffl; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001f00000000l); }
@Test
public void test05094() { x = 0x0000000080000000l; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05095() { x = 0x00000000ffffffffl; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001f00000000l); }
@Test
public void test05096() { x = 0x000000017fffffffl; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001f00000000l); }
@Test
public void test05097() { x = 0x0000000180000000l; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05098() { x = 0x00000001ffffffffl; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001f00000000l); }
@Test
public void test05099() { x = 0xffffffff7fffffffl; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001f00000000l); }
@Test
public void test05100() { x = 0xffffffff80000000l; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05101() { x = 0x00000001deadf00dl; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x08efee6d00000000l); }
@Test
public void test05102() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x08efee6d00000000l); }
@Test
public void test05103() { x = 0x7fffffffffffffffl; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001f00000000l); }
@Test
public void test05104() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000001f00000000l); }
@Test
public void test05105() { x = 0x7fffffff80000000l; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05106() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x08efee6d00000000l); }
@Test
public void test05107() { x = 0x8000000000000000l; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05108() { x = 0xffffffffffffffffl; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001f00000000l); }
@Test
public void test05109() { x = 0xfffffffffffffffel; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003e00000000l); }
@Test
public void test05110() { x = 0xefffffffffffffffl; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000001f00000000l); }
@Test
public void test05111() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffe100000000l; AssertJUnit.assertEquals("multiply", result, 0x08efee6d00000000l); }
@Test
public void test05112() { x = 0x000000007fffffffl; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f800000000l); }
@Test
public void test05113() { x = 0x0000000080000000l; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05114() { x = 0x00000000ffffffffl; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f800000000l); }
@Test
public void test05115() { x = 0x000000017fffffffl; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f800000000l); }
@Test
public void test05116() { x = 0x0000000180000000l; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05117() { x = 0x00000001ffffffffl; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f800000000l); }
@Test
public void test05118() { x = 0xffffffff7fffffffl; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f800000000l); }
@Test
public void test05119() { x = 0xffffffff80000000l; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05120() { x = 0x00000001deadf00dl; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x477f736800000000l); }
@Test
public void test05121() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x477f736800000000l); }
@Test
public void test05122() { x = 0x7fffffffffffffffl; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f800000000l); }
@Test
public void test05123() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f800000000l); }
@Test
public void test05124() { x = 0x7fffffff80000000l; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05125() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x477f736800000000l); }
@Test
public void test05126() { x = 0x8000000000000000l; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05127() { x = 0xffffffffffffffffl; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f800000000l); }
@Test
public void test05128() { x = 0xfffffffffffffffel; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f000000000l); }
@Test
public void test05129() { x = 0xefffffffffffffffl; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f800000000l); }
@Test
public void test05130() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff0800000000l; AssertJUnit.assertEquals("multiply", result, 0x477f736800000000l); }
@Test
public void test05131() { x = 0x000000007fffffffl; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0x000000107fffffdfl); }
@Test
public void test05132() { x = 0x0000000080000000l; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0x0000001080000000l); }
@Test
public void test05133() { x = 0x00000000ffffffffl; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0x00000020ffffffdfl); }
@Test
public void test05134() { x = 0x000000017fffffffl; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0x000000317fffffdfl); }
@Test
public void test05135() { x = 0x0000000180000000l; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0x0000003180000000l); }
@Test
public void test05136() { x = 0x00000001ffffffffl; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0x00000041ffffffdfl); }
@Test
public void test05137() { x = 0xffffffff7fffffffl; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0xffffffef7fffffdfl); }
@Test
public void test05138() { x = 0xffffffff80000000l; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0xffffffef80000000l); }
@Test
public void test05139() { x = 0x00000001deadf00dl; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0x0000003db46bf1adl); }
@Test
public void test05140() { x = 0xffffffffdeadf00dl; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0xfffffffbb46bf1adl); }
@Test
public void test05141() { x = 0x7fffffffffffffffl; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffdfl); }
@Test
public void test05142() { x = 0x7fffffff7fffffffl; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0x7fffffef7fffffdfl); }
@Test
public void test05143() { x = 0x7fffffff80000000l; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0x7fffffef80000000l); }
@Test
public void test05144() { x = 0x7fffffffdeadf00dl; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffbb46bf1adl); }
@Test
public void test05145() { x = 0x8000000000000000l; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05146() { x = 0xffffffffffffffffl; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffdfl); }
@Test
public void test05147() { x = 0xfffffffffffffffel; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffbel); }
@Test
public void test05148() { x = 0xefffffffffffffffl; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0xefffffffffffffdfl); }
@Test
public void test05149() { x = 0xdeadf00ddeadf00dl; long result = x * 0x21l; AssertJUnit.assertEquals("multiply", result, 0xb46bf1c9b46bf1adl); }
@Test
public void test05150() { x = 0x000000007fffffffl; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0x00000083fffffef8l); }
@Test
public void test05151() { x = 0x0000000080000000l; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0x0000008400000000l); }
@Test
public void test05152() { x = 0x00000000ffffffffl; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0x00000107fffffef8l); }
@Test
public void test05153() { x = 0x000000017fffffffl; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0x0000018bfffffef8l); }
@Test
public void test05154() { x = 0x0000000180000000l; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0x0000018c00000000l); }
@Test
public void test05155() { x = 0x00000001ffffffffl; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0x0000020ffffffef8l); }
@Test
public void test05156() { x = 0xffffffff7fffffffl; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0xffffff7bfffffef8l); }
@Test
public void test05157() { x = 0xffffffff80000000l; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0xffffff7c00000000l); }
@Test
public void test05158() { x = 0x00000001deadf00dl; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0x000001eda35f8d68l); }
@Test
public void test05159() { x = 0xffffffffdeadf00dl; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0xffffffdda35f8d68l); }
@Test
public void test05160() { x = 0x7fffffffffffffffl; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffef8l); }
@Test
public void test05161() { x = 0x7fffffff7fffffffl; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0xffffff7bfffffef8l); }
@Test
public void test05162() { x = 0x7fffffff80000000l; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0xffffff7c00000000l); }
@Test
public void test05163() { x = 0x7fffffffdeadf00dl; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0xffffffdda35f8d68l); }
@Test
public void test05164() { x = 0x8000000000000000l; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05165() { x = 0xffffffffffffffffl; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffef8l); }
@Test
public void test05166() { x = 0xfffffffffffffffel; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffdf0l); }
@Test
public void test05167() { x = 0xefffffffffffffffl; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffef8l); }
@Test
public void test05168() { x = 0xdeadf00ddeadf00dl; long result = x * 0x108l; AssertJUnit.assertEquals("multiply", result, 0xa35f8e4da35f8d68l); }
@Test
public void test05169() { x = 0x000000007fffffffl; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0x0000107fffffdf00l); }
@Test
public void test05170() { x = 0x0000000080000000l; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0x0000108000000000l); }
@Test
public void test05171() { x = 0x00000000ffffffffl; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0x000020ffffffdf00l); }
@Test
public void test05172() { x = 0x000000017fffffffl; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0x0000317fffffdf00l); }
@Test
public void test05173() { x = 0x0000000180000000l; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0x0000318000000000l); }
@Test
public void test05174() { x = 0x00000001ffffffffl; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0x000041ffffffdf00l); }
@Test
public void test05175() { x = 0xffffffff7fffffffl; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0xffffef7fffffdf00l); }
@Test
public void test05176() { x = 0xffffffff80000000l; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0xffffef8000000000l); }
@Test
public void test05177() { x = 0x00000001deadf00dl; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0x00003db46bf1ad00l); }
@Test
public void test05178() { x = 0xffffffffdeadf00dl; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0xfffffbb46bf1ad00l); }
@Test
public void test05179() { x = 0x7fffffffffffffffl; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdf00l); }
@Test
public void test05180() { x = 0x7fffffff7fffffffl; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0xffffef7fffffdf00l); }
@Test
public void test05181() { x = 0x7fffffff80000000l; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0xffffef8000000000l); }
@Test
public void test05182() { x = 0x7fffffffdeadf00dl; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0xfffffbb46bf1ad00l); }
@Test
public void test05183() { x = 0x8000000000000000l; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05184() { x = 0xffffffffffffffffl; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdf00l); }
@Test
public void test05185() { x = 0xfffffffffffffffel; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffbe00l); }
@Test
public void test05186() { x = 0xefffffffffffffffl; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdf00l); }
@Test
public void test05187() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2100l; AssertJUnit.assertEquals("multiply", result, 0x6bf1c9b46bf1ad00l); }
@Test
public void test05188() { x = 0x000000007fffffffl; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdf00000000l); }
@Test
public void test05189() { x = 0x0000000080000000l; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05190() { x = 0x00000000ffffffffl; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdf00000000l); }
@Test
public void test05191() { x = 0x000000017fffffffl; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdf00000000l); }
@Test
public void test05192() { x = 0x0000000180000000l; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05193() { x = 0x00000001ffffffffl; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdf00000000l); }
@Test
public void test05194() { x = 0xffffffff7fffffffl; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdf00000000l); }
@Test
public void test05195() { x = 0xffffffff80000000l; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05196() { x = 0x00000001deadf00dl; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0xb46bf1ad00000000l); }
@Test
public void test05197() { x = 0xffffffffdeadf00dl; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0xb46bf1ad00000000l); }
@Test
public void test05198() { x = 0x7fffffffffffffffl; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdf00000000l); }
@Test
public void test05199() { x = 0x7fffffff7fffffffl; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdf00000000l); }
@Test
public void test05200() { x = 0x7fffffff80000000l; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05201() { x = 0x7fffffffdeadf00dl; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0xb46bf1ad00000000l); }
@Test
public void test05202() { x = 0x8000000000000000l; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05203() { x = 0xffffffffffffffffl; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdf00000000l); }
@Test
public void test05204() { x = 0xfffffffffffffffel; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffbe00000000l); }
@Test
public void test05205() { x = 0xefffffffffffffffl; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdf00000000l); }
@Test
public void test05206() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2100000000l; AssertJUnit.assertEquals("multiply", result, 0xb46bf1ad00000000l); }
@Test
public void test05207() { x = 0x000000007fffffffl; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef800000000l); }
@Test
public void test05208() { x = 0x0000000080000000l; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05209() { x = 0x00000000ffffffffl; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef800000000l); }
@Test
public void test05210() { x = 0x000000017fffffffl; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef800000000l); }
@Test
public void test05211() { x = 0x0000000180000000l; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05212() { x = 0x00000001ffffffffl; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef800000000l); }
@Test
public void test05213() { x = 0xffffffff7fffffffl; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef800000000l); }
@Test
public void test05214() { x = 0xffffffff80000000l; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05215() { x = 0x00000001deadf00dl; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0xa35f8d6800000000l); }
@Test
public void test05216() { x = 0xffffffffdeadf00dl; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0xa35f8d6800000000l); }
@Test
public void test05217() { x = 0x7fffffffffffffffl; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef800000000l); }
@Test
public void test05218() { x = 0x7fffffff7fffffffl; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef800000000l); }
@Test
public void test05219() { x = 0x7fffffff80000000l; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05220() { x = 0x7fffffffdeadf00dl; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0xa35f8d6800000000l); }
@Test
public void test05221() { x = 0x8000000000000000l; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05222() { x = 0xffffffffffffffffl; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef800000000l); }
@Test
public void test05223() { x = 0xfffffffffffffffel; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdf000000000l); }
@Test
public void test05224() { x = 0xefffffffffffffffl; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef800000000l); }
@Test
public void test05225() { x = 0xdeadf00ddeadf00dl; long result = x * 0x10800000000l; AssertJUnit.assertEquals("multiply", result, 0xa35f8d6800000000l); }
@Test
public void test05226() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0xffffffef80000021l); }
@Test
public void test05227() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0xffffffef80000000l); }
@Test
public void test05228() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0xffffffdf00000021l); }
@Test
public void test05229() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0xffffffce80000021l); }
@Test
public void test05230() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0xffffffce80000000l); }
@Test
public void test05231() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0xffffffbe00000021l); }
@Test
public void test05232() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0x0000001080000021l); }
@Test
public void test05233() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0x0000001080000000l); }
@Test
public void test05234() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0xffffffc24b940e53l); }
@Test
public void test05235() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0x000000044b940e53l); }
@Test
public void test05236() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000021l); }
@Test
public void test05237() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0x8000001080000021l); }
@Test
public void test05238() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0x8000001080000000l); }
@Test
public void test05239() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0x800000044b940e53l); }
@Test
public void test05240() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05241() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000021l); }
@Test
public void test05242() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000042l); }
@Test
public void test05243() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0x1000000000000021l); }
@Test
public void test05244() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffdfl; AssertJUnit.assertEquals("multiply", result, 0x4b940e364b940e53l); }
@Test
public void test05245() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0xffffff7c00000108l); }
@Test
public void test05246() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0xffffff7c00000000l); }
@Test
public void test05247() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0xfffffef800000108l); }
@Test
public void test05248() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7400000108l); }
@Test
public void test05249() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7400000000l); }
@Test
public void test05250() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0xfffffdf000000108l); }
@Test
public void test05251() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0x0000008400000108l); }
@Test
public void test05252() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0x0000008400000000l); }
@Test
public void test05253() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe125ca07298l); }
@Test
public void test05254() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0x000000225ca07298l); }
@Test
public void test05255() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000108l); }
@Test
public void test05256() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0x0000008400000108l); }
@Test
public void test05257() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0x0000008400000000l); }
@Test
public void test05258() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0x000000225ca07298l); }
@Test
public void test05259() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05260() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000108l); }
@Test
public void test05261() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000210l); }
@Test
public void test05262() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000108l); }
@Test
public void test05263() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffef8l; AssertJUnit.assertEquals("multiply", result, 0x5ca071b25ca07298l); }
@Test
public void test05264() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0xffffef8000002100l); }
@Test
public void test05265() { x = 0x0000000080000000l; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0xffffef8000000000l); }
@Test
public void test05266() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0xffffdf0000002100l); }
@Test
public void test05267() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0xffffce8000002100l); }
@Test
public void test05268() { x = 0x0000000180000000l; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0xffffce8000000000l); }
@Test
public void test05269() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0xffffbe0000002100l); }
@Test
public void test05270() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0x0000108000002100l); }
@Test
public void test05271() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0x0000108000000000l); }
@Test
public void test05272() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0xffffc24b940e5300l); }
@Test
public void test05273() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0x0000044b940e5300l); }
@Test
public void test05274() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002100l); }
@Test
public void test05275() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0x0000108000002100l); }
@Test
public void test05276() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0x0000108000000000l); }
@Test
public void test05277() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0x0000044b940e5300l); }
@Test
public void test05278() { x = 0x8000000000000000l; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05279() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002100l); }
@Test
public void test05280() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004200l); }
@Test
public void test05281() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002100l); }
@Test
public void test05282() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffdf00l; AssertJUnit.assertEquals("multiply", result, 0x940e364b940e5300l); }
@Test
public void test05283() { x = 0x000000007fffffffl; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002100000000l); }
@Test
public void test05284() { x = 0x0000000080000000l; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05285() { x = 0x00000000ffffffffl; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002100000000l); }
@Test
public void test05286() { x = 0x000000017fffffffl; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002100000000l); }
@Test
public void test05287() { x = 0x0000000180000000l; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05288() { x = 0x00000001ffffffffl; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002100000000l); }
@Test
public void test05289() { x = 0xffffffff7fffffffl; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002100000000l); }
@Test
public void test05290() { x = 0xffffffff80000000l; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05291() { x = 0x00000001deadf00dl; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x4b940e5300000000l); }
@Test
public void test05292() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x4b940e5300000000l); }
@Test
public void test05293() { x = 0x7fffffffffffffffl; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002100000000l); }
@Test
public void test05294() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002100000000l); }
@Test
public void test05295() { x = 0x7fffffff80000000l; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05296() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x4b940e5300000000l); }
@Test
public void test05297() { x = 0x8000000000000000l; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05298() { x = 0xffffffffffffffffl; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002100000000l); }
@Test
public void test05299() { x = 0xfffffffffffffffel; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004200000000l); }
@Test
public void test05300() { x = 0xefffffffffffffffl; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002100000000l); }
@Test
public void test05301() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffdf00000000l; AssertJUnit.assertEquals("multiply", result, 0x4b940e5300000000l); }
@Test
public void test05302() { x = 0x000000007fffffffl; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000010800000000l); }
@Test
public void test05303() { x = 0x0000000080000000l; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05304() { x = 0x00000000ffffffffl; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000010800000000l); }
@Test
public void test05305() { x = 0x000000017fffffffl; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000010800000000l); }
@Test
public void test05306() { x = 0x0000000180000000l; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05307() { x = 0x00000001ffffffffl; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000010800000000l); }
@Test
public void test05308() { x = 0xffffffff7fffffffl; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000010800000000l); }
@Test
public void test05309() { x = 0xffffffff80000000l; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05310() { x = 0x00000001deadf00dl; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x5ca0729800000000l); }
@Test
public void test05311() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x5ca0729800000000l); }
@Test
public void test05312() { x = 0x7fffffffffffffffl; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000010800000000l); }
@Test
public void test05313() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000010800000000l); }
@Test
public void test05314() { x = 0x7fffffff80000000l; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05315() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x5ca0729800000000l); }
@Test
public void test05316() { x = 0x8000000000000000l; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05317() { x = 0xffffffffffffffffl; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000010800000000l); }
@Test
public void test05318() { x = 0xfffffffffffffffel; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000021000000000l); }
@Test
public void test05319() { x = 0xefffffffffffffffl; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000010800000000l); }
@Test
public void test05320() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffef800000000l; AssertJUnit.assertEquals("multiply", result, 0x5ca0729800000000l); }
@Test
public void test05321() { x = 0x000000007fffffffl; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0x00000010ffffffdel); }
@Test
public void test05322() { x = 0x0000000080000000l; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0x0000001100000000l); }
@Test
public void test05323() { x = 0x00000000ffffffffl; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0x00000021ffffffdel); }
@Test
public void test05324() { x = 0x000000017fffffffl; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0x00000032ffffffdel); }
@Test
public void test05325() { x = 0x0000000180000000l; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0x0000003300000000l); }
@Test
public void test05326() { x = 0x00000001ffffffffl; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0x00000043ffffffdel); }
@Test
public void test05327() { x = 0xffffffff7fffffffl; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0xffffffeeffffffdel); }
@Test
public void test05328() { x = 0xffffffff80000000l; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0xffffffef00000000l); }
@Test
public void test05329() { x = 0x00000001deadf00dl; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0x0000003f9319e1bal); }
@Test
public void test05330() { x = 0xffffffffdeadf00dl; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb9319e1bal); }
@Test
public void test05331() { x = 0x7fffffffffffffffl; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffdel); }
@Test
public void test05332() { x = 0x7fffffff7fffffffl; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0xffffffeeffffffdel); }
@Test
public void test05333() { x = 0x7fffffff80000000l; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0xffffffef00000000l); }
@Test
public void test05334() { x = 0x7fffffffdeadf00dl; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb9319e1bal); }
@Test
public void test05335() { x = 0x8000000000000000l; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05336() { x = 0xffffffffffffffffl; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffdel); }
@Test
public void test05337() { x = 0xfffffffffffffffel; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffbcl); }
@Test
public void test05338() { x = 0xefffffffffffffffl; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0xdfffffffffffffdel); }
@Test
public void test05339() { x = 0xdeadf00ddeadf00dl; long result = x * 0x22l; AssertJUnit.assertEquals("multiply", result, 0x9319e1d79319e1bal); }
@Test
public void test05340() { x = 0x000000007fffffffl; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0x00000087fffffef0l); }
@Test
public void test05341() { x = 0x0000000080000000l; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test05342() { x = 0x00000000ffffffffl; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0x0000010ffffffef0l); }
@Test
public void test05343() { x = 0x000000017fffffffl; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0x00000197fffffef0l); }
@Test
public void test05344() { x = 0x0000000180000000l; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000000l); }
@Test
public void test05345() { x = 0x00000001ffffffffl; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0x0000021ffffffef0l); }
@Test
public void test05346() { x = 0xffffffff7fffffffl; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0xffffff77fffffef0l); }
@Test
public void test05347() { x = 0xffffffff80000000l; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test05348() { x = 0x00000001deadf00dl; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0x000001fc98cf0dd0l); }
@Test
public void test05349() { x = 0xffffffffdeadf00dl; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc98cf0dd0l); }
@Test
public void test05350() { x = 0x7fffffffffffffffl; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffef0l); }
@Test
public void test05351() { x = 0x7fffffff7fffffffl; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0xffffff77fffffef0l); }
@Test
public void test05352() { x = 0x7fffffff80000000l; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test05353() { x = 0x7fffffffdeadf00dl; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc98cf0dd0l); }
@Test
public void test05354() { x = 0x8000000000000000l; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05355() { x = 0xffffffffffffffffl; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffef0l); }
@Test
public void test05356() { x = 0xfffffffffffffffel; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffde0l); }
@Test
public void test05357() { x = 0xefffffffffffffffl; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffef0l); }
@Test
public void test05358() { x = 0xdeadf00ddeadf00dl; long result = x * 0x110l; AssertJUnit.assertEquals("multiply", result, 0x98cf0ebc98cf0dd0l); }
@Test
public void test05359() { x = 0x000000007fffffffl; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0x000010ffffffde00l); }
@Test
public void test05360() { x = 0x0000000080000000l; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0x0000110000000000l); }
@Test
public void test05361() { x = 0x00000000ffffffffl; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0x000021ffffffde00l); }
@Test
public void test05362() { x = 0x000000017fffffffl; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0x000032ffffffde00l); }
@Test
public void test05363() { x = 0x0000000180000000l; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0x0000330000000000l); }
@Test
public void test05364() { x = 0x00000001ffffffffl; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0x000043ffffffde00l); }
@Test
public void test05365() { x = 0xffffffff7fffffffl; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0xffffeeffffffde00l); }
@Test
public void test05366() { x = 0xffffffff80000000l; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0xffffef0000000000l); }
@Test
public void test05367() { x = 0x00000001deadf00dl; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0x00003f9319e1ba00l); }
@Test
public void test05368() { x = 0xffffffffdeadf00dl; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0xfffffb9319e1ba00l); }
@Test
public void test05369() { x = 0x7fffffffffffffffl; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffde00l); }
@Test
public void test05370() { x = 0x7fffffff7fffffffl; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0xffffeeffffffde00l); }
@Test
public void test05371() { x = 0x7fffffff80000000l; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0xffffef0000000000l); }
@Test
public void test05372() { x = 0x7fffffffdeadf00dl; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0xfffffb9319e1ba00l); }
@Test
public void test05373() { x = 0x8000000000000000l; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05374() { x = 0xffffffffffffffffl; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffde00l); }
@Test
public void test05375() { x = 0xfffffffffffffffel; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffbc00l); }
@Test
public void test05376() { x = 0xefffffffffffffffl; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffde00l); }
@Test
public void test05377() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2200l; AssertJUnit.assertEquals("multiply", result, 0x19e1d79319e1ba00l); }
@Test
public void test05378() { x = 0x000000007fffffffl; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffde00000000l); }
@Test
public void test05379() { x = 0x0000000080000000l; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05380() { x = 0x00000000ffffffffl; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffde00000000l); }
@Test
public void test05381() { x = 0x000000017fffffffl; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffde00000000l); }
@Test
public void test05382() { x = 0x0000000180000000l; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05383() { x = 0x00000001ffffffffl; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffde00000000l); }
@Test
public void test05384() { x = 0xffffffff7fffffffl; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffde00000000l); }
@Test
public void test05385() { x = 0xffffffff80000000l; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05386() { x = 0x00000001deadf00dl; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0x9319e1ba00000000l); }
@Test
public void test05387() { x = 0xffffffffdeadf00dl; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0x9319e1ba00000000l); }
@Test
public void test05388() { x = 0x7fffffffffffffffl; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffde00000000l); }
@Test
public void test05389() { x = 0x7fffffff7fffffffl; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffde00000000l); }
@Test
public void test05390() { x = 0x7fffffff80000000l; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05391() { x = 0x7fffffffdeadf00dl; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0x9319e1ba00000000l); }
@Test
public void test05392() { x = 0x8000000000000000l; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05393() { x = 0xffffffffffffffffl; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffde00000000l); }
@Test
public void test05394() { x = 0xfffffffffffffffel; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffbc00000000l); }
@Test
public void test05395() { x = 0xefffffffffffffffl; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffde00000000l); }
@Test
public void test05396() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2200000000l; AssertJUnit.assertEquals("multiply", result, 0x9319e1ba00000000l); }
@Test
public void test05397() { x = 0x000000007fffffffl; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef000000000l); }
@Test
public void test05398() { x = 0x0000000080000000l; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05399() { x = 0x00000000ffffffffl; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef000000000l); }
@Test
public void test05400() { x = 0x000000017fffffffl; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef000000000l); }
@Test
public void test05401() { x = 0x0000000180000000l; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05402() { x = 0x00000001ffffffffl; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef000000000l); }
@Test
public void test05403() { x = 0xffffffff7fffffffl; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef000000000l); }
@Test
public void test05404() { x = 0xffffffff80000000l; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05405() { x = 0x00000001deadf00dl; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0x98cf0dd000000000l); }
@Test
public void test05406() { x = 0xffffffffdeadf00dl; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0x98cf0dd000000000l); }
@Test
public void test05407() { x = 0x7fffffffffffffffl; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef000000000l); }
@Test
public void test05408() { x = 0x7fffffff7fffffffl; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef000000000l); }
@Test
public void test05409() { x = 0x7fffffff80000000l; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05410() { x = 0x7fffffffdeadf00dl; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0x98cf0dd000000000l); }
@Test
public void test05411() { x = 0x8000000000000000l; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05412() { x = 0xffffffffffffffffl; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef000000000l); }
@Test
public void test05413() { x = 0xfffffffffffffffel; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffde000000000l); }
@Test
public void test05414() { x = 0xefffffffffffffffl; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef000000000l); }
@Test
public void test05415() { x = 0xdeadf00ddeadf00dl; long result = x * 0x11000000000l; AssertJUnit.assertEquals("multiply", result, 0x98cf0dd000000000l); }
@Test
public void test05416() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0xffffffef00000022l); }
@Test
public void test05417() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0xffffffef00000000l); }
@Test
public void test05418() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0xffffffde00000022l); }
@Test
public void test05419() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0xffffffcd00000022l); }
@Test
public void test05420() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0xffffffcd00000000l); }
@Test
public void test05421() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0xffffffbc00000022l); }
@Test
public void test05422() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0x0000001100000022l); }
@Test
public void test05423() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0x0000001100000000l); }
@Test
public void test05424() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0xffffffc06ce61e46l); }
@Test
public void test05425() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0x000000046ce61e46l); }
@Test
public void test05426() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0x0000000000000022l); }
@Test
public void test05427() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0x0000001100000022l); }
@Test
public void test05428() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0x0000001100000000l); }
@Test
public void test05429() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0x000000046ce61e46l); }
@Test
public void test05430() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05431() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0x0000000000000022l); }
@Test
public void test05432() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0x0000000000000044l); }
@Test
public void test05433() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0x2000000000000022l); }
@Test
public void test05434() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffdel; AssertJUnit.assertEquals("multiply", result, 0x6ce61e286ce61e46l); }
@Test
public void test05435() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000110l); }
@Test
public void test05436() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test05437() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0xfffffef000000110l); }
@Test
public void test05438() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000110l); }
@Test
public void test05439() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000000l); }
@Test
public void test05440() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0xfffffde000000110l); }
@Test
public void test05441() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000110l); }
@Test
public void test05442() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test05443() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0xfffffe036730f230l); }
@Test
public void test05444() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0x000000236730f230l); }
@Test
public void test05445() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000110l); }
@Test
public void test05446() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000110l); }
@Test
public void test05447() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test05448() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0x000000236730f230l); }
@Test
public void test05449() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05450() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000110l); }
@Test
public void test05451() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000220l); }
@Test
public void test05452() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000110l); }
@Test
public void test05453() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffef0l; AssertJUnit.assertEquals("multiply", result, 0x6730f1436730f230l); }
@Test
public void test05454() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0xffffef0000002200l); }
@Test
public void test05455() { x = 0x0000000080000000l; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0xffffef0000000000l); }
@Test
public void test05456() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0xffffde0000002200l); }
@Test
public void test05457() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0xffffcd0000002200l); }
@Test
public void test05458() { x = 0x0000000180000000l; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0xffffcd0000000000l); }
@Test
public void test05459() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0xffffbc0000002200l); }
@Test
public void test05460() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0x0000110000002200l); }
@Test
public void test05461() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0x0000110000000000l); }
@Test
public void test05462() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0xffffc06ce61e4600l); }
@Test
public void test05463() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0x0000046ce61e4600l); }
@Test
public void test05464() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002200l); }
@Test
public void test05465() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0x0000110000002200l); }
@Test
public void test05466() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0x0000110000000000l); }
@Test
public void test05467() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0x0000046ce61e4600l); }
@Test
public void test05468() { x = 0x8000000000000000l; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05469() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002200l); }
@Test
public void test05470() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004400l); }
@Test
public void test05471() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002200l); }
@Test
public void test05472() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffde00l; AssertJUnit.assertEquals("multiply", result, 0xe61e286ce61e4600l); }
@Test
public void test05473() { x = 0x000000007fffffffl; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002200000000l); }
@Test
public void test05474() { x = 0x0000000080000000l; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05475() { x = 0x00000000ffffffffl; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002200000000l); }
@Test
public void test05476() { x = 0x000000017fffffffl; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002200000000l); }
@Test
public void test05477() { x = 0x0000000180000000l; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05478() { x = 0x00000001ffffffffl; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002200000000l); }
@Test
public void test05479() { x = 0xffffffff7fffffffl; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002200000000l); }
@Test
public void test05480() { x = 0xffffffff80000000l; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05481() { x = 0x00000001deadf00dl; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x6ce61e4600000000l); }
@Test
public void test05482() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x6ce61e4600000000l); }
@Test
public void test05483() { x = 0x7fffffffffffffffl; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002200000000l); }
@Test
public void test05484() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002200000000l); }
@Test
public void test05485() { x = 0x7fffffff80000000l; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05486() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x6ce61e4600000000l); }
@Test
public void test05487() { x = 0x8000000000000000l; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05488() { x = 0xffffffffffffffffl; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002200000000l); }
@Test
public void test05489() { x = 0xfffffffffffffffel; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004400000000l); }
@Test
public void test05490() { x = 0xefffffffffffffffl; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002200000000l); }
@Test
public void test05491() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffde00000000l; AssertJUnit.assertEquals("multiply", result, 0x6ce61e4600000000l); }
@Test
public void test05492() { x = 0x000000007fffffffl; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011000000000l); }
@Test
public void test05493() { x = 0x0000000080000000l; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05494() { x = 0x00000000ffffffffl; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011000000000l); }
@Test
public void test05495() { x = 0x000000017fffffffl; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011000000000l); }
@Test
public void test05496() { x = 0x0000000180000000l; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05497() { x = 0x00000001ffffffffl; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011000000000l); }
@Test
public void test05498() { x = 0xffffffff7fffffffl; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011000000000l); }
@Test
public void test05499() { x = 0xffffffff80000000l; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05500() { x = 0x00000001deadf00dl; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x6730f23000000000l); }
@Test
public void test05501() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x6730f23000000000l); }
@Test
public void test05502() { x = 0x7fffffffffffffffl; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011000000000l); }
@Test
public void test05503() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011000000000l); }
@Test
public void test05504() { x = 0x7fffffff80000000l; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05505() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x6730f23000000000l); }
@Test
public void test05506() { x = 0x8000000000000000l; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05507() { x = 0xffffffffffffffffl; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011000000000l); }
@Test
public void test05508() { x = 0xfffffffffffffffel; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000022000000000l); }
@Test
public void test05509() { x = 0xefffffffffffffffl; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011000000000l); }
@Test
public void test05510() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffef000000000l; AssertJUnit.assertEquals("multiply", result, 0x6730f23000000000l); }
@Test
public void test05511() { x = 0x000000007fffffffl; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0x000000117fffffddl); }
@Test
public void test05512() { x = 0x0000000080000000l; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0x0000001180000000l); }
@Test
public void test05513() { x = 0x00000000ffffffffl; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0x00000022ffffffddl); }
@Test
public void test05514() { x = 0x000000017fffffffl; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0x000000347fffffddl); }
@Test
public void test05515() { x = 0x0000000180000000l; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0x0000003480000000l); }
@Test
public void test05516() { x = 0x00000001ffffffffl; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0x00000045ffffffddl); }
@Test
public void test05517() { x = 0xffffffff7fffffffl; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0xffffffee7fffffddl); }
@Test
public void test05518() { x = 0xffffffff80000000l; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0xffffffee80000000l); }
@Test
public void test05519() { x = 0x00000001deadf00dl; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0x0000004171c7d1c7l); }
@Test
public void test05520() { x = 0xffffffffdeadf00dl; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb71c7d1c7l); }
@Test
public void test05521() { x = 0x7fffffffffffffffl; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffddl); }
@Test
public void test05522() { x = 0x7fffffff7fffffffl; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0x7fffffee7fffffddl); }
@Test
public void test05523() { x = 0x7fffffff80000000l; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0x7fffffee80000000l); }
@Test
public void test05524() { x = 0x7fffffffdeadf00dl; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffb71c7d1c7l); }
@Test
public void test05525() { x = 0x8000000000000000l; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05526() { x = 0xffffffffffffffffl; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffddl); }
@Test
public void test05527() { x = 0xfffffffffffffffel; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffbal); }
@Test
public void test05528() { x = 0xefffffffffffffffl; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0xcfffffffffffffddl); }
@Test
public void test05529() { x = 0xdeadf00ddeadf00dl; long result = x * 0x23l; AssertJUnit.assertEquals("multiply", result, 0x71c7d1e571c7d1c7l); }
@Test
public void test05530() { x = 0x000000007fffffffl; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0x0000008bfffffee8l); }
@Test
public void test05531() { x = 0x0000000080000000l; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0x0000008c00000000l); }
@Test
public void test05532() { x = 0x00000000ffffffffl; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0x00000117fffffee8l); }
@Test
public void test05533() { x = 0x000000017fffffffl; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0x000001a3fffffee8l); }
@Test
public void test05534() { x = 0x0000000180000000l; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0x000001a400000000l); }
@Test
public void test05535() { x = 0x00000001ffffffffl; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0x0000022ffffffee8l); }
@Test
public void test05536() { x = 0xffffffff7fffffffl; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0xffffff73fffffee8l); }
@Test
public void test05537() { x = 0xffffffff80000000l; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0xffffff7400000000l); }
@Test
public void test05538() { x = 0x00000001deadf00dl; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0x0000020b8e3e8e38l); }
@Test
public void test05539() { x = 0xffffffffdeadf00dl; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0xffffffdb8e3e8e38l); }
@Test
public void test05540() { x = 0x7fffffffffffffffl; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffee8l); }
@Test
public void test05541() { x = 0x7fffffff7fffffffl; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0xffffff73fffffee8l); }
@Test
public void test05542() { x = 0x7fffffff80000000l; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0xffffff7400000000l); }
@Test
public void test05543() { x = 0x7fffffffdeadf00dl; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0xffffffdb8e3e8e38l); }
@Test
public void test05544() { x = 0x8000000000000000l; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05545() { x = 0xffffffffffffffffl; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffee8l); }
@Test
public void test05546() { x = 0xfffffffffffffffel; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffdd0l); }
@Test
public void test05547() { x = 0xefffffffffffffffl; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffee8l); }
@Test
public void test05548() { x = 0xdeadf00ddeadf00dl; long result = x * 0x118l; AssertJUnit.assertEquals("multiply", result, 0x8e3e8f2b8e3e8e38l); }
@Test
public void test05549() { x = 0x000000007fffffffl; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0x0000117fffffdd00l); }
@Test
public void test05550() { x = 0x0000000080000000l; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0x0000118000000000l); }
@Test
public void test05551() { x = 0x00000000ffffffffl; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0x000022ffffffdd00l); }
@Test
public void test05552() { x = 0x000000017fffffffl; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0x0000347fffffdd00l); }
@Test
public void test05553() { x = 0x0000000180000000l; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0x0000348000000000l); }
@Test
public void test05554() { x = 0x00000001ffffffffl; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0x000045ffffffdd00l); }
@Test
public void test05555() { x = 0xffffffff7fffffffl; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0xffffee7fffffdd00l); }
@Test
public void test05556() { x = 0xffffffff80000000l; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0xffffee8000000000l); }
@Test
public void test05557() { x = 0x00000001deadf00dl; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0x00004171c7d1c700l); }
@Test
public void test05558() { x = 0xffffffffdeadf00dl; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0xfffffb71c7d1c700l); }
@Test
public void test05559() { x = 0x7fffffffffffffffl; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdd00l); }
@Test
public void test05560() { x = 0x7fffffff7fffffffl; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0xffffee7fffffdd00l); }
@Test
public void test05561() { x = 0x7fffffff80000000l; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0xffffee8000000000l); }
@Test
public void test05562() { x = 0x7fffffffdeadf00dl; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0xfffffb71c7d1c700l); }
@Test
public void test05563() { x = 0x8000000000000000l; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05564() { x = 0xffffffffffffffffl; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdd00l); }
@Test
public void test05565() { x = 0xfffffffffffffffel; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffba00l); }
@Test
public void test05566() { x = 0xefffffffffffffffl; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdd00l); }
@Test
public void test05567() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2300l; AssertJUnit.assertEquals("multiply", result, 0xc7d1e571c7d1c700l); }
@Test
public void test05568() { x = 0x000000007fffffffl; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdd00000000l); }
@Test
public void test05569() { x = 0x0000000080000000l; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05570() { x = 0x00000000ffffffffl; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdd00000000l); }
@Test
public void test05571() { x = 0x000000017fffffffl; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdd00000000l); }
@Test
public void test05572() { x = 0x0000000180000000l; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05573() { x = 0x00000001ffffffffl; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdd00000000l); }
@Test
public void test05574() { x = 0xffffffff7fffffffl; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdd00000000l); }
@Test
public void test05575() { x = 0xffffffff80000000l; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05576() { x = 0x00000001deadf00dl; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0x71c7d1c700000000l); }
@Test
public void test05577() { x = 0xffffffffdeadf00dl; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0x71c7d1c700000000l); }
@Test
public void test05578() { x = 0x7fffffffffffffffl; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdd00000000l); }
@Test
public void test05579() { x = 0x7fffffff7fffffffl; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdd00000000l); }
@Test
public void test05580() { x = 0x7fffffff80000000l; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05581() { x = 0x7fffffffdeadf00dl; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0x71c7d1c700000000l); }
@Test
public void test05582() { x = 0x8000000000000000l; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05583() { x = 0xffffffffffffffffl; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdd00000000l); }
@Test
public void test05584() { x = 0xfffffffffffffffel; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffba00000000l); }
@Test
public void test05585() { x = 0xefffffffffffffffl; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdd00000000l); }
@Test
public void test05586() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2300000000l; AssertJUnit.assertEquals("multiply", result, 0x71c7d1c700000000l); }
@Test
public void test05587() { x = 0x000000007fffffffl; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee800000000l); }
@Test
public void test05588() { x = 0x0000000080000000l; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05589() { x = 0x00000000ffffffffl; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee800000000l); }
@Test
public void test05590() { x = 0x000000017fffffffl; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee800000000l); }
@Test
public void test05591() { x = 0x0000000180000000l; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05592() { x = 0x00000001ffffffffl; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee800000000l); }
@Test
public void test05593() { x = 0xffffffff7fffffffl; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee800000000l); }
@Test
public void test05594() { x = 0xffffffff80000000l; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05595() { x = 0x00000001deadf00dl; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0x8e3e8e3800000000l); }
@Test
public void test05596() { x = 0xffffffffdeadf00dl; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0x8e3e8e3800000000l); }
@Test
public void test05597() { x = 0x7fffffffffffffffl; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee800000000l); }
@Test
public void test05598() { x = 0x7fffffff7fffffffl; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee800000000l); }
@Test
public void test05599() { x = 0x7fffffff80000000l; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05600() { x = 0x7fffffffdeadf00dl; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0x8e3e8e3800000000l); }
@Test
public void test05601() { x = 0x8000000000000000l; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05602() { x = 0xffffffffffffffffl; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee800000000l); }
@Test
public void test05603() { x = 0xfffffffffffffffel; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd000000000l); }
@Test
public void test05604() { x = 0xefffffffffffffffl; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee800000000l); }
@Test
public void test05605() { x = 0xdeadf00ddeadf00dl; long result = x * 0x11800000000l; AssertJUnit.assertEquals("multiply", result, 0x8e3e8e3800000000l); }
@Test
public void test05606() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0xffffffee80000023l); }
@Test
public void test05607() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0xffffffee80000000l); }
@Test
public void test05608() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0xffffffdd00000023l); }
@Test
public void test05609() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0xffffffcb80000023l); }
@Test
public void test05610() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0xffffffcb80000000l); }
@Test
public void test05611() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0xffffffba00000023l); }
@Test
public void test05612() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0x0000001180000023l); }
@Test
public void test05613() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0x0000001180000000l); }
@Test
public void test05614() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0xffffffbe8e382e39l); }
@Test
public void test05615() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0x000000048e382e39l); }
@Test
public void test05616() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000023l); }
@Test
public void test05617() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0x8000001180000023l); }
@Test
public void test05618() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0x8000001180000000l); }
@Test
public void test05619() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0x800000048e382e39l); }
@Test
public void test05620() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05621() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000023l); }
@Test
public void test05622() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000046l); }
@Test
public void test05623() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0x3000000000000023l); }
@Test
public void test05624() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffddl; AssertJUnit.assertEquals("multiply", result, 0x8e382e1a8e382e39l); }
@Test
public void test05625() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0xffffff7400000118l); }
@Test
public void test05626() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0xffffff7400000000l); }
@Test
public void test05627() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0xfffffee800000118l); }
@Test
public void test05628() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5c00000118l); }
@Test
public void test05629() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5c00000000l); }
@Test
public void test05630() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd000000118l); }
@Test
public void test05631() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0x0000008c00000118l); }
@Test
public void test05632() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0x0000008c00000000l); }
@Test
public void test05633() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0xfffffdf471c171c8l); }
@Test
public void test05634() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0x0000002471c171c8l); }
@Test
public void test05635() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000118l); }
@Test
public void test05636() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0x0000008c00000118l); }
@Test
public void test05637() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0x0000008c00000000l); }
@Test
public void test05638() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0x0000002471c171c8l); }
@Test
public void test05639() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05640() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000118l); }
@Test
public void test05641() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000230l); }
@Test
public void test05642() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000118l); }
@Test
public void test05643() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffee8l; AssertJUnit.assertEquals("multiply", result, 0x71c170d471c171c8l); }
@Test
public void test05644() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0xffffee8000002300l); }
@Test
public void test05645() { x = 0x0000000080000000l; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0xffffee8000000000l); }
@Test
public void test05646() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0xffffdd0000002300l); }
@Test
public void test05647() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0xffffcb8000002300l); }
@Test
public void test05648() { x = 0x0000000180000000l; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0xffffcb8000000000l); }
@Test
public void test05649() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0xffffba0000002300l); }
@Test
public void test05650() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0x0000118000002300l); }
@Test
public void test05651() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0x0000118000000000l); }
@Test
public void test05652() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0xffffbe8e382e3900l); }
@Test
public void test05653() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0x0000048e382e3900l); }
@Test
public void test05654() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002300l); }
@Test
public void test05655() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0x0000118000002300l); }
@Test
public void test05656() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0x0000118000000000l); }
@Test
public void test05657() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0x0000048e382e3900l); }
@Test
public void test05658() { x = 0x8000000000000000l; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05659() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002300l); }
@Test
public void test05660() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004600l); }
@Test
public void test05661() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002300l); }
@Test
public void test05662() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffdd00l; AssertJUnit.assertEquals("multiply", result, 0x382e1a8e382e3900l); }
@Test
public void test05663() { x = 0x000000007fffffffl; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002300000000l); }
@Test
public void test05664() { x = 0x0000000080000000l; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05665() { x = 0x00000000ffffffffl; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002300000000l); }
@Test
public void test05666() { x = 0x000000017fffffffl; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002300000000l); }
@Test
public void test05667() { x = 0x0000000180000000l; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05668() { x = 0x00000001ffffffffl; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002300000000l); }
@Test
public void test05669() { x = 0xffffffff7fffffffl; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002300000000l); }
@Test
public void test05670() { x = 0xffffffff80000000l; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05671() { x = 0x00000001deadf00dl; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8e382e3900000000l); }
@Test
public void test05672() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8e382e3900000000l); }
@Test
public void test05673() { x = 0x7fffffffffffffffl; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002300000000l); }
@Test
public void test05674() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002300000000l); }
@Test
public void test05675() { x = 0x7fffffff80000000l; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05676() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8e382e3900000000l); }
@Test
public void test05677() { x = 0x8000000000000000l; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05678() { x = 0xffffffffffffffffl; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002300000000l); }
@Test
public void test05679() { x = 0xfffffffffffffffel; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004600000000l); }
@Test
public void test05680() { x = 0xefffffffffffffffl; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002300000000l); }
@Test
public void test05681() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffdd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8e382e3900000000l); }
@Test
public void test05682() { x = 0x000000007fffffffl; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011800000000l); }
@Test
public void test05683() { x = 0x0000000080000000l; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05684() { x = 0x00000000ffffffffl; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011800000000l); }
@Test
public void test05685() { x = 0x000000017fffffffl; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011800000000l); }
@Test
public void test05686() { x = 0x0000000180000000l; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05687() { x = 0x00000001ffffffffl; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011800000000l); }
@Test
public void test05688() { x = 0xffffffff7fffffffl; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011800000000l); }
@Test
public void test05689() { x = 0xffffffff80000000l; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05690() { x = 0x00000001deadf00dl; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x71c171c800000000l); }
@Test
public void test05691() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x71c171c800000000l); }
@Test
public void test05692() { x = 0x7fffffffffffffffl; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011800000000l); }
@Test
public void test05693() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011800000000l); }
@Test
public void test05694() { x = 0x7fffffff80000000l; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05695() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x71c171c800000000l); }
@Test
public void test05696() { x = 0x8000000000000000l; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05697() { x = 0xffffffffffffffffl; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011800000000l); }
@Test
public void test05698() { x = 0xfffffffffffffffel; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000023000000000l); }
@Test
public void test05699() { x = 0xefffffffffffffffl; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011800000000l); }
@Test
public void test05700() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffee800000000l; AssertJUnit.assertEquals("multiply", result, 0x71c171c800000000l); }
@Test
public void test05701() { x = 0x000000007fffffffl; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0x00000011ffffffdcl); }
@Test
public void test05702() { x = 0x0000000080000000l; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0x0000001200000000l); }
@Test
public void test05703() { x = 0x00000000ffffffffl; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0x00000023ffffffdcl); }
@Test
public void test05704() { x = 0x000000017fffffffl; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0x00000035ffffffdcl); }
@Test
public void test05705() { x = 0x0000000180000000l; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0x0000003600000000l); }
@Test
public void test05706() { x = 0x00000001ffffffffl; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0x00000047ffffffdcl); }
@Test
public void test05707() { x = 0xffffffff7fffffffl; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0xffffffedffffffdcl); }
@Test
public void test05708() { x = 0xffffffff80000000l; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000000l); }
@Test
public void test05709() { x = 0x00000001deadf00dl; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0x000000435075c1d4l); }
@Test
public void test05710() { x = 0xffffffffdeadf00dl; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb5075c1d4l); }
@Test
public void test05711() { x = 0x7fffffffffffffffl; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffdcl); }
@Test
public void test05712() { x = 0x7fffffff7fffffffl; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0xffffffedffffffdcl); }
@Test
public void test05713() { x = 0x7fffffff80000000l; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000000l); }
@Test
public void test05714() { x = 0x7fffffffdeadf00dl; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb5075c1d4l); }
@Test
public void test05715() { x = 0x8000000000000000l; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05716() { x = 0xffffffffffffffffl; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffdcl); }
@Test
public void test05717() { x = 0xfffffffffffffffel; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffb8l); }
@Test
public void test05718() { x = 0xefffffffffffffffl; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0xbfffffffffffffdcl); }
@Test
public void test05719() { x = 0xdeadf00ddeadf00dl; long result = x * 0x24l; AssertJUnit.assertEquals("multiply", result, 0x5075c1f35075c1d4l); }
@Test
public void test05720() { x = 0x000000007fffffffl; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0x0000008ffffffee0l); }
@Test
public void test05721() { x = 0x0000000080000000l; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test05722() { x = 0x00000000ffffffffl; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0x0000011ffffffee0l); }
@Test
public void test05723() { x = 0x000000017fffffffl; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0x000001affffffee0l); }
@Test
public void test05724() { x = 0x0000000180000000l; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0x000001b000000000l); }
@Test
public void test05725() { x = 0x00000001ffffffffl; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0x0000023ffffffee0l); }
@Test
public void test05726() { x = 0xffffffff7fffffffl; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0xffffff6ffffffee0l); }
@Test
public void test05727() { x = 0xffffffff80000000l; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test05728() { x = 0x00000001deadf00dl; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0x0000021a83ae0ea0l); }
@Test
public void test05729() { x = 0xffffffffdeadf00dl; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0xffffffda83ae0ea0l); }
@Test
public void test05730() { x = 0x7fffffffffffffffl; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffee0l); }
@Test
public void test05731() { x = 0x7fffffff7fffffffl; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0xffffff6ffffffee0l); }
@Test
public void test05732() { x = 0x7fffffff80000000l; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test05733() { x = 0x7fffffffdeadf00dl; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0xffffffda83ae0ea0l); }
@Test
public void test05734() { x = 0x8000000000000000l; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05735() { x = 0xffffffffffffffffl; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffee0l); }
@Test
public void test05736() { x = 0xfffffffffffffffel; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffdc0l); }
@Test
public void test05737() { x = 0xefffffffffffffffl; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffee0l); }
@Test
public void test05738() { x = 0xdeadf00ddeadf00dl; long result = x * 0x120l; AssertJUnit.assertEquals("multiply", result, 0x83ae0f9a83ae0ea0l); }
@Test
public void test05739() { x = 0x000000007fffffffl; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0x000011ffffffdc00l); }
@Test
public void test05740() { x = 0x0000000080000000l; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0x0000120000000000l); }
@Test
public void test05741() { x = 0x00000000ffffffffl; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0x000023ffffffdc00l); }
@Test
public void test05742() { x = 0x000000017fffffffl; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0x000035ffffffdc00l); }
@Test
public void test05743() { x = 0x0000000180000000l; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0x0000360000000000l); }
@Test
public void test05744() { x = 0x00000001ffffffffl; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0x000047ffffffdc00l); }
@Test
public void test05745() { x = 0xffffffff7fffffffl; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0xffffedffffffdc00l); }
@Test
public void test05746() { x = 0xffffffff80000000l; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0xffffee0000000000l); }
@Test
public void test05747() { x = 0x00000001deadf00dl; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0x0000435075c1d400l); }
@Test
public void test05748() { x = 0xffffffffdeadf00dl; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0xfffffb5075c1d400l); }
@Test
public void test05749() { x = 0x7fffffffffffffffl; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdc00l); }
@Test
public void test05750() { x = 0x7fffffff7fffffffl; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0xffffedffffffdc00l); }
@Test
public void test05751() { x = 0x7fffffff80000000l; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0xffffee0000000000l); }
@Test
public void test05752() { x = 0x7fffffffdeadf00dl; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0xfffffb5075c1d400l); }
@Test
public void test05753() { x = 0x8000000000000000l; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05754() { x = 0xffffffffffffffffl; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdc00l); }
@Test
public void test05755() { x = 0xfffffffffffffffel; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb800l); }
@Test
public void test05756() { x = 0xefffffffffffffffl; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdc00l); }
@Test
public void test05757() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2400l; AssertJUnit.assertEquals("multiply", result, 0x75c1f35075c1d400l); }
@Test
public void test05758() { x = 0x000000007fffffffl; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test05759() { x = 0x0000000080000000l; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05760() { x = 0x00000000ffffffffl; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test05761() { x = 0x000000017fffffffl; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test05762() { x = 0x0000000180000000l; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05763() { x = 0x00000001ffffffffl; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test05764() { x = 0xffffffff7fffffffl; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test05765() { x = 0xffffffff80000000l; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05766() { x = 0x00000001deadf00dl; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0x5075c1d400000000l); }
@Test
public void test05767() { x = 0xffffffffdeadf00dl; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0x5075c1d400000000l); }
@Test
public void test05768() { x = 0x7fffffffffffffffl; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test05769() { x = 0x7fffffff7fffffffl; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test05770() { x = 0x7fffffff80000000l; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05771() { x = 0x7fffffffdeadf00dl; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0x5075c1d400000000l); }
@Test
public void test05772() { x = 0x8000000000000000l; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05773() { x = 0xffffffffffffffffl; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test05774() { x = 0xfffffffffffffffel; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000000l); }
@Test
public void test05775() { x = 0xefffffffffffffffl; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000000l); }
@Test
public void test05776() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2400000000l; AssertJUnit.assertEquals("multiply", result, 0x5075c1d400000000l); }
@Test
public void test05777() { x = 0x000000007fffffffl; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee000000000l); }
@Test
public void test05778() { x = 0x0000000080000000l; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05779() { x = 0x00000000ffffffffl; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee000000000l); }
@Test
public void test05780() { x = 0x000000017fffffffl; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee000000000l); }
@Test
public void test05781() { x = 0x0000000180000000l; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05782() { x = 0x00000001ffffffffl; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee000000000l); }
@Test
public void test05783() { x = 0xffffffff7fffffffl; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee000000000l); }
@Test
public void test05784() { x = 0xffffffff80000000l; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05785() { x = 0x00000001deadf00dl; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0x83ae0ea000000000l); }
@Test
public void test05786() { x = 0xffffffffdeadf00dl; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0x83ae0ea000000000l); }
@Test
public void test05787() { x = 0x7fffffffffffffffl; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee000000000l); }
@Test
public void test05788() { x = 0x7fffffff7fffffffl; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee000000000l); }
@Test
public void test05789() { x = 0x7fffffff80000000l; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05790() { x = 0x7fffffffdeadf00dl; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0x83ae0ea000000000l); }
@Test
public void test05791() { x = 0x8000000000000000l; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05792() { x = 0xffffffffffffffffl; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee000000000l); }
@Test
public void test05793() { x = 0xfffffffffffffffel; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdc000000000l); }
@Test
public void test05794() { x = 0xefffffffffffffffl; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffee000000000l); }
@Test
public void test05795() { x = 0xdeadf00ddeadf00dl; long result = x * 0x12000000000l; AssertJUnit.assertEquals("multiply", result, 0x83ae0ea000000000l); }
@Test
public void test05796() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000024l); }
@Test
public void test05797() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0xffffffee00000000l); }
@Test
public void test05798() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0xffffffdc00000024l); }
@Test
public void test05799() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0xffffffca00000024l); }
@Test
public void test05800() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0xffffffca00000000l); }
@Test
public void test05801() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0xffffffb800000024l); }
@Test
public void test05802() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0x0000001200000024l); }
@Test
public void test05803() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0x0000001200000000l); }
@Test
public void test05804() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0xffffffbcaf8a3e2cl); }
@Test
public void test05805() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0x00000004af8a3e2cl); }
@Test
public void test05806() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000024l); }
@Test
public void test05807() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0x0000001200000024l); }
@Test
public void test05808() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0x0000001200000000l); }
@Test
public void test05809() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0x00000004af8a3e2cl); }
@Test
public void test05810() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05811() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000024l); }
@Test
public void test05812() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000048l); }
@Test
public void test05813() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0x4000000000000024l); }
@Test
public void test05814() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffdcl; AssertJUnit.assertEquals("multiply", result, 0xaf8a3e0caf8a3e2cl); }
@Test
public void test05815() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000120l); }
@Test
public void test05816() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test05817() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0xfffffee000000120l); }
@Test
public void test05818() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5000000120l); }
@Test
public void test05819() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5000000000l); }
@Test
public void test05820() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0xfffffdc000000120l); }
@Test
public void test05821() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000120l); }
@Test
public void test05822() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test05823() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0xfffffde57c51f160l); }
@Test
public void test05824() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0x000000257c51f160l); }
@Test
public void test05825() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000120l); }
@Test
public void test05826() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000120l); }
@Test
public void test05827() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test05828() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0x000000257c51f160l); }
@Test
public void test05829() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05830() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000120l); }
@Test
public void test05831() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000240l); }
@Test
public void test05832() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000120l); }
@Test
public void test05833() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffee0l; AssertJUnit.assertEquals("multiply", result, 0x7c51f0657c51f160l); }
@Test
public void test05834() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0xffffee0000002400l); }
@Test
public void test05835() { x = 0x0000000080000000l; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0xffffee0000000000l); }
@Test
public void test05836() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0xffffdc0000002400l); }
@Test
public void test05837() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0xffffca0000002400l); }
@Test
public void test05838() { x = 0x0000000180000000l; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0xffffca0000000000l); }
@Test
public void test05839() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0xffffb80000002400l); }
@Test
public void test05840() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0x0000120000002400l); }
@Test
public void test05841() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0x0000120000000000l); }
@Test
public void test05842() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0xffffbcaf8a3e2c00l); }
@Test
public void test05843() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0x000004af8a3e2c00l); }
@Test
public void test05844() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002400l); }
@Test
public void test05845() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0x0000120000002400l); }
@Test
public void test05846() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0x0000120000000000l); }
@Test
public void test05847() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0x000004af8a3e2c00l); }
@Test
public void test05848() { x = 0x8000000000000000l; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05849() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002400l); }
@Test
public void test05850() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004800l); }
@Test
public void test05851() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002400l); }
@Test
public void test05852() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffdc00l; AssertJUnit.assertEquals("multiply", result, 0x8a3e0caf8a3e2c00l); }
@Test
public void test05853() { x = 0x000000007fffffffl; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test05854() { x = 0x0000000080000000l; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05855() { x = 0x00000000ffffffffl; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test05856() { x = 0x000000017fffffffl; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test05857() { x = 0x0000000180000000l; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05858() { x = 0x00000001ffffffffl; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test05859() { x = 0xffffffff7fffffffl; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test05860() { x = 0xffffffff80000000l; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05861() { x = 0x00000001deadf00dl; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0xaf8a3e2c00000000l); }
@Test
public void test05862() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0xaf8a3e2c00000000l); }
@Test
public void test05863() { x = 0x7fffffffffffffffl; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test05864() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test05865() { x = 0x7fffffff80000000l; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05866() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0xaf8a3e2c00000000l); }
@Test
public void test05867() { x = 0x8000000000000000l; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05868() { x = 0xffffffffffffffffl; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test05869() { x = 0xfffffffffffffffel; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004800000000l); }
@Test
public void test05870() { x = 0xefffffffffffffffl; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002400000000l); }
@Test
public void test05871() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffdc00000000l; AssertJUnit.assertEquals("multiply", result, 0xaf8a3e2c00000000l); }
@Test
public void test05872() { x = 0x000000007fffffffl; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012000000000l); }
@Test
public void test05873() { x = 0x0000000080000000l; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05874() { x = 0x00000000ffffffffl; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012000000000l); }
@Test
public void test05875() { x = 0x000000017fffffffl; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012000000000l); }
@Test
public void test05876() { x = 0x0000000180000000l; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05877() { x = 0x00000001ffffffffl; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012000000000l); }
@Test
public void test05878() { x = 0xffffffff7fffffffl; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012000000000l); }
@Test
public void test05879() { x = 0xffffffff80000000l; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05880() { x = 0x00000001deadf00dl; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x7c51f16000000000l); }
@Test
public void test05881() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x7c51f16000000000l); }
@Test
public void test05882() { x = 0x7fffffffffffffffl; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012000000000l); }
@Test
public void test05883() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012000000000l); }
@Test
public void test05884() { x = 0x7fffffff80000000l; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05885() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x7c51f16000000000l); }
@Test
public void test05886() { x = 0x8000000000000000l; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05887() { x = 0xffffffffffffffffl; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012000000000l); }
@Test
public void test05888() { x = 0xfffffffffffffffel; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000024000000000l); }
@Test
public void test05889() { x = 0xefffffffffffffffl; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012000000000l); }
@Test
public void test05890() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffee000000000l; AssertJUnit.assertEquals("multiply", result, 0x7c51f16000000000l); }
@Test
public void test05891() { x = 0x000000007fffffffl; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0x000000127fffffdbl); }
@Test
public void test05892() { x = 0x0000000080000000l; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0x0000001280000000l); }
@Test
public void test05893() { x = 0x00000000ffffffffl; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0x00000024ffffffdbl); }
@Test
public void test05894() { x = 0x000000017fffffffl; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0x000000377fffffdbl); }
@Test
public void test05895() { x = 0x0000000180000000l; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0x0000003780000000l); }
@Test
public void test05896() { x = 0x00000001ffffffffl; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0x00000049ffffffdbl); }
@Test
public void test05897() { x = 0xffffffff7fffffffl; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0xffffffed7fffffdbl); }
@Test
public void test05898() { x = 0xffffffff80000000l; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0xffffffed80000000l); }
@Test
public void test05899() { x = 0x00000001deadf00dl; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0x000000452f23b1e1l); }
@Test
public void test05900() { x = 0xffffffffdeadf00dl; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0xfffffffb2f23b1e1l); }
@Test
public void test05901() { x = 0x7fffffffffffffffl; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffdbl); }
@Test
public void test05902() { x = 0x7fffffff7fffffffl; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0x7fffffed7fffffdbl); }
@Test
public void test05903() { x = 0x7fffffff80000000l; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0x7fffffed80000000l); }
@Test
public void test05904() { x = 0x7fffffffdeadf00dl; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffb2f23b1e1l); }
@Test
public void test05905() { x = 0x8000000000000000l; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05906() { x = 0xffffffffffffffffl; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffdbl); }
@Test
public void test05907() { x = 0xfffffffffffffffel; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffb6l); }
@Test
public void test05908() { x = 0xefffffffffffffffl; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0xafffffffffffffdbl); }
@Test
public void test05909() { x = 0xdeadf00ddeadf00dl; long result = x * 0x25l; AssertJUnit.assertEquals("multiply", result, 0x2f23b2012f23b1e1l); }
@Test
public void test05910() { x = 0x000000007fffffffl; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0x00000093fffffed8l); }
@Test
public void test05911() { x = 0x0000000080000000l; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0x0000009400000000l); }
@Test
public void test05912() { x = 0x00000000ffffffffl; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0x00000127fffffed8l); }
@Test
public void test05913() { x = 0x000000017fffffffl; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0x000001bbfffffed8l); }
@Test
public void test05914() { x = 0x0000000180000000l; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0x000001bc00000000l); }
@Test
public void test05915() { x = 0x00000001ffffffffl; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0x0000024ffffffed8l); }
@Test
public void test05916() { x = 0xffffffff7fffffffl; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0xffffff6bfffffed8l); }
@Test
public void test05917() { x = 0xffffffff80000000l; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0xffffff6c00000000l); }
@Test
public void test05918() { x = 0x00000001deadf00dl; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0x00000229791d8f08l); }
@Test
public void test05919() { x = 0xffffffffdeadf00dl; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0xffffffd9791d8f08l); }
@Test
public void test05920() { x = 0x7fffffffffffffffl; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffed8l); }
@Test
public void test05921() { x = 0x7fffffff7fffffffl; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0xffffff6bfffffed8l); }
@Test
public void test05922() { x = 0x7fffffff80000000l; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0xffffff6c00000000l); }
@Test
public void test05923() { x = 0x7fffffffdeadf00dl; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0xffffffd9791d8f08l); }
@Test
public void test05924() { x = 0x8000000000000000l; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05925() { x = 0xffffffffffffffffl; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffed8l); }
@Test
public void test05926() { x = 0xfffffffffffffffel; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffdb0l); }
@Test
public void test05927() { x = 0xefffffffffffffffl; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffed8l); }
@Test
public void test05928() { x = 0xdeadf00ddeadf00dl; long result = x * 0x128l; AssertJUnit.assertEquals("multiply", result, 0x791d9009791d8f08l); }
@Test
public void test05929() { x = 0x000000007fffffffl; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0x0000127fffffdb00l); }
@Test
public void test05930() { x = 0x0000000080000000l; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0x0000128000000000l); }
@Test
public void test05931() { x = 0x00000000ffffffffl; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0x000024ffffffdb00l); }
@Test
public void test05932() { x = 0x000000017fffffffl; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0x0000377fffffdb00l); }
@Test
public void test05933() { x = 0x0000000180000000l; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0x0000378000000000l); }
@Test
public void test05934() { x = 0x00000001ffffffffl; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0x000049ffffffdb00l); }
@Test
public void test05935() { x = 0xffffffff7fffffffl; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0xffffed7fffffdb00l); }
@Test
public void test05936() { x = 0xffffffff80000000l; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0xffffed8000000000l); }
@Test
public void test05937() { x = 0x00000001deadf00dl; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0x0000452f23b1e100l); }
@Test
public void test05938() { x = 0xffffffffdeadf00dl; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0xfffffb2f23b1e100l); }
@Test
public void test05939() { x = 0x7fffffffffffffffl; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdb00l); }
@Test
public void test05940() { x = 0x7fffffff7fffffffl; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0xffffed7fffffdb00l); }
@Test
public void test05941() { x = 0x7fffffff80000000l; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0xffffed8000000000l); }
@Test
public void test05942() { x = 0x7fffffffdeadf00dl; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0xfffffb2f23b1e100l); }
@Test
public void test05943() { x = 0x8000000000000000l; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05944() { x = 0xffffffffffffffffl; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdb00l); }
@Test
public void test05945() { x = 0xfffffffffffffffel; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb600l); }
@Test
public void test05946() { x = 0xefffffffffffffffl; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdb00l); }
@Test
public void test05947() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2500l; AssertJUnit.assertEquals("multiply", result, 0x23b2012f23b1e100l); }
@Test
public void test05948() { x = 0x000000007fffffffl; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdb00000000l); }
@Test
public void test05949() { x = 0x0000000080000000l; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05950() { x = 0x00000000ffffffffl; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdb00000000l); }
@Test
public void test05951() { x = 0x000000017fffffffl; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdb00000000l); }
@Test
public void test05952() { x = 0x0000000180000000l; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05953() { x = 0x00000001ffffffffl; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdb00000000l); }
@Test
public void test05954() { x = 0xffffffff7fffffffl; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdb00000000l); }
@Test
public void test05955() { x = 0xffffffff80000000l; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05956() { x = 0x00000001deadf00dl; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0x2f23b1e100000000l); }
@Test
public void test05957() { x = 0xffffffffdeadf00dl; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0x2f23b1e100000000l); }
@Test
public void test05958() { x = 0x7fffffffffffffffl; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdb00000000l); }
@Test
public void test05959() { x = 0x7fffffff7fffffffl; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdb00000000l); }
@Test
public void test05960() { x = 0x7fffffff80000000l; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test05961() { x = 0x7fffffffdeadf00dl; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0x2f23b1e100000000l); }
@Test
public void test05962() { x = 0x8000000000000000l; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05963() { x = 0xffffffffffffffffl; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdb00000000l); }
@Test
public void test05964() { x = 0xfffffffffffffffel; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb600000000l); }
@Test
public void test05965() { x = 0xefffffffffffffffl; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffdb00000000l); }
@Test
public void test05966() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2500000000l; AssertJUnit.assertEquals("multiply", result, 0x2f23b1e100000000l); }
@Test
public void test05967() { x = 0x000000007fffffffl; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffed800000000l); }
@Test
public void test05968() { x = 0x0000000080000000l; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05969() { x = 0x00000000ffffffffl; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffed800000000l); }
@Test
public void test05970() { x = 0x000000017fffffffl; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffed800000000l); }
@Test
public void test05971() { x = 0x0000000180000000l; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05972() { x = 0x00000001ffffffffl; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffed800000000l); }
@Test
public void test05973() { x = 0xffffffff7fffffffl; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffed800000000l); }
@Test
public void test05974() { x = 0xffffffff80000000l; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05975() { x = 0x00000001deadf00dl; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0x791d8f0800000000l); }
@Test
public void test05976() { x = 0xffffffffdeadf00dl; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0x791d8f0800000000l); }
@Test
public void test05977() { x = 0x7fffffffffffffffl; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffed800000000l); }
@Test
public void test05978() { x = 0x7fffffff7fffffffl; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffed800000000l); }
@Test
public void test05979() { x = 0x7fffffff80000000l; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05980() { x = 0x7fffffffdeadf00dl; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0x791d8f0800000000l); }
@Test
public void test05981() { x = 0x8000000000000000l; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test05982() { x = 0xffffffffffffffffl; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffed800000000l); }
@Test
public void test05983() { x = 0xfffffffffffffffel; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb000000000l); }
@Test
public void test05984() { x = 0xefffffffffffffffl; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffed800000000l); }
@Test
public void test05985() { x = 0xdeadf00ddeadf00dl; long result = x * 0x12800000000l; AssertJUnit.assertEquals("multiply", result, 0x791d8f0800000000l); }
@Test
public void test05986() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0xffffffed80000025l); }
@Test
public void test05987() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0xffffffed80000000l); }
@Test
public void test05988() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0xffffffdb00000025l); }
@Test
public void test05989() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0xffffffc880000025l); }
@Test
public void test05990() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0xffffffc880000000l); }
@Test
public void test05991() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0xffffffb600000025l); }
@Test
public void test05992() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0x0000001280000025l); }
@Test
public void test05993() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0x0000001280000000l); }
@Test
public void test05994() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0xffffffbad0dc4e1fl); }
@Test
public void test05995() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0x00000004d0dc4e1fl); }
@Test
public void test05996() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000025l); }
@Test
public void test05997() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0x8000001280000025l); }
@Test
public void test05998() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0x8000001280000000l); }
@Test
public void test05999() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0x80000004d0dc4e1fl); }
@Test
public void test06000() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06001() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000025l); }
@Test
public void test06002() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0x000000000000004al); }
@Test
public void test06003() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0x5000000000000025l); }
@Test
public void test06004() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffdbl; AssertJUnit.assertEquals("multiply", result, 0xd0dc4dfed0dc4e1fl); }
@Test
public void test06005() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0xffffff6c00000128l); }
@Test
public void test06006() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0xffffff6c00000000l); }
@Test
public void test06007() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0xfffffed800000128l); }
@Test
public void test06008() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4400000128l); }
@Test
public void test06009() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4400000000l); }
@Test
public void test06010() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb000000128l); }
@Test
public void test06011() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0x0000009400000128l); }
@Test
public void test06012() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0x0000009400000000l); }
@Test
public void test06013() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd686e270f8l); }
@Test
public void test06014() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0x0000002686e270f8l); }
@Test
public void test06015() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000128l); }
@Test
public void test06016() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0x0000009400000128l); }
@Test
public void test06017() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0x0000009400000000l); }
@Test
public void test06018() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0x0000002686e270f8l); }
@Test
public void test06019() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06020() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000128l); }
@Test
public void test06021() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000250l); }
@Test
public void test06022() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000128l); }
@Test
public void test06023() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffed8l; AssertJUnit.assertEquals("multiply", result, 0x86e26ff686e270f8l); }
@Test
public void test06024() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0xffffed8000002500l); }
@Test
public void test06025() { x = 0x0000000080000000l; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0xffffed8000000000l); }
@Test
public void test06026() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0xffffdb0000002500l); }
@Test
public void test06027() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0xffffc88000002500l); }
@Test
public void test06028() { x = 0x0000000180000000l; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0xffffc88000000000l); }
@Test
public void test06029() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0xffffb60000002500l); }
@Test
public void test06030() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0x0000128000002500l); }
@Test
public void test06031() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0x0000128000000000l); }
@Test
public void test06032() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0xffffbad0dc4e1f00l); }
@Test
public void test06033() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0x000004d0dc4e1f00l); }
@Test
public void test06034() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002500l); }
@Test
public void test06035() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0x0000128000002500l); }
@Test
public void test06036() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0x0000128000000000l); }
@Test
public void test06037() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0x000004d0dc4e1f00l); }
@Test
public void test06038() { x = 0x8000000000000000l; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06039() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002500l); }
@Test
public void test06040() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004a00l); }
@Test
public void test06041() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002500l); }
@Test
public void test06042() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffdb00l; AssertJUnit.assertEquals("multiply", result, 0xdc4dfed0dc4e1f00l); }
@Test
public void test06043() { x = 0x000000007fffffffl; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002500000000l); }
@Test
public void test06044() { x = 0x0000000080000000l; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06045() { x = 0x00000000ffffffffl; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002500000000l); }
@Test
public void test06046() { x = 0x000000017fffffffl; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002500000000l); }
@Test
public void test06047() { x = 0x0000000180000000l; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06048() { x = 0x00000001ffffffffl; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002500000000l); }
@Test
public void test06049() { x = 0xffffffff7fffffffl; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002500000000l); }
@Test
public void test06050() { x = 0xffffffff80000000l; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06051() { x = 0x00000001deadf00dl; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0xd0dc4e1f00000000l); }
@Test
public void test06052() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0xd0dc4e1f00000000l); }
@Test
public void test06053() { x = 0x7fffffffffffffffl; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002500000000l); }
@Test
public void test06054() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002500000000l); }
@Test
public void test06055() { x = 0x7fffffff80000000l; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06056() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0xd0dc4e1f00000000l); }
@Test
public void test06057() { x = 0x8000000000000000l; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06058() { x = 0xffffffffffffffffl; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002500000000l); }
@Test
public void test06059() { x = 0xfffffffffffffffel; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004a00000000l); }
@Test
public void test06060() { x = 0xefffffffffffffffl; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002500000000l); }
@Test
public void test06061() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffdb00000000l; AssertJUnit.assertEquals("multiply", result, 0xd0dc4e1f00000000l); }
@Test
public void test06062() { x = 0x000000007fffffffl; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012800000000l); }
@Test
public void test06063() { x = 0x0000000080000000l; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06064() { x = 0x00000000ffffffffl; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012800000000l); }
@Test
public void test06065() { x = 0x000000017fffffffl; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012800000000l); }
@Test
public void test06066() { x = 0x0000000180000000l; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06067() { x = 0x00000001ffffffffl; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012800000000l); }
@Test
public void test06068() { x = 0xffffffff7fffffffl; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012800000000l); }
@Test
public void test06069() { x = 0xffffffff80000000l; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06070() { x = 0x00000001deadf00dl; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x86e270f800000000l); }
@Test
public void test06071() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x86e270f800000000l); }
@Test
public void test06072() { x = 0x7fffffffffffffffl; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012800000000l); }
@Test
public void test06073() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012800000000l); }
@Test
public void test06074() { x = 0x7fffffff80000000l; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06075() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x86e270f800000000l); }
@Test
public void test06076() { x = 0x8000000000000000l; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06077() { x = 0xffffffffffffffffl; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012800000000l); }
@Test
public void test06078() { x = 0xfffffffffffffffel; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025000000000l); }
@Test
public void test06079() { x = 0xefffffffffffffffl; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000012800000000l); }
@Test
public void test06080() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffed800000000l; AssertJUnit.assertEquals("multiply", result, 0x86e270f800000000l); }
@Test
public void test06081() { x = 0x000000007fffffffl; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0x000000147fffffd7l); }
@Test
public void test06082() { x = 0x0000000080000000l; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0x0000001480000000l); }
@Test
public void test06083() { x = 0x00000000ffffffffl; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0x00000028ffffffd7l); }
@Test
public void test06084() { x = 0x000000017fffffffl; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0x0000003d7fffffd7l); }
@Test
public void test06085() { x = 0x0000000180000000l; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0x0000003d80000000l); }
@Test
public void test06086() { x = 0x00000001ffffffffl; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0x00000051ffffffd7l); }
@Test
public void test06087() { x = 0xffffffff7fffffffl; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0xffffffeb7fffffd7l); }
@Test
public void test06088() { x = 0xffffffff80000000l; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0xffffffeb80000000l); }
@Test
public void test06089() { x = 0x00000001deadf00dl; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0x0000004ca9db7215l); }
@Test
public void test06090() { x = 0xffffffffdeadf00dl; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0xfffffffaa9db7215l); }
@Test
public void test06091() { x = 0x7fffffffffffffffl; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffd7l); }
@Test
public void test06092() { x = 0x7fffffff7fffffffl; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0x7fffffeb7fffffd7l); }
@Test
public void test06093() { x = 0x7fffffff80000000l; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0x7fffffeb80000000l); }
@Test
public void test06094() { x = 0x7fffffffdeadf00dl; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffaa9db7215l); }
@Test
public void test06095() { x = 0x8000000000000000l; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06096() { x = 0xffffffffffffffffl; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd7l); }
@Test
public void test06097() { x = 0xfffffffffffffffel; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffael); }
@Test
public void test06098() { x = 0xefffffffffffffffl; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0x6fffffffffffffd7l); }
@Test
public void test06099() { x = 0xdeadf00ddeadf00dl; long result = x * 0x29l; AssertJUnit.assertEquals("multiply", result, 0xa9db7238a9db7215l); }
@Test
public void test06100() { x = 0x000000007fffffffl; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0x000000a3fffffeb8l); }
@Test
public void test06101() { x = 0x0000000080000000l; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0x000000a400000000l); }
@Test
public void test06102() { x = 0x00000000ffffffffl; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0x00000147fffffeb8l); }
@Test
public void test06103() { x = 0x000000017fffffffl; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0x000001ebfffffeb8l); }
@Test
public void test06104() { x = 0x0000000180000000l; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0x000001ec00000000l); }
@Test
public void test06105() { x = 0x00000001ffffffffl; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0x0000028ffffffeb8l); }
@Test
public void test06106() { x = 0xffffffff7fffffffl; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0xffffff5bfffffeb8l); }
@Test
public void test06107() { x = 0xffffffff80000000l; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0xffffff5c00000000l); }
@Test
public void test06108() { x = 0x00000001deadf00dl; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0x000002654edb90a8l); }
@Test
public void test06109() { x = 0xffffffffdeadf00dl; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0xffffffd54edb90a8l); }
@Test
public void test06110() { x = 0x7fffffffffffffffl; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffeb8l); }
@Test
public void test06111() { x = 0x7fffffff7fffffffl; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0xffffff5bfffffeb8l); }
@Test
public void test06112() { x = 0x7fffffff80000000l; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0xffffff5c00000000l); }
@Test
public void test06113() { x = 0x7fffffffdeadf00dl; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0xffffffd54edb90a8l); }
@Test
public void test06114() { x = 0x8000000000000000l; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06115() { x = 0xffffffffffffffffl; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffeb8l); }
@Test
public void test06116() { x = 0xfffffffffffffffel; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd70l); }
@Test
public void test06117() { x = 0xefffffffffffffffl; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffeb8l); }
@Test
public void test06118() { x = 0xdeadf00ddeadf00dl; long result = x * 0x148l; AssertJUnit.assertEquals("multiply", result, 0x4edb91c54edb90a8l); }
@Test
public void test06119() { x = 0x000000007fffffffl; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0x0000147fffffd700l); }
@Test
public void test06120() { x = 0x0000000080000000l; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0x0000148000000000l); }
@Test
public void test06121() { x = 0x00000000ffffffffl; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0x000028ffffffd700l); }
@Test
public void test06122() { x = 0x000000017fffffffl; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0x00003d7fffffd700l); }
@Test
public void test06123() { x = 0x0000000180000000l; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0x00003d8000000000l); }
@Test
public void test06124() { x = 0x00000001ffffffffl; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0x000051ffffffd700l); }
@Test
public void test06125() { x = 0xffffffff7fffffffl; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0xffffeb7fffffd700l); }
@Test
public void test06126() { x = 0xffffffff80000000l; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0xffffeb8000000000l); }
@Test
public void test06127() { x = 0x00000001deadf00dl; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0x00004ca9db721500l); }
@Test
public void test06128() { x = 0xffffffffdeadf00dl; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0xfffffaa9db721500l); }
@Test
public void test06129() { x = 0x7fffffffffffffffl; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd700l); }
@Test
public void test06130() { x = 0x7fffffff7fffffffl; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0xffffeb7fffffd700l); }
@Test
public void test06131() { x = 0x7fffffff80000000l; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0xffffeb8000000000l); }
@Test
public void test06132() { x = 0x7fffffffdeadf00dl; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0xfffffaa9db721500l); }
@Test
public void test06133() { x = 0x8000000000000000l; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06134() { x = 0xffffffffffffffffl; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd700l); }
@Test
public void test06135() { x = 0xfffffffffffffffel; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffae00l); }
@Test
public void test06136() { x = 0xefffffffffffffffl; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd700l); }
@Test
public void test06137() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2900l; AssertJUnit.assertEquals("multiply", result, 0xdb7238a9db721500l); }
@Test
public void test06138() { x = 0x000000007fffffffl; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffd700000000l); }
@Test
public void test06139() { x = 0x0000000080000000l; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06140() { x = 0x00000000ffffffffl; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd700000000l); }
@Test
public void test06141() { x = 0x000000017fffffffl; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffd700000000l); }
@Test
public void test06142() { x = 0x0000000180000000l; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06143() { x = 0x00000001ffffffffl; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd700000000l); }
@Test
public void test06144() { x = 0xffffffff7fffffffl; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffd700000000l); }
@Test
public void test06145() { x = 0xffffffff80000000l; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06146() { x = 0x00000001deadf00dl; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0xa9db721500000000l); }
@Test
public void test06147() { x = 0xffffffffdeadf00dl; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0xa9db721500000000l); }
@Test
public void test06148() { x = 0x7fffffffffffffffl; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd700000000l); }
@Test
public void test06149() { x = 0x7fffffff7fffffffl; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffd700000000l); }
@Test
public void test06150() { x = 0x7fffffff80000000l; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06151() { x = 0x7fffffffdeadf00dl; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0xa9db721500000000l); }
@Test
public void test06152() { x = 0x8000000000000000l; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06153() { x = 0xffffffffffffffffl; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd700000000l); }
@Test
public void test06154() { x = 0xfffffffffffffffel; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffae00000000l); }
@Test
public void test06155() { x = 0xefffffffffffffffl; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd700000000l); }
@Test
public void test06156() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2900000000l; AssertJUnit.assertEquals("multiply", result, 0xa9db721500000000l); }
@Test
public void test06157() { x = 0x000000007fffffffl; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb800000000l); }
@Test
public void test06158() { x = 0x0000000080000000l; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06159() { x = 0x00000000ffffffffl; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb800000000l); }
@Test
public void test06160() { x = 0x000000017fffffffl; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb800000000l); }
@Test
public void test06161() { x = 0x0000000180000000l; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06162() { x = 0x00000001ffffffffl; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb800000000l); }
@Test
public void test06163() { x = 0xffffffff7fffffffl; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb800000000l); }
@Test
public void test06164() { x = 0xffffffff80000000l; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06165() { x = 0x00000001deadf00dl; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0x4edb90a800000000l); }
@Test
public void test06166() { x = 0xffffffffdeadf00dl; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0x4edb90a800000000l); }
@Test
public void test06167() { x = 0x7fffffffffffffffl; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb800000000l); }
@Test
public void test06168() { x = 0x7fffffff7fffffffl; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb800000000l); }
@Test
public void test06169() { x = 0x7fffffff80000000l; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06170() { x = 0x7fffffffdeadf00dl; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0x4edb90a800000000l); }
@Test
public void test06171() { x = 0x8000000000000000l; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06172() { x = 0xffffffffffffffffl; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb800000000l); }
@Test
public void test06173() { x = 0xfffffffffffffffel; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7000000000l); }
@Test
public void test06174() { x = 0xefffffffffffffffl; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb800000000l); }
@Test
public void test06175() { x = 0xdeadf00ddeadf00dl; long result = x * 0x14800000000l; AssertJUnit.assertEquals("multiply", result, 0x4edb90a800000000l); }
@Test
public void test06176() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0xffffffeb80000029l); }
@Test
public void test06177() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0xffffffeb80000000l); }
@Test
public void test06178() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0xffffffd700000029l); }
@Test
public void test06179() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0xffffffc280000029l); }
@Test
public void test06180() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0xffffffc280000000l); }
@Test
public void test06181() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0xffffffae00000029l); }
@Test
public void test06182() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0x0000001480000029l); }
@Test
public void test06183() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0x0000001480000000l); }
@Test
public void test06184() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0xffffffb356248debl); }
@Test
public void test06185() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0x0000000556248debl); }
@Test
public void test06186() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000029l); }
@Test
public void test06187() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0x8000001480000029l); }
@Test
public void test06188() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0x8000001480000000l); }
@Test
public void test06189() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0x8000000556248debl); }
@Test
public void test06190() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06191() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000029l); }
@Test
public void test06192() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000052l); }
@Test
public void test06193() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0x9000000000000029l); }
@Test
public void test06194() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffd7l; AssertJUnit.assertEquals("multiply", result, 0x56248dc756248debl); }
@Test
public void test06195() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0xffffff5c00000148l); }
@Test
public void test06196() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0xffffff5c00000000l); }
@Test
public void test06197() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb800000148l); }
@Test
public void test06198() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1400000148l); }
@Test
public void test06199() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1400000000l); }
@Test
public void test06200() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7000000148l); }
@Test
public void test06201() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0x000000a400000148l); }
@Test
public void test06202() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0x000000a400000000l); }
@Test
public void test06203() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffd9ab1246f58l); }
@Test
public void test06204() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0x0000002ab1246f58l); }
@Test
public void test06205() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000148l); }
@Test
public void test06206() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0x000000a400000148l); }
@Test
public void test06207() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0x000000a400000000l); }
@Test
public void test06208() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0x0000002ab1246f58l); }
@Test
public void test06209() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06210() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000148l); }
@Test
public void test06211() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000290l); }
@Test
public void test06212() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000148l); }
@Test
public void test06213() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffeb8l; AssertJUnit.assertEquals("multiply", result, 0xb1246e3ab1246f58l); }
@Test
public void test06214() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0xffffeb8000002900l); }
@Test
public void test06215() { x = 0x0000000080000000l; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0xffffeb8000000000l); }
@Test
public void test06216() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0xffffd70000002900l); }
@Test
public void test06217() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0xffffc28000002900l); }
@Test
public void test06218() { x = 0x0000000180000000l; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0xffffc28000000000l); }
@Test
public void test06219() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0xffffae0000002900l); }
@Test
public void test06220() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0x0000148000002900l); }
@Test
public void test06221() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0x0000148000000000l); }
@Test
public void test06222() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0xffffb356248deb00l); }
@Test
public void test06223() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0x00000556248deb00l); }
@Test
public void test06224() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002900l); }
@Test
public void test06225() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0x0000148000002900l); }
@Test
public void test06226() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0x0000148000000000l); }
@Test
public void test06227() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0x00000556248deb00l); }
@Test
public void test06228() { x = 0x8000000000000000l; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06229() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002900l); }
@Test
public void test06230() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005200l); }
@Test
public void test06231() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002900l); }
@Test
public void test06232() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffd700l; AssertJUnit.assertEquals("multiply", result, 0x248dc756248deb00l); }
@Test
public void test06233() { x = 0x000000007fffffffl; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002900000000l); }
@Test
public void test06234() { x = 0x0000000080000000l; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06235() { x = 0x00000000ffffffffl; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002900000000l); }
@Test
public void test06236() { x = 0x000000017fffffffl; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002900000000l); }
@Test
public void test06237() { x = 0x0000000180000000l; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06238() { x = 0x00000001ffffffffl; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002900000000l); }
@Test
public void test06239() { x = 0xffffffff7fffffffl; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002900000000l); }
@Test
public void test06240() { x = 0xffffffff80000000l; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06241() { x = 0x00000001deadf00dl; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x56248deb00000000l); }
@Test
public void test06242() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x56248deb00000000l); }
@Test
public void test06243() { x = 0x7fffffffffffffffl; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002900000000l); }
@Test
public void test06244() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002900000000l); }
@Test
public void test06245() { x = 0x7fffffff80000000l; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06246() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x56248deb00000000l); }
@Test
public void test06247() { x = 0x8000000000000000l; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06248() { x = 0xffffffffffffffffl; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002900000000l); }
@Test
public void test06249() { x = 0xfffffffffffffffel; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005200000000l); }
@Test
public void test06250() { x = 0xefffffffffffffffl; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002900000000l); }
@Test
public void test06251() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffd700000000l; AssertJUnit.assertEquals("multiply", result, 0x56248deb00000000l); }
@Test
public void test06252() { x = 0x000000007fffffffl; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000014800000000l); }
@Test
public void test06253() { x = 0x0000000080000000l; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06254() { x = 0x00000000ffffffffl; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000014800000000l); }
@Test
public void test06255() { x = 0x000000017fffffffl; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000014800000000l); }
@Test
public void test06256() { x = 0x0000000180000000l; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06257() { x = 0x00000001ffffffffl; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000014800000000l); }
@Test
public void test06258() { x = 0xffffffff7fffffffl; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000014800000000l); }
@Test
public void test06259() { x = 0xffffffff80000000l; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06260() { x = 0x00000001deadf00dl; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0xb1246f5800000000l); }
@Test
public void test06261() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0xb1246f5800000000l); }
@Test
public void test06262() { x = 0x7fffffffffffffffl; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000014800000000l); }
@Test
public void test06263() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000014800000000l); }
@Test
public void test06264() { x = 0x7fffffff80000000l; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06265() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0xb1246f5800000000l); }
@Test
public void test06266() { x = 0x8000000000000000l; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06267() { x = 0xffffffffffffffffl; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000014800000000l); }
@Test
public void test06268() { x = 0xfffffffffffffffel; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029000000000l); }
@Test
public void test06269() { x = 0xefffffffffffffffl; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000014800000000l); }
@Test
public void test06270() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffeb800000000l; AssertJUnit.assertEquals("multiply", result, 0xb1246f5800000000l); }
@Test
public void test06271() { x = 0x000000007fffffffl; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0x00000015ffffffd4l); }
@Test
public void test06272() { x = 0x0000000080000000l; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0x0000001600000000l); }
@Test
public void test06273() { x = 0x00000000ffffffffl; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0x0000002bffffffd4l); }
@Test
public void test06274() { x = 0x000000017fffffffl; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0x00000041ffffffd4l); }
@Test
public void test06275() { x = 0x0000000180000000l; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0x0000004200000000l); }
@Test
public void test06276() { x = 0x00000001ffffffffl; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0x00000057ffffffd4l); }
@Test
public void test06277() { x = 0xffffffff7fffffffl; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0xffffffe9ffffffd4l); }
@Test
public void test06278() { x = 0xffffffff80000000l; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0xffffffea00000000l); }
@Test
public void test06279() { x = 0x00000001deadf00dl; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0x0000005245e5423cl); }
@Test
public void test06280() { x = 0xffffffffdeadf00dl; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0xfffffffa45e5423cl); }
@Test
public void test06281() { x = 0x7fffffffffffffffl; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd4l); }
@Test
public void test06282() { x = 0x7fffffff7fffffffl; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0xffffffe9ffffffd4l); }
@Test
public void test06283() { x = 0x7fffffff80000000l; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0xffffffea00000000l); }
@Test
public void test06284() { x = 0x7fffffffdeadf00dl; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0xfffffffa45e5423cl); }
@Test
public void test06285() { x = 0x8000000000000000l; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06286() { x = 0xffffffffffffffffl; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd4l); }
@Test
public void test06287() { x = 0xfffffffffffffffel; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffa8l); }
@Test
public void test06288() { x = 0xefffffffffffffffl; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0x3fffffffffffffd4l); }
@Test
public void test06289() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2cl; AssertJUnit.assertEquals("multiply", result, 0x45e5426245e5423cl); }
@Test
public void test06290() { x = 0x000000007fffffffl; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0x000000affffffea0l); }
@Test
public void test06291() { x = 0x0000000080000000l; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000000l); }
@Test
public void test06292() { x = 0x00000000ffffffffl; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0x0000015ffffffea0l); }
@Test
public void test06293() { x = 0x000000017fffffffl; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0x0000020ffffffea0l); }
@Test
public void test06294() { x = 0x0000000180000000l; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0x0000021000000000l); }
@Test
public void test06295() { x = 0x00000001ffffffffl; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0x000002bffffffea0l); }
@Test
public void test06296() { x = 0xffffffff7fffffffl; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0xffffff4ffffffea0l); }
@Test
public void test06297() { x = 0xffffffff80000000l; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000000l); }
@Test
public void test06298() { x = 0x00000001deadf00dl; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0x000002922f2a11e0l); }
@Test
public void test06299() { x = 0xffffffffdeadf00dl; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0xffffffd22f2a11e0l); }
@Test
public void test06300() { x = 0x7fffffffffffffffl; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffea0l); }
@Test
public void test06301() { x = 0x7fffffff7fffffffl; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0xffffff4ffffffea0l); }
@Test
public void test06302() { x = 0x7fffffff80000000l; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000000l); }
@Test
public void test06303() { x = 0x7fffffffdeadf00dl; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0xffffffd22f2a11e0l); }
@Test
public void test06304() { x = 0x8000000000000000l; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06305() { x = 0xffffffffffffffffl; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffea0l); }
@Test
public void test06306() { x = 0xfffffffffffffffel; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd40l); }
@Test
public void test06307() { x = 0xefffffffffffffffl; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffea0l); }
@Test
public void test06308() { x = 0xdeadf00ddeadf00dl; long result = x * 0x160l; AssertJUnit.assertEquals("multiply", result, 0x2f2a13122f2a11e0l); }
@Test
public void test06309() { x = 0x000000007fffffffl; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0x000015ffffffd400l); }
@Test
public void test06310() { x = 0x0000000080000000l; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0x0000160000000000l); }
@Test
public void test06311() { x = 0x00000000ffffffffl; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0x00002bffffffd400l); }
@Test
public void test06312() { x = 0x000000017fffffffl; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0x000041ffffffd400l); }
@Test
public void test06313() { x = 0x0000000180000000l; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0x0000420000000000l); }
@Test
public void test06314() { x = 0x00000001ffffffffl; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0x000057ffffffd400l); }
@Test
public void test06315() { x = 0xffffffff7fffffffl; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0xffffe9ffffffd400l); }
@Test
public void test06316() { x = 0xffffffff80000000l; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0xffffea0000000000l); }
@Test
public void test06317() { x = 0x00000001deadf00dl; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0x00005245e5423c00l); }
@Test
public void test06318() { x = 0xffffffffdeadf00dl; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa45e5423c00l); }
@Test
public void test06319() { x = 0x7fffffffffffffffl; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd400l); }
@Test
public void test06320() { x = 0x7fffffff7fffffffl; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0xffffe9ffffffd400l); }
@Test
public void test06321() { x = 0x7fffffff80000000l; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0xffffea0000000000l); }
@Test
public void test06322() { x = 0x7fffffffdeadf00dl; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa45e5423c00l); }
@Test
public void test06323() { x = 0x8000000000000000l; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06324() { x = 0xffffffffffffffffl; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd400l); }
@Test
public void test06325() { x = 0xfffffffffffffffel; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffa800l); }
@Test
public void test06326() { x = 0xefffffffffffffffl; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd400l); }
@Test
public void test06327() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2c00l; AssertJUnit.assertEquals("multiply", result, 0xe5426245e5423c00l); }
@Test
public void test06328() { x = 0x000000007fffffffl; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000000l); }
@Test
public void test06329() { x = 0x0000000080000000l; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06330() { x = 0x00000000ffffffffl; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000000l); }
@Test
public void test06331() { x = 0x000000017fffffffl; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000000l); }
@Test
public void test06332() { x = 0x0000000180000000l; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06333() { x = 0x00000001ffffffffl; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000000l); }
@Test
public void test06334() { x = 0xffffffff7fffffffl; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000000l); }
@Test
public void test06335() { x = 0xffffffff80000000l; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06336() { x = 0x00000001deadf00dl; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0x45e5423c00000000l); }
@Test
public void test06337() { x = 0xffffffffdeadf00dl; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0x45e5423c00000000l); }
@Test
public void test06338() { x = 0x7fffffffffffffffl; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000000l); }
@Test
public void test06339() { x = 0x7fffffff7fffffffl; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000000l); }
@Test
public void test06340() { x = 0x7fffffff80000000l; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06341() { x = 0x7fffffffdeadf00dl; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0x45e5423c00000000l); }
@Test
public void test06342() { x = 0x8000000000000000l; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06343() { x = 0xffffffffffffffffl; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000000l); }
@Test
public void test06344() { x = 0xfffffffffffffffel; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa800000000l); }
@Test
public void test06345() { x = 0xefffffffffffffffl; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd400000000l); }
@Test
public void test06346() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2c00000000l; AssertJUnit.assertEquals("multiply", result, 0x45e5423c00000000l); }
@Test
public void test06347() { x = 0x000000007fffffffl; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffea000000000l); }
@Test
public void test06348() { x = 0x0000000080000000l; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06349() { x = 0x00000000ffffffffl; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffea000000000l); }
@Test
public void test06350() { x = 0x000000017fffffffl; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffea000000000l); }
@Test
public void test06351() { x = 0x0000000180000000l; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06352() { x = 0x00000001ffffffffl; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffea000000000l); }
@Test
public void test06353() { x = 0xffffffff7fffffffl; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffea000000000l); }
@Test
public void test06354() { x = 0xffffffff80000000l; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06355() { x = 0x00000001deadf00dl; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0x2f2a11e000000000l); }
@Test
public void test06356() { x = 0xffffffffdeadf00dl; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0x2f2a11e000000000l); }
@Test
public void test06357() { x = 0x7fffffffffffffffl; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffea000000000l); }
@Test
public void test06358() { x = 0x7fffffff7fffffffl; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffea000000000l); }
@Test
public void test06359() { x = 0x7fffffff80000000l; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06360() { x = 0x7fffffffdeadf00dl; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0x2f2a11e000000000l); }
@Test
public void test06361() { x = 0x8000000000000000l; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06362() { x = 0xffffffffffffffffl; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffea000000000l); }
@Test
public void test06363() { x = 0xfffffffffffffffel; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd4000000000l); }
@Test
public void test06364() { x = 0xefffffffffffffffl; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffea000000000l); }
@Test
public void test06365() { x = 0xdeadf00ddeadf00dl; long result = x * 0x16000000000l; AssertJUnit.assertEquals("multiply", result, 0x2f2a11e000000000l); }
@Test
public void test06366() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0xffffffea0000002cl); }
@Test
public void test06367() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0xffffffea00000000l); }
@Test
public void test06368() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0xffffffd40000002cl); }
@Test
public void test06369() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0xffffffbe0000002cl); }
@Test
public void test06370() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0xffffffbe00000000l); }
@Test
public void test06371() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0xffffffa80000002cl); }
@Test
public void test06372() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0x000000160000002cl); }
@Test
public void test06373() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0x0000001600000000l); }
@Test
public void test06374() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0xffffffadba1abdc4l); }
@Test
public void test06375() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0x00000005ba1abdc4l); }
@Test
public void test06376() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0x000000000000002cl); }
@Test
public void test06377() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0x000000160000002cl); }
@Test
public void test06378() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0x0000001600000000l); }
@Test
public void test06379() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0x00000005ba1abdc4l); }
@Test
public void test06380() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06381() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0x000000000000002cl); }
@Test
public void test06382() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000058l); }
@Test
public void test06383() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0xc00000000000002cl); }
@Test
public void test06384() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffd4l; AssertJUnit.assertEquals("multiply", result, 0xba1abd9dba1abdc4l); }
@Test
public void test06385() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000160l); }
@Test
public void test06386() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0xffffff5000000000l); }
@Test
public void test06387() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0xfffffea000000160l); }
@Test
public void test06388() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0xfffffdf000000160l); }
@Test
public void test06389() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0xfffffdf000000000l); }
@Test
public void test06390() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0xfffffd4000000160l); }
@Test
public void test06391() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000160l); }
@Test
public void test06392() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000000l); }
@Test
public void test06393() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6dd0d5ee20l); }
@Test
public void test06394() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0x0000002dd0d5ee20l); }
@Test
public void test06395() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000160l); }
@Test
public void test06396() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000160l); }
@Test
public void test06397() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0x000000b000000000l); }
@Test
public void test06398() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0x0000002dd0d5ee20l); }
@Test
public void test06399() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06400() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000160l); }
@Test
public void test06401() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0x00000000000002c0l); }
@Test
public void test06402() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000160l); }
@Test
public void test06403() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffea0l; AssertJUnit.assertEquals("multiply", result, 0xd0d5ecedd0d5ee20l); }
@Test
public void test06404() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0xffffea0000002c00l); }
@Test
public void test06405() { x = 0x0000000080000000l; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0xffffea0000000000l); }
@Test
public void test06406() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0xffffd40000002c00l); }
@Test
public void test06407() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0xffffbe0000002c00l); }
@Test
public void test06408() { x = 0x0000000180000000l; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0xffffbe0000000000l); }
@Test
public void test06409() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0xffffa80000002c00l); }
@Test
public void test06410() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0x0000160000002c00l); }
@Test
public void test06411() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0x0000160000000000l); }
@Test
public void test06412() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0xffffadba1abdc400l); }
@Test
public void test06413() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0x000005ba1abdc400l); }
@Test
public void test06414() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002c00l); }
@Test
public void test06415() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0x0000160000002c00l); }
@Test
public void test06416() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0x0000160000000000l); }
@Test
public void test06417() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0x000005ba1abdc400l); }
@Test
public void test06418() { x = 0x8000000000000000l; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06419() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002c00l); }
@Test
public void test06420() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005800l); }
@Test
public void test06421() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002c00l); }
@Test
public void test06422() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffd400l; AssertJUnit.assertEquals("multiply", result, 0x1abd9dba1abdc400l); }
@Test
public void test06423() { x = 0x000000007fffffffl; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000000l); }
@Test
public void test06424() { x = 0x0000000080000000l; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06425() { x = 0x00000000ffffffffl; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000000l); }
@Test
public void test06426() { x = 0x000000017fffffffl; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000000l); }
@Test
public void test06427() { x = 0x0000000180000000l; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06428() { x = 0x00000001ffffffffl; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000000l); }
@Test
public void test06429() { x = 0xffffffff7fffffffl; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000000l); }
@Test
public void test06430() { x = 0xffffffff80000000l; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06431() { x = 0x00000001deadf00dl; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0xba1abdc400000000l); }
@Test
public void test06432() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0xba1abdc400000000l); }
@Test
public void test06433() { x = 0x7fffffffffffffffl; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000000l); }
@Test
public void test06434() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000000l); }
@Test
public void test06435() { x = 0x7fffffff80000000l; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06436() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0xba1abdc400000000l); }
@Test
public void test06437() { x = 0x8000000000000000l; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06438() { x = 0xffffffffffffffffl; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000000l); }
@Test
public void test06439() { x = 0xfffffffffffffffel; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005800000000l); }
@Test
public void test06440() { x = 0xefffffffffffffffl; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002c00000000l); }
@Test
public void test06441() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffd400000000l; AssertJUnit.assertEquals("multiply", result, 0xba1abdc400000000l); }
@Test
public void test06442() { x = 0x000000007fffffffl; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016000000000l); }
@Test
public void test06443() { x = 0x0000000080000000l; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06444() { x = 0x00000000ffffffffl; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016000000000l); }
@Test
public void test06445() { x = 0x000000017fffffffl; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016000000000l); }
@Test
public void test06446() { x = 0x0000000180000000l; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06447() { x = 0x00000001ffffffffl; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016000000000l); }
@Test
public void test06448() { x = 0xffffffff7fffffffl; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016000000000l); }
@Test
public void test06449() { x = 0xffffffff80000000l; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06450() { x = 0x00000001deadf00dl; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0xd0d5ee2000000000l); }
@Test
public void test06451() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0xd0d5ee2000000000l); }
@Test
public void test06452() { x = 0x7fffffffffffffffl; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016000000000l); }
@Test
public void test06453() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016000000000l); }
@Test
public void test06454() { x = 0x7fffffff80000000l; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06455() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0xd0d5ee2000000000l); }
@Test
public void test06456() { x = 0x8000000000000000l; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06457() { x = 0xffffffffffffffffl; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016000000000l); }
@Test
public void test06458() { x = 0xfffffffffffffffel; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x000002c000000000l); }
@Test
public void test06459() { x = 0xefffffffffffffffl; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016000000000l); }
@Test
public void test06460() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffea000000000l; AssertJUnit.assertEquals("multiply", result, 0xd0d5ee2000000000l); }
@Test
public void test06461() { x = 0x000000007fffffffl; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0x000000167fffffd3l); }
@Test
public void test06462() { x = 0x0000000080000000l; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0x0000001680000000l); }
@Test
public void test06463() { x = 0x00000000ffffffffl; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0x0000002cffffffd3l); }
@Test
public void test06464() { x = 0x000000017fffffffl; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0x000000437fffffd3l); }
@Test
public void test06465() { x = 0x0000000180000000l; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0x0000004380000000l); }
@Test
public void test06466() { x = 0x00000001ffffffffl; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0x00000059ffffffd3l); }
@Test
public void test06467() { x = 0xffffffff7fffffffl; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0xffffffe97fffffd3l); }
@Test
public void test06468() { x = 0xffffffff80000000l; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0xffffffe980000000l); }
@Test
public void test06469() { x = 0x00000001deadf00dl; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0x0000005424933249l); }
@Test
public void test06470() { x = 0xffffffffdeadf00dl; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0xfffffffa24933249l); }
@Test
public void test06471() { x = 0x7fffffffffffffffl; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffd3l); }
@Test
public void test06472() { x = 0x7fffffff7fffffffl; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0x7fffffe97fffffd3l); }
@Test
public void test06473() { x = 0x7fffffff80000000l; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0x7fffffe980000000l); }
@Test
public void test06474() { x = 0x7fffffffdeadf00dl; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0x7ffffffa24933249l); }
@Test
public void test06475() { x = 0x8000000000000000l; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06476() { x = 0xffffffffffffffffl; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffd3l); }
@Test
public void test06477() { x = 0xfffffffffffffffel; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffa6l); }
@Test
public void test06478() { x = 0xefffffffffffffffl; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0x2fffffffffffffd3l); }
@Test
public void test06479() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2dl; AssertJUnit.assertEquals("multiply", result, 0x2493327024933249l); }
@Test
public void test06480() { x = 0x000000007fffffffl; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0x000000b3fffffe98l); }
@Test
public void test06481() { x = 0x0000000080000000l; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0x000000b400000000l); }
@Test
public void test06482() { x = 0x00000000ffffffffl; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0x00000167fffffe98l); }
@Test
public void test06483() { x = 0x000000017fffffffl; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0x0000021bfffffe98l); }
@Test
public void test06484() { x = 0x0000000180000000l; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0x0000021c00000000l); }
@Test
public void test06485() { x = 0x00000001ffffffffl; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0x000002cffffffe98l); }
@Test
public void test06486() { x = 0xffffffff7fffffffl; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0xffffff4bfffffe98l); }
@Test
public void test06487() { x = 0xffffffff80000000l; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0xffffff4c00000000l); }
@Test
public void test06488() { x = 0x00000001deadf00dl; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0x000002a124999248l); }
@Test
public void test06489() { x = 0xffffffffdeadf00dl; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0xffffffd124999248l); }
@Test
public void test06490() { x = 0x7fffffffffffffffl; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe98l); }
@Test
public void test06491() { x = 0x7fffffff7fffffffl; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0xffffff4bfffffe98l); }
@Test
public void test06492() { x = 0x7fffffff80000000l; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0xffffff4c00000000l); }
@Test
public void test06493() { x = 0x7fffffffdeadf00dl; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0xffffffd124999248l); }
@Test
public void test06494() { x = 0x8000000000000000l; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06495() { x = 0xffffffffffffffffl; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe98l); }
@Test
public void test06496() { x = 0xfffffffffffffffel; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd30l); }
@Test
public void test06497() { x = 0xefffffffffffffffl; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffe98l); }
@Test
public void test06498() { x = 0xdeadf00ddeadf00dl; long result = x * 0x168l; AssertJUnit.assertEquals("multiply", result, 0x2499938124999248l); }
@Test
public void test06499() { x = 0x000000007fffffffl; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0x0000167fffffd300l); }
@Test
public void test06500() { x = 0x0000000080000000l; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0x0000168000000000l); }
@Test
public void test06501() { x = 0x00000000ffffffffl; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0x00002cffffffd300l); }
@Test
public void test06502() { x = 0x000000017fffffffl; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0x0000437fffffd300l); }
@Test
public void test06503() { x = 0x0000000180000000l; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0x0000438000000000l); }
@Test
public void test06504() { x = 0x00000001ffffffffl; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0x000059ffffffd300l); }
@Test
public void test06505() { x = 0xffffffff7fffffffl; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0xffffe97fffffd300l); }
@Test
public void test06506() { x = 0xffffffff80000000l; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0xffffe98000000000l); }
@Test
public void test06507() { x = 0x00000001deadf00dl; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0x0000542493324900l); }
@Test
public void test06508() { x = 0xffffffffdeadf00dl; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2493324900l); }
@Test
public void test06509() { x = 0x7fffffffffffffffl; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd300l); }
@Test
public void test06510() { x = 0x7fffffff7fffffffl; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0xffffe97fffffd300l); }
@Test
public void test06511() { x = 0x7fffffff80000000l; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0xffffe98000000000l); }
@Test
public void test06512() { x = 0x7fffffffdeadf00dl; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2493324900l); }
@Test
public void test06513() { x = 0x8000000000000000l; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06514() { x = 0xffffffffffffffffl; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd300l); }
@Test
public void test06515() { x = 0xfffffffffffffffel; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffa600l); }
@Test
public void test06516() { x = 0xefffffffffffffffl; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd300l); }
@Test
public void test06517() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2d00l; AssertJUnit.assertEquals("multiply", result, 0x9332702493324900l); }
@Test
public void test06518() { x = 0x000000007fffffffl; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffd300000000l); }
@Test
public void test06519() { x = 0x0000000080000000l; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06520() { x = 0x00000000ffffffffl; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd300000000l); }
@Test
public void test06521() { x = 0x000000017fffffffl; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffd300000000l); }
@Test
public void test06522() { x = 0x0000000180000000l; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06523() { x = 0x00000001ffffffffl; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd300000000l); }
@Test
public void test06524() { x = 0xffffffff7fffffffl; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffd300000000l); }
@Test
public void test06525() { x = 0xffffffff80000000l; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06526() { x = 0x00000001deadf00dl; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0x2493324900000000l); }
@Test
public void test06527() { x = 0xffffffffdeadf00dl; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0x2493324900000000l); }
@Test
public void test06528() { x = 0x7fffffffffffffffl; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd300000000l); }
@Test
public void test06529() { x = 0x7fffffff7fffffffl; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffd300000000l); }
@Test
public void test06530() { x = 0x7fffffff80000000l; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06531() { x = 0x7fffffffdeadf00dl; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0x2493324900000000l); }
@Test
public void test06532() { x = 0x8000000000000000l; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06533() { x = 0xffffffffffffffffl; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd300000000l); }
@Test
public void test06534() { x = 0xfffffffffffffffel; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa600000000l); }
@Test
public void test06535() { x = 0xefffffffffffffffl; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffd300000000l); }
@Test
public void test06536() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2d00000000l; AssertJUnit.assertEquals("multiply", result, 0x2493324900000000l); }
@Test
public void test06537() { x = 0x000000007fffffffl; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9800000000l); }
@Test
public void test06538() { x = 0x0000000080000000l; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06539() { x = 0x00000000ffffffffl; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9800000000l); }
@Test
public void test06540() { x = 0x000000017fffffffl; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9800000000l); }
@Test
public void test06541() { x = 0x0000000180000000l; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06542() { x = 0x00000001ffffffffl; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9800000000l); }
@Test
public void test06543() { x = 0xffffffff7fffffffl; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9800000000l); }
@Test
public void test06544() { x = 0xffffffff80000000l; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06545() { x = 0x00000001deadf00dl; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0x2499924800000000l); }
@Test
public void test06546() { x = 0xffffffffdeadf00dl; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0x2499924800000000l); }
@Test
public void test06547() { x = 0x7fffffffffffffffl; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9800000000l); }
@Test
public void test06548() { x = 0x7fffffff7fffffffl; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9800000000l); }
@Test
public void test06549() { x = 0x7fffffff80000000l; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06550() { x = 0x7fffffffdeadf00dl; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0x2499924800000000l); }
@Test
public void test06551() { x = 0x8000000000000000l; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06552() { x = 0xffffffffffffffffl; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9800000000l); }
@Test
public void test06553() { x = 0xfffffffffffffffel; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd3000000000l); }
@Test
public void test06554() { x = 0xefffffffffffffffl; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9800000000l); }
@Test
public void test06555() { x = 0xdeadf00ddeadf00dl; long result = x * 0x16800000000l; AssertJUnit.assertEquals("multiply", result, 0x2499924800000000l); }
@Test
public void test06556() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0xffffffe98000002dl); }
@Test
public void test06557() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0xffffffe980000000l); }
@Test
public void test06558() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0xffffffd30000002dl); }
@Test
public void test06559() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0xffffffbc8000002dl); }
@Test
public void test06560() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0xffffffbc80000000l); }
@Test
public void test06561() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0xffffffa60000002dl); }
@Test
public void test06562() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0x000000168000002dl); }
@Test
public void test06563() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0x0000001680000000l); }
@Test
public void test06564() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0xffffffabdb6ccdb7l); }
@Test
public void test06565() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0x00000005db6ccdb7l); }
@Test
public void test06566() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0x800000000000002dl); }
@Test
public void test06567() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0x800000168000002dl); }
@Test
public void test06568() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0x8000001680000000l); }
@Test
public void test06569() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0x80000005db6ccdb7l); }
@Test
public void test06570() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06571() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0x000000000000002dl); }
@Test
public void test06572() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0x000000000000005al); }
@Test
public void test06573() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0xd00000000000002dl); }
@Test
public void test06574() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffd3l; AssertJUnit.assertEquals("multiply", result, 0xdb6ccd8fdb6ccdb7l); }
@Test
public void test06575() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0xffffff4c00000168l); }
@Test
public void test06576() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0xffffff4c00000000l); }
@Test
public void test06577() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9800000168l); }
@Test
public void test06578() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0xfffffde400000168l); }
@Test
public void test06579() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0xfffffde400000000l); }
@Test
public void test06580() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0xfffffd3000000168l); }
@Test
public void test06581() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0x000000b400000168l); }
@Test
public void test06582() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0x000000b400000000l); }
@Test
public void test06583() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0xfffffd5edb666db8l); }
@Test
public void test06584() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0x0000002edb666db8l); }
@Test
public void test06585() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000168l); }
@Test
public void test06586() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0x000000b400000168l); }
@Test
public void test06587() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0x000000b400000000l); }
@Test
public void test06588() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0x0000002edb666db8l); }
@Test
public void test06589() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06590() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000168l); }
@Test
public void test06591() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0x00000000000002d0l); }
@Test
public void test06592() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000168l); }
@Test
public void test06593() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe98l; AssertJUnit.assertEquals("multiply", result, 0xdb666c7edb666db8l); }
@Test
public void test06594() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0xffffe98000002d00l); }
@Test
public void test06595() { x = 0x0000000080000000l; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0xffffe98000000000l); }
@Test
public void test06596() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0xffffd30000002d00l); }
@Test
public void test06597() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0xffffbc8000002d00l); }
@Test
public void test06598() { x = 0x0000000180000000l; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0xffffbc8000000000l); }
@Test
public void test06599() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0xffffa60000002d00l); }
@Test
public void test06600() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0x0000168000002d00l); }
@Test
public void test06601() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0x0000168000000000l); }
@Test
public void test06602() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0xffffabdb6ccdb700l); }
@Test
public void test06603() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0x000005db6ccdb700l); }
@Test
public void test06604() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002d00l); }
@Test
public void test06605() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0x0000168000002d00l); }
@Test
public void test06606() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0x0000168000000000l); }
@Test
public void test06607() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0x000005db6ccdb700l); }
@Test
public void test06608() { x = 0x8000000000000000l; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06609() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002d00l); }
@Test
public void test06610() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005a00l); }
@Test
public void test06611() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002d00l); }
@Test
public void test06612() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffd300l; AssertJUnit.assertEquals("multiply", result, 0x6ccd8fdb6ccdb700l); }
@Test
public void test06613() { x = 0x000000007fffffffl; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002d00000000l); }
@Test
public void test06614() { x = 0x0000000080000000l; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06615() { x = 0x00000000ffffffffl; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002d00000000l); }
@Test
public void test06616() { x = 0x000000017fffffffl; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002d00000000l); }
@Test
public void test06617() { x = 0x0000000180000000l; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06618() { x = 0x00000001ffffffffl; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002d00000000l); }
@Test
public void test06619() { x = 0xffffffff7fffffffl; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002d00000000l); }
@Test
public void test06620() { x = 0xffffffff80000000l; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06621() { x = 0x00000001deadf00dl; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0xdb6ccdb700000000l); }
@Test
public void test06622() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0xdb6ccdb700000000l); }
@Test
public void test06623() { x = 0x7fffffffffffffffl; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002d00000000l); }
@Test
public void test06624() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000002d00000000l); }
@Test
public void test06625() { x = 0x7fffffff80000000l; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06626() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0xdb6ccdb700000000l); }
@Test
public void test06627() { x = 0x8000000000000000l; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06628() { x = 0xffffffffffffffffl; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002d00000000l); }
@Test
public void test06629() { x = 0xfffffffffffffffel; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005a00000000l); }
@Test
public void test06630() { x = 0xefffffffffffffffl; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000002d00000000l); }
@Test
public void test06631() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffd300000000l; AssertJUnit.assertEquals("multiply", result, 0xdb6ccdb700000000l); }
@Test
public void test06632() { x = 0x000000007fffffffl; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016800000000l); }
@Test
public void test06633() { x = 0x0000000080000000l; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06634() { x = 0x00000000ffffffffl; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016800000000l); }
@Test
public void test06635() { x = 0x000000017fffffffl; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016800000000l); }
@Test
public void test06636() { x = 0x0000000180000000l; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06637() { x = 0x00000001ffffffffl; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016800000000l); }
@Test
public void test06638() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016800000000l); }
@Test
public void test06639() { x = 0xffffffff80000000l; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06640() { x = 0x00000001deadf00dl; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0xdb666db800000000l); }
@Test
public void test06641() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0xdb666db800000000l); }
@Test
public void test06642() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016800000000l); }
@Test
public void test06643() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016800000000l); }
@Test
public void test06644() { x = 0x7fffffff80000000l; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06645() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0xdb666db800000000l); }
@Test
public void test06646() { x = 0x8000000000000000l; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06647() { x = 0xffffffffffffffffl; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016800000000l); }
@Test
public void test06648() { x = 0xfffffffffffffffel; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d000000000l); }
@Test
public void test06649() { x = 0xefffffffffffffffl; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016800000000l); }
@Test
public void test06650() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe9800000000l; AssertJUnit.assertEquals("multiply", result, 0xdb666db800000000l); }
@Test
public void test06651() { x = 0x000000007fffffffl; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0x000000187fffffcfl); }
@Test
public void test06652() { x = 0x0000000080000000l; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0x0000001880000000l); }
@Test
public void test06653() { x = 0x00000000ffffffffl; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0x00000030ffffffcfl); }
@Test
public void test06654() { x = 0x000000017fffffffl; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0x000000497fffffcfl); }
@Test
public void test06655() { x = 0x0000000180000000l; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0x0000004980000000l); }
@Test
public void test06656() { x = 0x00000001ffffffffl; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0x00000061ffffffcfl); }
@Test
public void test06657() { x = 0xffffffff7fffffffl; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0xffffffe77fffffcfl); }
@Test
public void test06658() { x = 0xffffffff80000000l; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0xffffffe780000000l); }
@Test
public void test06659() { x = 0x00000001deadf00dl; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0x0000005b9f4af27dl); }
@Test
public void test06660() { x = 0xffffffffdeadf00dl; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0xfffffff99f4af27dl); }
@Test
public void test06661() { x = 0x7fffffffffffffffl; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffcfl); }
@Test
public void test06662() { x = 0x7fffffff7fffffffl; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe77fffffcfl); }
@Test
public void test06663() { x = 0x7fffffff80000000l; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe780000000l); }
@Test
public void test06664() { x = 0x7fffffffdeadf00dl; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff99f4af27dl); }
@Test
public void test06665() { x = 0x8000000000000000l; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06666() { x = 0xffffffffffffffffl; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffcfl); }
@Test
public void test06667() { x = 0xfffffffffffffffel; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff9el); }
@Test
public void test06668() { x = 0xefffffffffffffffl; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0xefffffffffffffcfl); }
@Test
public void test06669() { x = 0xdeadf00ddeadf00dl; long result = x * 0x31l; AssertJUnit.assertEquals("multiply", result, 0x9f4af2a79f4af27dl); }
@Test
public void test06670() { x = 0x000000007fffffffl; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0x000000c3fffffe78l); }
@Test
public void test06671() { x = 0x0000000080000000l; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0x000000c400000000l); }
@Test
public void test06672() { x = 0x00000000ffffffffl; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0x00000187fffffe78l); }
@Test
public void test06673() { x = 0x000000017fffffffl; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0x0000024bfffffe78l); }
@Test
public void test06674() { x = 0x0000000180000000l; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0x0000024c00000000l); }
@Test
public void test06675() { x = 0x00000001ffffffffl; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0x0000030ffffffe78l); }
@Test
public void test06676() { x = 0xffffffff7fffffffl; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0xffffff3bfffffe78l); }
@Test
public void test06677() { x = 0xffffffff80000000l; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0xffffff3c00000000l); }
@Test
public void test06678() { x = 0x00000001deadf00dl; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0x000002dcfa5793e8l); }
@Test
public void test06679() { x = 0xffffffffdeadf00dl; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0xffffffccfa5793e8l); }
@Test
public void test06680() { x = 0x7fffffffffffffffl; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe78l); }
@Test
public void test06681() { x = 0x7fffffff7fffffffl; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0xffffff3bfffffe78l); }
@Test
public void test06682() { x = 0x7fffffff80000000l; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0xffffff3c00000000l); }
@Test
public void test06683() { x = 0x7fffffffdeadf00dl; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0xffffffccfa5793e8l); }
@Test
public void test06684() { x = 0x8000000000000000l; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06685() { x = 0xffffffffffffffffl; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe78l); }
@Test
public void test06686() { x = 0xfffffffffffffffel; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffcf0l); }
@Test
public void test06687() { x = 0xefffffffffffffffl; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffe78l); }
@Test
public void test06688() { x = 0xdeadf00ddeadf00dl; long result = x * 0x188l; AssertJUnit.assertEquals("multiply", result, 0xfa57953cfa5793e8l); }
@Test
public void test06689() { x = 0x000000007fffffffl; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0x0000187fffffcf00l); }
@Test
public void test06690() { x = 0x0000000080000000l; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0x0000188000000000l); }
@Test
public void test06691() { x = 0x00000000ffffffffl; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0x000030ffffffcf00l); }
@Test
public void test06692() { x = 0x000000017fffffffl; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0x0000497fffffcf00l); }
@Test
public void test06693() { x = 0x0000000180000000l; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0x0000498000000000l); }
@Test
public void test06694() { x = 0x00000001ffffffffl; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0x000061ffffffcf00l); }
@Test
public void test06695() { x = 0xffffffff7fffffffl; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0xffffe77fffffcf00l); }
@Test
public void test06696() { x = 0xffffffff80000000l; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0xffffe78000000000l); }
@Test
public void test06697() { x = 0x00000001deadf00dl; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0x00005b9f4af27d00l); }
@Test
public void test06698() { x = 0xffffffffdeadf00dl; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0xfffff99f4af27d00l); }
@Test
public void test06699() { x = 0x7fffffffffffffffl; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffcf00l); }
@Test
public void test06700() { x = 0x7fffffff7fffffffl; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0xffffe77fffffcf00l); }
@Test
public void test06701() { x = 0x7fffffff80000000l; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0xffffe78000000000l); }
@Test
public void test06702() { x = 0x7fffffffdeadf00dl; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0xfffff99f4af27d00l); }
@Test
public void test06703() { x = 0x8000000000000000l; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06704() { x = 0xffffffffffffffffl; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffcf00l); }
@Test
public void test06705() { x = 0xfffffffffffffffel; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff9e00l); }
@Test
public void test06706() { x = 0xefffffffffffffffl; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffcf00l); }
@Test
public void test06707() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3100l; AssertJUnit.assertEquals("multiply", result, 0x4af2a79f4af27d00l); }
@Test
public void test06708() { x = 0x000000007fffffffl; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffcf00000000l); }
@Test
public void test06709() { x = 0x0000000080000000l; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06710() { x = 0x00000000ffffffffl; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcf00000000l); }
@Test
public void test06711() { x = 0x000000017fffffffl; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffcf00000000l); }
@Test
public void test06712() { x = 0x0000000180000000l; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06713() { x = 0x00000001ffffffffl; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcf00000000l); }
@Test
public void test06714() { x = 0xffffffff7fffffffl; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffcf00000000l); }
@Test
public void test06715() { x = 0xffffffff80000000l; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06716() { x = 0x00000001deadf00dl; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0x9f4af27d00000000l); }
@Test
public void test06717() { x = 0xffffffffdeadf00dl; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0x9f4af27d00000000l); }
@Test
public void test06718() { x = 0x7fffffffffffffffl; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcf00000000l); }
@Test
public void test06719() { x = 0x7fffffff7fffffffl; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffcf00000000l); }
@Test
public void test06720() { x = 0x7fffffff80000000l; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06721() { x = 0x7fffffffdeadf00dl; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0x9f4af27d00000000l); }
@Test
public void test06722() { x = 0x8000000000000000l; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06723() { x = 0xffffffffffffffffl; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcf00000000l); }
@Test
public void test06724() { x = 0xfffffffffffffffel; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9e00000000l); }
@Test
public void test06725() { x = 0xefffffffffffffffl; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcf00000000l); }
@Test
public void test06726() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3100000000l; AssertJUnit.assertEquals("multiply", result, 0x9f4af27d00000000l); }
@Test
public void test06727() { x = 0x000000007fffffffl; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7800000000l); }
@Test
public void test06728() { x = 0x0000000080000000l; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06729() { x = 0x00000000ffffffffl; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7800000000l); }
@Test
public void test06730() { x = 0x000000017fffffffl; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7800000000l); }
@Test
public void test06731() { x = 0x0000000180000000l; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06732() { x = 0x00000001ffffffffl; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7800000000l); }
@Test
public void test06733() { x = 0xffffffff7fffffffl; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7800000000l); }
@Test
public void test06734() { x = 0xffffffff80000000l; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06735() { x = 0x00000001deadf00dl; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0xfa5793e800000000l); }
@Test
public void test06736() { x = 0xffffffffdeadf00dl; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0xfa5793e800000000l); }
@Test
public void test06737() { x = 0x7fffffffffffffffl; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7800000000l); }
@Test
public void test06738() { x = 0x7fffffff7fffffffl; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7800000000l); }
@Test
public void test06739() { x = 0x7fffffff80000000l; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06740() { x = 0x7fffffffdeadf00dl; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0xfa5793e800000000l); }
@Test
public void test06741() { x = 0x8000000000000000l; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06742() { x = 0xffffffffffffffffl; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7800000000l); }
@Test
public void test06743() { x = 0xfffffffffffffffel; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffcf000000000l); }
@Test
public void test06744() { x = 0xefffffffffffffffl; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7800000000l); }
@Test
public void test06745() { x = 0xdeadf00ddeadf00dl; long result = x * 0x18800000000l; AssertJUnit.assertEquals("multiply", result, 0xfa5793e800000000l); }
@Test
public void test06746() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0xffffffe780000031l); }
@Test
public void test06747() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0xffffffe780000000l); }
@Test
public void test06748() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0xffffffcf00000031l); }
@Test
public void test06749() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0xffffffb680000031l); }
@Test
public void test06750() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0xffffffb680000000l); }
@Test
public void test06751() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0xffffff9e00000031l); }
@Test
public void test06752() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0x0000001880000031l); }
@Test
public void test06753() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0x0000001880000000l); }
@Test
public void test06754() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0xffffffa460b50d83l); }
@Test
public void test06755() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0x0000000660b50d83l); }
@Test
public void test06756() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000031l); }
@Test
public void test06757() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0x8000001880000031l); }
@Test
public void test06758() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0x8000001880000000l); }
@Test
public void test06759() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0x8000000660b50d83l); }
@Test
public void test06760() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06761() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000031l); }
@Test
public void test06762() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000062l); }
@Test
public void test06763() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0x1000000000000031l); }
@Test
public void test06764() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffcfl; AssertJUnit.assertEquals("multiply", result, 0x60b50d5860b50d83l); }
@Test
public void test06765() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0xffffff3c00000188l); }
@Test
public void test06766() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0xffffff3c00000000l); }
@Test
public void test06767() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7800000188l); }
@Test
public void test06768() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb400000188l); }
@Test
public void test06769() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb400000000l); }
@Test
public void test06770() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0xfffffcf000000188l); }
@Test
public void test06771() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0x000000c400000188l); }
@Test
public void test06772() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0x000000c400000000l); }
@Test
public void test06773() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0xfffffd2305a86c18l); }
@Test
public void test06774() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0x0000003305a86c18l); }
@Test
public void test06775() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000188l); }
@Test
public void test06776() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0x000000c400000188l); }
@Test
public void test06777() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0x000000c400000000l); }
@Test
public void test06778() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0x0000003305a86c18l); }
@Test
public void test06779() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06780() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000188l); }
@Test
public void test06781() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000310l); }
@Test
public void test06782() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000188l); }
@Test
public void test06783() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe78l; AssertJUnit.assertEquals("multiply", result, 0x05a86ac305a86c18l); }
@Test
public void test06784() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0xffffe78000003100l); }
@Test
public void test06785() { x = 0x0000000080000000l; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0xffffe78000000000l); }
@Test
public void test06786() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0xffffcf0000003100l); }
@Test
public void test06787() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0xffffb68000003100l); }
@Test
public void test06788() { x = 0x0000000180000000l; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0xffffb68000000000l); }
@Test
public void test06789() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0xffff9e0000003100l); }
@Test
public void test06790() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0x0000188000003100l); }
@Test
public void test06791() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0x0000188000000000l); }
@Test
public void test06792() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0xffffa460b50d8300l); }
@Test
public void test06793() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0x00000660b50d8300l); }
@Test
public void test06794() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003100l); }
@Test
public void test06795() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0x0000188000003100l); }
@Test
public void test06796() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0x0000188000000000l); }
@Test
public void test06797() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0x00000660b50d8300l); }
@Test
public void test06798() { x = 0x8000000000000000l; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06799() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003100l); }
@Test
public void test06800() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006200l); }
@Test
public void test06801() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003100l); }
@Test
public void test06802() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffcf00l; AssertJUnit.assertEquals("multiply", result, 0xb50d5860b50d8300l); }
@Test
public void test06803() { x = 0x000000007fffffffl; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003100000000l); }
@Test
public void test06804() { x = 0x0000000080000000l; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06805() { x = 0x00000000ffffffffl; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003100000000l); }
@Test
public void test06806() { x = 0x000000017fffffffl; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003100000000l); }
@Test
public void test06807() { x = 0x0000000180000000l; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06808() { x = 0x00000001ffffffffl; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003100000000l); }
@Test
public void test06809() { x = 0xffffffff7fffffffl; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003100000000l); }
@Test
public void test06810() { x = 0xffffffff80000000l; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06811() { x = 0x00000001deadf00dl; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x60b50d8300000000l); }
@Test
public void test06812() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x60b50d8300000000l); }
@Test
public void test06813() { x = 0x7fffffffffffffffl; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003100000000l); }
@Test
public void test06814() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003100000000l); }
@Test
public void test06815() { x = 0x7fffffff80000000l; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06816() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x60b50d8300000000l); }
@Test
public void test06817() { x = 0x8000000000000000l; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06818() { x = 0xffffffffffffffffl; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003100000000l); }
@Test
public void test06819() { x = 0xfffffffffffffffel; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006200000000l); }
@Test
public void test06820() { x = 0xefffffffffffffffl; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003100000000l); }
@Test
public void test06821() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffcf00000000l; AssertJUnit.assertEquals("multiply", result, 0x60b50d8300000000l); }
@Test
public void test06822() { x = 0x000000007fffffffl; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000018800000000l); }
@Test
public void test06823() { x = 0x0000000080000000l; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06824() { x = 0x00000000ffffffffl; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000018800000000l); }
@Test
public void test06825() { x = 0x000000017fffffffl; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000018800000000l); }
@Test
public void test06826() { x = 0x0000000180000000l; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06827() { x = 0x00000001ffffffffl; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000018800000000l); }
@Test
public void test06828() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000018800000000l); }
@Test
public void test06829() { x = 0xffffffff80000000l; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06830() { x = 0x00000001deadf00dl; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x05a86c1800000000l); }
@Test
public void test06831() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x05a86c1800000000l); }
@Test
public void test06832() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000018800000000l); }
@Test
public void test06833() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000018800000000l); }
@Test
public void test06834() { x = 0x7fffffff80000000l; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06835() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x05a86c1800000000l); }
@Test
public void test06836() { x = 0x8000000000000000l; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06837() { x = 0xffffffffffffffffl; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000018800000000l); }
@Test
public void test06838() { x = 0xfffffffffffffffel; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000031000000000l); }
@Test
public void test06839() { x = 0xefffffffffffffffl; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000018800000000l); }
@Test
public void test06840() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe7800000000l; AssertJUnit.assertEquals("multiply", result, 0x05a86c1800000000l); }
@Test
public void test06841() { x = 0x000000007fffffffl; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0x000000197fffffcdl); }
@Test
public void test06842() { x = 0x0000000080000000l; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0x0000001980000000l); }
@Test
public void test06843() { x = 0x00000000ffffffffl; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0x00000032ffffffcdl); }
@Test
public void test06844() { x = 0x000000017fffffffl; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0x0000004c7fffffcdl); }
@Test
public void test06845() { x = 0x0000000180000000l; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0x0000004c80000000l); }
@Test
public void test06846() { x = 0x00000001ffffffffl; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0x00000065ffffffcdl); }
@Test
public void test06847() { x = 0xffffffff7fffffffl; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0xffffffe67fffffcdl); }
@Test
public void test06848() { x = 0xffffffff80000000l; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0xffffffe680000000l); }
@Test
public void test06849() { x = 0x00000001deadf00dl; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0x0000005f5ca6d297l); }
@Test
public void test06850() { x = 0xffffffffdeadf00dl; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0xfffffff95ca6d297l); }
@Test
public void test06851() { x = 0x7fffffffffffffffl; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffcdl); }
@Test
public void test06852() { x = 0x7fffffff7fffffffl; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe67fffffcdl); }
@Test
public void test06853() { x = 0x7fffffff80000000l; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe680000000l); }
@Test
public void test06854() { x = 0x7fffffffdeadf00dl; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff95ca6d297l); }
@Test
public void test06855() { x = 0x8000000000000000l; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06856() { x = 0xffffffffffffffffl; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffcdl); }
@Test
public void test06857() { x = 0xfffffffffffffffel; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff9al); }
@Test
public void test06858() { x = 0xefffffffffffffffl; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0xcfffffffffffffcdl); }
@Test
public void test06859() { x = 0xdeadf00ddeadf00dl; long result = x * 0x33l; AssertJUnit.assertEquals("multiply", result, 0x5ca6d2c35ca6d297l); }
@Test
public void test06860() { x = 0x000000007fffffffl; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0x000000cbfffffe68l); }
@Test
public void test06861() { x = 0x0000000080000000l; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0x000000cc00000000l); }
@Test
public void test06862() { x = 0x00000000ffffffffl; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0x00000197fffffe68l); }
@Test
public void test06863() { x = 0x000000017fffffffl; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0x00000263fffffe68l); }
@Test
public void test06864() { x = 0x0000000180000000l; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0x0000026400000000l); }
@Test
public void test06865() { x = 0x00000001ffffffffl; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0x0000032ffffffe68l); }
@Test
public void test06866() { x = 0xffffffff7fffffffl; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0xffffff33fffffe68l); }
@Test
public void test06867() { x = 0xffffffff80000000l; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0xffffff3400000000l); }
@Test
public void test06868() { x = 0x00000001deadf00dl; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0x000002fae53694b8l); }
@Test
public void test06869() { x = 0xffffffffdeadf00dl; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0xffffffcae53694b8l); }
@Test
public void test06870() { x = 0x7fffffffffffffffl; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe68l); }
@Test
public void test06871() { x = 0x7fffffff7fffffffl; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0xffffff33fffffe68l); }
@Test
public void test06872() { x = 0x7fffffff80000000l; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0xffffff3400000000l); }
@Test
public void test06873() { x = 0x7fffffffdeadf00dl; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0xffffffcae53694b8l); }
@Test
public void test06874() { x = 0x8000000000000000l; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06875() { x = 0xffffffffffffffffl; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe68l); }
@Test
public void test06876() { x = 0xfffffffffffffffel; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffcd0l); }
@Test
public void test06877() { x = 0xefffffffffffffffl; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffe68l); }
@Test
public void test06878() { x = 0xdeadf00ddeadf00dl; long result = x * 0x198l; AssertJUnit.assertEquals("multiply", result, 0xe536961ae53694b8l); }
@Test
public void test06879() { x = 0x000000007fffffffl; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0x0000197fffffcd00l); }
@Test
public void test06880() { x = 0x0000000080000000l; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0x0000198000000000l); }
@Test
public void test06881() { x = 0x00000000ffffffffl; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0x000032ffffffcd00l); }
@Test
public void test06882() { x = 0x000000017fffffffl; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0x00004c7fffffcd00l); }
@Test
public void test06883() { x = 0x0000000180000000l; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0x00004c8000000000l); }
@Test
public void test06884() { x = 0x00000001ffffffffl; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0x000065ffffffcd00l); }
@Test
public void test06885() { x = 0xffffffff7fffffffl; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0xffffe67fffffcd00l); }
@Test
public void test06886() { x = 0xffffffff80000000l; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0xffffe68000000000l); }
@Test
public void test06887() { x = 0x00000001deadf00dl; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0x00005f5ca6d29700l); }
@Test
public void test06888() { x = 0xffffffffdeadf00dl; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0xfffff95ca6d29700l); }
@Test
public void test06889() { x = 0x7fffffffffffffffl; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffcd00l); }
@Test
public void test06890() { x = 0x7fffffff7fffffffl; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0xffffe67fffffcd00l); }
@Test
public void test06891() { x = 0x7fffffff80000000l; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0xffffe68000000000l); }
@Test
public void test06892() { x = 0x7fffffffdeadf00dl; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0xfffff95ca6d29700l); }
@Test
public void test06893() { x = 0x8000000000000000l; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06894() { x = 0xffffffffffffffffl; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffcd00l); }
@Test
public void test06895() { x = 0xfffffffffffffffel; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff9a00l); }
@Test
public void test06896() { x = 0xefffffffffffffffl; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffcd00l); }
@Test
public void test06897() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3300l; AssertJUnit.assertEquals("multiply", result, 0xa6d2c35ca6d29700l); }
@Test
public void test06898() { x = 0x000000007fffffffl; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffcd00000000l); }
@Test
public void test06899() { x = 0x0000000080000000l; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06900() { x = 0x00000000ffffffffl; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcd00000000l); }
@Test
public void test06901() { x = 0x000000017fffffffl; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffcd00000000l); }
@Test
public void test06902() { x = 0x0000000180000000l; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06903() { x = 0x00000001ffffffffl; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcd00000000l); }
@Test
public void test06904() { x = 0xffffffff7fffffffl; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffcd00000000l); }
@Test
public void test06905() { x = 0xffffffff80000000l; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06906() { x = 0x00000001deadf00dl; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0x5ca6d29700000000l); }
@Test
public void test06907() { x = 0xffffffffdeadf00dl; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0x5ca6d29700000000l); }
@Test
public void test06908() { x = 0x7fffffffffffffffl; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcd00000000l); }
@Test
public void test06909() { x = 0x7fffffff7fffffffl; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffcd00000000l); }
@Test
public void test06910() { x = 0x7fffffff80000000l; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06911() { x = 0x7fffffffdeadf00dl; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0x5ca6d29700000000l); }
@Test
public void test06912() { x = 0x8000000000000000l; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06913() { x = 0xffffffffffffffffl; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcd00000000l); }
@Test
public void test06914() { x = 0xfffffffffffffffel; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9a00000000l); }
@Test
public void test06915() { x = 0xefffffffffffffffl; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcd00000000l); }
@Test
public void test06916() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3300000000l; AssertJUnit.assertEquals("multiply", result, 0x5ca6d29700000000l); }
@Test
public void test06917() { x = 0x000000007fffffffl; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000000l); }
@Test
public void test06918() { x = 0x0000000080000000l; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06919() { x = 0x00000000ffffffffl; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000000l); }
@Test
public void test06920() { x = 0x000000017fffffffl; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000000l); }
@Test
public void test06921() { x = 0x0000000180000000l; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06922() { x = 0x00000001ffffffffl; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000000l); }
@Test
public void test06923() { x = 0xffffffff7fffffffl; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000000l); }
@Test
public void test06924() { x = 0xffffffff80000000l; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06925() { x = 0x00000001deadf00dl; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0xe53694b800000000l); }
@Test
public void test06926() { x = 0xffffffffdeadf00dl; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0xe53694b800000000l); }
@Test
public void test06927() { x = 0x7fffffffffffffffl; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000000l); }
@Test
public void test06928() { x = 0x7fffffff7fffffffl; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000000l); }
@Test
public void test06929() { x = 0x7fffffff80000000l; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06930() { x = 0x7fffffffdeadf00dl; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0xe53694b800000000l); }
@Test
public void test06931() { x = 0x8000000000000000l; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06932() { x = 0xffffffffffffffffl; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000000l); }
@Test
public void test06933() { x = 0xfffffffffffffffel; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffcd000000000l); }
@Test
public void test06934() { x = 0xefffffffffffffffl; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000000l); }
@Test
public void test06935() { x = 0xdeadf00ddeadf00dl; long result = x * 0x19800000000l; AssertJUnit.assertEquals("multiply", result, 0xe53694b800000000l); }
@Test
public void test06936() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0xffffffe680000033l); }
@Test
public void test06937() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0xffffffe680000000l); }
@Test
public void test06938() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0xffffffcd00000033l); }
@Test
public void test06939() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0xffffffb380000033l); }
@Test
public void test06940() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0xffffffb380000000l); }
@Test
public void test06941() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0xffffff9a00000033l); }
@Test
public void test06942() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0x0000001980000033l); }
@Test
public void test06943() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0x0000001980000000l); }
@Test
public void test06944() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0xffffffa0a3592d69l); }
@Test
public void test06945() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0x00000006a3592d69l); }
@Test
public void test06946() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000033l); }
@Test
public void test06947() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0x8000001980000033l); }
@Test
public void test06948() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0x8000001980000000l); }
@Test
public void test06949() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0x80000006a3592d69l); }
@Test
public void test06950() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06951() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000033l); }
@Test
public void test06952() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000066l); }
@Test
public void test06953() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0x3000000000000033l); }
@Test
public void test06954() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffcdl; AssertJUnit.assertEquals("multiply", result, 0xa3592d3ca3592d69l); }
@Test
public void test06955() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0xffffff3400000198l); }
@Test
public void test06956() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0xffffff3400000000l); }
@Test
public void test06957() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000198l); }
@Test
public void test06958() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0xfffffd9c00000198l); }
@Test
public void test06959() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0xfffffd9c00000000l); }
@Test
public void test06960() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0xfffffcd000000198l); }
@Test
public void test06961() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0x000000cc00000198l); }
@Test
public void test06962() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0x000000cc00000000l); }
@Test
public void test06963() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0xfffffd051ac96b48l); }
@Test
public void test06964() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0x000000351ac96b48l); }
@Test
public void test06965() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000198l); }
@Test
public void test06966() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0x000000cc00000198l); }
@Test
public void test06967() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0x000000cc00000000l); }
@Test
public void test06968() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0x000000351ac96b48l); }
@Test
public void test06969() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06970() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000198l); }
@Test
public void test06971() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000330l); }
@Test
public void test06972() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000198l); }
@Test
public void test06973() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe68l; AssertJUnit.assertEquals("multiply", result, 0x1ac969e51ac96b48l); }
@Test
public void test06974() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0xffffe68000003300l); }
@Test
public void test06975() { x = 0x0000000080000000l; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0xffffe68000000000l); }
@Test
public void test06976() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0xffffcd0000003300l); }
@Test
public void test06977() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0xffffb38000003300l); }
@Test
public void test06978() { x = 0x0000000180000000l; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0xffffb38000000000l); }
@Test
public void test06979() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0xffff9a0000003300l); }
@Test
public void test06980() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0x0000198000003300l); }
@Test
public void test06981() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0x0000198000000000l); }
@Test
public void test06982() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0xffffa0a3592d6900l); }
@Test
public void test06983() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0x000006a3592d6900l); }
@Test
public void test06984() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003300l); }
@Test
public void test06985() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0x0000198000003300l); }
@Test
public void test06986() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0x0000198000000000l); }
@Test
public void test06987() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0x000006a3592d6900l); }
@Test
public void test06988() { x = 0x8000000000000000l; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test06989() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003300l); }
@Test
public void test06990() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006600l); }
@Test
public void test06991() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003300l); }
@Test
public void test06992() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffcd00l; AssertJUnit.assertEquals("multiply", result, 0x592d3ca3592d6900l); }
@Test
public void test06993() { x = 0x000000007fffffffl; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003300000000l); }
@Test
public void test06994() { x = 0x0000000080000000l; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06995() { x = 0x00000000ffffffffl; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003300000000l); }
@Test
public void test06996() { x = 0x000000017fffffffl; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003300000000l); }
@Test
public void test06997() { x = 0x0000000180000000l; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test06998() { x = 0x00000001ffffffffl; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003300000000l); }
@Test
public void test06999() { x = 0xffffffff7fffffffl; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003300000000l); }
@Test
public void test07000() { x = 0xffffffff80000000l; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07001() { x = 0x00000001deadf00dl; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0xa3592d6900000000l); }
@Test
public void test07002() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0xa3592d6900000000l); }
@Test
public void test07003() { x = 0x7fffffffffffffffl; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003300000000l); }
@Test
public void test07004() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003300000000l); }
@Test
public void test07005() { x = 0x7fffffff80000000l; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07006() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0xa3592d6900000000l); }
@Test
public void test07007() { x = 0x8000000000000000l; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07008() { x = 0xffffffffffffffffl; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003300000000l); }
@Test
public void test07009() { x = 0xfffffffffffffffel; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006600000000l); }
@Test
public void test07010() { x = 0xefffffffffffffffl; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003300000000l); }
@Test
public void test07011() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffcd00000000l; AssertJUnit.assertEquals("multiply", result, 0xa3592d6900000000l); }
@Test
public void test07012() { x = 0x000000007fffffffl; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000000l); }
@Test
public void test07013() { x = 0x0000000080000000l; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07014() { x = 0x00000000ffffffffl; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000000l); }
@Test
public void test07015() { x = 0x000000017fffffffl; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000000l); }
@Test
public void test07016() { x = 0x0000000180000000l; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07017() { x = 0x00000001ffffffffl; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000000l); }
@Test
public void test07018() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000000l); }
@Test
public void test07019() { x = 0xffffffff80000000l; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07020() { x = 0x00000001deadf00dl; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x1ac96b4800000000l); }
@Test
public void test07021() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x1ac96b4800000000l); }
@Test
public void test07022() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000000l); }
@Test
public void test07023() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000000l); }
@Test
public void test07024() { x = 0x7fffffff80000000l; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07025() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x1ac96b4800000000l); }
@Test
public void test07026() { x = 0x8000000000000000l; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07027() { x = 0xffffffffffffffffl; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000000l); }
@Test
public void test07028() { x = 0xfffffffffffffffel; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000033000000000l); }
@Test
public void test07029() { x = 0xefffffffffffffffl; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000000l); }
@Test
public void test07030() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe6800000000l; AssertJUnit.assertEquals("multiply", result, 0x1ac96b4800000000l); }
@Test
public void test07031() { x = 0x000000007fffffffl; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0x00000019ffffffccl); }
@Test
public void test07032() { x = 0x0000000080000000l; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000000l); }
@Test
public void test07033() { x = 0x00000000ffffffffl; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0x00000033ffffffccl); }
@Test
public void test07034() { x = 0x000000017fffffffl; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0x0000004dffffffccl); }
@Test
public void test07035() { x = 0x0000000180000000l; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0x0000004e00000000l); }
@Test
public void test07036() { x = 0x00000001ffffffffl; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0x00000067ffffffccl); }
@Test
public void test07037() { x = 0xffffffff7fffffffl; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0xffffffe5ffffffccl); }
@Test
public void test07038() { x = 0xffffffff80000000l; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0xffffffe600000000l); }
@Test
public void test07039() { x = 0x00000001deadf00dl; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0x000000613b54c2a4l); }
@Test
public void test07040() { x = 0xffffffffdeadf00dl; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0xfffffff93b54c2a4l); }
@Test
public void test07041() { x = 0x7fffffffffffffffl; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffccl); }
@Test
public void test07042() { x = 0x7fffffff7fffffffl; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0xffffffe5ffffffccl); }
@Test
public void test07043() { x = 0x7fffffff80000000l; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0xffffffe600000000l); }
@Test
public void test07044() { x = 0x7fffffffdeadf00dl; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0xfffffff93b54c2a4l); }
@Test
public void test07045() { x = 0x8000000000000000l; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07046() { x = 0xffffffffffffffffl; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffccl); }
@Test
public void test07047() { x = 0xfffffffffffffffel; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff98l); }
@Test
public void test07048() { x = 0xefffffffffffffffl; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0xbfffffffffffffccl); }
@Test
public void test07049() { x = 0xdeadf00ddeadf00dl; long result = x * 0x34l; AssertJUnit.assertEquals("multiply", result, 0x3b54c2d13b54c2a4l); }
@Test
public void test07050() { x = 0x000000007fffffffl; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0x000000cffffffe60l); }
@Test
public void test07051() { x = 0x0000000080000000l; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0x000000d000000000l); }
@Test
public void test07052() { x = 0x00000000ffffffffl; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0x0000019ffffffe60l); }
@Test
public void test07053() { x = 0x000000017fffffffl; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0x0000026ffffffe60l); }
@Test
public void test07054() { x = 0x0000000180000000l; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0x0000027000000000l); }
@Test
public void test07055() { x = 0x00000001ffffffffl; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0x0000033ffffffe60l); }
@Test
public void test07056() { x = 0xffffffff7fffffffl; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0xffffff2ffffffe60l); }
@Test
public void test07057() { x = 0xffffffff80000000l; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0xffffff3000000000l); }
@Test
public void test07058() { x = 0x00000001deadf00dl; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0x00000309daa61520l); }
@Test
public void test07059() { x = 0xffffffffdeadf00dl; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0xffffffc9daa61520l); }
@Test
public void test07060() { x = 0x7fffffffffffffffl; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe60l); }
@Test
public void test07061() { x = 0x7fffffff7fffffffl; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0xffffff2ffffffe60l); }
@Test
public void test07062() { x = 0x7fffffff80000000l; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0xffffff3000000000l); }
@Test
public void test07063() { x = 0x7fffffffdeadf00dl; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0xffffffc9daa61520l); }
@Test
public void test07064() { x = 0x8000000000000000l; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07065() { x = 0xffffffffffffffffl; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe60l); }
@Test
public void test07066() { x = 0xfffffffffffffffel; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffcc0l); }
@Test
public void test07067() { x = 0xefffffffffffffffl; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe60l); }
@Test
public void test07068() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1a0l; AssertJUnit.assertEquals("multiply", result, 0xdaa61689daa61520l); }
@Test
public void test07069() { x = 0x000000007fffffffl; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0x000019ffffffcc00l); }
@Test
public void test07070() { x = 0x0000000080000000l; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0x00001a0000000000l); }
@Test
public void test07071() { x = 0x00000000ffffffffl; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0x000033ffffffcc00l); }
@Test
public void test07072() { x = 0x000000017fffffffl; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0x00004dffffffcc00l); }
@Test
public void test07073() { x = 0x0000000180000000l; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0x00004e0000000000l); }
@Test
public void test07074() { x = 0x00000001ffffffffl; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0x000067ffffffcc00l); }
@Test
public void test07075() { x = 0xffffffff7fffffffl; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0xffffe5ffffffcc00l); }
@Test
public void test07076() { x = 0xffffffff80000000l; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0xffffe60000000000l); }
@Test
public void test07077() { x = 0x00000001deadf00dl; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0x0000613b54c2a400l); }
@Test
public void test07078() { x = 0xffffffffdeadf00dl; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0xfffff93b54c2a400l); }
@Test
public void test07079() { x = 0x7fffffffffffffffl; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffcc00l); }
@Test
public void test07080() { x = 0x7fffffff7fffffffl; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0xffffe5ffffffcc00l); }
@Test
public void test07081() { x = 0x7fffffff80000000l; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0xffffe60000000000l); }
@Test
public void test07082() { x = 0x7fffffffdeadf00dl; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0xfffff93b54c2a400l); }
@Test
public void test07083() { x = 0x8000000000000000l; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07084() { x = 0xffffffffffffffffl; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffcc00l); }
@Test
public void test07085() { x = 0xfffffffffffffffel; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff9800l); }
@Test
public void test07086() { x = 0xefffffffffffffffl; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffcc00l); }
@Test
public void test07087() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3400l; AssertJUnit.assertEquals("multiply", result, 0x54c2d13b54c2a400l); }
@Test
public void test07088() { x = 0x000000007fffffffl; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000000l); }
@Test
public void test07089() { x = 0x0000000080000000l; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07090() { x = 0x00000000ffffffffl; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000000l); }
@Test
public void test07091() { x = 0x000000017fffffffl; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000000l); }
@Test
public void test07092() { x = 0x0000000180000000l; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07093() { x = 0x00000001ffffffffl; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000000l); }
@Test
public void test07094() { x = 0xffffffff7fffffffl; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000000l); }
@Test
public void test07095() { x = 0xffffffff80000000l; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07096() { x = 0x00000001deadf00dl; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0x3b54c2a400000000l); }
@Test
public void test07097() { x = 0xffffffffdeadf00dl; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0x3b54c2a400000000l); }
@Test
public void test07098() { x = 0x7fffffffffffffffl; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000000l); }
@Test
public void test07099() { x = 0x7fffffff7fffffffl; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000000l); }
@Test
public void test07100() { x = 0x7fffffff80000000l; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07101() { x = 0x7fffffffdeadf00dl; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0x3b54c2a400000000l); }
@Test
public void test07102() { x = 0x8000000000000000l; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07103() { x = 0xffffffffffffffffl; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000000l); }
@Test
public void test07104() { x = 0xfffffffffffffffel; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000000l); }
@Test
public void test07105() { x = 0xefffffffffffffffl; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000000l); }
@Test
public void test07106() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3400000000l; AssertJUnit.assertEquals("multiply", result, 0x3b54c2a400000000l); }
@Test
public void test07107() { x = 0x000000007fffffffl; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6000000000l); }
@Test
public void test07108() { x = 0x0000000080000000l; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07109() { x = 0x00000000ffffffffl; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6000000000l); }
@Test
public void test07110() { x = 0x000000017fffffffl; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6000000000l); }
@Test
public void test07111() { x = 0x0000000180000000l; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07112() { x = 0x00000001ffffffffl; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6000000000l); }
@Test
public void test07113() { x = 0xffffffff7fffffffl; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6000000000l); }
@Test
public void test07114() { x = 0xffffffff80000000l; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07115() { x = 0x00000001deadf00dl; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0xdaa6152000000000l); }
@Test
public void test07116() { x = 0xffffffffdeadf00dl; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0xdaa6152000000000l); }
@Test
public void test07117() { x = 0x7fffffffffffffffl; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6000000000l); }
@Test
public void test07118() { x = 0x7fffffff7fffffffl; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6000000000l); }
@Test
public void test07119() { x = 0x7fffffff80000000l; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07120() { x = 0x7fffffffdeadf00dl; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0xdaa6152000000000l); }
@Test
public void test07121() { x = 0x8000000000000000l; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07122() { x = 0xffffffffffffffffl; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6000000000l); }
@Test
public void test07123() { x = 0xfffffffffffffffel; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffcc000000000l); }
@Test
public void test07124() { x = 0xefffffffffffffffl; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6000000000l); }
@Test
public void test07125() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1a000000000l; AssertJUnit.assertEquals("multiply", result, 0xdaa6152000000000l); }
@Test
public void test07126() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0xffffffe600000034l); }
@Test
public void test07127() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0xffffffe600000000l); }
@Test
public void test07128() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0xffffffcc00000034l); }
@Test
public void test07129() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0xffffffb200000034l); }
@Test
public void test07130() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0xffffffb200000000l); }
@Test
public void test07131() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0xffffff9800000034l); }
@Test
public void test07132() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000034l); }
@Test
public void test07133() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000000l); }
@Test
public void test07134() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0xffffff9ec4ab3d5cl); }
@Test
public void test07135() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0x00000006c4ab3d5cl); }
@Test
public void test07136() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000034l); }
@Test
public void test07137() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000034l); }
@Test
public void test07138() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0x0000001a00000000l); }
@Test
public void test07139() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0x00000006c4ab3d5cl); }
@Test
public void test07140() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07141() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000034l); }
@Test
public void test07142() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000068l); }
@Test
public void test07143() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0x4000000000000034l); }
@Test
public void test07144() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffccl; AssertJUnit.assertEquals("multiply", result, 0xc4ab3d2ec4ab3d5cl); }
@Test
public void test07145() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0xffffff30000001a0l); }
@Test
public void test07146() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0xffffff3000000000l); }
@Test
public void test07147() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0xfffffe60000001a0l); }
@Test
public void test07148() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0xfffffd90000001a0l); }
@Test
public void test07149() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0xfffffd9000000000l); }
@Test
public void test07150() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0xfffffcc0000001a0l); }
@Test
public void test07151() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0x000000d0000001a0l); }
@Test
public void test07152() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0x000000d000000000l); }
@Test
public void test07153() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0xfffffcf62559eae0l); }
@Test
public void test07154() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0x000000362559eae0l); }
@Test
public void test07155() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001a0l); }
@Test
public void test07156() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0x000000d0000001a0l); }
@Test
public void test07157() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0x000000d000000000l); }
@Test
public void test07158() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0x000000362559eae0l); }
@Test
public void test07159() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07160() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001a0l); }
@Test
public void test07161() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000340l); }
@Test
public void test07162() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001a0l); }
@Test
public void test07163() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe60l; AssertJUnit.assertEquals("multiply", result, 0x2559e9762559eae0l); }
@Test
public void test07164() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0xffffe60000003400l); }
@Test
public void test07165() { x = 0x0000000080000000l; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0xffffe60000000000l); }
@Test
public void test07166() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0xffffcc0000003400l); }
@Test
public void test07167() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0xffffb20000003400l); }
@Test
public void test07168() { x = 0x0000000180000000l; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0xffffb20000000000l); }
@Test
public void test07169() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0xffff980000003400l); }
@Test
public void test07170() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0x00001a0000003400l); }
@Test
public void test07171() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0x00001a0000000000l); }
@Test
public void test07172() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0xffff9ec4ab3d5c00l); }
@Test
public void test07173() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0x000006c4ab3d5c00l); }
@Test
public void test07174() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003400l); }
@Test
public void test07175() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0x00001a0000003400l); }
@Test
public void test07176() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0x00001a0000000000l); }
@Test
public void test07177() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0x000006c4ab3d5c00l); }
@Test
public void test07178() { x = 0x8000000000000000l; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07179() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003400l); }
@Test
public void test07180() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006800l); }
@Test
public void test07181() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003400l); }
@Test
public void test07182() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffcc00l; AssertJUnit.assertEquals("multiply", result, 0xab3d2ec4ab3d5c00l); }
@Test
public void test07183() { x = 0x000000007fffffffl; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000000l); }
@Test
public void test07184() { x = 0x0000000080000000l; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07185() { x = 0x00000000ffffffffl; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000000l); }
@Test
public void test07186() { x = 0x000000017fffffffl; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000000l); }
@Test
public void test07187() { x = 0x0000000180000000l; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07188() { x = 0x00000001ffffffffl; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000000l); }
@Test
public void test07189() { x = 0xffffffff7fffffffl; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000000l); }
@Test
public void test07190() { x = 0xffffffff80000000l; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07191() { x = 0x00000001deadf00dl; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0xc4ab3d5c00000000l); }
@Test
public void test07192() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0xc4ab3d5c00000000l); }
@Test
public void test07193() { x = 0x7fffffffffffffffl; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000000l); }
@Test
public void test07194() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000000l); }
@Test
public void test07195() { x = 0x7fffffff80000000l; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07196() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0xc4ab3d5c00000000l); }
@Test
public void test07197() { x = 0x8000000000000000l; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07198() { x = 0xffffffffffffffffl; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000000l); }
@Test
public void test07199() { x = 0xfffffffffffffffel; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006800000000l); }
@Test
public void test07200() { x = 0xefffffffffffffffl; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003400000000l); }
@Test
public void test07201() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffcc00000000l; AssertJUnit.assertEquals("multiply", result, 0xc4ab3d5c00000000l); }
@Test
public void test07202() { x = 0x000000007fffffffl; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a000000000l); }
@Test
public void test07203() { x = 0x0000000080000000l; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07204() { x = 0x00000000ffffffffl; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a000000000l); }
@Test
public void test07205() { x = 0x000000017fffffffl; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a000000000l); }
@Test
public void test07206() { x = 0x0000000180000000l; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07207() { x = 0x00000001ffffffffl; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a000000000l); }
@Test
public void test07208() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a000000000l); }
@Test
public void test07209() { x = 0xffffffff80000000l; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07210() { x = 0x00000001deadf00dl; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x2559eae000000000l); }
@Test
public void test07211() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x2559eae000000000l); }
@Test
public void test07212() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a000000000l); }
@Test
public void test07213() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a000000000l); }
@Test
public void test07214() { x = 0x7fffffff80000000l; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07215() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x2559eae000000000l); }
@Test
public void test07216() { x = 0x8000000000000000l; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07217() { x = 0xffffffffffffffffl; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a000000000l); }
@Test
public void test07218() { x = 0xfffffffffffffffel; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000034000000000l); }
@Test
public void test07219() { x = 0xefffffffffffffffl; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a000000000l); }
@Test
public void test07220() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe6000000000l; AssertJUnit.assertEquals("multiply", result, 0x2559eae000000000l); }
@Test
public void test07221() { x = 0x000000007fffffffl; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0x0000001a7fffffcbl); }
@Test
public void test07222() { x = 0x0000000080000000l; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0x0000001a80000000l); }
@Test
public void test07223() { x = 0x00000000ffffffffl; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0x00000034ffffffcbl); }
@Test
public void test07224() { x = 0x000000017fffffffl; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0x0000004f7fffffcbl); }
@Test
public void test07225() { x = 0x0000000180000000l; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0x0000004f80000000l); }
@Test
public void test07226() { x = 0x00000001ffffffffl; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0x00000069ffffffcbl); }
@Test
public void test07227() { x = 0xffffffff7fffffffl; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0xffffffe57fffffcbl); }
@Test
public void test07228() { x = 0xffffffff80000000l; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0xffffffe580000000l); }
@Test
public void test07229() { x = 0x00000001deadf00dl; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0x000000631a02b2b1l); }
@Test
public void test07230() { x = 0xffffffffdeadf00dl; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0xfffffff91a02b2b1l); }
@Test
public void test07231() { x = 0x7fffffffffffffffl; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffcbl); }
@Test
public void test07232() { x = 0x7fffffff7fffffffl; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe57fffffcbl); }
@Test
public void test07233() { x = 0x7fffffff80000000l; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe580000000l); }
@Test
public void test07234() { x = 0x7fffffffdeadf00dl; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff91a02b2b1l); }
@Test
public void test07235() { x = 0x8000000000000000l; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07236() { x = 0xffffffffffffffffl; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffcbl); }
@Test
public void test07237() { x = 0xfffffffffffffffel; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff96l); }
@Test
public void test07238() { x = 0xefffffffffffffffl; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0xafffffffffffffcbl); }
@Test
public void test07239() { x = 0xdeadf00ddeadf00dl; long result = x * 0x35l; AssertJUnit.assertEquals("multiply", result, 0x1a02b2df1a02b2b1l); }
@Test
public void test07240() { x = 0x000000007fffffffl; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0x000000d3fffffe58l); }
@Test
public void test07241() { x = 0x0000000080000000l; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0x000000d400000000l); }
@Test
public void test07242() { x = 0x00000000ffffffffl; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0x000001a7fffffe58l); }
@Test
public void test07243() { x = 0x000000017fffffffl; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0x0000027bfffffe58l); }
@Test
public void test07244() { x = 0x0000000180000000l; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0x0000027c00000000l); }
@Test
public void test07245() { x = 0x00000001ffffffffl; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0x0000034ffffffe58l); }
@Test
public void test07246() { x = 0xffffffff7fffffffl; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0xffffff2bfffffe58l); }
@Test
public void test07247() { x = 0xffffffff80000000l; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0xffffff2c00000000l); }
@Test
public void test07248() { x = 0x00000001deadf00dl; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0x00000318d0159588l); }
@Test
public void test07249() { x = 0xffffffffdeadf00dl; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0xffffffc8d0159588l); }
@Test
public void test07250() { x = 0x7fffffffffffffffl; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe58l); }
@Test
public void test07251() { x = 0x7fffffff7fffffffl; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0xffffff2bfffffe58l); }
@Test
public void test07252() { x = 0x7fffffff80000000l; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0xffffff2c00000000l); }
@Test
public void test07253() { x = 0x7fffffffdeadf00dl; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0xffffffc8d0159588l); }
@Test
public void test07254() { x = 0x8000000000000000l; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07255() { x = 0xffffffffffffffffl; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe58l); }
@Test
public void test07256() { x = 0xfffffffffffffffel; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffcb0l); }
@Test
public void test07257() { x = 0xefffffffffffffffl; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffe58l); }
@Test
public void test07258() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1a8l; AssertJUnit.assertEquals("multiply", result, 0xd01596f8d0159588l); }
@Test
public void test07259() { x = 0x000000007fffffffl; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0x00001a7fffffcb00l); }
@Test
public void test07260() { x = 0x0000000080000000l; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0x00001a8000000000l); }
@Test
public void test07261() { x = 0x00000000ffffffffl; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0x000034ffffffcb00l); }
@Test
public void test07262() { x = 0x000000017fffffffl; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0x00004f7fffffcb00l); }
@Test
public void test07263() { x = 0x0000000180000000l; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0x00004f8000000000l); }
@Test
public void test07264() { x = 0x00000001ffffffffl; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0x000069ffffffcb00l); }
@Test
public void test07265() { x = 0xffffffff7fffffffl; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0xffffe57fffffcb00l); }
@Test
public void test07266() { x = 0xffffffff80000000l; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0xffffe58000000000l); }
@Test
public void test07267() { x = 0x00000001deadf00dl; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0x0000631a02b2b100l); }
@Test
public void test07268() { x = 0xffffffffdeadf00dl; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0xfffff91a02b2b100l); }
@Test
public void test07269() { x = 0x7fffffffffffffffl; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffcb00l); }
@Test
public void test07270() { x = 0x7fffffff7fffffffl; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0xffffe57fffffcb00l); }
@Test
public void test07271() { x = 0x7fffffff80000000l; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0xffffe58000000000l); }
@Test
public void test07272() { x = 0x7fffffffdeadf00dl; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0xfffff91a02b2b100l); }
@Test
public void test07273() { x = 0x8000000000000000l; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07274() { x = 0xffffffffffffffffl; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffcb00l); }
@Test
public void test07275() { x = 0xfffffffffffffffel; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff9600l); }
@Test
public void test07276() { x = 0xefffffffffffffffl; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffcb00l); }
@Test
public void test07277() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3500l; AssertJUnit.assertEquals("multiply", result, 0x02b2df1a02b2b100l); }
@Test
public void test07278() { x = 0x000000007fffffffl; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffcb00000000l); }
@Test
public void test07279() { x = 0x0000000080000000l; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07280() { x = 0x00000000ffffffffl; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcb00000000l); }
@Test
public void test07281() { x = 0x000000017fffffffl; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffcb00000000l); }
@Test
public void test07282() { x = 0x0000000180000000l; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07283() { x = 0x00000001ffffffffl; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcb00000000l); }
@Test
public void test07284() { x = 0xffffffff7fffffffl; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffcb00000000l); }
@Test
public void test07285() { x = 0xffffffff80000000l; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07286() { x = 0x00000001deadf00dl; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0x1a02b2b100000000l); }
@Test
public void test07287() { x = 0xffffffffdeadf00dl; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0x1a02b2b100000000l); }
@Test
public void test07288() { x = 0x7fffffffffffffffl; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcb00000000l); }
@Test
public void test07289() { x = 0x7fffffff7fffffffl; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffcb00000000l); }
@Test
public void test07290() { x = 0x7fffffff80000000l; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07291() { x = 0x7fffffffdeadf00dl; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0x1a02b2b100000000l); }
@Test
public void test07292() { x = 0x8000000000000000l; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07293() { x = 0xffffffffffffffffl; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcb00000000l); }
@Test
public void test07294() { x = 0xfffffffffffffffel; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9600000000l); }
@Test
public void test07295() { x = 0xefffffffffffffffl; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffcb00000000l); }
@Test
public void test07296() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3500000000l; AssertJUnit.assertEquals("multiply", result, 0x1a02b2b100000000l); }
@Test
public void test07297() { x = 0x000000007fffffffl; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5800000000l); }
@Test
public void test07298() { x = 0x0000000080000000l; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07299() { x = 0x00000000ffffffffl; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5800000000l); }
@Test
public void test07300() { x = 0x000000017fffffffl; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5800000000l); }
@Test
public void test07301() { x = 0x0000000180000000l; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07302() { x = 0x00000001ffffffffl; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5800000000l); }
@Test
public void test07303() { x = 0xffffffff7fffffffl; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5800000000l); }
@Test
public void test07304() { x = 0xffffffff80000000l; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07305() { x = 0x00000001deadf00dl; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0xd015958800000000l); }
@Test
public void test07306() { x = 0xffffffffdeadf00dl; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0xd015958800000000l); }
@Test
public void test07307() { x = 0x7fffffffffffffffl; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5800000000l); }
@Test
public void test07308() { x = 0x7fffffff7fffffffl; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5800000000l); }
@Test
public void test07309() { x = 0x7fffffff80000000l; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07310() { x = 0x7fffffffdeadf00dl; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0xd015958800000000l); }
@Test
public void test07311() { x = 0x8000000000000000l; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07312() { x = 0xffffffffffffffffl; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5800000000l); }
@Test
public void test07313() { x = 0xfffffffffffffffel; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffcb000000000l); }
@Test
public void test07314() { x = 0xefffffffffffffffl; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5800000000l); }
@Test
public void test07315() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1a800000000l; AssertJUnit.assertEquals("multiply", result, 0xd015958800000000l); }
@Test
public void test07316() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0xffffffe580000035l); }
@Test
public void test07317() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0xffffffe580000000l); }
@Test
public void test07318() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0xffffffcb00000035l); }
@Test
public void test07319() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0xffffffb080000035l); }
@Test
public void test07320() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0xffffffb080000000l); }
@Test
public void test07321() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0xffffff9600000035l); }
@Test
public void test07322() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0x0000001a80000035l); }
@Test
public void test07323() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0x0000001a80000000l); }
@Test
public void test07324() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0xffffff9ce5fd4d4fl); }
@Test
public void test07325() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0x00000006e5fd4d4fl); }
@Test
public void test07326() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000035l); }
@Test
public void test07327() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0x8000001a80000035l); }
@Test
public void test07328() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0x8000001a80000000l); }
@Test
public void test07329() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0x80000006e5fd4d4fl); }
@Test
public void test07330() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07331() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000035l); }
@Test
public void test07332() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0x000000000000006al); }
@Test
public void test07333() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0x5000000000000035l); }
@Test
public void test07334() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffcbl; AssertJUnit.assertEquals("multiply", result, 0xe5fd4d20e5fd4d4fl); }
@Test
public void test07335() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0xffffff2c000001a8l); }
@Test
public void test07336() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0xffffff2c00000000l); }
@Test
public void test07337() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0xfffffe58000001a8l); }
@Test
public void test07338() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0xfffffd84000001a8l); }
@Test
public void test07339() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8400000000l); }
@Test
public void test07340() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0xfffffcb0000001a8l); }
@Test
public void test07341() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0x000000d4000001a8l); }
@Test
public void test07342() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0x000000d400000000l); }
@Test
public void test07343() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0xfffffce72fea6a78l); }
@Test
public void test07344() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0x000000372fea6a78l); }
@Test
public void test07345() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001a8l); }
@Test
public void test07346() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0x000000d4000001a8l); }
@Test
public void test07347() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0x000000d400000000l); }
@Test
public void test07348() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0x000000372fea6a78l); }
@Test
public void test07349() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07350() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001a8l); }
@Test
public void test07351() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000350l); }
@Test
public void test07352() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0x80000000000001a8l); }
@Test
public void test07353() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe58l; AssertJUnit.assertEquals("multiply", result, 0x2fea69072fea6a78l); }
@Test
public void test07354() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0xffffe58000003500l); }
@Test
public void test07355() { x = 0x0000000080000000l; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0xffffe58000000000l); }
@Test
public void test07356() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0xffffcb0000003500l); }
@Test
public void test07357() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0xffffb08000003500l); }
@Test
public void test07358() { x = 0x0000000180000000l; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0xffffb08000000000l); }
@Test
public void test07359() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0xffff960000003500l); }
@Test
public void test07360() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0x00001a8000003500l); }
@Test
public void test07361() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0x00001a8000000000l); }
@Test
public void test07362() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0xffff9ce5fd4d4f00l); }
@Test
public void test07363() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0x000006e5fd4d4f00l); }
@Test
public void test07364() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003500l); }
@Test
public void test07365() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0x00001a8000003500l); }
@Test
public void test07366() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0x00001a8000000000l); }
@Test
public void test07367() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0x000006e5fd4d4f00l); }
@Test
public void test07368() { x = 0x8000000000000000l; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07369() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003500l); }
@Test
public void test07370() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006a00l); }
@Test
public void test07371() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003500l); }
@Test
public void test07372() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffcb00l; AssertJUnit.assertEquals("multiply", result, 0xfd4d20e5fd4d4f00l); }
@Test
public void test07373() { x = 0x000000007fffffffl; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003500000000l); }
@Test
public void test07374() { x = 0x0000000080000000l; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07375() { x = 0x00000000ffffffffl; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003500000000l); }
@Test
public void test07376() { x = 0x000000017fffffffl; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003500000000l); }
@Test
public void test07377() { x = 0x0000000180000000l; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07378() { x = 0x00000001ffffffffl; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003500000000l); }
@Test
public void test07379() { x = 0xffffffff7fffffffl; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003500000000l); }
@Test
public void test07380() { x = 0xffffffff80000000l; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07381() { x = 0x00000001deadf00dl; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0xe5fd4d4f00000000l); }
@Test
public void test07382() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0xe5fd4d4f00000000l); }
@Test
public void test07383() { x = 0x7fffffffffffffffl; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003500000000l); }
@Test
public void test07384() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003500000000l); }
@Test
public void test07385() { x = 0x7fffffff80000000l; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07386() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0xe5fd4d4f00000000l); }
@Test
public void test07387() { x = 0x8000000000000000l; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07388() { x = 0xffffffffffffffffl; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003500000000l); }
@Test
public void test07389() { x = 0xfffffffffffffffel; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006a00000000l); }
@Test
public void test07390() { x = 0xefffffffffffffffl; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003500000000l); }
@Test
public void test07391() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffcb00000000l; AssertJUnit.assertEquals("multiply", result, 0xe5fd4d4f00000000l); }
@Test
public void test07392() { x = 0x000000007fffffffl; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a800000000l); }
@Test
public void test07393() { x = 0x0000000080000000l; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07394() { x = 0x00000000ffffffffl; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a800000000l); }
@Test
public void test07395() { x = 0x000000017fffffffl; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a800000000l); }
@Test
public void test07396() { x = 0x0000000180000000l; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07397() { x = 0x00000001ffffffffl; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a800000000l); }
@Test
public void test07398() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a800000000l); }
@Test
public void test07399() { x = 0xffffffff80000000l; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07400() { x = 0x00000001deadf00dl; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x2fea6a7800000000l); }
@Test
public void test07401() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x2fea6a7800000000l); }
@Test
public void test07402() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a800000000l); }
@Test
public void test07403() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a800000000l); }
@Test
public void test07404() { x = 0x7fffffff80000000l; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07405() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x2fea6a7800000000l); }
@Test
public void test07406() { x = 0x8000000000000000l; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07407() { x = 0xffffffffffffffffl; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a800000000l); }
@Test
public void test07408() { x = 0xfffffffffffffffel; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000035000000000l); }
@Test
public void test07409() { x = 0xefffffffffffffffl; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001a800000000l); }
@Test
public void test07410() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe5800000000l; AssertJUnit.assertEquals("multiply", result, 0x2fea6a7800000000l); }
@Test
public void test07411() { x = 0x000000007fffffffl; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0x0000001affffffcal); }
@Test
public void test07412() { x = 0x0000000080000000l; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0x0000001b00000000l); }
@Test
public void test07413() { x = 0x00000000ffffffffl; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0x00000035ffffffcal); }
@Test
public void test07414() { x = 0x000000017fffffffl; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0x00000050ffffffcal); }
@Test
public void test07415() { x = 0x0000000180000000l; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0x0000005100000000l); }
@Test
public void test07416() { x = 0x00000001ffffffffl; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0x0000006bffffffcal); }
@Test
public void test07417() { x = 0xffffffff7fffffffl; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0xffffffe4ffffffcal); }
@Test
public void test07418() { x = 0xffffffff80000000l; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0xffffffe500000000l); }
@Test
public void test07419() { x = 0x00000001deadf00dl; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0x00000064f8b0a2bel); }
@Test
public void test07420() { x = 0xffffffffdeadf00dl; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0xfffffff8f8b0a2bel); }
@Test
public void test07421() { x = 0x7fffffffffffffffl; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffcal); }
@Test
public void test07422() { x = 0x7fffffff7fffffffl; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0xffffffe4ffffffcal); }
@Test
public void test07423() { x = 0x7fffffff80000000l; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0xffffffe500000000l); }
@Test
public void test07424() { x = 0x7fffffffdeadf00dl; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0xfffffff8f8b0a2bel); }
@Test
public void test07425() { x = 0x8000000000000000l; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07426() { x = 0xffffffffffffffffl; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffcal); }
@Test
public void test07427() { x = 0xfffffffffffffffel; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff94l); }
@Test
public void test07428() { x = 0xefffffffffffffffl; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0x9fffffffffffffcal); }
@Test
public void test07429() { x = 0xdeadf00ddeadf00dl; long result = x * 0x36l; AssertJUnit.assertEquals("multiply", result, 0xf8b0a2ecf8b0a2bel); }
@Test
public void test07430() { x = 0x000000007fffffffl; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0x000000d7fffffe50l); }
@Test
public void test07431() { x = 0x0000000080000000l; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0x000000d800000000l); }
@Test
public void test07432() { x = 0x00000000ffffffffl; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0x000001affffffe50l); }
@Test
public void test07433() { x = 0x000000017fffffffl; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0x00000287fffffe50l); }
@Test
public void test07434() { x = 0x0000000180000000l; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0x0000028800000000l); }
@Test
public void test07435() { x = 0x00000001ffffffffl; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0x0000035ffffffe50l); }
@Test
public void test07436() { x = 0xffffffff7fffffffl; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0xffffff27fffffe50l); }
@Test
public void test07437() { x = 0xffffffff80000000l; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0xffffff2800000000l); }
@Test
public void test07438() { x = 0x00000001deadf00dl; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0x00000327c58515f0l); }
@Test
public void test07439() { x = 0xffffffffdeadf00dl; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0xffffffc7c58515f0l); }
@Test
public void test07440() { x = 0x7fffffffffffffffl; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe50l); }
@Test
public void test07441() { x = 0x7fffffff7fffffffl; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0xffffff27fffffe50l); }
@Test
public void test07442() { x = 0x7fffffff80000000l; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0xffffff2800000000l); }
@Test
public void test07443() { x = 0x7fffffffdeadf00dl; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0xffffffc7c58515f0l); }
@Test
public void test07444() { x = 0x8000000000000000l; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07445() { x = 0xffffffffffffffffl; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe50l); }
@Test
public void test07446() { x = 0xfffffffffffffffel; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffca0l); }
@Test
public void test07447() { x = 0xefffffffffffffffl; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe50l); }
@Test
public void test07448() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1b0l; AssertJUnit.assertEquals("multiply", result, 0xc5851767c58515f0l); }
@Test
public void test07449() { x = 0x000000007fffffffl; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0x00001affffffca00l); }
@Test
public void test07450() { x = 0x0000000080000000l; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0x00001b0000000000l); }
@Test
public void test07451() { x = 0x00000000ffffffffl; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0x000035ffffffca00l); }
@Test
public void test07452() { x = 0x000000017fffffffl; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0x000050ffffffca00l); }
@Test
public void test07453() { x = 0x0000000180000000l; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0x0000510000000000l); }
@Test
public void test07454() { x = 0x00000001ffffffffl; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0x00006bffffffca00l); }
@Test
public void test07455() { x = 0xffffffff7fffffffl; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0xffffe4ffffffca00l); }
@Test
public void test07456() { x = 0xffffffff80000000l; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0xffffe50000000000l); }
@Test
public void test07457() { x = 0x00000001deadf00dl; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0x000064f8b0a2be00l); }
@Test
public void test07458() { x = 0xffffffffdeadf00dl; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0xfffff8f8b0a2be00l); }
@Test
public void test07459() { x = 0x7fffffffffffffffl; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffca00l); }
@Test
public void test07460() { x = 0x7fffffff7fffffffl; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0xffffe4ffffffca00l); }
@Test
public void test07461() { x = 0x7fffffff80000000l; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0xffffe50000000000l); }
@Test
public void test07462() { x = 0x7fffffffdeadf00dl; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0xfffff8f8b0a2be00l); }
@Test
public void test07463() { x = 0x8000000000000000l; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07464() { x = 0xffffffffffffffffl; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffca00l); }
@Test
public void test07465() { x = 0xfffffffffffffffel; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff9400l); }
@Test
public void test07466() { x = 0xefffffffffffffffl; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffca00l); }
@Test
public void test07467() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3600l; AssertJUnit.assertEquals("multiply", result, 0xb0a2ecf8b0a2be00l); }
@Test
public void test07468() { x = 0x000000007fffffffl; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffca00000000l); }
@Test
public void test07469() { x = 0x0000000080000000l; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07470() { x = 0x00000000ffffffffl; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffca00000000l); }
@Test
public void test07471() { x = 0x000000017fffffffl; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffca00000000l); }
@Test
public void test07472() { x = 0x0000000180000000l; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07473() { x = 0x00000001ffffffffl; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffca00000000l); }
@Test
public void test07474() { x = 0xffffffff7fffffffl; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffca00000000l); }
@Test
public void test07475() { x = 0xffffffff80000000l; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07476() { x = 0x00000001deadf00dl; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0xf8b0a2be00000000l); }
@Test
public void test07477() { x = 0xffffffffdeadf00dl; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0xf8b0a2be00000000l); }
@Test
public void test07478() { x = 0x7fffffffffffffffl; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffca00000000l); }
@Test
public void test07479() { x = 0x7fffffff7fffffffl; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffca00000000l); }
@Test
public void test07480() { x = 0x7fffffff80000000l; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07481() { x = 0x7fffffffdeadf00dl; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0xf8b0a2be00000000l); }
@Test
public void test07482() { x = 0x8000000000000000l; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07483() { x = 0xffffffffffffffffl; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffca00000000l); }
@Test
public void test07484() { x = 0xfffffffffffffffel; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9400000000l); }
@Test
public void test07485() { x = 0xefffffffffffffffl; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffca00000000l); }
@Test
public void test07486() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3600000000l; AssertJUnit.assertEquals("multiply", result, 0xf8b0a2be00000000l); }
@Test
public void test07487() { x = 0x000000007fffffffl; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5000000000l); }
@Test
public void test07488() { x = 0x0000000080000000l; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07489() { x = 0x00000000ffffffffl; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5000000000l); }
@Test
public void test07490() { x = 0x000000017fffffffl; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5000000000l); }
@Test
public void test07491() { x = 0x0000000180000000l; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07492() { x = 0x00000001ffffffffl; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5000000000l); }
@Test
public void test07493() { x = 0xffffffff7fffffffl; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5000000000l); }
@Test
public void test07494() { x = 0xffffffff80000000l; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07495() { x = 0x00000001deadf00dl; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0xc58515f000000000l); }
@Test
public void test07496() { x = 0xffffffffdeadf00dl; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0xc58515f000000000l); }
@Test
public void test07497() { x = 0x7fffffffffffffffl; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5000000000l); }
@Test
public void test07498() { x = 0x7fffffff7fffffffl; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5000000000l); }
@Test
public void test07499() { x = 0x7fffffff80000000l; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07500() { x = 0x7fffffffdeadf00dl; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0xc58515f000000000l); }
@Test
public void test07501() { x = 0x8000000000000000l; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07502() { x = 0xffffffffffffffffl; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5000000000l); }
@Test
public void test07503() { x = 0xfffffffffffffffel; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffca000000000l); }
@Test
public void test07504() { x = 0xefffffffffffffffl; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5000000000l); }
@Test
public void test07505() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1b000000000l; AssertJUnit.assertEquals("multiply", result, 0xc58515f000000000l); }
@Test
public void test07506() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0xffffffe500000036l); }
@Test
public void test07507() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0xffffffe500000000l); }
@Test
public void test07508() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0xffffffca00000036l); }
@Test
public void test07509() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0xffffffaf00000036l); }
@Test
public void test07510() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0xffffffaf00000000l); }
@Test
public void test07511() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0xffffff9400000036l); }
@Test
public void test07512() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0x0000001b00000036l); }
@Test
public void test07513() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0x0000001b00000000l); }
@Test
public void test07514() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0xffffff9b074f5d42l); }
@Test
public void test07515() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0x00000007074f5d42l); }
@Test
public void test07516() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000036l); }
@Test
public void test07517() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0x0000001b00000036l); }
@Test
public void test07518() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0x0000001b00000000l); }
@Test
public void test07519() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0x00000007074f5d42l); }
@Test
public void test07520() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07521() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000036l); }
@Test
public void test07522() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0x000000000000006cl); }
@Test
public void test07523() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0x6000000000000036l); }
@Test
public void test07524() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffcal; AssertJUnit.assertEquals("multiply", result, 0x074f5d13074f5d42l); }
@Test
public void test07525() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0xffffff28000001b0l); }
@Test
public void test07526() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0xffffff2800000000l); }
@Test
public void test07527() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0xfffffe50000001b0l); }
@Test
public void test07528() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0xfffffd78000001b0l); }
@Test
public void test07529() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7800000000l); }
@Test
public void test07530() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0xfffffca0000001b0l); }
@Test
public void test07531() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0x000000d8000001b0l); }
@Test
public void test07532() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0x000000d800000000l); }
@Test
public void test07533() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0xfffffcd83a7aea10l); }
@Test
public void test07534() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0x000000383a7aea10l); }
@Test
public void test07535() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001b0l); }
@Test
public void test07536() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0x000000d8000001b0l); }
@Test
public void test07537() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0x000000d800000000l); }
@Test
public void test07538() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0x000000383a7aea10l); }
@Test
public void test07539() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07540() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001b0l); }
@Test
public void test07541() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000360l); }
@Test
public void test07542() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001b0l); }
@Test
public void test07543() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe50l; AssertJUnit.assertEquals("multiply", result, 0x3a7ae8983a7aea10l); }
@Test
public void test07544() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0xffffe50000003600l); }
@Test
public void test07545() { x = 0x0000000080000000l; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0xffffe50000000000l); }
@Test
public void test07546() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0xffffca0000003600l); }
@Test
public void test07547() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0xffffaf0000003600l); }
@Test
public void test07548() { x = 0x0000000180000000l; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0xffffaf0000000000l); }
@Test
public void test07549() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0xffff940000003600l); }
@Test
public void test07550() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0x00001b0000003600l); }
@Test
public void test07551() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0x00001b0000000000l); }
@Test
public void test07552() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0xffff9b074f5d4200l); }
@Test
public void test07553() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0x000007074f5d4200l); }
@Test
public void test07554() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003600l); }
@Test
public void test07555() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0x00001b0000003600l); }
@Test
public void test07556() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0x00001b0000000000l); }
@Test
public void test07557() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0x000007074f5d4200l); }
@Test
public void test07558() { x = 0x8000000000000000l; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07559() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003600l); }
@Test
public void test07560() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006c00l); }
@Test
public void test07561() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003600l); }
@Test
public void test07562() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffca00l; AssertJUnit.assertEquals("multiply", result, 0x4f5d13074f5d4200l); }
@Test
public void test07563() { x = 0x000000007fffffffl; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003600000000l); }
@Test
public void test07564() { x = 0x0000000080000000l; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07565() { x = 0x00000000ffffffffl; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003600000000l); }
@Test
public void test07566() { x = 0x000000017fffffffl; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003600000000l); }
@Test
public void test07567() { x = 0x0000000180000000l; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07568() { x = 0x00000001ffffffffl; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003600000000l); }
@Test
public void test07569() { x = 0xffffffff7fffffffl; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003600000000l); }
@Test
public void test07570() { x = 0xffffffff80000000l; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07571() { x = 0x00000001deadf00dl; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x074f5d4200000000l); }
@Test
public void test07572() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x074f5d4200000000l); }
@Test
public void test07573() { x = 0x7fffffffffffffffl; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003600000000l); }
@Test
public void test07574() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003600000000l); }
@Test
public void test07575() { x = 0x7fffffff80000000l; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07576() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x074f5d4200000000l); }
@Test
public void test07577() { x = 0x8000000000000000l; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07578() { x = 0xffffffffffffffffl; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003600000000l); }
@Test
public void test07579() { x = 0xfffffffffffffffel; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006c00000000l); }
@Test
public void test07580() { x = 0xefffffffffffffffl; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003600000000l); }
@Test
public void test07581() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffca00000000l; AssertJUnit.assertEquals("multiply", result, 0x074f5d4200000000l); }
@Test
public void test07582() { x = 0x000000007fffffffl; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b000000000l); }
@Test
public void test07583() { x = 0x0000000080000000l; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07584() { x = 0x00000000ffffffffl; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b000000000l); }
@Test
public void test07585() { x = 0x000000017fffffffl; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b000000000l); }
@Test
public void test07586() { x = 0x0000000180000000l; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07587() { x = 0x00000001ffffffffl; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b000000000l); }
@Test
public void test07588() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b000000000l); }
@Test
public void test07589() { x = 0xffffffff80000000l; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07590() { x = 0x00000001deadf00dl; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x3a7aea1000000000l); }
@Test
public void test07591() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x3a7aea1000000000l); }
@Test
public void test07592() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b000000000l); }
@Test
public void test07593() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b000000000l); }
@Test
public void test07594() { x = 0x7fffffff80000000l; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07595() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x3a7aea1000000000l); }
@Test
public void test07596() { x = 0x8000000000000000l; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07597() { x = 0xffffffffffffffffl; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b000000000l); }
@Test
public void test07598() { x = 0xfffffffffffffffel; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000036000000000l); }
@Test
public void test07599() { x = 0xefffffffffffffffl; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b000000000l); }
@Test
public void test07600() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe5000000000l; AssertJUnit.assertEquals("multiply", result, 0x3a7aea1000000000l); }
@Test
public void test07601() { x = 0x000000007fffffffl; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0x0000001b7fffffc9l); }
@Test
public void test07602() { x = 0x0000000080000000l; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0x0000001b80000000l); }
@Test
public void test07603() { x = 0x00000000ffffffffl; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0x00000036ffffffc9l); }
@Test
public void test07604() { x = 0x000000017fffffffl; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0x000000527fffffc9l); }
@Test
public void test07605() { x = 0x0000000180000000l; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0x0000005280000000l); }
@Test
public void test07606() { x = 0x00000001ffffffffl; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0x0000006dffffffc9l); }
@Test
public void test07607() { x = 0xffffffff7fffffffl; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0xffffffe47fffffc9l); }
@Test
public void test07608() { x = 0xffffffff80000000l; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0xffffffe480000000l); }
@Test
public void test07609() { x = 0x00000001deadf00dl; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0x00000066d75e92cbl); }
@Test
public void test07610() { x = 0xffffffffdeadf00dl; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0xfffffff8d75e92cbl); }
@Test
public void test07611() { x = 0x7fffffffffffffffl; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffc9l); }
@Test
public void test07612() { x = 0x7fffffff7fffffffl; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe47fffffc9l); }
@Test
public void test07613() { x = 0x7fffffff80000000l; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe480000000l); }
@Test
public void test07614() { x = 0x7fffffffdeadf00dl; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff8d75e92cbl); }
@Test
public void test07615() { x = 0x8000000000000000l; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07616() { x = 0xffffffffffffffffl; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffc9l); }
@Test
public void test07617() { x = 0xfffffffffffffffel; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff92l); }
@Test
public void test07618() { x = 0xefffffffffffffffl; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0x8fffffffffffffc9l); }
@Test
public void test07619() { x = 0xdeadf00ddeadf00dl; long result = x * 0x37l; AssertJUnit.assertEquals("multiply", result, 0xd75e92fad75e92cbl); }
@Test
public void test07620() { x = 0x000000007fffffffl; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0x000000dbfffffe48l); }
@Test
public void test07621() { x = 0x0000000080000000l; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0x000000dc00000000l); }
@Test
public void test07622() { x = 0x00000000ffffffffl; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0x000001b7fffffe48l); }
@Test
public void test07623() { x = 0x000000017fffffffl; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0x00000293fffffe48l); }
@Test
public void test07624() { x = 0x0000000180000000l; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0x0000029400000000l); }
@Test
public void test07625() { x = 0x00000001ffffffffl; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0x0000036ffffffe48l); }
@Test
public void test07626() { x = 0xffffffff7fffffffl; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0xffffff23fffffe48l); }
@Test
public void test07627() { x = 0xffffffff80000000l; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0xffffff2400000000l); }
@Test
public void test07628() { x = 0x00000001deadf00dl; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0x00000336baf49658l); }
@Test
public void test07629() { x = 0xffffffffdeadf00dl; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0xffffffc6baf49658l); }
@Test
public void test07630() { x = 0x7fffffffffffffffl; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe48l); }
@Test
public void test07631() { x = 0x7fffffff7fffffffl; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0xffffff23fffffe48l); }
@Test
public void test07632() { x = 0x7fffffff80000000l; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0xffffff2400000000l); }
@Test
public void test07633() { x = 0x7fffffffdeadf00dl; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0xffffffc6baf49658l); }
@Test
public void test07634() { x = 0x8000000000000000l; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07635() { x = 0xffffffffffffffffl; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe48l); }
@Test
public void test07636() { x = 0xfffffffffffffffel; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffc90l); }
@Test
public void test07637() { x = 0xefffffffffffffffl; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffe48l); }
@Test
public void test07638() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1b8l; AssertJUnit.assertEquals("multiply", result, 0xbaf497d6baf49658l); }
@Test
public void test07639() { x = 0x000000007fffffffl; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0x00001b7fffffc900l); }
@Test
public void test07640() { x = 0x0000000080000000l; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0x00001b8000000000l); }
@Test
public void test07641() { x = 0x00000000ffffffffl; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0x000036ffffffc900l); }
@Test
public void test07642() { x = 0x000000017fffffffl; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0x0000527fffffc900l); }
@Test
public void test07643() { x = 0x0000000180000000l; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0x0000528000000000l); }
@Test
public void test07644() { x = 0x00000001ffffffffl; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0x00006dffffffc900l); }
@Test
public void test07645() { x = 0xffffffff7fffffffl; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0xffffe47fffffc900l); }
@Test
public void test07646() { x = 0xffffffff80000000l; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0xffffe48000000000l); }
@Test
public void test07647() { x = 0x00000001deadf00dl; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0x000066d75e92cb00l); }
@Test
public void test07648() { x = 0xffffffffdeadf00dl; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0xfffff8d75e92cb00l); }
@Test
public void test07649() { x = 0x7fffffffffffffffl; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc900l); }
@Test
public void test07650() { x = 0x7fffffff7fffffffl; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0xffffe47fffffc900l); }
@Test
public void test07651() { x = 0x7fffffff80000000l; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0xffffe48000000000l); }
@Test
public void test07652() { x = 0x7fffffffdeadf00dl; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0xfffff8d75e92cb00l); }
@Test
public void test07653() { x = 0x8000000000000000l; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07654() { x = 0xffffffffffffffffl; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc900l); }
@Test
public void test07655() { x = 0xfffffffffffffffel; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff9200l); }
@Test
public void test07656() { x = 0xefffffffffffffffl; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc900l); }
@Test
public void test07657() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3700l; AssertJUnit.assertEquals("multiply", result, 0x5e92fad75e92cb00l); }
@Test
public void test07658() { x = 0x000000007fffffffl; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffc900000000l); }
@Test
public void test07659() { x = 0x0000000080000000l; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07660() { x = 0x00000000ffffffffl; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc900000000l); }
@Test
public void test07661() { x = 0x000000017fffffffl; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffc900000000l); }
@Test
public void test07662() { x = 0x0000000180000000l; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07663() { x = 0x00000001ffffffffl; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc900000000l); }
@Test
public void test07664() { x = 0xffffffff7fffffffl; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffc900000000l); }
@Test
public void test07665() { x = 0xffffffff80000000l; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07666() { x = 0x00000001deadf00dl; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0xd75e92cb00000000l); }
@Test
public void test07667() { x = 0xffffffffdeadf00dl; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0xd75e92cb00000000l); }
@Test
public void test07668() { x = 0x7fffffffffffffffl; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc900000000l); }
@Test
public void test07669() { x = 0x7fffffff7fffffffl; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffc900000000l); }
@Test
public void test07670() { x = 0x7fffffff80000000l; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07671() { x = 0x7fffffffdeadf00dl; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0xd75e92cb00000000l); }
@Test
public void test07672() { x = 0x8000000000000000l; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07673() { x = 0xffffffffffffffffl; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc900000000l); }
@Test
public void test07674() { x = 0xfffffffffffffffel; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9200000000l); }
@Test
public void test07675() { x = 0xefffffffffffffffl; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc900000000l); }
@Test
public void test07676() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3700000000l; AssertJUnit.assertEquals("multiply", result, 0xd75e92cb00000000l); }
@Test
public void test07677() { x = 0x000000007fffffffl; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4800000000l); }
@Test
public void test07678() { x = 0x0000000080000000l; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07679() { x = 0x00000000ffffffffl; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4800000000l); }
@Test
public void test07680() { x = 0x000000017fffffffl; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4800000000l); }
@Test
public void test07681() { x = 0x0000000180000000l; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07682() { x = 0x00000001ffffffffl; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4800000000l); }
@Test
public void test07683() { x = 0xffffffff7fffffffl; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4800000000l); }
@Test
public void test07684() { x = 0xffffffff80000000l; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07685() { x = 0x00000001deadf00dl; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0xbaf4965800000000l); }
@Test
public void test07686() { x = 0xffffffffdeadf00dl; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0xbaf4965800000000l); }
@Test
public void test07687() { x = 0x7fffffffffffffffl; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4800000000l); }
@Test
public void test07688() { x = 0x7fffffff7fffffffl; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4800000000l); }
@Test
public void test07689() { x = 0x7fffffff80000000l; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07690() { x = 0x7fffffffdeadf00dl; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0xbaf4965800000000l); }
@Test
public void test07691() { x = 0x8000000000000000l; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07692() { x = 0xffffffffffffffffl; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4800000000l); }
@Test
public void test07693() { x = 0xfffffffffffffffel; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc9000000000l); }
@Test
public void test07694() { x = 0xefffffffffffffffl; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4800000000l); }
@Test
public void test07695() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1b800000000l; AssertJUnit.assertEquals("multiply", result, 0xbaf4965800000000l); }
@Test
public void test07696() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0xffffffe480000037l); }
@Test
public void test07697() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0xffffffe480000000l); }
@Test
public void test07698() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0xffffffc900000037l); }
@Test
public void test07699() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0xffffffad80000037l); }
@Test
public void test07700() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0xffffffad80000000l); }
@Test
public void test07701() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0xffffff9200000037l); }
@Test
public void test07702() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0x0000001b80000037l); }
@Test
public void test07703() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0x0000001b80000000l); }
@Test
public void test07704() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0xffffff9928a16d35l); }
@Test
public void test07705() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0x0000000728a16d35l); }
@Test
public void test07706() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000037l); }
@Test
public void test07707() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0x8000001b80000037l); }
@Test
public void test07708() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0x8000001b80000000l); }
@Test
public void test07709() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0x8000000728a16d35l); }
@Test
public void test07710() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07711() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000037l); }
@Test
public void test07712() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0x000000000000006el); }
@Test
public void test07713() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0x7000000000000037l); }
@Test
public void test07714() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffc9l; AssertJUnit.assertEquals("multiply", result, 0x28a16d0528a16d35l); }
@Test
public void test07715() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0xffffff24000001b8l); }
@Test
public void test07716() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0xffffff2400000000l); }
@Test
public void test07717() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0xfffffe48000001b8l); }
@Test
public void test07718() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6c000001b8l); }
@Test
public void test07719() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6c00000000l); }
@Test
public void test07720() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0xfffffc90000001b8l); }
@Test
public void test07721() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0x000000dc000001b8l); }
@Test
public void test07722() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0x000000dc00000000l); }
@Test
public void test07723() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0xfffffcc9450b69a8l); }
@Test
public void test07724() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0x00000039450b69a8l); }
@Test
public void test07725() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001b8l); }
@Test
public void test07726() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0x000000dc000001b8l); }
@Test
public void test07727() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0x000000dc00000000l); }
@Test
public void test07728() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0x00000039450b69a8l); }
@Test
public void test07729() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07730() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001b8l); }
@Test
public void test07731() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000370l); }
@Test
public void test07732() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0x80000000000001b8l); }
@Test
public void test07733() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe48l; AssertJUnit.assertEquals("multiply", result, 0x450b6829450b69a8l); }
@Test
public void test07734() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0xffffe48000003700l); }
@Test
public void test07735() { x = 0x0000000080000000l; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0xffffe48000000000l); }
@Test
public void test07736() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0xffffc90000003700l); }
@Test
public void test07737() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0xffffad8000003700l); }
@Test
public void test07738() { x = 0x0000000180000000l; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0xffffad8000000000l); }
@Test
public void test07739() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0xffff920000003700l); }
@Test
public void test07740() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0x00001b8000003700l); }
@Test
public void test07741() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0x00001b8000000000l); }
@Test
public void test07742() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0xffff9928a16d3500l); }
@Test
public void test07743() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0x00000728a16d3500l); }
@Test
public void test07744() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003700l); }
@Test
public void test07745() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0x00001b8000003700l); }
@Test
public void test07746() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0x00001b8000000000l); }
@Test
public void test07747() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0x00000728a16d3500l); }
@Test
public void test07748() { x = 0x8000000000000000l; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07749() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003700l); }
@Test
public void test07750() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006e00l); }
@Test
public void test07751() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003700l); }
@Test
public void test07752() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffc900l; AssertJUnit.assertEquals("multiply", result, 0xa16d0528a16d3500l); }
@Test
public void test07753() { x = 0x000000007fffffffl; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003700000000l); }
@Test
public void test07754() { x = 0x0000000080000000l; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07755() { x = 0x00000000ffffffffl; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003700000000l); }
@Test
public void test07756() { x = 0x000000017fffffffl; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003700000000l); }
@Test
public void test07757() { x = 0x0000000180000000l; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07758() { x = 0x00000001ffffffffl; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003700000000l); }
@Test
public void test07759() { x = 0xffffffff7fffffffl; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003700000000l); }
@Test
public void test07760() { x = 0xffffffff80000000l; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07761() { x = 0x00000001deadf00dl; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x28a16d3500000000l); }
@Test
public void test07762() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x28a16d3500000000l); }
@Test
public void test07763() { x = 0x7fffffffffffffffl; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003700000000l); }
@Test
public void test07764() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003700000000l); }
@Test
public void test07765() { x = 0x7fffffff80000000l; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07766() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x28a16d3500000000l); }
@Test
public void test07767() { x = 0x8000000000000000l; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07768() { x = 0xffffffffffffffffl; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003700000000l); }
@Test
public void test07769() { x = 0xfffffffffffffffel; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006e00000000l); }
@Test
public void test07770() { x = 0xefffffffffffffffl; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003700000000l); }
@Test
public void test07771() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffc900000000l; AssertJUnit.assertEquals("multiply", result, 0x28a16d3500000000l); }
@Test
public void test07772() { x = 0x000000007fffffffl; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b800000000l); }
@Test
public void test07773() { x = 0x0000000080000000l; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07774() { x = 0x00000000ffffffffl; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b800000000l); }
@Test
public void test07775() { x = 0x000000017fffffffl; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b800000000l); }
@Test
public void test07776() { x = 0x0000000180000000l; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07777() { x = 0x00000001ffffffffl; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b800000000l); }
@Test
public void test07778() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b800000000l); }
@Test
public void test07779() { x = 0xffffffff80000000l; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07780() { x = 0x00000001deadf00dl; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x450b69a800000000l); }
@Test
public void test07781() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x450b69a800000000l); }
@Test
public void test07782() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b800000000l); }
@Test
public void test07783() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b800000000l); }
@Test
public void test07784() { x = 0x7fffffff80000000l; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07785() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x450b69a800000000l); }
@Test
public void test07786() { x = 0x8000000000000000l; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07787() { x = 0xffffffffffffffffl; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b800000000l); }
@Test
public void test07788() { x = 0xfffffffffffffffel; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000037000000000l); }
@Test
public void test07789() { x = 0xefffffffffffffffl; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001b800000000l); }
@Test
public void test07790() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe4800000000l; AssertJUnit.assertEquals("multiply", result, 0x450b69a800000000l); }
@Test
public void test07791() { x = 0x000000007fffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x0000001bffffffc8l); }
@Test
public void test07792() { x = 0x0000000080000000l; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test07793() { x = 0x00000000ffffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x00000037ffffffc8l); }
@Test
public void test07794() { x = 0x000000017fffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x00000053ffffffc8l); }
@Test
public void test07795() { x = 0x0000000180000000l; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x0000005400000000l); }
@Test
public void test07796() { x = 0x00000001ffffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x0000006fffffffc8l); }
@Test
public void test07797() { x = 0xffffffff7fffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xffffffe3ffffffc8l); }
@Test
public void test07798() { x = 0xffffffff80000000l; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test07799() { x = 0x00000001deadf00dl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x00000068b60c82d8l); }
@Test
public void test07800() { x = 0xffffffffdeadf00dl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xfffffff8b60c82d8l); }
@Test
public void test07801() { x = 0x7fffffffffffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffc8l); }
@Test
public void test07802() { x = 0x7fffffff7fffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xffffffe3ffffffc8l); }
@Test
public void test07803() { x = 0x7fffffff80000000l; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test07804() { x = 0x7fffffffdeadf00dl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xfffffff8b60c82d8l); }
@Test
public void test07805() { x = 0x8000000000000000l; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07806() { x = 0xffffffffffffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffc8l); }
@Test
public void test07807() { x = 0xfffffffffffffffel; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff90l); }
@Test
public void test07808() { x = 0xefffffffffffffffl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffc8l); }
@Test
public void test07809() { x = 0xdeadf00ddeadf00dl; long result = x * 0x38l; AssertJUnit.assertEquals("multiply", result, 0xb60c8308b60c82d8l); }
@Test
public void test07810() { x = 0x000000007fffffffl; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0x000000dffffffe40l); }
@Test
public void test07811() { x = 0x0000000080000000l; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0x000000e000000000l); }
@Test
public void test07812() { x = 0x00000000ffffffffl; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0x000001bffffffe40l); }
@Test
public void test07813() { x = 0x000000017fffffffl; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0x0000029ffffffe40l); }
@Test
public void test07814() { x = 0x0000000180000000l; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0x000002a000000000l); }
@Test
public void test07815() { x = 0x00000001ffffffffl; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0x0000037ffffffe40l); }
@Test
public void test07816() { x = 0xffffffff7fffffffl; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0xffffff1ffffffe40l); }
@Test
public void test07817() { x = 0xffffffff80000000l; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0xffffff2000000000l); }
@Test
public void test07818() { x = 0x00000001deadf00dl; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0x00000345b06416c0l); }
@Test
public void test07819() { x = 0xffffffffdeadf00dl; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0xffffffc5b06416c0l); }
@Test
public void test07820() { x = 0x7fffffffffffffffl; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe40l); }
@Test
public void test07821() { x = 0x7fffffff7fffffffl; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0xffffff1ffffffe40l); }
@Test
public void test07822() { x = 0x7fffffff80000000l; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0xffffff2000000000l); }
@Test
public void test07823() { x = 0x7fffffffdeadf00dl; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0xffffffc5b06416c0l); }
@Test
public void test07824() { x = 0x8000000000000000l; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07825() { x = 0xffffffffffffffffl; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe40l); }
@Test
public void test07826() { x = 0xfffffffffffffffel; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffc80l); }
@Test
public void test07827() { x = 0xefffffffffffffffl; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe40l); }
@Test
public void test07828() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1c0l; AssertJUnit.assertEquals("multiply", result, 0xb0641845b06416c0l); }
@Test
public void test07829() { x = 0x000000007fffffffl; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0x00001bffffffc800l); }
@Test
public void test07830() { x = 0x0000000080000000l; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0x00001c0000000000l); }
@Test
public void test07831() { x = 0x00000000ffffffffl; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0x000037ffffffc800l); }
@Test
public void test07832() { x = 0x000000017fffffffl; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0x000053ffffffc800l); }
@Test
public void test07833() { x = 0x0000000180000000l; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0x0000540000000000l); }
@Test
public void test07834() { x = 0x00000001ffffffffl; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0x00006fffffffc800l); }
@Test
public void test07835() { x = 0xffffffff7fffffffl; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0xffffe3ffffffc800l); }
@Test
public void test07836() { x = 0xffffffff80000000l; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0xffffe40000000000l); }
@Test
public void test07837() { x = 0x00000001deadf00dl; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0x000068b60c82d800l); }
@Test
public void test07838() { x = 0xffffffffdeadf00dl; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0xfffff8b60c82d800l); }
@Test
public void test07839() { x = 0x7fffffffffffffffl; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc800l); }
@Test
public void test07840() { x = 0x7fffffff7fffffffl; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0xffffe3ffffffc800l); }
@Test
public void test07841() { x = 0x7fffffff80000000l; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0xffffe40000000000l); }
@Test
public void test07842() { x = 0x7fffffffdeadf00dl; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0xfffff8b60c82d800l); }
@Test
public void test07843() { x = 0x8000000000000000l; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07844() { x = 0xffffffffffffffffl; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc800l); }
@Test
public void test07845() { x = 0xfffffffffffffffel; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff9000l); }
@Test
public void test07846() { x = 0xefffffffffffffffl; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc800l); }
@Test
public void test07847() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3800l; AssertJUnit.assertEquals("multiply", result, 0x0c8308b60c82d800l); }
@Test
public void test07848() { x = 0x000000007fffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test07849() { x = 0x0000000080000000l; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07850() { x = 0x00000000ffffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test07851() { x = 0x000000017fffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test07852() { x = 0x0000000180000000l; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07853() { x = 0x00000001ffffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test07854() { x = 0xffffffff7fffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test07855() { x = 0xffffffff80000000l; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07856() { x = 0x00000001deadf00dl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xb60c82d800000000l); }
@Test
public void test07857() { x = 0xffffffffdeadf00dl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xb60c82d800000000l); }
@Test
public void test07858() { x = 0x7fffffffffffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test07859() { x = 0x7fffffff7fffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test07860() { x = 0x7fffffff80000000l; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07861() { x = 0x7fffffffdeadf00dl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xb60c82d800000000l); }
@Test
public void test07862() { x = 0x8000000000000000l; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07863() { x = 0xffffffffffffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test07864() { x = 0xfffffffffffffffel; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000000l); }
@Test
public void test07865() { x = 0xefffffffffffffffl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000000l); }
@Test
public void test07866() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3800000000l; AssertJUnit.assertEquals("multiply", result, 0xb60c82d800000000l); }
@Test
public void test07867() { x = 0x000000007fffffffl; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4000000000l); }
@Test
public void test07868() { x = 0x0000000080000000l; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07869() { x = 0x00000000ffffffffl; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4000000000l); }
@Test
public void test07870() { x = 0x000000017fffffffl; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4000000000l); }
@Test
public void test07871() { x = 0x0000000180000000l; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07872() { x = 0x00000001ffffffffl; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4000000000l); }
@Test
public void test07873() { x = 0xffffffff7fffffffl; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4000000000l); }
@Test
public void test07874() { x = 0xffffffff80000000l; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07875() { x = 0x00000001deadf00dl; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0xb06416c000000000l); }
@Test
public void test07876() { x = 0xffffffffdeadf00dl; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0xb06416c000000000l); }
@Test
public void test07877() { x = 0x7fffffffffffffffl; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4000000000l); }
@Test
public void test07878() { x = 0x7fffffff7fffffffl; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4000000000l); }
@Test
public void test07879() { x = 0x7fffffff80000000l; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07880() { x = 0x7fffffffdeadf00dl; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0xb06416c000000000l); }
@Test
public void test07881() { x = 0x8000000000000000l; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07882() { x = 0xffffffffffffffffl; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4000000000l); }
@Test
public void test07883() { x = 0xfffffffffffffffel; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc8000000000l); }
@Test
public void test07884() { x = 0xefffffffffffffffl; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe4000000000l); }
@Test
public void test07885() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1c000000000l; AssertJUnit.assertEquals("multiply", result, 0xb06416c000000000l); }
@Test
public void test07886() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000038l); }
@Test
public void test07887() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0xffffffe400000000l); }
@Test
public void test07888() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0xffffffc800000038l); }
@Test
public void test07889() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0xffffffac00000038l); }
@Test
public void test07890() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0xffffffac00000000l); }
@Test
public void test07891() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0xffffff9000000038l); }
@Test
public void test07892() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000038l); }
@Test
public void test07893() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test07894() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0xffffff9749f37d28l); }
@Test
public void test07895() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000000749f37d28l); }
@Test
public void test07896() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000038l); }
@Test
public void test07897() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000038l); }
@Test
public void test07898() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000001c00000000l); }
@Test
public void test07899() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000000749f37d28l); }
@Test
public void test07900() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07901() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000038l); }
@Test
public void test07902() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000070l); }
@Test
public void test07903() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000038l); }
@Test
public void test07904() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffc8l; AssertJUnit.assertEquals("multiply", result, 0x49f37cf749f37d28l); }
@Test
public void test07905() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0xffffff20000001c0l); }
@Test
public void test07906() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0xffffff2000000000l); }
@Test
public void test07907() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0xfffffe40000001c0l); }
@Test
public void test07908() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0xfffffd60000001c0l); }
@Test
public void test07909() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6000000000l); }
@Test
public void test07910() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0xfffffc80000001c0l); }
@Test
public void test07911() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0x000000e0000001c0l); }
@Test
public void test07912() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0x000000e000000000l); }
@Test
public void test07913() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0xfffffcba4f9be940l); }
@Test
public void test07914() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0x0000003a4f9be940l); }
@Test
public void test07915() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001c0l); }
@Test
public void test07916() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0x000000e0000001c0l); }
@Test
public void test07917() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0x000000e000000000l); }
@Test
public void test07918() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0x0000003a4f9be940l); }
@Test
public void test07919() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07920() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001c0l); }
@Test
public void test07921() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000380l); }
@Test
public void test07922() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001c0l); }
@Test
public void test07923() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe40l; AssertJUnit.assertEquals("multiply", result, 0x4f9be7ba4f9be940l); }
@Test
public void test07924() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0xffffe40000003800l); }
@Test
public void test07925() { x = 0x0000000080000000l; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0xffffe40000000000l); }
@Test
public void test07926() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0xffffc80000003800l); }
@Test
public void test07927() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0xffffac0000003800l); }
@Test
public void test07928() { x = 0x0000000180000000l; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0xffffac0000000000l); }
@Test
public void test07929() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0xffff900000003800l); }
@Test
public void test07930() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0x00001c0000003800l); }
@Test
public void test07931() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0x00001c0000000000l); }
@Test
public void test07932() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0xffff9749f37d2800l); }
@Test
public void test07933() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0x00000749f37d2800l); }
@Test
public void test07934() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003800l); }
@Test
public void test07935() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0x00001c0000003800l); }
@Test
public void test07936() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0x00001c0000000000l); }
@Test
public void test07937() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0x00000749f37d2800l); }
@Test
public void test07938() { x = 0x8000000000000000l; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07939() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003800l); }
@Test
public void test07940() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000007000l); }
@Test
public void test07941() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003800l); }
@Test
public void test07942() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffc800l; AssertJUnit.assertEquals("multiply", result, 0xf37cf749f37d2800l); }
@Test
public void test07943() { x = 0x000000007fffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test07944() { x = 0x0000000080000000l; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07945() { x = 0x00000000ffffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test07946() { x = 0x000000017fffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test07947() { x = 0x0000000180000000l; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07948() { x = 0x00000001ffffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test07949() { x = 0xffffffff7fffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test07950() { x = 0xffffffff80000000l; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07951() { x = 0x00000001deadf00dl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x49f37d2800000000l); }
@Test
public void test07952() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x49f37d2800000000l); }
@Test
public void test07953() { x = 0x7fffffffffffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test07954() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test07955() { x = 0x7fffffff80000000l; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07956() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x49f37d2800000000l); }
@Test
public void test07957() { x = 0x8000000000000000l; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07958() { x = 0xffffffffffffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test07959() { x = 0xfffffffffffffffel; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007000000000l); }
@Test
public void test07960() { x = 0xefffffffffffffffl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003800000000l); }
@Test
public void test07961() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffc800000000l; AssertJUnit.assertEquals("multiply", result, 0x49f37d2800000000l); }
@Test
public void test07962() { x = 0x000000007fffffffl; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001c000000000l); }
@Test
public void test07963() { x = 0x0000000080000000l; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07964() { x = 0x00000000ffffffffl; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001c000000000l); }
@Test
public void test07965() { x = 0x000000017fffffffl; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001c000000000l); }
@Test
public void test07966() { x = 0x0000000180000000l; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07967() { x = 0x00000001ffffffffl; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001c000000000l); }
@Test
public void test07968() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001c000000000l); }
@Test
public void test07969() { x = 0xffffffff80000000l; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07970() { x = 0x00000001deadf00dl; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x4f9be94000000000l); }
@Test
public void test07971() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x4f9be94000000000l); }
@Test
public void test07972() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001c000000000l); }
@Test
public void test07973() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001c000000000l); }
@Test
public void test07974() { x = 0x7fffffff80000000l; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07975() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x4f9be94000000000l); }
@Test
public void test07976() { x = 0x8000000000000000l; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test07977() { x = 0xffffffffffffffffl; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001c000000000l); }
@Test
public void test07978() { x = 0xfffffffffffffffel; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000038000000000l); }
@Test
public void test07979() { x = 0xefffffffffffffffl; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x000001c000000000l); }
@Test
public void test07980() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe4000000000l; AssertJUnit.assertEquals("multiply", result, 0x4f9be94000000000l); }
@Test
public void test07981() { x = 0x000000007fffffffl; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0x0000001d7fffffc5l); }
@Test
public void test07982() { x = 0x0000000080000000l; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0x0000001d80000000l); }
@Test
public void test07983() { x = 0x00000000ffffffffl; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0x0000003affffffc5l); }
@Test
public void test07984() { x = 0x000000017fffffffl; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0x000000587fffffc5l); }
@Test
public void test07985() { x = 0x0000000180000000l; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0x0000005880000000l); }
@Test
public void test07986() { x = 0x00000001ffffffffl; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0x00000075ffffffc5l); }
@Test
public void test07987() { x = 0xffffffff7fffffffl; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0xffffffe27fffffc5l); }
@Test
public void test07988() { x = 0xffffffff80000000l; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0xffffffe280000000l); }
@Test
public void test07989() { x = 0x00000001deadf00dl; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0x0000006e521652ffl); }
@Test
public void test07990() { x = 0xffffffffdeadf00dl; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0xfffffff8521652ffl); }
@Test
public void test07991() { x = 0x7fffffffffffffffl; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffc5l); }
@Test
public void test07992() { x = 0x7fffffff7fffffffl; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0x7fffffe27fffffc5l); }
@Test
public void test07993() { x = 0x7fffffff80000000l; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0x7fffffe280000000l); }
@Test
public void test07994() { x = 0x7fffffffdeadf00dl; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0x7ffffff8521652ffl); }
@Test
public void test07995() { x = 0x8000000000000000l; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test07996() { x = 0xffffffffffffffffl; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffc5l); }
@Test
public void test07997() { x = 0xfffffffffffffffel; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff8al); }
@Test
public void test07998() { x = 0xefffffffffffffffl; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0x4fffffffffffffc5l); }
@Test
public void test07999() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3bl; AssertJUnit.assertEquals("multiply", result, 0x52165332521652ffl); }
@Test
public void test08000() { x = 0x000000007fffffffl; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0x000000ebfffffe28l); }
@Test
public void test08001() { x = 0x0000000080000000l; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0x000000ec00000000l); }
@Test
public void test08002() { x = 0x00000000ffffffffl; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0x000001d7fffffe28l); }
@Test
public void test08003() { x = 0x000000017fffffffl; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0x000002c3fffffe28l); }
@Test
public void test08004() { x = 0x0000000180000000l; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0x000002c400000000l); }
@Test
public void test08005() { x = 0x00000001ffffffffl; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0x000003affffffe28l); }
@Test
public void test08006() { x = 0xffffffff7fffffffl; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0xffffff13fffffe28l); }
@Test
public void test08007() { x = 0xffffffff80000000l; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0xffffff1400000000l); }
@Test
public void test08008() { x = 0x00000001deadf00dl; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0x0000037290b297f8l); }
@Test
public void test08009() { x = 0xffffffffdeadf00dl; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0xffffffc290b297f8l); }
@Test
public void test08010() { x = 0x7fffffffffffffffl; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe28l); }
@Test
public void test08011() { x = 0x7fffffff7fffffffl; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0xffffff13fffffe28l); }
@Test
public void test08012() { x = 0x7fffffff80000000l; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0xffffff1400000000l); }
@Test
public void test08013() { x = 0x7fffffffdeadf00dl; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0xffffffc290b297f8l); }
@Test
public void test08014() { x = 0x8000000000000000l; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08015() { x = 0xffffffffffffffffl; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe28l); }
@Test
public void test08016() { x = 0xfffffffffffffffel; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffc50l); }
@Test
public void test08017() { x = 0xefffffffffffffffl; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffe28l); }
@Test
public void test08018() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1d8l; AssertJUnit.assertEquals("multiply", result, 0x90b2999290b297f8l); }
@Test
public void test08019() { x = 0x000000007fffffffl; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0x00001d7fffffc500l); }
@Test
public void test08020() { x = 0x0000000080000000l; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0x00001d8000000000l); }
@Test
public void test08021() { x = 0x00000000ffffffffl; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0x00003affffffc500l); }
@Test
public void test08022() { x = 0x000000017fffffffl; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0x0000587fffffc500l); }
@Test
public void test08023() { x = 0x0000000180000000l; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0x0000588000000000l); }
@Test
public void test08024() { x = 0x00000001ffffffffl; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0x000075ffffffc500l); }
@Test
public void test08025() { x = 0xffffffff7fffffffl; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0xffffe27fffffc500l); }
@Test
public void test08026() { x = 0xffffffff80000000l; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0xffffe28000000000l); }
@Test
public void test08027() { x = 0x00000001deadf00dl; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0x00006e521652ff00l); }
@Test
public void test08028() { x = 0xffffffffdeadf00dl; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0xfffff8521652ff00l); }
@Test
public void test08029() { x = 0x7fffffffffffffffl; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc500l); }
@Test
public void test08030() { x = 0x7fffffff7fffffffl; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0xffffe27fffffc500l); }
@Test
public void test08031() { x = 0x7fffffff80000000l; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0xffffe28000000000l); }
@Test
public void test08032() { x = 0x7fffffffdeadf00dl; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0xfffff8521652ff00l); }
@Test
public void test08033() { x = 0x8000000000000000l; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08034() { x = 0xffffffffffffffffl; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc500l); }
@Test
public void test08035() { x = 0xfffffffffffffffel; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff8a00l); }
@Test
public void test08036() { x = 0xefffffffffffffffl; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc500l); }
@Test
public void test08037() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3b00l; AssertJUnit.assertEquals("multiply", result, 0x165332521652ff00l); }
@Test
public void test08038() { x = 0x000000007fffffffl; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffc500000000l); }
@Test
public void test08039() { x = 0x0000000080000000l; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08040() { x = 0x00000000ffffffffl; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc500000000l); }
@Test
public void test08041() { x = 0x000000017fffffffl; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffc500000000l); }
@Test
public void test08042() { x = 0x0000000180000000l; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08043() { x = 0x00000001ffffffffl; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc500000000l); }
@Test
public void test08044() { x = 0xffffffff7fffffffl; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffc500000000l); }
@Test
public void test08045() { x = 0xffffffff80000000l; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08046() { x = 0x00000001deadf00dl; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0x521652ff00000000l); }
@Test
public void test08047() { x = 0xffffffffdeadf00dl; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0x521652ff00000000l); }
@Test
public void test08048() { x = 0x7fffffffffffffffl; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc500000000l); }
@Test
public void test08049() { x = 0x7fffffff7fffffffl; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffc500000000l); }
@Test
public void test08050() { x = 0x7fffffff80000000l; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08051() { x = 0x7fffffffdeadf00dl; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0x521652ff00000000l); }
@Test
public void test08052() { x = 0x8000000000000000l; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08053() { x = 0xffffffffffffffffl; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc500000000l); }
@Test
public void test08054() { x = 0xfffffffffffffffel; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8a00000000l); }
@Test
public void test08055() { x = 0xefffffffffffffffl; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc500000000l); }
@Test
public void test08056() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3b00000000l; AssertJUnit.assertEquals("multiply", result, 0x521652ff00000000l); }
@Test
public void test08057() { x = 0x000000007fffffffl; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe2800000000l); }
@Test
public void test08058() { x = 0x0000000080000000l; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08059() { x = 0x00000000ffffffffl; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe2800000000l); }
@Test
public void test08060() { x = 0x000000017fffffffl; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe2800000000l); }
@Test
public void test08061() { x = 0x0000000180000000l; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08062() { x = 0x00000001ffffffffl; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe2800000000l); }
@Test
public void test08063() { x = 0xffffffff7fffffffl; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe2800000000l); }
@Test
public void test08064() { x = 0xffffffff80000000l; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08065() { x = 0x00000001deadf00dl; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0x90b297f800000000l); }
@Test
public void test08066() { x = 0xffffffffdeadf00dl; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0x90b297f800000000l); }
@Test
public void test08067() { x = 0x7fffffffffffffffl; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe2800000000l); }
@Test
public void test08068() { x = 0x7fffffff7fffffffl; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe2800000000l); }
@Test
public void test08069() { x = 0x7fffffff80000000l; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08070() { x = 0x7fffffffdeadf00dl; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0x90b297f800000000l); }
@Test
public void test08071() { x = 0x8000000000000000l; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08072() { x = 0xffffffffffffffffl; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe2800000000l); }
@Test
public void test08073() { x = 0xfffffffffffffffel; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc5000000000l); }
@Test
public void test08074() { x = 0xefffffffffffffffl; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe2800000000l); }
@Test
public void test08075() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1d800000000l; AssertJUnit.assertEquals("multiply", result, 0x90b297f800000000l); }
@Test
public void test08076() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0xffffffe28000003bl); }
@Test
public void test08077() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0xffffffe280000000l); }
@Test
public void test08078() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0xffffffc50000003bl); }
@Test
public void test08079() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0xffffffa78000003bl); }
@Test
public void test08080() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0xffffffa780000000l); }
@Test
public void test08081() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0xffffff8a0000003bl); }
@Test
public void test08082() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0x0000001d8000003bl); }
@Test
public void test08083() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0x0000001d80000000l); }
@Test
public void test08084() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0xffffff91ade9ad01l); }
@Test
public void test08085() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0x00000007ade9ad01l); }
@Test
public void test08086() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0x800000000000003bl); }
@Test
public void test08087() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0x8000001d8000003bl); }
@Test
public void test08088() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0x8000001d80000000l); }
@Test
public void test08089() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0x80000007ade9ad01l); }
@Test
public void test08090() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08091() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0x000000000000003bl); }
@Test
public void test08092() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000076l); }
@Test
public void test08093() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0xb00000000000003bl); }
@Test
public void test08094() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffc5l; AssertJUnit.assertEquals("multiply", result, 0xade9accdade9ad01l); }
@Test
public void test08095() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0xffffff14000001d8l); }
@Test
public void test08096() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0xffffff1400000000l); }
@Test
public void test08097() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0xfffffe28000001d8l); }
@Test
public void test08098() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0xfffffd3c000001d8l); }
@Test
public void test08099() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0xfffffd3c00000000l); }
@Test
public void test08100() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0xfffffc50000001d8l); }
@Test
public void test08101() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0x000000ec000001d8l); }
@Test
public void test08102() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0x000000ec00000000l); }
@Test
public void test08103() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0xfffffc8d6f4d6808l); }
@Test
public void test08104() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0x0000003d6f4d6808l); }
@Test
public void test08105() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001d8l); }
@Test
public void test08106() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0x000000ec000001d8l); }
@Test
public void test08107() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0x000000ec00000000l); }
@Test
public void test08108() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0x0000003d6f4d6808l); }
@Test
public void test08109() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08110() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001d8l); }
@Test
public void test08111() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0x00000000000003b0l); }
@Test
public void test08112() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0x80000000000001d8l); }
@Test
public void test08113() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe28l; AssertJUnit.assertEquals("multiply", result, 0x6f4d666d6f4d6808l); }
@Test
public void test08114() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0xffffe28000003b00l); }
@Test
public void test08115() { x = 0x0000000080000000l; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0xffffe28000000000l); }
@Test
public void test08116() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0xffffc50000003b00l); }
@Test
public void test08117() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0xffffa78000003b00l); }
@Test
public void test08118() { x = 0x0000000180000000l; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0xffffa78000000000l); }
@Test
public void test08119() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0xffff8a0000003b00l); }
@Test
public void test08120() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0x00001d8000003b00l); }
@Test
public void test08121() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0x00001d8000000000l); }
@Test
public void test08122() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0xffff91ade9ad0100l); }
@Test
public void test08123() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0x000007ade9ad0100l); }
@Test
public void test08124() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003b00l); }
@Test
public void test08125() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0x00001d8000003b00l); }
@Test
public void test08126() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0x00001d8000000000l); }
@Test
public void test08127() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0x000007ade9ad0100l); }
@Test
public void test08128() { x = 0x8000000000000000l; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08129() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003b00l); }
@Test
public void test08130() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000007600l); }
@Test
public void test08131() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003b00l); }
@Test
public void test08132() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffc500l; AssertJUnit.assertEquals("multiply", result, 0xe9accdade9ad0100l); }
@Test
public void test08133() { x = 0x000000007fffffffl; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003b00000000l); }
@Test
public void test08134() { x = 0x0000000080000000l; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08135() { x = 0x00000000ffffffffl; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003b00000000l); }
@Test
public void test08136() { x = 0x000000017fffffffl; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003b00000000l); }
@Test
public void test08137() { x = 0x0000000180000000l; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08138() { x = 0x00000001ffffffffl; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003b00000000l); }
@Test
public void test08139() { x = 0xffffffff7fffffffl; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003b00000000l); }
@Test
public void test08140() { x = 0xffffffff80000000l; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08141() { x = 0x00000001deadf00dl; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0xade9ad0100000000l); }
@Test
public void test08142() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0xade9ad0100000000l); }
@Test
public void test08143() { x = 0x7fffffffffffffffl; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003b00000000l); }
@Test
public void test08144() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003b00000000l); }
@Test
public void test08145() { x = 0x7fffffff80000000l; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08146() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0xade9ad0100000000l); }
@Test
public void test08147() { x = 0x8000000000000000l; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08148() { x = 0xffffffffffffffffl; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003b00000000l); }
@Test
public void test08149() { x = 0xfffffffffffffffel; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007600000000l); }
@Test
public void test08150() { x = 0xefffffffffffffffl; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003b00000000l); }
@Test
public void test08151() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffc500000000l; AssertJUnit.assertEquals("multiply", result, 0xade9ad0100000000l); }
@Test
public void test08152() { x = 0x000000007fffffffl; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001d800000000l); }
@Test
public void test08153() { x = 0x0000000080000000l; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08154() { x = 0x00000000ffffffffl; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001d800000000l); }
@Test
public void test08155() { x = 0x000000017fffffffl; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001d800000000l); }
@Test
public void test08156() { x = 0x0000000180000000l; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08157() { x = 0x00000001ffffffffl; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001d800000000l); }
@Test
public void test08158() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001d800000000l); }
@Test
public void test08159() { x = 0xffffffff80000000l; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08160() { x = 0x00000001deadf00dl; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x6f4d680800000000l); }
@Test
public void test08161() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x6f4d680800000000l); }
@Test
public void test08162() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001d800000000l); }
@Test
public void test08163() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001d800000000l); }
@Test
public void test08164() { x = 0x7fffffff80000000l; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08165() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x6f4d680800000000l); }
@Test
public void test08166() { x = 0x8000000000000000l; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08167() { x = 0xffffffffffffffffl; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001d800000000l); }
@Test
public void test08168() { x = 0xfffffffffffffffel; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003b000000000l); }
@Test
public void test08169() { x = 0xefffffffffffffffl; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001d800000000l); }
@Test
public void test08170() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe2800000000l; AssertJUnit.assertEquals("multiply", result, 0x6f4d680800000000l); }
@Test
public void test08171() { x = 0x000000007fffffffl; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0x0000001e7fffffc3l); }
@Test
public void test08172() { x = 0x0000000080000000l; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0x0000001e80000000l); }
@Test
public void test08173() { x = 0x00000000ffffffffl; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0x0000003cffffffc3l); }
@Test
public void test08174() { x = 0x000000017fffffffl; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0x0000005b7fffffc3l); }
@Test
public void test08175() { x = 0x0000000180000000l; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0x0000005b80000000l); }
@Test
public void test08176() { x = 0x00000001ffffffffl; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0x00000079ffffffc3l); }
@Test
public void test08177() { x = 0xffffffff7fffffffl; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0xffffffe17fffffc3l); }
@Test
public void test08178() { x = 0xffffffff80000000l; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0xffffffe180000000l); }
@Test
public void test08179() { x = 0x00000001deadf00dl; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0x000000720f723319l); }
@Test
public void test08180() { x = 0xffffffffdeadf00dl; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0xfffffff80f723319l); }
@Test
public void test08181() { x = 0x7fffffffffffffffl; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffc3l); }
@Test
public void test08182() { x = 0x7fffffff7fffffffl; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0x7fffffe17fffffc3l); }
@Test
public void test08183() { x = 0x7fffffff80000000l; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0x7fffffe180000000l); }
@Test
public void test08184() { x = 0x7fffffffdeadf00dl; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0x7ffffff80f723319l); }
@Test
public void test08185() { x = 0x8000000000000000l; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08186() { x = 0xffffffffffffffffl; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffc3l); }
@Test
public void test08187() { x = 0xfffffffffffffffel; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff86l); }
@Test
public void test08188() { x = 0xefffffffffffffffl; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0x2fffffffffffffc3l); }
@Test
public void test08189() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3dl; AssertJUnit.assertEquals("multiply", result, 0x0f72334e0f723319l); }
@Test
public void test08190() { x = 0x000000007fffffffl; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0x000000f3fffffe18l); }
@Test
public void test08191() { x = 0x0000000080000000l; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0x000000f400000000l); }
@Test
public void test08192() { x = 0x00000000ffffffffl; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0x000001e7fffffe18l); }
@Test
public void test08193() { x = 0x000000017fffffffl; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0x000002dbfffffe18l); }
@Test
public void test08194() { x = 0x0000000180000000l; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0x000002dc00000000l); }
@Test
public void test08195() { x = 0x00000001ffffffffl; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0x000003cffffffe18l); }
@Test
public void test08196() { x = 0xffffffff7fffffffl; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0xffffff0bfffffe18l); }
@Test
public void test08197() { x = 0xffffffff80000000l; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0xffffff0c00000000l); }
@Test
public void test08198() { x = 0x00000001deadf00dl; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0x000003907b9198c8l); }
@Test
public void test08199() { x = 0xffffffffdeadf00dl; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0xffffffc07b9198c8l); }
@Test
public void test08200() { x = 0x7fffffffffffffffl; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe18l); }
@Test
public void test08201() { x = 0x7fffffff7fffffffl; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0xffffff0bfffffe18l); }
@Test
public void test08202() { x = 0x7fffffff80000000l; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0xffffff0c00000000l); }
@Test
public void test08203() { x = 0x7fffffffdeadf00dl; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0xffffffc07b9198c8l); }
@Test
public void test08204() { x = 0x8000000000000000l; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08205() { x = 0xffffffffffffffffl; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe18l); }
@Test
public void test08206() { x = 0xfffffffffffffffel; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffc30l); }
@Test
public void test08207() { x = 0xefffffffffffffffl; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffe18l); }
@Test
public void test08208() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1e8l; AssertJUnit.assertEquals("multiply", result, 0x7b919a707b9198c8l); }
@Test
public void test08209() { x = 0x000000007fffffffl; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0x00001e7fffffc300l); }
@Test
public void test08210() { x = 0x0000000080000000l; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0x00001e8000000000l); }
@Test
public void test08211() { x = 0x00000000ffffffffl; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0x00003cffffffc300l); }
@Test
public void test08212() { x = 0x000000017fffffffl; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0x00005b7fffffc300l); }
@Test
public void test08213() { x = 0x0000000180000000l; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0x00005b8000000000l); }
@Test
public void test08214() { x = 0x00000001ffffffffl; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0x000079ffffffc300l); }
@Test
public void test08215() { x = 0xffffffff7fffffffl; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0xffffe17fffffc300l); }
@Test
public void test08216() { x = 0xffffffff80000000l; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0xffffe18000000000l); }
@Test
public void test08217() { x = 0x00000001deadf00dl; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0x0000720f72331900l); }
@Test
public void test08218() { x = 0xffffffffdeadf00dl; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0xfffff80f72331900l); }
@Test
public void test08219() { x = 0x7fffffffffffffffl; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc300l); }
@Test
public void test08220() { x = 0x7fffffff7fffffffl; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0xffffe17fffffc300l); }
@Test
public void test08221() { x = 0x7fffffff80000000l; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0xffffe18000000000l); }
@Test
public void test08222() { x = 0x7fffffffdeadf00dl; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0xfffff80f72331900l); }
@Test
public void test08223() { x = 0x8000000000000000l; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08224() { x = 0xffffffffffffffffl; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc300l); }
@Test
public void test08225() { x = 0xfffffffffffffffel; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff8600l); }
@Test
public void test08226() { x = 0xefffffffffffffffl; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc300l); }
@Test
public void test08227() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3d00l; AssertJUnit.assertEquals("multiply", result, 0x72334e0f72331900l); }
@Test
public void test08228() { x = 0x000000007fffffffl; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffc300000000l); }
@Test
public void test08229() { x = 0x0000000080000000l; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08230() { x = 0x00000000ffffffffl; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc300000000l); }
@Test
public void test08231() { x = 0x000000017fffffffl; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffc300000000l); }
@Test
public void test08232() { x = 0x0000000180000000l; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08233() { x = 0x00000001ffffffffl; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc300000000l); }
@Test
public void test08234() { x = 0xffffffff7fffffffl; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffc300000000l); }
@Test
public void test08235() { x = 0xffffffff80000000l; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08236() { x = 0x00000001deadf00dl; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0f72331900000000l); }
@Test
public void test08237() { x = 0xffffffffdeadf00dl; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0f72331900000000l); }
@Test
public void test08238() { x = 0x7fffffffffffffffl; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc300000000l); }
@Test
public void test08239() { x = 0x7fffffff7fffffffl; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffc300000000l); }
@Test
public void test08240() { x = 0x7fffffff80000000l; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08241() { x = 0x7fffffffdeadf00dl; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0f72331900000000l); }
@Test
public void test08242() { x = 0x8000000000000000l; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08243() { x = 0xffffffffffffffffl; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc300000000l); }
@Test
public void test08244() { x = 0xfffffffffffffffel; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8600000000l); }
@Test
public void test08245() { x = 0xefffffffffffffffl; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffc300000000l); }
@Test
public void test08246() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0f72331900000000l); }
@Test
public void test08247() { x = 0x000000007fffffffl; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1800000000l); }
@Test
public void test08248() { x = 0x0000000080000000l; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08249() { x = 0x00000000ffffffffl; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1800000000l); }
@Test
public void test08250() { x = 0x000000017fffffffl; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1800000000l); }
@Test
public void test08251() { x = 0x0000000180000000l; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08252() { x = 0x00000001ffffffffl; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1800000000l); }
@Test
public void test08253() { x = 0xffffffff7fffffffl; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1800000000l); }
@Test
public void test08254() { x = 0xffffffff80000000l; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08255() { x = 0x00000001deadf00dl; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0x7b9198c800000000l); }
@Test
public void test08256() { x = 0xffffffffdeadf00dl; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0x7b9198c800000000l); }
@Test
public void test08257() { x = 0x7fffffffffffffffl; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1800000000l); }
@Test
public void test08258() { x = 0x7fffffff7fffffffl; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1800000000l); }
@Test
public void test08259() { x = 0x7fffffff80000000l; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08260() { x = 0x7fffffffdeadf00dl; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0x7b9198c800000000l); }
@Test
public void test08261() { x = 0x8000000000000000l; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08262() { x = 0xffffffffffffffffl; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1800000000l); }
@Test
public void test08263() { x = 0xfffffffffffffffel; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc3000000000l); }
@Test
public void test08264() { x = 0xefffffffffffffffl; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1800000000l); }
@Test
public void test08265() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1e800000000l; AssertJUnit.assertEquals("multiply", result, 0x7b9198c800000000l); }
@Test
public void test08266() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0xffffffe18000003dl); }
@Test
public void test08267() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0xffffffe180000000l); }
@Test
public void test08268() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0xffffffc30000003dl); }
@Test
public void test08269() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0xffffffa48000003dl); }
@Test
public void test08270() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0xffffffa480000000l); }
@Test
public void test08271() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0xffffff860000003dl); }
@Test
public void test08272() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0x0000001e8000003dl); }
@Test
public void test08273() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0x0000001e80000000l); }
@Test
public void test08274() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0xffffff8df08dcce7l); }
@Test
public void test08275() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0x00000007f08dcce7l); }
@Test
public void test08276() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0x800000000000003dl); }
@Test
public void test08277() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0x8000001e8000003dl); }
@Test
public void test08278() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0x8000001e80000000l); }
@Test
public void test08279() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0x80000007f08dcce7l); }
@Test
public void test08280() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08281() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0x000000000000003dl); }
@Test
public void test08282() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0x000000000000007al); }
@Test
public void test08283() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0xd00000000000003dl); }
@Test
public void test08284() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffc3l; AssertJUnit.assertEquals("multiply", result, 0xf08dccb1f08dcce7l); }
@Test
public void test08285() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0xffffff0c000001e8l); }
@Test
public void test08286() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0xffffff0c00000000l); }
@Test
public void test08287() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0xfffffe18000001e8l); }
@Test
public void test08288() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0xfffffd24000001e8l); }
@Test
public void test08289() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0xfffffd2400000000l); }
@Test
public void test08290() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0xfffffc30000001e8l); }
@Test
public void test08291() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0x000000f4000001e8l); }
@Test
public void test08292() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0x000000f400000000l); }
@Test
public void test08293() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0xfffffc6f846e6738l); }
@Test
public void test08294() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0x0000003f846e6738l); }
@Test
public void test08295() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001e8l); }
@Test
public void test08296() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0x000000f4000001e8l); }
@Test
public void test08297() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0x000000f400000000l); }
@Test
public void test08298() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0x0000003f846e6738l); }
@Test
public void test08299() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08300() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001e8l); }
@Test
public void test08301() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0x00000000000003d0l); }
@Test
public void test08302() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0x80000000000001e8l); }
@Test
public void test08303() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe18l; AssertJUnit.assertEquals("multiply", result, 0x846e658f846e6738l); }
@Test
public void test08304() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0xffffe18000003d00l); }
@Test
public void test08305() { x = 0x0000000080000000l; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0xffffe18000000000l); }
@Test
public void test08306() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0xffffc30000003d00l); }
@Test
public void test08307() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0xffffa48000003d00l); }
@Test
public void test08308() { x = 0x0000000180000000l; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0xffffa48000000000l); }
@Test
public void test08309() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0xffff860000003d00l); }
@Test
public void test08310() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0x00001e8000003d00l); }
@Test
public void test08311() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0x00001e8000000000l); }
@Test
public void test08312() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0xffff8df08dcce700l); }
@Test
public void test08313() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0x000007f08dcce700l); }
@Test
public void test08314() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003d00l); }
@Test
public void test08315() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0x00001e8000003d00l); }
@Test
public void test08316() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0x00001e8000000000l); }
@Test
public void test08317() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0x000007f08dcce700l); }
@Test
public void test08318() { x = 0x8000000000000000l; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08319() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003d00l); }
@Test
public void test08320() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000007a00l); }
@Test
public void test08321() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003d00l); }
@Test
public void test08322() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffc300l; AssertJUnit.assertEquals("multiply", result, 0x8dccb1f08dcce700l); }
@Test
public void test08323() { x = 0x000000007fffffffl; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003d00000000l); }
@Test
public void test08324() { x = 0x0000000080000000l; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08325() { x = 0x00000000ffffffffl; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003d00000000l); }
@Test
public void test08326() { x = 0x000000017fffffffl; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003d00000000l); }
@Test
public void test08327() { x = 0x0000000180000000l; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08328() { x = 0x00000001ffffffffl; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003d00000000l); }
@Test
public void test08329() { x = 0xffffffff7fffffffl; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003d00000000l); }
@Test
public void test08330() { x = 0xffffffff80000000l; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08331() { x = 0x00000001deadf00dl; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0xf08dcce700000000l); }
@Test
public void test08332() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0xf08dcce700000000l); }
@Test
public void test08333() { x = 0x7fffffffffffffffl; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003d00000000l); }
@Test
public void test08334() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000003d00000000l); }
@Test
public void test08335() { x = 0x7fffffff80000000l; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08336() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0xf08dcce700000000l); }
@Test
public void test08337() { x = 0x8000000000000000l; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08338() { x = 0xffffffffffffffffl; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003d00000000l); }
@Test
public void test08339() { x = 0xfffffffffffffffel; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007a00000000l); }
@Test
public void test08340() { x = 0xefffffffffffffffl; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000003d00000000l); }
@Test
public void test08341() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffc300000000l; AssertJUnit.assertEquals("multiply", result, 0xf08dcce700000000l); }
@Test
public void test08342() { x = 0x000000007fffffffl; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e800000000l); }
@Test
public void test08343() { x = 0x0000000080000000l; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08344() { x = 0x00000000ffffffffl; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e800000000l); }
@Test
public void test08345() { x = 0x000000017fffffffl; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e800000000l); }
@Test
public void test08346() { x = 0x0000000180000000l; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08347() { x = 0x00000001ffffffffl; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e800000000l); }
@Test
public void test08348() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e800000000l); }
@Test
public void test08349() { x = 0xffffffff80000000l; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08350() { x = 0x00000001deadf00dl; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x846e673800000000l); }
@Test
public void test08351() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x846e673800000000l); }
@Test
public void test08352() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e800000000l); }
@Test
public void test08353() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e800000000l); }
@Test
public void test08354() { x = 0x7fffffff80000000l; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08355() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x846e673800000000l); }
@Test
public void test08356() { x = 0x8000000000000000l; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08357() { x = 0xffffffffffffffffl; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e800000000l); }
@Test
public void test08358() { x = 0xfffffffffffffffel; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003d000000000l); }
@Test
public void test08359() { x = 0xefffffffffffffffl; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e800000000l); }
@Test
public void test08360() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe1800000000l; AssertJUnit.assertEquals("multiply", result, 0x846e673800000000l); }
@Test
public void test08361() { x = 0x000000007fffffffl; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0x000000217fffffbdl); }
@Test
public void test08362() { x = 0x0000000080000000l; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0x0000002180000000l); }
@Test
public void test08363() { x = 0x00000000ffffffffl; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0x00000042ffffffbdl); }
@Test
public void test08364() { x = 0x000000017fffffffl; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0x000000647fffffbdl); }
@Test
public void test08365() { x = 0x0000000180000000l; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0x0000006480000000l); }
@Test
public void test08366() { x = 0x00000001ffffffffl; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0x00000085ffffffbdl); }
@Test
public void test08367() { x = 0xffffffff7fffffffl; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0xffffffde7fffffbdl); }
@Test
public void test08368() { x = 0xffffffff80000000l; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0xffffffde80000000l); }
@Test
public void test08369() { x = 0x00000001deadf00dl; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0x0000007d4785d367l); }
@Test
public void test08370() { x = 0xffffffffdeadf00dl; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0xfffffff74785d367l); }
@Test
public void test08371() { x = 0x7fffffffffffffffl; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffbdl); }
@Test
public void test08372() { x = 0x7fffffff7fffffffl; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0x7fffffde7fffffbdl); }
@Test
public void test08373() { x = 0x7fffffff80000000l; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0x7fffffde80000000l); }
@Test
public void test08374() { x = 0x7fffffffdeadf00dl; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff74785d367l); }
@Test
public void test08375() { x = 0x8000000000000000l; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08376() { x = 0xffffffffffffffffl; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffbdl); }
@Test
public void test08377() { x = 0xfffffffffffffffel; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff7al); }
@Test
public void test08378() { x = 0xefffffffffffffffl; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0xcfffffffffffffbdl); }
@Test
public void test08379() { x = 0xdeadf00ddeadf00dl; long result = x * 0x43l; AssertJUnit.assertEquals("multiply", result, 0x4785d3a14785d367l); }
@Test
public void test08380() { x = 0x000000007fffffffl; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0x0000010bfffffde8l); }
@Test
public void test08381() { x = 0x0000000080000000l; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0x0000010c00000000l); }
@Test
public void test08382() { x = 0x00000000ffffffffl; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0x00000217fffffde8l); }
@Test
public void test08383() { x = 0x000000017fffffffl; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0x00000323fffffde8l); }
@Test
public void test08384() { x = 0x0000000180000000l; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0x0000032400000000l); }
@Test
public void test08385() { x = 0x00000001ffffffffl; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0x0000042ffffffde8l); }
@Test
public void test08386() { x = 0xffffffff7fffffffl; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0xfffffef3fffffde8l); }
@Test
public void test08387() { x = 0xffffffff80000000l; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0xfffffef400000000l); }
@Test
public void test08388() { x = 0x00000001deadf00dl; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0x000003ea3c2e9b38l); }
@Test
public void test08389() { x = 0xffffffffdeadf00dl; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0xffffffba3c2e9b38l); }
@Test
public void test08390() { x = 0x7fffffffffffffffl; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffde8l); }
@Test
public void test08391() { x = 0x7fffffff7fffffffl; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0xfffffef3fffffde8l); }
@Test
public void test08392() { x = 0x7fffffff80000000l; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0xfffffef400000000l); }
@Test
public void test08393() { x = 0x7fffffffdeadf00dl; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0xffffffba3c2e9b38l); }
@Test
public void test08394() { x = 0x8000000000000000l; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08395() { x = 0xffffffffffffffffl; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffde8l); }
@Test
public void test08396() { x = 0xfffffffffffffffel; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffbd0l); }
@Test
public void test08397() { x = 0xefffffffffffffffl; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffde8l); }
@Test
public void test08398() { x = 0xdeadf00ddeadf00dl; long result = x * 0x218l; AssertJUnit.assertEquals("multiply", result, 0x3c2e9d0a3c2e9b38l); }
@Test
public void test08399() { x = 0x000000007fffffffl; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0x0000217fffffbd00l); }
@Test
public void test08400() { x = 0x0000000080000000l; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0x0000218000000000l); }
@Test
public void test08401() { x = 0x00000000ffffffffl; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0x000042ffffffbd00l); }
@Test
public void test08402() { x = 0x000000017fffffffl; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0x0000647fffffbd00l); }
@Test
public void test08403() { x = 0x0000000180000000l; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0x0000648000000000l); }
@Test
public void test08404() { x = 0x00000001ffffffffl; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0x000085ffffffbd00l); }
@Test
public void test08405() { x = 0xffffffff7fffffffl; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0xffffde7fffffbd00l); }
@Test
public void test08406() { x = 0xffffffff80000000l; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0xffffde8000000000l); }
@Test
public void test08407() { x = 0x00000001deadf00dl; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0x00007d4785d36700l); }
@Test
public void test08408() { x = 0xffffffffdeadf00dl; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0xfffff74785d36700l); }
@Test
public void test08409() { x = 0x7fffffffffffffffl; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffbd00l); }
@Test
public void test08410() { x = 0x7fffffff7fffffffl; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0xffffde7fffffbd00l); }
@Test
public void test08411() { x = 0x7fffffff80000000l; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0xffffde8000000000l); }
@Test
public void test08412() { x = 0x7fffffffdeadf00dl; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0xfffff74785d36700l); }
@Test
public void test08413() { x = 0x8000000000000000l; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08414() { x = 0xffffffffffffffffl; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffbd00l); }
@Test
public void test08415() { x = 0xfffffffffffffffel; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff7a00l); }
@Test
public void test08416() { x = 0xefffffffffffffffl; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffbd00l); }
@Test
public void test08417() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4300l; AssertJUnit.assertEquals("multiply", result, 0x85d3a14785d36700l); }
@Test
public void test08418() { x = 0x000000007fffffffl; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffbd00000000l); }
@Test
public void test08419() { x = 0x0000000080000000l; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08420() { x = 0x00000000ffffffffl; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffbd00000000l); }
@Test
public void test08421() { x = 0x000000017fffffffl; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffbd00000000l); }
@Test
public void test08422() { x = 0x0000000180000000l; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08423() { x = 0x00000001ffffffffl; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffbd00000000l); }
@Test
public void test08424() { x = 0xffffffff7fffffffl; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffbd00000000l); }
@Test
public void test08425() { x = 0xffffffff80000000l; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08426() { x = 0x00000001deadf00dl; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0x4785d36700000000l); }
@Test
public void test08427() { x = 0xffffffffdeadf00dl; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0x4785d36700000000l); }
@Test
public void test08428() { x = 0x7fffffffffffffffl; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffbd00000000l); }
@Test
public void test08429() { x = 0x7fffffff7fffffffl; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffbd00000000l); }
@Test
public void test08430() { x = 0x7fffffff80000000l; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08431() { x = 0x7fffffffdeadf00dl; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0x4785d36700000000l); }
@Test
public void test08432() { x = 0x8000000000000000l; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08433() { x = 0xffffffffffffffffl; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffbd00000000l); }
@Test
public void test08434() { x = 0xfffffffffffffffel; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7a00000000l); }
@Test
public void test08435() { x = 0xefffffffffffffffl; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffbd00000000l); }
@Test
public void test08436() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4300000000l; AssertJUnit.assertEquals("multiply", result, 0x4785d36700000000l); }
@Test
public void test08437() { x = 0x000000007fffffffl; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffde800000000l); }
@Test
public void test08438() { x = 0x0000000080000000l; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08439() { x = 0x00000000ffffffffl; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffde800000000l); }
@Test
public void test08440() { x = 0x000000017fffffffl; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffde800000000l); }
@Test
public void test08441() { x = 0x0000000180000000l; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08442() { x = 0x00000001ffffffffl; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffde800000000l); }
@Test
public void test08443() { x = 0xffffffff7fffffffl; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffde800000000l); }
@Test
public void test08444() { x = 0xffffffff80000000l; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08445() { x = 0x00000001deadf00dl; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0x3c2e9b3800000000l); }
@Test
public void test08446() { x = 0xffffffffdeadf00dl; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0x3c2e9b3800000000l); }
@Test
public void test08447() { x = 0x7fffffffffffffffl; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffde800000000l); }
@Test
public void test08448() { x = 0x7fffffff7fffffffl; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffde800000000l); }
@Test
public void test08449() { x = 0x7fffffff80000000l; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08450() { x = 0x7fffffffdeadf00dl; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0x3c2e9b3800000000l); }
@Test
public void test08451() { x = 0x8000000000000000l; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08452() { x = 0xffffffffffffffffl; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffde800000000l); }
@Test
public void test08453() { x = 0xfffffffffffffffel; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffbd000000000l); }
@Test
public void test08454() { x = 0xefffffffffffffffl; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffde800000000l); }
@Test
public void test08455() { x = 0xdeadf00ddeadf00dl; long result = x * 0x21800000000l; AssertJUnit.assertEquals("multiply", result, 0x3c2e9b3800000000l); }
@Test
public void test08456() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0xffffffde80000043l); }
@Test
public void test08457() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0xffffffde80000000l); }
@Test
public void test08458() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0xffffffbd00000043l); }
@Test
public void test08459() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0xffffff9b80000043l); }
@Test
public void test08460() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0xffffff9b80000000l); }
@Test
public void test08461() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0xffffff7a00000043l); }
@Test
public void test08462() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0x0000002180000043l); }
@Test
public void test08463() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0x0000002180000000l); }
@Test
public void test08464() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0xffffff82b87a2c99l); }
@Test
public void test08465() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0x00000008b87a2c99l); }
@Test
public void test08466() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000043l); }
@Test
public void test08467() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0x8000002180000043l); }
@Test
public void test08468() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0x8000002180000000l); }
@Test
public void test08469() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0x80000008b87a2c99l); }
@Test
public void test08470() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08471() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000043l); }
@Test
public void test08472() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000086l); }
@Test
public void test08473() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0x3000000000000043l); }
@Test
public void test08474() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffbdl; AssertJUnit.assertEquals("multiply", result, 0xb87a2c5eb87a2c99l); }
@Test
public void test08475() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0xfffffef400000218l); }
@Test
public void test08476() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0xfffffef400000000l); }
@Test
public void test08477() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0xfffffde800000218l); }
@Test
public void test08478() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0xfffffcdc00000218l); }
@Test
public void test08479() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0xfffffcdc00000000l); }
@Test
public void test08480() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0xfffffbd000000218l); }
@Test
public void test08481() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0x0000010c00000218l); }
@Test
public void test08482() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0x0000010c00000000l); }
@Test
public void test08483() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0xfffffc15c3d164c8l); }
@Test
public void test08484() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0x00000045c3d164c8l); }
@Test
public void test08485() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000218l); }
@Test
public void test08486() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0x0000010c00000218l); }
@Test
public void test08487() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0x0000010c00000000l); }
@Test
public void test08488() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0x00000045c3d164c8l); }
@Test
public void test08489() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08490() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000218l); }
@Test
public void test08491() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000430l); }
@Test
public void test08492() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000218l); }
@Test
public void test08493() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffde8l; AssertJUnit.assertEquals("multiply", result, 0xc3d162f5c3d164c8l); }
@Test
public void test08494() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0xffffde8000004300l); }
@Test
public void test08495() { x = 0x0000000080000000l; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0xffffde8000000000l); }
@Test
public void test08496() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0xffffbd0000004300l); }
@Test
public void test08497() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0xffff9b8000004300l); }
@Test
public void test08498() { x = 0x0000000180000000l; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0xffff9b8000000000l); }
@Test
public void test08499() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0xffff7a0000004300l); }
@Test
public void test08500() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0x0000218000004300l); }
@Test
public void test08501() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0x0000218000000000l); }
@Test
public void test08502() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0xffff82b87a2c9900l); }
@Test
public void test08503() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0x000008b87a2c9900l); }
@Test
public void test08504() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004300l); }
@Test
public void test08505() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0x0000218000004300l); }
@Test
public void test08506() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0x0000218000000000l); }
@Test
public void test08507() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0x000008b87a2c9900l); }
@Test
public void test08508() { x = 0x8000000000000000l; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08509() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004300l); }
@Test
public void test08510() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000008600l); }
@Test
public void test08511() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004300l); }
@Test
public void test08512() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffbd00l; AssertJUnit.assertEquals("multiply", result, 0x7a2c5eb87a2c9900l); }
@Test
public void test08513() { x = 0x000000007fffffffl; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004300000000l); }
@Test
public void test08514() { x = 0x0000000080000000l; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08515() { x = 0x00000000ffffffffl; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004300000000l); }
@Test
public void test08516() { x = 0x000000017fffffffl; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004300000000l); }
@Test
public void test08517() { x = 0x0000000180000000l; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08518() { x = 0x00000001ffffffffl; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004300000000l); }
@Test
public void test08519() { x = 0xffffffff7fffffffl; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004300000000l); }
@Test
public void test08520() { x = 0xffffffff80000000l; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08521() { x = 0x00000001deadf00dl; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0xb87a2c9900000000l); }
@Test
public void test08522() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0xb87a2c9900000000l); }
@Test
public void test08523() { x = 0x7fffffffffffffffl; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004300000000l); }
@Test
public void test08524() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004300000000l); }
@Test
public void test08525() { x = 0x7fffffff80000000l; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08526() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0xb87a2c9900000000l); }
@Test
public void test08527() { x = 0x8000000000000000l; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08528() { x = 0xffffffffffffffffl; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004300000000l); }
@Test
public void test08529() { x = 0xfffffffffffffffel; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008600000000l); }
@Test
public void test08530() { x = 0xefffffffffffffffl; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004300000000l); }
@Test
public void test08531() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffbd00000000l; AssertJUnit.assertEquals("multiply", result, 0xb87a2c9900000000l); }
@Test
public void test08532() { x = 0x000000007fffffffl; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000021800000000l); }
@Test
public void test08533() { x = 0x0000000080000000l; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08534() { x = 0x00000000ffffffffl; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000021800000000l); }
@Test
public void test08535() { x = 0x000000017fffffffl; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000021800000000l); }
@Test
public void test08536() { x = 0x0000000180000000l; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08537() { x = 0x00000001ffffffffl; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000021800000000l); }
@Test
public void test08538() { x = 0xffffffff7fffffffl; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000021800000000l); }
@Test
public void test08539() { x = 0xffffffff80000000l; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08540() { x = 0x00000001deadf00dl; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0xc3d164c800000000l); }
@Test
public void test08541() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0xc3d164c800000000l); }
@Test
public void test08542() { x = 0x7fffffffffffffffl; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000021800000000l); }
@Test
public void test08543() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000021800000000l); }
@Test
public void test08544() { x = 0x7fffffff80000000l; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08545() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0xc3d164c800000000l); }
@Test
public void test08546() { x = 0x8000000000000000l; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08547() { x = 0xffffffffffffffffl; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000021800000000l); }
@Test
public void test08548() { x = 0xfffffffffffffffel; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000043000000000l); }
@Test
public void test08549() { x = 0xefffffffffffffffl; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000021800000000l); }
@Test
public void test08550() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffde800000000l; AssertJUnit.assertEquals("multiply", result, 0xc3d164c800000000l); }
@Test
public void test08551() { x = 0x000000007fffffffl; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0x000000227fffffbbl); }
@Test
public void test08552() { x = 0x0000000080000000l; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0x0000002280000000l); }
@Test
public void test08553() { x = 0x00000000ffffffffl; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0x00000044ffffffbbl); }
@Test
public void test08554() { x = 0x000000017fffffffl; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0x000000677fffffbbl); }
@Test
public void test08555() { x = 0x0000000180000000l; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0x0000006780000000l); }
@Test
public void test08556() { x = 0x00000001ffffffffl; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0x00000089ffffffbbl); }
@Test
public void test08557() { x = 0xffffffff7fffffffl; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0xffffffdd7fffffbbl); }
@Test
public void test08558() { x = 0xffffffff80000000l; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0xffffffdd80000000l); }
@Test
public void test08559() { x = 0x00000001deadf00dl; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0x0000008104e1b381l); }
@Test
public void test08560() { x = 0xffffffffdeadf00dl; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0xfffffff704e1b381l); }
@Test
public void test08561() { x = 0x7fffffffffffffffl; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffbbl); }
@Test
public void test08562() { x = 0x7fffffff7fffffffl; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdd7fffffbbl); }
@Test
public void test08563() { x = 0x7fffffff80000000l; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdd80000000l); }
@Test
public void test08564() { x = 0x7fffffffdeadf00dl; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff704e1b381l); }
@Test
public void test08565() { x = 0x8000000000000000l; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08566() { x = 0xffffffffffffffffl; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffbbl); }
@Test
public void test08567() { x = 0xfffffffffffffffel; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff76l); }
@Test
public void test08568() { x = 0xefffffffffffffffl; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0xafffffffffffffbbl); }
@Test
public void test08569() { x = 0xdeadf00ddeadf00dl; long result = x * 0x45l; AssertJUnit.assertEquals("multiply", result, 0x04e1b3bd04e1b381l); }
@Test
public void test08570() { x = 0x000000007fffffffl; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0x00000113fffffdd8l); }
@Test
public void test08571() { x = 0x0000000080000000l; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0x0000011400000000l); }
@Test
public void test08572() { x = 0x00000000ffffffffl; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0x00000227fffffdd8l); }
@Test
public void test08573() { x = 0x000000017fffffffl; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0x0000033bfffffdd8l); }
@Test
public void test08574() { x = 0x0000000180000000l; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0x0000033c00000000l); }
@Test
public void test08575() { x = 0x00000001ffffffffl; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0x0000044ffffffdd8l); }
@Test
public void test08576() { x = 0xffffffff7fffffffl; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0xfffffeebfffffdd8l); }
@Test
public void test08577() { x = 0xffffffff80000000l; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0xfffffeec00000000l); }
@Test
public void test08578() { x = 0x00000001deadf00dl; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0x00000408270d9c08l); }
@Test
public void test08579() { x = 0xffffffffdeadf00dl; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0xffffffb8270d9c08l); }
@Test
public void test08580() { x = 0x7fffffffffffffffl; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffdd8l); }
@Test
public void test08581() { x = 0x7fffffff7fffffffl; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0xfffffeebfffffdd8l); }
@Test
public void test08582() { x = 0x7fffffff80000000l; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0xfffffeec00000000l); }
@Test
public void test08583() { x = 0x7fffffffdeadf00dl; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0xffffffb8270d9c08l); }
@Test
public void test08584() { x = 0x8000000000000000l; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08585() { x = 0xffffffffffffffffl; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffdd8l); }
@Test
public void test08586() { x = 0xfffffffffffffffel; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffbb0l); }
@Test
public void test08587() { x = 0xefffffffffffffffl; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffdd8l); }
@Test
public void test08588() { x = 0xdeadf00ddeadf00dl; long result = x * 0x228l; AssertJUnit.assertEquals("multiply", result, 0x270d9de8270d9c08l); }
@Test
public void test08589() { x = 0x000000007fffffffl; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0x0000227fffffbb00l); }
@Test
public void test08590() { x = 0x0000000080000000l; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0x0000228000000000l); }
@Test
public void test08591() { x = 0x00000000ffffffffl; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0x000044ffffffbb00l); }
@Test
public void test08592() { x = 0x000000017fffffffl; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0x0000677fffffbb00l); }
@Test
public void test08593() { x = 0x0000000180000000l; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0x0000678000000000l); }
@Test
public void test08594() { x = 0x00000001ffffffffl; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0x000089ffffffbb00l); }
@Test
public void test08595() { x = 0xffffffff7fffffffl; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0xffffdd7fffffbb00l); }
@Test
public void test08596() { x = 0xffffffff80000000l; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0xffffdd8000000000l); }
@Test
public void test08597() { x = 0x00000001deadf00dl; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0x00008104e1b38100l); }
@Test
public void test08598() { x = 0xffffffffdeadf00dl; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0xfffff704e1b38100l); }
@Test
public void test08599() { x = 0x7fffffffffffffffl; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffbb00l); }
@Test
public void test08600() { x = 0x7fffffff7fffffffl; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0xffffdd7fffffbb00l); }
@Test
public void test08601() { x = 0x7fffffff80000000l; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0xffffdd8000000000l); }
@Test
public void test08602() { x = 0x7fffffffdeadf00dl; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0xfffff704e1b38100l); }
@Test
public void test08603() { x = 0x8000000000000000l; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08604() { x = 0xffffffffffffffffl; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffbb00l); }
@Test
public void test08605() { x = 0xfffffffffffffffel; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff7600l); }
@Test
public void test08606() { x = 0xefffffffffffffffl; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffbb00l); }
@Test
public void test08607() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4500l; AssertJUnit.assertEquals("multiply", result, 0xe1b3bd04e1b38100l); }
@Test
public void test08608() { x = 0x000000007fffffffl; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffbb00000000l); }
@Test
public void test08609() { x = 0x0000000080000000l; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08610() { x = 0x00000000ffffffffl; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffbb00000000l); }
@Test
public void test08611() { x = 0x000000017fffffffl; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffbb00000000l); }
@Test
public void test08612() { x = 0x0000000180000000l; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08613() { x = 0x00000001ffffffffl; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffbb00000000l); }
@Test
public void test08614() { x = 0xffffffff7fffffffl; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffbb00000000l); }
@Test
public void test08615() { x = 0xffffffff80000000l; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08616() { x = 0x00000001deadf00dl; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0x04e1b38100000000l); }
@Test
public void test08617() { x = 0xffffffffdeadf00dl; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0x04e1b38100000000l); }
@Test
public void test08618() { x = 0x7fffffffffffffffl; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffbb00000000l); }
@Test
public void test08619() { x = 0x7fffffff7fffffffl; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffbb00000000l); }
@Test
public void test08620() { x = 0x7fffffff80000000l; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08621() { x = 0x7fffffffdeadf00dl; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0x04e1b38100000000l); }
@Test
public void test08622() { x = 0x8000000000000000l; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08623() { x = 0xffffffffffffffffl; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffbb00000000l); }
@Test
public void test08624() { x = 0xfffffffffffffffel; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7600000000l); }
@Test
public void test08625() { x = 0xefffffffffffffffl; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffbb00000000l); }
@Test
public void test08626() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4500000000l; AssertJUnit.assertEquals("multiply", result, 0x04e1b38100000000l); }
@Test
public void test08627() { x = 0x000000007fffffffl; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd800000000l); }
@Test
public void test08628() { x = 0x0000000080000000l; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08629() { x = 0x00000000ffffffffl; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd800000000l); }
@Test
public void test08630() { x = 0x000000017fffffffl; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd800000000l); }
@Test
public void test08631() { x = 0x0000000180000000l; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08632() { x = 0x00000001ffffffffl; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd800000000l); }
@Test
public void test08633() { x = 0xffffffff7fffffffl; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd800000000l); }
@Test
public void test08634() { x = 0xffffffff80000000l; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08635() { x = 0x00000001deadf00dl; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0x270d9c0800000000l); }
@Test
public void test08636() { x = 0xffffffffdeadf00dl; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0x270d9c0800000000l); }
@Test
public void test08637() { x = 0x7fffffffffffffffl; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd800000000l); }
@Test
public void test08638() { x = 0x7fffffff7fffffffl; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd800000000l); }
@Test
public void test08639() { x = 0x7fffffff80000000l; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08640() { x = 0x7fffffffdeadf00dl; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0x270d9c0800000000l); }
@Test
public void test08641() { x = 0x8000000000000000l; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08642() { x = 0xffffffffffffffffl; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd800000000l); }
@Test
public void test08643() { x = 0xfffffffffffffffel; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffbb000000000l); }
@Test
public void test08644() { x = 0xefffffffffffffffl; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd800000000l); }
@Test
public void test08645() { x = 0xdeadf00ddeadf00dl; long result = x * 0x22800000000l; AssertJUnit.assertEquals("multiply", result, 0x270d9c0800000000l); }
@Test
public void test08646() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0xffffffdd80000045l); }
@Test
public void test08647() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0xffffffdd80000000l); }
@Test
public void test08648() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0xffffffbb00000045l); }
@Test
public void test08649() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0xffffff9880000045l); }
@Test
public void test08650() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0xffffff9880000000l); }
@Test
public void test08651() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0xffffff7600000045l); }
@Test
public void test08652() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0x0000002280000045l); }
@Test
public void test08653() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0x0000002280000000l); }
@Test
public void test08654() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0xffffff7efb1e4c7fl); }
@Test
public void test08655() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0x00000008fb1e4c7fl); }
@Test
public void test08656() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000045l); }
@Test
public void test08657() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0x8000002280000045l); }
@Test
public void test08658() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0x8000002280000000l); }
@Test
public void test08659() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0x80000008fb1e4c7fl); }
@Test
public void test08660() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08661() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000045l); }
@Test
public void test08662() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0x000000000000008al); }
@Test
public void test08663() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0x5000000000000045l); }
@Test
public void test08664() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffbbl; AssertJUnit.assertEquals("multiply", result, 0xfb1e4c42fb1e4c7fl); }
@Test
public void test08665() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0xfffffeec00000228l); }
@Test
public void test08666() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0xfffffeec00000000l); }
@Test
public void test08667() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd800000228l); }
@Test
public void test08668() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0xfffffcc400000228l); }
@Test
public void test08669() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0xfffffcc400000000l); }
@Test
public void test08670() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0xfffffbb000000228l); }
@Test
public void test08671() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0x0000011400000228l); }
@Test
public void test08672() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0x0000011400000000l); }
@Test
public void test08673() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0xfffffbf7d8f263f8l); }
@Test
public void test08674() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0x00000047d8f263f8l); }
@Test
public void test08675() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000228l); }
@Test
public void test08676() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0x0000011400000228l); }
@Test
public void test08677() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0x0000011400000000l); }
@Test
public void test08678() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0x00000047d8f263f8l); }
@Test
public void test08679() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08680() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000228l); }
@Test
public void test08681() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000450l); }
@Test
public void test08682() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000228l); }
@Test
public void test08683() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffdd8l; AssertJUnit.assertEquals("multiply", result, 0xd8f26217d8f263f8l); }
@Test
public void test08684() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0xffffdd8000004500l); }
@Test
public void test08685() { x = 0x0000000080000000l; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0xffffdd8000000000l); }
@Test
public void test08686() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0xffffbb0000004500l); }
@Test
public void test08687() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0xffff988000004500l); }
@Test
public void test08688() { x = 0x0000000180000000l; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0xffff988000000000l); }
@Test
public void test08689() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0xffff760000004500l); }
@Test
public void test08690() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0x0000228000004500l); }
@Test
public void test08691() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0x0000228000000000l); }
@Test
public void test08692() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0xffff7efb1e4c7f00l); }
@Test
public void test08693() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0x000008fb1e4c7f00l); }
@Test
public void test08694() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004500l); }
@Test
public void test08695() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0x0000228000004500l); }
@Test
public void test08696() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0x0000228000000000l); }
@Test
public void test08697() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0x000008fb1e4c7f00l); }
@Test
public void test08698() { x = 0x8000000000000000l; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08699() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004500l); }
@Test
public void test08700() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000008a00l); }
@Test
public void test08701() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004500l); }
@Test
public void test08702() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffbb00l; AssertJUnit.assertEquals("multiply", result, 0x1e4c42fb1e4c7f00l); }
@Test
public void test08703() { x = 0x000000007fffffffl; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004500000000l); }
@Test
public void test08704() { x = 0x0000000080000000l; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08705() { x = 0x00000000ffffffffl; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004500000000l); }
@Test
public void test08706() { x = 0x000000017fffffffl; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004500000000l); }
@Test
public void test08707() { x = 0x0000000180000000l; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08708() { x = 0x00000001ffffffffl; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004500000000l); }
@Test
public void test08709() { x = 0xffffffff7fffffffl; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004500000000l); }
@Test
public void test08710() { x = 0xffffffff80000000l; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08711() { x = 0x00000001deadf00dl; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0xfb1e4c7f00000000l); }
@Test
public void test08712() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0xfb1e4c7f00000000l); }
@Test
public void test08713() { x = 0x7fffffffffffffffl; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004500000000l); }
@Test
public void test08714() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004500000000l); }
@Test
public void test08715() { x = 0x7fffffff80000000l; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08716() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0xfb1e4c7f00000000l); }
@Test
public void test08717() { x = 0x8000000000000000l; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08718() { x = 0xffffffffffffffffl; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004500000000l); }
@Test
public void test08719() { x = 0xfffffffffffffffel; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008a00000000l); }
@Test
public void test08720() { x = 0xefffffffffffffffl; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004500000000l); }
@Test
public void test08721() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffbb00000000l; AssertJUnit.assertEquals("multiply", result, 0xfb1e4c7f00000000l); }
@Test
public void test08722() { x = 0x000000007fffffffl; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000022800000000l); }
@Test
public void test08723() { x = 0x0000000080000000l; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08724() { x = 0x00000000ffffffffl; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000022800000000l); }
@Test
public void test08725() { x = 0x000000017fffffffl; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000022800000000l); }
@Test
public void test08726() { x = 0x0000000180000000l; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08727() { x = 0x00000001ffffffffl; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000022800000000l); }
@Test
public void test08728() { x = 0xffffffff7fffffffl; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000022800000000l); }
@Test
public void test08729() { x = 0xffffffff80000000l; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08730() { x = 0x00000001deadf00dl; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0xd8f263f800000000l); }
@Test
public void test08731() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0xd8f263f800000000l); }
@Test
public void test08732() { x = 0x7fffffffffffffffl; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000022800000000l); }
@Test
public void test08733() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000022800000000l); }
@Test
public void test08734() { x = 0x7fffffff80000000l; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08735() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0xd8f263f800000000l); }
@Test
public void test08736() { x = 0x8000000000000000l; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08737() { x = 0xffffffffffffffffl; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000022800000000l); }
@Test
public void test08738() { x = 0xfffffffffffffffel; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000045000000000l); }
@Test
public void test08739() { x = 0xefffffffffffffffl; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000022800000000l); }
@Test
public void test08740() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffdd800000000l; AssertJUnit.assertEquals("multiply", result, 0xd8f263f800000000l); }
@Test
public void test08741() { x = 0x000000007fffffffl; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0x00000022ffffffbal); }
@Test
public void test08742() { x = 0x0000000080000000l; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0x0000002300000000l); }
@Test
public void test08743() { x = 0x00000000ffffffffl; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0x00000045ffffffbal); }
@Test
public void test08744() { x = 0x000000017fffffffl; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0x00000068ffffffbal); }
@Test
public void test08745() { x = 0x0000000180000000l; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0x0000006900000000l); }
@Test
public void test08746() { x = 0x00000001ffffffffl; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0x0000008bffffffbal); }
@Test
public void test08747() { x = 0xffffffff7fffffffl; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0xffffffdcffffffbal); }
@Test
public void test08748() { x = 0xffffffff80000000l; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0xffffffdd00000000l); }
@Test
public void test08749() { x = 0x00000001deadf00dl; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0x00000082e38fa38el); }
@Test
public void test08750() { x = 0xffffffffdeadf00dl; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0xfffffff6e38fa38el); }
@Test
public void test08751() { x = 0x7fffffffffffffffl; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffbal); }
@Test
public void test08752() { x = 0x7fffffff7fffffffl; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0xffffffdcffffffbal); }
@Test
public void test08753() { x = 0x7fffffff80000000l; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0xffffffdd00000000l); }
@Test
public void test08754() { x = 0x7fffffffdeadf00dl; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0xfffffff6e38fa38el); }
@Test
public void test08755() { x = 0x8000000000000000l; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08756() { x = 0xffffffffffffffffl; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffbal); }
@Test
public void test08757() { x = 0xfffffffffffffffel; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff74l); }
@Test
public void test08758() { x = 0xefffffffffffffffl; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0x9fffffffffffffbal); }
@Test
public void test08759() { x = 0xdeadf00ddeadf00dl; long result = x * 0x46l; AssertJUnit.assertEquals("multiply", result, 0xe38fa3cae38fa38el); }
@Test
public void test08760() { x = 0x000000007fffffffl; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0x00000117fffffdd0l); }
@Test
public void test08761() { x = 0x0000000080000000l; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0x0000011800000000l); }
@Test
public void test08762() { x = 0x00000000ffffffffl; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0x0000022ffffffdd0l); }
@Test
public void test08763() { x = 0x000000017fffffffl; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0x00000347fffffdd0l); }
@Test
public void test08764() { x = 0x0000000180000000l; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0x0000034800000000l); }
@Test
public void test08765() { x = 0x00000001ffffffffl; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0x0000045ffffffdd0l); }
@Test
public void test08766() { x = 0xffffffff7fffffffl; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0xfffffee7fffffdd0l); }
@Test
public void test08767() { x = 0xffffffff80000000l; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0xfffffee800000000l); }
@Test
public void test08768() { x = 0x00000001deadf00dl; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0x000004171c7d1c70l); }
@Test
public void test08769() { x = 0xffffffffdeadf00dl; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0xffffffb71c7d1c70l); }
@Test
public void test08770() { x = 0x7fffffffffffffffl; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffdd0l); }
@Test
public void test08771() { x = 0x7fffffff7fffffffl; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0xfffffee7fffffdd0l); }
@Test
public void test08772() { x = 0x7fffffff80000000l; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0xfffffee800000000l); }
@Test
public void test08773() { x = 0x7fffffffdeadf00dl; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0xffffffb71c7d1c70l); }
@Test
public void test08774() { x = 0x8000000000000000l; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08775() { x = 0xffffffffffffffffl; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffdd0l); }
@Test
public void test08776() { x = 0xfffffffffffffffel; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffba0l); }
@Test
public void test08777() { x = 0xefffffffffffffffl; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffdd0l); }
@Test
public void test08778() { x = 0xdeadf00ddeadf00dl; long result = x * 0x230l; AssertJUnit.assertEquals("multiply", result, 0x1c7d1e571c7d1c70l); }
@Test
public void test08779() { x = 0x000000007fffffffl; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0x000022ffffffba00l); }
@Test
public void test08780() { x = 0x0000000080000000l; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0x0000230000000000l); }
@Test
public void test08781() { x = 0x00000000ffffffffl; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0x000045ffffffba00l); }
@Test
public void test08782() { x = 0x000000017fffffffl; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0x000068ffffffba00l); }
@Test
public void test08783() { x = 0x0000000180000000l; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0x0000690000000000l); }
@Test
public void test08784() { x = 0x00000001ffffffffl; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0x00008bffffffba00l); }
@Test
public void test08785() { x = 0xffffffff7fffffffl; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0xffffdcffffffba00l); }
@Test
public void test08786() { x = 0xffffffff80000000l; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0xffffdd0000000000l); }
@Test
public void test08787() { x = 0x00000001deadf00dl; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0x000082e38fa38e00l); }
@Test
public void test08788() { x = 0xffffffffdeadf00dl; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0xfffff6e38fa38e00l); }
@Test
public void test08789() { x = 0x7fffffffffffffffl; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffba00l); }
@Test
public void test08790() { x = 0x7fffffff7fffffffl; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0xffffdcffffffba00l); }
@Test
public void test08791() { x = 0x7fffffff80000000l; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0xffffdd0000000000l); }
@Test
public void test08792() { x = 0x7fffffffdeadf00dl; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0xfffff6e38fa38e00l); }
@Test
public void test08793() { x = 0x8000000000000000l; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08794() { x = 0xffffffffffffffffl; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffba00l); }
@Test
public void test08795() { x = 0xfffffffffffffffel; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff7400l); }
@Test
public void test08796() { x = 0xefffffffffffffffl; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffba00l); }
@Test
public void test08797() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4600l; AssertJUnit.assertEquals("multiply", result, 0x8fa3cae38fa38e00l); }
@Test
public void test08798() { x = 0x000000007fffffffl; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffba00000000l); }
@Test
public void test08799() { x = 0x0000000080000000l; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08800() { x = 0x00000000ffffffffl; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffba00000000l); }
@Test
public void test08801() { x = 0x000000017fffffffl; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffba00000000l); }
@Test
public void test08802() { x = 0x0000000180000000l; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08803() { x = 0x00000001ffffffffl; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffba00000000l); }
@Test
public void test08804() { x = 0xffffffff7fffffffl; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffba00000000l); }
@Test
public void test08805() { x = 0xffffffff80000000l; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08806() { x = 0x00000001deadf00dl; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0xe38fa38e00000000l); }
@Test
public void test08807() { x = 0xffffffffdeadf00dl; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0xe38fa38e00000000l); }
@Test
public void test08808() { x = 0x7fffffffffffffffl; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffba00000000l); }
@Test
public void test08809() { x = 0x7fffffff7fffffffl; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffba00000000l); }
@Test
public void test08810() { x = 0x7fffffff80000000l; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08811() { x = 0x7fffffffdeadf00dl; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0xe38fa38e00000000l); }
@Test
public void test08812() { x = 0x8000000000000000l; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08813() { x = 0xffffffffffffffffl; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffba00000000l); }
@Test
public void test08814() { x = 0xfffffffffffffffel; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7400000000l); }
@Test
public void test08815() { x = 0xefffffffffffffffl; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffba00000000l); }
@Test
public void test08816() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4600000000l; AssertJUnit.assertEquals("multiply", result, 0xe38fa38e00000000l); }
@Test
public void test08817() { x = 0x000000007fffffffl; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd000000000l); }
@Test
public void test08818() { x = 0x0000000080000000l; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08819() { x = 0x00000000ffffffffl; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd000000000l); }
@Test
public void test08820() { x = 0x000000017fffffffl; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd000000000l); }
@Test
public void test08821() { x = 0x0000000180000000l; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08822() { x = 0x00000001ffffffffl; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd000000000l); }
@Test
public void test08823() { x = 0xffffffff7fffffffl; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd000000000l); }
@Test
public void test08824() { x = 0xffffffff80000000l; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08825() { x = 0x00000001deadf00dl; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0x1c7d1c7000000000l); }
@Test
public void test08826() { x = 0xffffffffdeadf00dl; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0x1c7d1c7000000000l); }
@Test
public void test08827() { x = 0x7fffffffffffffffl; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd000000000l); }
@Test
public void test08828() { x = 0x7fffffff7fffffffl; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd000000000l); }
@Test
public void test08829() { x = 0x7fffffff80000000l; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08830() { x = 0x7fffffffdeadf00dl; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0x1c7d1c7000000000l); }
@Test
public void test08831() { x = 0x8000000000000000l; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08832() { x = 0xffffffffffffffffl; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd000000000l); }
@Test
public void test08833() { x = 0xfffffffffffffffel; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffba000000000l); }
@Test
public void test08834() { x = 0xefffffffffffffffl; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd000000000l); }
@Test
public void test08835() { x = 0xdeadf00ddeadf00dl; long result = x * 0x23000000000l; AssertJUnit.assertEquals("multiply", result, 0x1c7d1c7000000000l); }
@Test
public void test08836() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0xffffffdd00000046l); }
@Test
public void test08837() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0xffffffdd00000000l); }
@Test
public void test08838() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0xffffffba00000046l); }
@Test
public void test08839() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0xffffff9700000046l); }
@Test
public void test08840() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0xffffff9700000000l); }
@Test
public void test08841() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0xffffff7400000046l); }
@Test
public void test08842() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0x0000002300000046l); }
@Test
public void test08843() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0x0000002300000000l); }
@Test
public void test08844() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0xffffff7d1c705c72l); }
@Test
public void test08845() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0x000000091c705c72l); }
@Test
public void test08846() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000046l); }
@Test
public void test08847() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0x0000002300000046l); }
@Test
public void test08848() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0x0000002300000000l); }
@Test
public void test08849() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0x000000091c705c72l); }
@Test
public void test08850() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08851() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000046l); }
@Test
public void test08852() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0x000000000000008cl); }
@Test
public void test08853() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0x6000000000000046l); }
@Test
public void test08854() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffbal; AssertJUnit.assertEquals("multiply", result, 0x1c705c351c705c72l); }
@Test
public void test08855() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0xfffffee800000230l); }
@Test
public void test08856() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0xfffffee800000000l); }
@Test
public void test08857() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0xfffffdd000000230l); }
@Test
public void test08858() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0xfffffcb800000230l); }
@Test
public void test08859() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0xfffffcb800000000l); }
@Test
public void test08860() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0xfffffba000000230l); }
@Test
public void test08861() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0x0000011800000230l); }
@Test
public void test08862() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0x0000011800000000l); }
@Test
public void test08863() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0xfffffbe8e382e390l); }
@Test
public void test08864() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0x00000048e382e390l); }
@Test
public void test08865() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000230l); }
@Test
public void test08866() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0x0000011800000230l); }
@Test
public void test08867() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0x0000011800000000l); }
@Test
public void test08868() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0x00000048e382e390l); }
@Test
public void test08869() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08870() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000230l); }
@Test
public void test08871() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000460l); }
@Test
public void test08872() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000230l); }
@Test
public void test08873() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffdd0l; AssertJUnit.assertEquals("multiply", result, 0xe382e1a8e382e390l); }
@Test
public void test08874() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0xffffdd0000004600l); }
@Test
public void test08875() { x = 0x0000000080000000l; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0xffffdd0000000000l); }
@Test
public void test08876() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0xffffba0000004600l); }
@Test
public void test08877() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0xffff970000004600l); }
@Test
public void test08878() { x = 0x0000000180000000l; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0xffff970000000000l); }
@Test
public void test08879() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0xffff740000004600l); }
@Test
public void test08880() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0x0000230000004600l); }
@Test
public void test08881() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0x0000230000000000l); }
@Test
public void test08882() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0xffff7d1c705c7200l); }
@Test
public void test08883() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0x0000091c705c7200l); }
@Test
public void test08884() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004600l); }
@Test
public void test08885() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0x0000230000004600l); }
@Test
public void test08886() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0x0000230000000000l); }
@Test
public void test08887() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0x0000091c705c7200l); }
@Test
public void test08888() { x = 0x8000000000000000l; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08889() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004600l); }
@Test
public void test08890() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000008c00l); }
@Test
public void test08891() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004600l); }
@Test
public void test08892() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffba00l; AssertJUnit.assertEquals("multiply", result, 0x705c351c705c7200l); }
@Test
public void test08893() { x = 0x000000007fffffffl; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004600000000l); }
@Test
public void test08894() { x = 0x0000000080000000l; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08895() { x = 0x00000000ffffffffl; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004600000000l); }
@Test
public void test08896() { x = 0x000000017fffffffl; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004600000000l); }
@Test
public void test08897() { x = 0x0000000180000000l; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08898() { x = 0x00000001ffffffffl; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004600000000l); }
@Test
public void test08899() { x = 0xffffffff7fffffffl; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004600000000l); }
@Test
public void test08900() { x = 0xffffffff80000000l; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08901() { x = 0x00000001deadf00dl; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x1c705c7200000000l); }
@Test
public void test08902() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x1c705c7200000000l); }
@Test
public void test08903() { x = 0x7fffffffffffffffl; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004600000000l); }
@Test
public void test08904() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004600000000l); }
@Test
public void test08905() { x = 0x7fffffff80000000l; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08906() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x1c705c7200000000l); }
@Test
public void test08907() { x = 0x8000000000000000l; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08908() { x = 0xffffffffffffffffl; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004600000000l); }
@Test
public void test08909() { x = 0xfffffffffffffffel; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008c00000000l); }
@Test
public void test08910() { x = 0xefffffffffffffffl; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004600000000l); }
@Test
public void test08911() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffba00000000l; AssertJUnit.assertEquals("multiply", result, 0x1c705c7200000000l); }
@Test
public void test08912() { x = 0x000000007fffffffl; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000023000000000l); }
@Test
public void test08913() { x = 0x0000000080000000l; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08914() { x = 0x00000000ffffffffl; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000023000000000l); }
@Test
public void test08915() { x = 0x000000017fffffffl; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000023000000000l); }
@Test
public void test08916() { x = 0x0000000180000000l; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08917() { x = 0x00000001ffffffffl; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000023000000000l); }
@Test
public void test08918() { x = 0xffffffff7fffffffl; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000023000000000l); }
@Test
public void test08919() { x = 0xffffffff80000000l; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08920() { x = 0x00000001deadf00dl; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0xe382e39000000000l); }
@Test
public void test08921() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0xe382e39000000000l); }
@Test
public void test08922() { x = 0x7fffffffffffffffl; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000023000000000l); }
@Test
public void test08923() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000023000000000l); }
@Test
public void test08924() { x = 0x7fffffff80000000l; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08925() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0xe382e39000000000l); }
@Test
public void test08926() { x = 0x8000000000000000l; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08927() { x = 0xffffffffffffffffl; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000023000000000l); }
@Test
public void test08928() { x = 0xfffffffffffffffel; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000046000000000l); }
@Test
public void test08929() { x = 0xefffffffffffffffl; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000023000000000l); }
@Test
public void test08930() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffdd000000000l; AssertJUnit.assertEquals("multiply", result, 0xe382e39000000000l); }
@Test
public void test08931() { x = 0x000000007fffffffl; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0x000000247fffffb7l); }
@Test
public void test08932() { x = 0x0000000080000000l; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0x0000002480000000l); }
@Test
public void test08933() { x = 0x00000000ffffffffl; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0x00000048ffffffb7l); }
@Test
public void test08934() { x = 0x000000017fffffffl; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0x0000006d7fffffb7l); }
@Test
public void test08935() { x = 0x0000000180000000l; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0x0000006d80000000l); }
@Test
public void test08936() { x = 0x00000001ffffffffl; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0x00000091ffffffb7l); }
@Test
public void test08937() { x = 0xffffffff7fffffffl; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0xffffffdb7fffffb7l); }
@Test
public void test08938() { x = 0xffffffff80000000l; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0xffffffdb80000000l); }
@Test
public void test08939() { x = 0x00000001deadf00dl; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0x000000887f9973b5l); }
@Test
public void test08940() { x = 0xffffffffdeadf00dl; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0xfffffff67f9973b5l); }
@Test
public void test08941() { x = 0x7fffffffffffffffl; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffb7l); }
@Test
public void test08942() { x = 0x7fffffff7fffffffl; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdb7fffffb7l); }
@Test
public void test08943() { x = 0x7fffffff80000000l; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0x7fffffdb80000000l); }
@Test
public void test08944() { x = 0x7fffffffdeadf00dl; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff67f9973b5l); }
@Test
public void test08945() { x = 0x8000000000000000l; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08946() { x = 0xffffffffffffffffl; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffb7l); }
@Test
public void test08947() { x = 0xfffffffffffffffel; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff6el); }
@Test
public void test08948() { x = 0xefffffffffffffffl; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0x6fffffffffffffb7l); }
@Test
public void test08949() { x = 0xdeadf00ddeadf00dl; long result = x * 0x49l; AssertJUnit.assertEquals("multiply", result, 0x7f9973f47f9973b5l); }
@Test
public void test08950() { x = 0x000000007fffffffl; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0x00000123fffffdb8l); }
@Test
public void test08951() { x = 0x0000000080000000l; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0x0000012400000000l); }
@Test
public void test08952() { x = 0x00000000ffffffffl; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0x00000247fffffdb8l); }
@Test
public void test08953() { x = 0x000000017fffffffl; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0x0000036bfffffdb8l); }
@Test
public void test08954() { x = 0x0000000180000000l; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0x0000036c00000000l); }
@Test
public void test08955() { x = 0x00000001ffffffffl; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0x0000048ffffffdb8l); }
@Test
public void test08956() { x = 0xffffffff7fffffffl; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0xfffffedbfffffdb8l); }
@Test
public void test08957() { x = 0xffffffff80000000l; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0xfffffedc00000000l); }
@Test
public void test08958() { x = 0x00000001deadf00dl; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0x00000443fccb9da8l); }
@Test
public void test08959() { x = 0xffffffffdeadf00dl; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0xffffffb3fccb9da8l); }
@Test
public void test08960() { x = 0x7fffffffffffffffl; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffdb8l); }
@Test
public void test08961() { x = 0x7fffffff7fffffffl; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0xfffffedbfffffdb8l); }
@Test
public void test08962() { x = 0x7fffffff80000000l; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0xfffffedc00000000l); }
@Test
public void test08963() { x = 0x7fffffffdeadf00dl; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0xffffffb3fccb9da8l); }
@Test
public void test08964() { x = 0x8000000000000000l; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08965() { x = 0xffffffffffffffffl; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffdb8l); }
@Test
public void test08966() { x = 0xfffffffffffffffel; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffb70l); }
@Test
public void test08967() { x = 0xefffffffffffffffl; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffdb8l); }
@Test
public void test08968() { x = 0xdeadf00ddeadf00dl; long result = x * 0x248l; AssertJUnit.assertEquals("multiply", result, 0xfccb9fa3fccb9da8l); }
@Test
public void test08969() { x = 0x000000007fffffffl; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0x0000247fffffb700l); }
@Test
public void test08970() { x = 0x0000000080000000l; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0x0000248000000000l); }
@Test
public void test08971() { x = 0x00000000ffffffffl; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0x000048ffffffb700l); }
@Test
public void test08972() { x = 0x000000017fffffffl; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0x00006d7fffffb700l); }
@Test
public void test08973() { x = 0x0000000180000000l; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0x00006d8000000000l); }
@Test
public void test08974() { x = 0x00000001ffffffffl; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0x000091ffffffb700l); }
@Test
public void test08975() { x = 0xffffffff7fffffffl; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0xffffdb7fffffb700l); }
@Test
public void test08976() { x = 0xffffffff80000000l; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0xffffdb8000000000l); }
@Test
public void test08977() { x = 0x00000001deadf00dl; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0x0000887f9973b500l); }
@Test
public void test08978() { x = 0xffffffffdeadf00dl; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0xfffff67f9973b500l); }
@Test
public void test08979() { x = 0x7fffffffffffffffl; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb700l); }
@Test
public void test08980() { x = 0x7fffffff7fffffffl; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0xffffdb7fffffb700l); }
@Test
public void test08981() { x = 0x7fffffff80000000l; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0xffffdb8000000000l); }
@Test
public void test08982() { x = 0x7fffffffdeadf00dl; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0xfffff67f9973b500l); }
@Test
public void test08983() { x = 0x8000000000000000l; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test08984() { x = 0xffffffffffffffffl; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb700l); }
@Test
public void test08985() { x = 0xfffffffffffffffel; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff6e00l); }
@Test
public void test08986() { x = 0xefffffffffffffffl; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb700l); }
@Test
public void test08987() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4900l; AssertJUnit.assertEquals("multiply", result, 0x9973f47f9973b500l); }
@Test
public void test08988() { x = 0x000000007fffffffl; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffb700000000l); }
@Test
public void test08989() { x = 0x0000000080000000l; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08990() { x = 0x00000000ffffffffl; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb700000000l); }
@Test
public void test08991() { x = 0x000000017fffffffl; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffb700000000l); }
@Test
public void test08992() { x = 0x0000000180000000l; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08993() { x = 0x00000001ffffffffl; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb700000000l); }
@Test
public void test08994() { x = 0xffffffff7fffffffl; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffb700000000l); }
@Test
public void test08995() { x = 0xffffffff80000000l; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test08996() { x = 0x00000001deadf00dl; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0x7f9973b500000000l); }
@Test
public void test08997() { x = 0xffffffffdeadf00dl; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0x7f9973b500000000l); }
@Test
public void test08998() { x = 0x7fffffffffffffffl; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb700000000l); }
@Test
public void test08999() { x = 0x7fffffff7fffffffl; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffb700000000l); }
@Test
public void test09000() { x = 0x7fffffff80000000l; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09001() { x = 0x7fffffffdeadf00dl; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0x7f9973b500000000l); }
@Test
public void test09002() { x = 0x8000000000000000l; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09003() { x = 0xffffffffffffffffl; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb700000000l); }
@Test
public void test09004() { x = 0xfffffffffffffffel; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6e00000000l); }
@Test
public void test09005() { x = 0xefffffffffffffffl; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb700000000l); }
@Test
public void test09006() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4900000000l; AssertJUnit.assertEquals("multiply", result, 0x7f9973b500000000l); }
@Test
public void test09007() { x = 0x000000007fffffffl; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb800000000l); }
@Test
public void test09008() { x = 0x0000000080000000l; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09009() { x = 0x00000000ffffffffl; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb800000000l); }
@Test
public void test09010() { x = 0x000000017fffffffl; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb800000000l); }
@Test
public void test09011() { x = 0x0000000180000000l; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09012() { x = 0x00000001ffffffffl; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb800000000l); }
@Test
public void test09013() { x = 0xffffffff7fffffffl; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb800000000l); }
@Test
public void test09014() { x = 0xffffffff80000000l; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09015() { x = 0x00000001deadf00dl; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0xfccb9da800000000l); }
@Test
public void test09016() { x = 0xffffffffdeadf00dl; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0xfccb9da800000000l); }
@Test
public void test09017() { x = 0x7fffffffffffffffl; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb800000000l); }
@Test
public void test09018() { x = 0x7fffffff7fffffffl; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb800000000l); }
@Test
public void test09019() { x = 0x7fffffff80000000l; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09020() { x = 0x7fffffffdeadf00dl; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0xfccb9da800000000l); }
@Test
public void test09021() { x = 0x8000000000000000l; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09022() { x = 0xffffffffffffffffl; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb800000000l); }
@Test
public void test09023() { x = 0xfffffffffffffffel; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb7000000000l); }
@Test
public void test09024() { x = 0xefffffffffffffffl; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb800000000l); }
@Test
public void test09025() { x = 0xdeadf00ddeadf00dl; long result = x * 0x24800000000l; AssertJUnit.assertEquals("multiply", result, 0xfccb9da800000000l); }
@Test
public void test09026() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0xffffffdb80000049l); }
@Test
public void test09027() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0xffffffdb80000000l); }
@Test
public void test09028() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0xffffffb700000049l); }
@Test
public void test09029() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0xffffff9280000049l); }
@Test
public void test09030() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0xffffff9280000000l); }
@Test
public void test09031() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0xffffff6e00000049l); }
@Test
public void test09032() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0x0000002480000049l); }
@Test
public void test09033() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0x0000002480000000l); }
@Test
public void test09034() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0xffffff7780668c4bl); }
@Test
public void test09035() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0x0000000980668c4bl); }
@Test
public void test09036() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000049l); }
@Test
public void test09037() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0x8000002480000049l); }
@Test
public void test09038() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0x8000002480000000l); }
@Test
public void test09039() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0x8000000980668c4bl); }
@Test
public void test09040() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09041() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000049l); }
@Test
public void test09042() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000092l); }
@Test
public void test09043() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0x9000000000000049l); }
@Test
public void test09044() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffb7l; AssertJUnit.assertEquals("multiply", result, 0x80668c0b80668c4bl); }
@Test
public void test09045() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffedc00000248l); }
@Test
public void test09046() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffedc00000000l); }
@Test
public void test09047() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb800000248l); }
@Test
public void test09048() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffc9400000248l); }
@Test
public void test09049() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffc9400000000l); }
@Test
public void test09050() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffb7000000248l); }
@Test
public void test09051() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0x0000012400000248l); }
@Test
public void test09052() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0x0000012400000000l); }
@Test
public void test09053() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffbbc03346258l); }
@Test
public void test09054() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0x0000004c03346258l); }
@Test
public void test09055() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000248l); }
@Test
public void test09056() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0x0000012400000248l); }
@Test
public void test09057() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0x0000012400000000l); }
@Test
public void test09058() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0x0000004c03346258l); }
@Test
public void test09059() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09060() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000248l); }
@Test
public void test09061() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000490l); }
@Test
public void test09062() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000248l); }
@Test
public void test09063() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffdb8l; AssertJUnit.assertEquals("multiply", result, 0x0334605c03346258l); }
@Test
public void test09064() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0xffffdb8000004900l); }
@Test
public void test09065() { x = 0x0000000080000000l; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0xffffdb8000000000l); }
@Test
public void test09066() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0xffffb70000004900l); }
@Test
public void test09067() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0xffff928000004900l); }
@Test
public void test09068() { x = 0x0000000180000000l; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0xffff928000000000l); }
@Test
public void test09069() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0xffff6e0000004900l); }
@Test
public void test09070() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0x0000248000004900l); }
@Test
public void test09071() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0x0000248000000000l); }
@Test
public void test09072() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0xffff7780668c4b00l); }
@Test
public void test09073() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0x00000980668c4b00l); }
@Test
public void test09074() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004900l); }
@Test
public void test09075() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0x0000248000004900l); }
@Test
public void test09076() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0x0000248000000000l); }
@Test
public void test09077() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0x00000980668c4b00l); }
@Test
public void test09078() { x = 0x8000000000000000l; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09079() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004900l); }
@Test
public void test09080() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000009200l); }
@Test
public void test09081() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004900l); }
@Test
public void test09082() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffb700l; AssertJUnit.assertEquals("multiply", result, 0x668c0b80668c4b00l); }
@Test
public void test09083() { x = 0x000000007fffffffl; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004900000000l); }
@Test
public void test09084() { x = 0x0000000080000000l; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09085() { x = 0x00000000ffffffffl; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004900000000l); }
@Test
public void test09086() { x = 0x000000017fffffffl; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004900000000l); }
@Test
public void test09087() { x = 0x0000000180000000l; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09088() { x = 0x00000001ffffffffl; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004900000000l); }
@Test
public void test09089() { x = 0xffffffff7fffffffl; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004900000000l); }
@Test
public void test09090() { x = 0xffffffff80000000l; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09091() { x = 0x00000001deadf00dl; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x80668c4b00000000l); }
@Test
public void test09092() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x80668c4b00000000l); }
@Test
public void test09093() { x = 0x7fffffffffffffffl; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004900000000l); }
@Test
public void test09094() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004900000000l); }
@Test
public void test09095() { x = 0x7fffffff80000000l; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09096() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x80668c4b00000000l); }
@Test
public void test09097() { x = 0x8000000000000000l; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09098() { x = 0xffffffffffffffffl; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004900000000l); }
@Test
public void test09099() { x = 0xfffffffffffffffel; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009200000000l); }
@Test
public void test09100() { x = 0xefffffffffffffffl; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004900000000l); }
@Test
public void test09101() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffb700000000l; AssertJUnit.assertEquals("multiply", result, 0x80668c4b00000000l); }
@Test
public void test09102() { x = 0x000000007fffffffl; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000024800000000l); }
@Test
public void test09103() { x = 0x0000000080000000l; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09104() { x = 0x00000000ffffffffl; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000024800000000l); }
@Test
public void test09105() { x = 0x000000017fffffffl; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000024800000000l); }
@Test
public void test09106() { x = 0x0000000180000000l; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09107() { x = 0x00000001ffffffffl; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000024800000000l); }
@Test
public void test09108() { x = 0xffffffff7fffffffl; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000024800000000l); }
@Test
public void test09109() { x = 0xffffffff80000000l; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09110() { x = 0x00000001deadf00dl; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0334625800000000l); }
@Test
public void test09111() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0334625800000000l); }
@Test
public void test09112() { x = 0x7fffffffffffffffl; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000024800000000l); }
@Test
public void test09113() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000024800000000l); }
@Test
public void test09114() { x = 0x7fffffff80000000l; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09115() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0334625800000000l); }
@Test
public void test09116() { x = 0x8000000000000000l; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09117() { x = 0xffffffffffffffffl; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000024800000000l); }
@Test
public void test09118() { x = 0xfffffffffffffffel; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000049000000000l); }
@Test
public void test09119() { x = 0xefffffffffffffffl; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000024800000000l); }
@Test
public void test09120() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffdb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0334625800000000l); }
@Test
public void test09121() { x = 0x000000007fffffffl; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0x00000024ffffffb6l); }
@Test
public void test09122() { x = 0x0000000080000000l; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0x0000002500000000l); }
@Test
public void test09123() { x = 0x00000000ffffffffl; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0x00000049ffffffb6l); }
@Test
public void test09124() { x = 0x000000017fffffffl; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0x0000006effffffb6l); }
@Test
public void test09125() { x = 0x0000000180000000l; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0x0000006f00000000l); }
@Test
public void test09126() { x = 0x00000001ffffffffl; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0x00000093ffffffb6l); }
@Test
public void test09127() { x = 0xffffffff7fffffffl; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0xffffffdaffffffb6l); }
@Test
public void test09128() { x = 0xffffffff80000000l; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0xffffffdb00000000l); }
@Test
public void test09129() { x = 0x00000001deadf00dl; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0x0000008a5e4763c2l); }
@Test
public void test09130() { x = 0xffffffffdeadf00dl; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0xfffffff65e4763c2l); }
@Test
public void test09131() { x = 0x7fffffffffffffffl; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffb6l); }
@Test
public void test09132() { x = 0x7fffffff7fffffffl; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0xffffffdaffffffb6l); }
@Test
public void test09133() { x = 0x7fffffff80000000l; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0xffffffdb00000000l); }
@Test
public void test09134() { x = 0x7fffffffdeadf00dl; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0xfffffff65e4763c2l); }
@Test
public void test09135() { x = 0x8000000000000000l; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09136() { x = 0xffffffffffffffffl; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffb6l); }
@Test
public void test09137() { x = 0xfffffffffffffffel; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff6cl); }
@Test
public void test09138() { x = 0xefffffffffffffffl; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0x5fffffffffffffb6l); }
@Test
public void test09139() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4al; AssertJUnit.assertEquals("multiply", result, 0x5e4764025e4763c2l); }
@Test
public void test09140() { x = 0x000000007fffffffl; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0x00000127fffffdb0l); }
@Test
public void test09141() { x = 0x0000000080000000l; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0x0000012800000000l); }
@Test
public void test09142() { x = 0x00000000ffffffffl; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0x0000024ffffffdb0l); }
@Test
public void test09143() { x = 0x000000017fffffffl; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0x00000377fffffdb0l); }
@Test
public void test09144() { x = 0x0000000180000000l; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0x0000037800000000l); }
@Test
public void test09145() { x = 0x00000001ffffffffl; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0x0000049ffffffdb0l); }
@Test
public void test09146() { x = 0xffffffff7fffffffl; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0xfffffed7fffffdb0l); }
@Test
public void test09147() { x = 0xffffffff80000000l; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0xfffffed800000000l); }
@Test
public void test09148() { x = 0x00000001deadf00dl; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0x00000452f23b1e10l); }
@Test
public void test09149() { x = 0xffffffffdeadf00dl; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0xffffffb2f23b1e10l); }
@Test
public void test09150() { x = 0x7fffffffffffffffl; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffdb0l); }
@Test
public void test09151() { x = 0x7fffffff7fffffffl; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0xfffffed7fffffdb0l); }
@Test
public void test09152() { x = 0x7fffffff80000000l; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0xfffffed800000000l); }
@Test
public void test09153() { x = 0x7fffffffdeadf00dl; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0xffffffb2f23b1e10l); }
@Test
public void test09154() { x = 0x8000000000000000l; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09155() { x = 0xffffffffffffffffl; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffdb0l); }
@Test
public void test09156() { x = 0xfffffffffffffffel; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffb60l); }
@Test
public void test09157() { x = 0xefffffffffffffffl; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffdb0l); }
@Test
public void test09158() { x = 0xdeadf00ddeadf00dl; long result = x * 0x250l; AssertJUnit.assertEquals("multiply", result, 0xf23b2012f23b1e10l); }
@Test
public void test09159() { x = 0x000000007fffffffl; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0x000024ffffffb600l); }
@Test
public void test09160() { x = 0x0000000080000000l; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0x0000250000000000l); }
@Test
public void test09161() { x = 0x00000000ffffffffl; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0x000049ffffffb600l); }
@Test
public void test09162() { x = 0x000000017fffffffl; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0x00006effffffb600l); }
@Test
public void test09163() { x = 0x0000000180000000l; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0x00006f0000000000l); }
@Test
public void test09164() { x = 0x00000001ffffffffl; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0x000093ffffffb600l); }
@Test
public void test09165() { x = 0xffffffff7fffffffl; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0xffffdaffffffb600l); }
@Test
public void test09166() { x = 0xffffffff80000000l; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0xffffdb0000000000l); }
@Test
public void test09167() { x = 0x00000001deadf00dl; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0x00008a5e4763c200l); }
@Test
public void test09168() { x = 0xffffffffdeadf00dl; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0xfffff65e4763c200l); }
@Test
public void test09169() { x = 0x7fffffffffffffffl; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb600l); }
@Test
public void test09170() { x = 0x7fffffff7fffffffl; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0xffffdaffffffb600l); }
@Test
public void test09171() { x = 0x7fffffff80000000l; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0xffffdb0000000000l); }
@Test
public void test09172() { x = 0x7fffffffdeadf00dl; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0xfffff65e4763c200l); }
@Test
public void test09173() { x = 0x8000000000000000l; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09174() { x = 0xffffffffffffffffl; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb600l); }
@Test
public void test09175() { x = 0xfffffffffffffffel; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff6c00l); }
@Test
public void test09176() { x = 0xefffffffffffffffl; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb600l); }
@Test
public void test09177() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4a00l; AssertJUnit.assertEquals("multiply", result, 0x4764025e4763c200l); }
@Test
public void test09178() { x = 0x000000007fffffffl; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb600000000l); }
@Test
public void test09179() { x = 0x0000000080000000l; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09180() { x = 0x00000000ffffffffl; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb600000000l); }
@Test
public void test09181() { x = 0x000000017fffffffl; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb600000000l); }
@Test
public void test09182() { x = 0x0000000180000000l; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09183() { x = 0x00000001ffffffffl; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb600000000l); }
@Test
public void test09184() { x = 0xffffffff7fffffffl; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb600000000l); }
@Test
public void test09185() { x = 0xffffffff80000000l; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09186() { x = 0x00000001deadf00dl; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0x5e4763c200000000l); }
@Test
public void test09187() { x = 0xffffffffdeadf00dl; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0x5e4763c200000000l); }
@Test
public void test09188() { x = 0x7fffffffffffffffl; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb600000000l); }
@Test
public void test09189() { x = 0x7fffffff7fffffffl; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb600000000l); }
@Test
public void test09190() { x = 0x7fffffff80000000l; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09191() { x = 0x7fffffffdeadf00dl; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0x5e4763c200000000l); }
@Test
public void test09192() { x = 0x8000000000000000l; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09193() { x = 0xffffffffffffffffl; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb600000000l); }
@Test
public void test09194() { x = 0xfffffffffffffffel; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6c00000000l); }
@Test
public void test09195() { x = 0xefffffffffffffffl; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb600000000l); }
@Test
public void test09196() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4a00000000l; AssertJUnit.assertEquals("multiply", result, 0x5e4763c200000000l); }
@Test
public void test09197() { x = 0x000000007fffffffl; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb000000000l); }
@Test
public void test09198() { x = 0x0000000080000000l; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09199() { x = 0x00000000ffffffffl; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb000000000l); }
@Test
public void test09200() { x = 0x000000017fffffffl; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb000000000l); }
@Test
public void test09201() { x = 0x0000000180000000l; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09202() { x = 0x00000001ffffffffl; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb000000000l); }
@Test
public void test09203() { x = 0xffffffff7fffffffl; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb000000000l); }
@Test
public void test09204() { x = 0xffffffff80000000l; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09205() { x = 0x00000001deadf00dl; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0xf23b1e1000000000l); }
@Test
public void test09206() { x = 0xffffffffdeadf00dl; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0xf23b1e1000000000l); }
@Test
public void test09207() { x = 0x7fffffffffffffffl; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb000000000l); }
@Test
public void test09208() { x = 0x7fffffff7fffffffl; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb000000000l); }
@Test
public void test09209() { x = 0x7fffffff80000000l; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09210() { x = 0x7fffffffdeadf00dl; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0xf23b1e1000000000l); }
@Test
public void test09211() { x = 0x8000000000000000l; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09212() { x = 0xffffffffffffffffl; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb000000000l); }
@Test
public void test09213() { x = 0xfffffffffffffffel; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb6000000000l); }
@Test
public void test09214() { x = 0xefffffffffffffffl; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb000000000l); }
@Test
public void test09215() { x = 0xdeadf00ddeadf00dl; long result = x * 0x25000000000l; AssertJUnit.assertEquals("multiply", result, 0xf23b1e1000000000l); }
@Test
public void test09216() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0xffffffdb0000004al); }
@Test
public void test09217() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0xffffffdb00000000l); }
@Test
public void test09218() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0xffffffb60000004al); }
@Test
public void test09219() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0xffffff910000004al); }
@Test
public void test09220() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0xffffff9100000000l); }
@Test
public void test09221() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0xffffff6c0000004al); }
@Test
public void test09222() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0x000000250000004al); }
@Test
public void test09223() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0x0000002500000000l); }
@Test
public void test09224() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0xffffff75a1b89c3el); }
@Test
public void test09225() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0x00000009a1b89c3el); }
@Test
public void test09226() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0x000000000000004al); }
@Test
public void test09227() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0x000000250000004al); }
@Test
public void test09228() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0x0000002500000000l); }
@Test
public void test09229() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0x00000009a1b89c3el); }
@Test
public void test09230() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09231() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0x000000000000004al); }
@Test
public void test09232() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000094l); }
@Test
public void test09233() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0xa00000000000004al); }
@Test
public void test09234() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffb6l; AssertJUnit.assertEquals("multiply", result, 0xa1b89bfda1b89c3el); }
@Test
public void test09235() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0xfffffed800000250l); }
@Test
public void test09236() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0xfffffed800000000l); }
@Test
public void test09237() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb000000250l); }
@Test
public void test09238() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0xfffffc8800000250l); }
@Test
public void test09239() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0xfffffc8800000000l); }
@Test
public void test09240() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0xfffffb6000000250l); }
@Test
public void test09241() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0x0000012800000250l); }
@Test
public void test09242() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0x0000012800000000l); }
@Test
public void test09243() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0xfffffbad0dc4e1f0l); }
@Test
public void test09244() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0x0000004d0dc4e1f0l); }
@Test
public void test09245() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000250l); }
@Test
public void test09246() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0x0000012800000250l); }
@Test
public void test09247() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0x0000012800000000l); }
@Test
public void test09248() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0x0000004d0dc4e1f0l); }
@Test
public void test09249() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09250() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000250l); }
@Test
public void test09251() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0x00000000000004a0l); }
@Test
public void test09252() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000250l); }
@Test
public void test09253() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffdb0l; AssertJUnit.assertEquals("multiply", result, 0x0dc4dfed0dc4e1f0l); }
@Test
public void test09254() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0xffffdb0000004a00l); }
@Test
public void test09255() { x = 0x0000000080000000l; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0xffffdb0000000000l); }
@Test
public void test09256() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0xffffb60000004a00l); }
@Test
public void test09257() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0xffff910000004a00l); }
@Test
public void test09258() { x = 0x0000000180000000l; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0xffff910000000000l); }
@Test
public void test09259() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0xffff6c0000004a00l); }
@Test
public void test09260() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0x0000250000004a00l); }
@Test
public void test09261() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0x0000250000000000l); }
@Test
public void test09262() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0xffff75a1b89c3e00l); }
@Test
public void test09263() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0x000009a1b89c3e00l); }
@Test
public void test09264() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004a00l); }
@Test
public void test09265() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0x0000250000004a00l); }
@Test
public void test09266() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0x0000250000000000l); }
@Test
public void test09267() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0x000009a1b89c3e00l); }
@Test
public void test09268() { x = 0x8000000000000000l; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09269() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004a00l); }
@Test
public void test09270() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000009400l); }
@Test
public void test09271() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004a00l); }
@Test
public void test09272() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffb600l; AssertJUnit.assertEquals("multiply", result, 0xb89bfda1b89c3e00l); }
@Test
public void test09273() { x = 0x000000007fffffffl; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004a00000000l); }
@Test
public void test09274() { x = 0x0000000080000000l; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09275() { x = 0x00000000ffffffffl; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004a00000000l); }
@Test
public void test09276() { x = 0x000000017fffffffl; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004a00000000l); }
@Test
public void test09277() { x = 0x0000000180000000l; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09278() { x = 0x00000001ffffffffl; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004a00000000l); }
@Test
public void test09279() { x = 0xffffffff7fffffffl; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004a00000000l); }
@Test
public void test09280() { x = 0xffffffff80000000l; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09281() { x = 0x00000001deadf00dl; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0xa1b89c3e00000000l); }
@Test
public void test09282() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0xa1b89c3e00000000l); }
@Test
public void test09283() { x = 0x7fffffffffffffffl; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004a00000000l); }
@Test
public void test09284() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004a00000000l); }
@Test
public void test09285() { x = 0x7fffffff80000000l; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09286() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0xa1b89c3e00000000l); }
@Test
public void test09287() { x = 0x8000000000000000l; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09288() { x = 0xffffffffffffffffl; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004a00000000l); }
@Test
public void test09289() { x = 0xfffffffffffffffel; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009400000000l); }
@Test
public void test09290() { x = 0xefffffffffffffffl; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004a00000000l); }
@Test
public void test09291() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffb600000000l; AssertJUnit.assertEquals("multiply", result, 0xa1b89c3e00000000l); }
@Test
public void test09292() { x = 0x000000007fffffffl; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025000000000l); }
@Test
public void test09293() { x = 0x0000000080000000l; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09294() { x = 0x00000000ffffffffl; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025000000000l); }
@Test
public void test09295() { x = 0x000000017fffffffl; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025000000000l); }
@Test
public void test09296() { x = 0x0000000180000000l; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09297() { x = 0x00000001ffffffffl; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025000000000l); }
@Test
public void test09298() { x = 0xffffffff7fffffffl; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025000000000l); }
@Test
public void test09299() { x = 0xffffffff80000000l; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09300() { x = 0x00000001deadf00dl; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0dc4e1f000000000l); }
@Test
public void test09301() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0dc4e1f000000000l); }
@Test
public void test09302() { x = 0x7fffffffffffffffl; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025000000000l); }
@Test
public void test09303() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025000000000l); }
@Test
public void test09304() { x = 0x7fffffff80000000l; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09305() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0dc4e1f000000000l); }
@Test
public void test09306() { x = 0x8000000000000000l; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09307() { x = 0xffffffffffffffffl; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025000000000l); }
@Test
public void test09308() { x = 0xfffffffffffffffel; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x000004a000000000l); }
@Test
public void test09309() { x = 0xefffffffffffffffl; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025000000000l); }
@Test
public void test09310() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffdb000000000l; AssertJUnit.assertEquals("multiply", result, 0x0dc4e1f000000000l); }
@Test
public void test09311() { x = 0x000000007fffffffl; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0x000000257fffffb5l); }
@Test
public void test09312() { x = 0x0000000080000000l; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0x0000002580000000l); }
@Test
public void test09313() { x = 0x00000000ffffffffl; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0x0000004affffffb5l); }
@Test
public void test09314() { x = 0x000000017fffffffl; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0x000000707fffffb5l); }
@Test
public void test09315() { x = 0x0000000180000000l; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0x0000007080000000l); }
@Test
public void test09316() { x = 0x00000001ffffffffl; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0x00000095ffffffb5l); }
@Test
public void test09317() { x = 0xffffffff7fffffffl; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0xffffffda7fffffb5l); }
@Test
public void test09318() { x = 0xffffffff80000000l; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0xffffffda80000000l); }
@Test
public void test09319() { x = 0x00000001deadf00dl; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0x0000008c3cf553cfl); }
@Test
public void test09320() { x = 0xffffffffdeadf00dl; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0xfffffff63cf553cfl); }
@Test
public void test09321() { x = 0x7fffffffffffffffl; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffb5l); }
@Test
public void test09322() { x = 0x7fffffff7fffffffl; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0x7fffffda7fffffb5l); }
@Test
public void test09323() { x = 0x7fffffff80000000l; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0x7fffffda80000000l); }
@Test
public void test09324() { x = 0x7fffffffdeadf00dl; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0x7ffffff63cf553cfl); }
@Test
public void test09325() { x = 0x8000000000000000l; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09326() { x = 0xffffffffffffffffl; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffb5l); }
@Test
public void test09327() { x = 0xfffffffffffffffel; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff6al); }
@Test
public void test09328() { x = 0xefffffffffffffffl; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0x4fffffffffffffb5l); }
@Test
public void test09329() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4bl; AssertJUnit.assertEquals("multiply", result, 0x3cf554103cf553cfl); }
@Test
public void test09330() { x = 0x000000007fffffffl; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0x0000012bfffffda8l); }
@Test
public void test09331() { x = 0x0000000080000000l; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0x0000012c00000000l); }
@Test
public void test09332() { x = 0x00000000ffffffffl; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0x00000257fffffda8l); }
@Test
public void test09333() { x = 0x000000017fffffffl; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0x00000383fffffda8l); }
@Test
public void test09334() { x = 0x0000000180000000l; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0x0000038400000000l); }
@Test
public void test09335() { x = 0x00000001ffffffffl; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0x000004affffffda8l); }
@Test
public void test09336() { x = 0xffffffff7fffffffl; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0xfffffed3fffffda8l); }
@Test
public void test09337() { x = 0xffffffff80000000l; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0xfffffed400000000l); }
@Test
public void test09338() { x = 0x00000001deadf00dl; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0x00000461e7aa9e78l); }
@Test
public void test09339() { x = 0xffffffffdeadf00dl; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0xffffffb1e7aa9e78l); }
@Test
public void test09340() { x = 0x7fffffffffffffffl; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffda8l); }
@Test
public void test09341() { x = 0x7fffffff7fffffffl; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0xfffffed3fffffda8l); }
@Test
public void test09342() { x = 0x7fffffff80000000l; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0xfffffed400000000l); }
@Test
public void test09343() { x = 0x7fffffffdeadf00dl; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0xffffffb1e7aa9e78l); }
@Test
public void test09344() { x = 0x8000000000000000l; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09345() { x = 0xffffffffffffffffl; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffda8l); }
@Test
public void test09346() { x = 0xfffffffffffffffel; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffb50l); }
@Test
public void test09347() { x = 0xefffffffffffffffl; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffda8l); }
@Test
public void test09348() { x = 0xdeadf00ddeadf00dl; long result = x * 0x258l; AssertJUnit.assertEquals("multiply", result, 0xe7aaa081e7aa9e78l); }
@Test
public void test09349() { x = 0x000000007fffffffl; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0x0000257fffffb500l); }
@Test
public void test09350() { x = 0x0000000080000000l; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0x0000258000000000l); }
@Test
public void test09351() { x = 0x00000000ffffffffl; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0x00004affffffb500l); }
@Test
public void test09352() { x = 0x000000017fffffffl; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0x0000707fffffb500l); }
@Test
public void test09353() { x = 0x0000000180000000l; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0x0000708000000000l); }
@Test
public void test09354() { x = 0x00000001ffffffffl; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0x000095ffffffb500l); }
@Test
public void test09355() { x = 0xffffffff7fffffffl; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0xffffda7fffffb500l); }
@Test
public void test09356() { x = 0xffffffff80000000l; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0xffffda8000000000l); }
@Test
public void test09357() { x = 0x00000001deadf00dl; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0x00008c3cf553cf00l); }
@Test
public void test09358() { x = 0xffffffffdeadf00dl; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0xfffff63cf553cf00l); }
@Test
public void test09359() { x = 0x7fffffffffffffffl; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb500l); }
@Test
public void test09360() { x = 0x7fffffff7fffffffl; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0xffffda7fffffb500l); }
@Test
public void test09361() { x = 0x7fffffff80000000l; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0xffffda8000000000l); }
@Test
public void test09362() { x = 0x7fffffffdeadf00dl; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0xfffff63cf553cf00l); }
@Test
public void test09363() { x = 0x8000000000000000l; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09364() { x = 0xffffffffffffffffl; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb500l); }
@Test
public void test09365() { x = 0xfffffffffffffffel; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff6a00l); }
@Test
public void test09366() { x = 0xefffffffffffffffl; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb500l); }
@Test
public void test09367() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4b00l; AssertJUnit.assertEquals("multiply", result, 0xf554103cf553cf00l); }
@Test
public void test09368() { x = 0x000000007fffffffl; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffb500000000l); }
@Test
public void test09369() { x = 0x0000000080000000l; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09370() { x = 0x00000000ffffffffl; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb500000000l); }
@Test
public void test09371() { x = 0x000000017fffffffl; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffb500000000l); }
@Test
public void test09372() { x = 0x0000000180000000l; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09373() { x = 0x00000001ffffffffl; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb500000000l); }
@Test
public void test09374() { x = 0xffffffff7fffffffl; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffb500000000l); }
@Test
public void test09375() { x = 0xffffffff80000000l; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09376() { x = 0x00000001deadf00dl; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x3cf553cf00000000l); }
@Test
public void test09377() { x = 0xffffffffdeadf00dl; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x3cf553cf00000000l); }
@Test
public void test09378() { x = 0x7fffffffffffffffl; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb500000000l); }
@Test
public void test09379() { x = 0x7fffffff7fffffffl; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffb500000000l); }
@Test
public void test09380() { x = 0x7fffffff80000000l; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09381() { x = 0x7fffffffdeadf00dl; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x3cf553cf00000000l); }
@Test
public void test09382() { x = 0x8000000000000000l; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09383() { x = 0xffffffffffffffffl; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb500000000l); }
@Test
public void test09384() { x = 0xfffffffffffffffel; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6a00000000l); }
@Test
public void test09385() { x = 0xefffffffffffffffl; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb500000000l); }
@Test
public void test09386() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x3cf553cf00000000l); }
@Test
public void test09387() { x = 0x000000007fffffffl; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffda800000000l); }
@Test
public void test09388() { x = 0x0000000080000000l; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09389() { x = 0x00000000ffffffffl; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffda800000000l); }
@Test
public void test09390() { x = 0x000000017fffffffl; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffda800000000l); }
@Test
public void test09391() { x = 0x0000000180000000l; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09392() { x = 0x00000001ffffffffl; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffda800000000l); }
@Test
public void test09393() { x = 0xffffffff7fffffffl; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffda800000000l); }
@Test
public void test09394() { x = 0xffffffff80000000l; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09395() { x = 0x00000001deadf00dl; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0xe7aa9e7800000000l); }
@Test
public void test09396() { x = 0xffffffffdeadf00dl; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0xe7aa9e7800000000l); }
@Test
public void test09397() { x = 0x7fffffffffffffffl; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffda800000000l); }
@Test
public void test09398() { x = 0x7fffffff7fffffffl; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffda800000000l); }
@Test
public void test09399() { x = 0x7fffffff80000000l; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09400() { x = 0x7fffffffdeadf00dl; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0xe7aa9e7800000000l); }
@Test
public void test09401() { x = 0x8000000000000000l; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09402() { x = 0xffffffffffffffffl; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffda800000000l); }
@Test
public void test09403() { x = 0xfffffffffffffffel; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb5000000000l); }
@Test
public void test09404() { x = 0xefffffffffffffffl; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffda800000000l); }
@Test
public void test09405() { x = 0xdeadf00ddeadf00dl; long result = x * 0x25800000000l; AssertJUnit.assertEquals("multiply", result, 0xe7aa9e7800000000l); }
@Test
public void test09406() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0xffffffda8000004bl); }
@Test
public void test09407() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0xffffffda80000000l); }
@Test
public void test09408() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0xffffffb50000004bl); }
@Test
public void test09409() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0xffffff8f8000004bl); }
@Test
public void test09410() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0xffffff8f80000000l); }
@Test
public void test09411() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0xffffff6a0000004bl); }
@Test
public void test09412() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0x000000258000004bl); }
@Test
public void test09413() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0x0000002580000000l); }
@Test
public void test09414() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0xffffff73c30aac31l); }
@Test
public void test09415() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0x00000009c30aac31l); }
@Test
public void test09416() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0x800000000000004bl); }
@Test
public void test09417() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0x800000258000004bl); }
@Test
public void test09418() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0x8000002580000000l); }
@Test
public void test09419() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0x80000009c30aac31l); }
@Test
public void test09420() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09421() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0x000000000000004bl); }
@Test
public void test09422() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000096l); }
@Test
public void test09423() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0xb00000000000004bl); }
@Test
public void test09424() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffb5l; AssertJUnit.assertEquals("multiply", result, 0xc30aabefc30aac31l); }
@Test
public void test09425() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0xfffffed400000258l); }
@Test
public void test09426() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0xfffffed400000000l); }
@Test
public void test09427() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0xfffffda800000258l); }
@Test
public void test09428() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0xfffffc7c00000258l); }
@Test
public void test09429() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0xfffffc7c00000000l); }
@Test
public void test09430() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0xfffffb5000000258l); }
@Test
public void test09431() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0x0000012c00000258l); }
@Test
public void test09432() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0x0000012c00000000l); }
@Test
public void test09433() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0xfffffb9e18556188l); }
@Test
public void test09434() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0x0000004e18556188l); }
@Test
public void test09435() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000258l); }
@Test
public void test09436() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0x0000012c00000258l); }
@Test
public void test09437() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0x0000012c00000000l); }
@Test
public void test09438() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0x0000004e18556188l); }
@Test
public void test09439() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09440() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000258l); }
@Test
public void test09441() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0x00000000000004b0l); }
@Test
public void test09442() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000258l); }
@Test
public void test09443() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffda8l; AssertJUnit.assertEquals("multiply", result, 0x18555f7e18556188l); }
@Test
public void test09444() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0xffffda8000004b00l); }
@Test
public void test09445() { x = 0x0000000080000000l; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0xffffda8000000000l); }
@Test
public void test09446() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0xffffb50000004b00l); }
@Test
public void test09447() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0xffff8f8000004b00l); }
@Test
public void test09448() { x = 0x0000000180000000l; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0xffff8f8000000000l); }
@Test
public void test09449() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0xffff6a0000004b00l); }
@Test
public void test09450() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0x0000258000004b00l); }
@Test
public void test09451() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0x0000258000000000l); }
@Test
public void test09452() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0xffff73c30aac3100l); }
@Test
public void test09453() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0x000009c30aac3100l); }
@Test
public void test09454() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004b00l); }
@Test
public void test09455() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0x0000258000004b00l); }
@Test
public void test09456() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0x0000258000000000l); }
@Test
public void test09457() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0x000009c30aac3100l); }
@Test
public void test09458() { x = 0x8000000000000000l; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09459() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004b00l); }
@Test
public void test09460() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000009600l); }
@Test
public void test09461() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004b00l); }
@Test
public void test09462() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffb500l; AssertJUnit.assertEquals("multiply", result, 0x0aabefc30aac3100l); }
@Test
public void test09463() { x = 0x000000007fffffffl; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004b00000000l); }
@Test
public void test09464() { x = 0x0000000080000000l; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09465() { x = 0x00000000ffffffffl; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004b00000000l); }
@Test
public void test09466() { x = 0x000000017fffffffl; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004b00000000l); }
@Test
public void test09467() { x = 0x0000000180000000l; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09468() { x = 0x00000001ffffffffl; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004b00000000l); }
@Test
public void test09469() { x = 0xffffffff7fffffffl; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004b00000000l); }
@Test
public void test09470() { x = 0xffffffff80000000l; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09471() { x = 0x00000001deadf00dl; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0xc30aac3100000000l); }
@Test
public void test09472() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0xc30aac3100000000l); }
@Test
public void test09473() { x = 0x7fffffffffffffffl; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004b00000000l); }
@Test
public void test09474() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004b00000000l); }
@Test
public void test09475() { x = 0x7fffffff80000000l; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09476() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0xc30aac3100000000l); }
@Test
public void test09477() { x = 0x8000000000000000l; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09478() { x = 0xffffffffffffffffl; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004b00000000l); }
@Test
public void test09479() { x = 0xfffffffffffffffel; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009600000000l); }
@Test
public void test09480() { x = 0xefffffffffffffffl; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004b00000000l); }
@Test
public void test09481() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffb500000000l; AssertJUnit.assertEquals("multiply", result, 0xc30aac3100000000l); }
@Test
public void test09482() { x = 0x000000007fffffffl; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025800000000l); }
@Test
public void test09483() { x = 0x0000000080000000l; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09484() { x = 0x00000000ffffffffl; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025800000000l); }
@Test
public void test09485() { x = 0x000000017fffffffl; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025800000000l); }
@Test
public void test09486() { x = 0x0000000180000000l; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09487() { x = 0x00000001ffffffffl; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025800000000l); }
@Test
public void test09488() { x = 0xffffffff7fffffffl; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025800000000l); }
@Test
public void test09489() { x = 0xffffffff80000000l; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09490() { x = 0x00000001deadf00dl; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x1855618800000000l); }
@Test
public void test09491() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x1855618800000000l); }
@Test
public void test09492() { x = 0x7fffffffffffffffl; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025800000000l); }
@Test
public void test09493() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025800000000l); }
@Test
public void test09494() { x = 0x7fffffff80000000l; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09495() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x1855618800000000l); }
@Test
public void test09496() { x = 0x8000000000000000l; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09497() { x = 0xffffffffffffffffl; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025800000000l); }
@Test
public void test09498() { x = 0xfffffffffffffffel; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x000004b000000000l); }
@Test
public void test09499() { x = 0xefffffffffffffffl; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000025800000000l); }
@Test
public void test09500() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffda800000000l; AssertJUnit.assertEquals("multiply", result, 0x1855618800000000l); }
@Test
public void test09501() { x = 0x000000007fffffffl; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0x000000277fffffb1l); }
@Test
public void test09502() { x = 0x0000000080000000l; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0x0000002780000000l); }
@Test
public void test09503() { x = 0x00000000ffffffffl; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0x0000004effffffb1l); }
@Test
public void test09504() { x = 0x000000017fffffffl; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0x000000767fffffb1l); }
@Test
public void test09505() { x = 0x0000000180000000l; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0x0000007680000000l); }
@Test
public void test09506() { x = 0x00000001ffffffffl; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0x0000009dffffffb1l); }
@Test
public void test09507() { x = 0xffffffff7fffffffl; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0xffffffd87fffffb1l); }
@Test
public void test09508() { x = 0xffffffff80000000l; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0xffffffd880000000l); }
@Test
public void test09509() { x = 0x00000001deadf00dl; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0x00000093b7ad1403l); }
@Test
public void test09510() { x = 0xffffffffdeadf00dl; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0xfffffff5b7ad1403l); }
@Test
public void test09511() { x = 0x7fffffffffffffffl; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffb1l); }
@Test
public void test09512() { x = 0x7fffffff7fffffffl; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0x7fffffd87fffffb1l); }
@Test
public void test09513() { x = 0x7fffffff80000000l; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0x7fffffd880000000l); }
@Test
public void test09514() { x = 0x7fffffffdeadf00dl; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0x7ffffff5b7ad1403l); }
@Test
public void test09515() { x = 0x8000000000000000l; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09516() { x = 0xffffffffffffffffl; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffb1l); }
@Test
public void test09517() { x = 0xfffffffffffffffel; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff62l); }
@Test
public void test09518() { x = 0xefffffffffffffffl; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0x0fffffffffffffb1l); }
@Test
public void test09519() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4fl; AssertJUnit.assertEquals("multiply", result, 0xb7ad1447b7ad1403l); }
@Test
public void test09520() { x = 0x000000007fffffffl; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0x0000013bfffffd88l); }
@Test
public void test09521() { x = 0x0000000080000000l; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0x0000013c00000000l); }
@Test
public void test09522() { x = 0x00000000ffffffffl; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0x00000277fffffd88l); }
@Test
public void test09523() { x = 0x000000017fffffffl; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0x000003b3fffffd88l); }
@Test
public void test09524() { x = 0x0000000180000000l; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0x000003b400000000l); }
@Test
public void test09525() { x = 0x00000001ffffffffl; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0x000004effffffd88l); }
@Test
public void test09526() { x = 0xffffffff7fffffffl; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0xfffffec3fffffd88l); }
@Test
public void test09527() { x = 0xffffffff80000000l; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0xfffffec400000000l); }
@Test
public void test09528() { x = 0x00000001deadf00dl; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0x0000049dbd68a018l); }
@Test
public void test09529() { x = 0xffffffffdeadf00dl; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0xffffffadbd68a018l); }
@Test
public void test09530() { x = 0x7fffffffffffffffl; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd88l); }
@Test
public void test09531() { x = 0x7fffffff7fffffffl; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0xfffffec3fffffd88l); }
@Test
public void test09532() { x = 0x7fffffff80000000l; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0xfffffec400000000l); }
@Test
public void test09533() { x = 0x7fffffffdeadf00dl; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0xffffffadbd68a018l); }
@Test
public void test09534() { x = 0x8000000000000000l; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09535() { x = 0xffffffffffffffffl; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd88l); }
@Test
public void test09536() { x = 0xfffffffffffffffel; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffb10l); }
@Test
public void test09537() { x = 0xefffffffffffffffl; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffd88l); }
@Test
public void test09538() { x = 0xdeadf00ddeadf00dl; long result = x * 0x278l; AssertJUnit.assertEquals("multiply", result, 0xbd68a23dbd68a018l); }
@Test
public void test09539() { x = 0x000000007fffffffl; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0x0000277fffffb100l); }
@Test
public void test09540() { x = 0x0000000080000000l; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0x0000278000000000l); }
@Test
public void test09541() { x = 0x00000000ffffffffl; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0x00004effffffb100l); }
@Test
public void test09542() { x = 0x000000017fffffffl; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0x0000767fffffb100l); }
@Test
public void test09543() { x = 0x0000000180000000l; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0x0000768000000000l); }
@Test
public void test09544() { x = 0x00000001ffffffffl; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0x00009dffffffb100l); }
@Test
public void test09545() { x = 0xffffffff7fffffffl; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0xffffd87fffffb100l); }
@Test
public void test09546() { x = 0xffffffff80000000l; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0xffffd88000000000l); }
@Test
public void test09547() { x = 0x00000001deadf00dl; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0x000093b7ad140300l); }
@Test
public void test09548() { x = 0xffffffffdeadf00dl; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0xfffff5b7ad140300l); }
@Test
public void test09549() { x = 0x7fffffffffffffffl; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb100l); }
@Test
public void test09550() { x = 0x7fffffff7fffffffl; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0xffffd87fffffb100l); }
@Test
public void test09551() { x = 0x7fffffff80000000l; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0xffffd88000000000l); }
@Test
public void test09552() { x = 0x7fffffffdeadf00dl; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0xfffff5b7ad140300l); }
@Test
public void test09553() { x = 0x8000000000000000l; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09554() { x = 0xffffffffffffffffl; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb100l); }
@Test
public void test09555() { x = 0xfffffffffffffffel; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff6200l); }
@Test
public void test09556() { x = 0xefffffffffffffffl; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb100l); }
@Test
public void test09557() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4f00l; AssertJUnit.assertEquals("multiply", result, 0xad1447b7ad140300l); }
@Test
public void test09558() { x = 0x000000007fffffffl; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffb100000000l); }
@Test
public void test09559() { x = 0x0000000080000000l; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09560() { x = 0x00000000ffffffffl; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb100000000l); }
@Test
public void test09561() { x = 0x000000017fffffffl; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffb100000000l); }
@Test
public void test09562() { x = 0x0000000180000000l; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09563() { x = 0x00000001ffffffffl; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb100000000l); }
@Test
public void test09564() { x = 0xffffffff7fffffffl; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffb100000000l); }
@Test
public void test09565() { x = 0xffffffff80000000l; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09566() { x = 0x00000001deadf00dl; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0xb7ad140300000000l); }
@Test
public void test09567() { x = 0xffffffffdeadf00dl; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0xb7ad140300000000l); }
@Test
public void test09568() { x = 0x7fffffffffffffffl; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb100000000l); }
@Test
public void test09569() { x = 0x7fffffff7fffffffl; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffb100000000l); }
@Test
public void test09570() { x = 0x7fffffff80000000l; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09571() { x = 0x7fffffffdeadf00dl; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0xb7ad140300000000l); }
@Test
public void test09572() { x = 0x8000000000000000l; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09573() { x = 0xffffffffffffffffl; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb100000000l); }
@Test
public void test09574() { x = 0xfffffffffffffffel; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff6200000000l); }
@Test
public void test09575() { x = 0xefffffffffffffffl; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffb100000000l); }
@Test
public void test09576() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4f00000000l; AssertJUnit.assertEquals("multiply", result, 0xb7ad140300000000l); }
@Test
public void test09577() { x = 0x000000007fffffffl; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8800000000l); }
@Test
public void test09578() { x = 0x0000000080000000l; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09579() { x = 0x00000000ffffffffl; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8800000000l); }
@Test
public void test09580() { x = 0x000000017fffffffl; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8800000000l); }
@Test
public void test09581() { x = 0x0000000180000000l; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09582() { x = 0x00000001ffffffffl; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8800000000l); }
@Test
public void test09583() { x = 0xffffffff7fffffffl; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8800000000l); }
@Test
public void test09584() { x = 0xffffffff80000000l; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09585() { x = 0x00000001deadf00dl; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0xbd68a01800000000l); }
@Test
public void test09586() { x = 0xffffffffdeadf00dl; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0xbd68a01800000000l); }
@Test
public void test09587() { x = 0x7fffffffffffffffl; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8800000000l); }
@Test
public void test09588() { x = 0x7fffffff7fffffffl; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8800000000l); }
@Test
public void test09589() { x = 0x7fffffff80000000l; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09590() { x = 0x7fffffffdeadf00dl; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0xbd68a01800000000l); }
@Test
public void test09591() { x = 0x8000000000000000l; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09592() { x = 0xffffffffffffffffl; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8800000000l); }
@Test
public void test09593() { x = 0xfffffffffffffffel; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1000000000l); }
@Test
public void test09594() { x = 0xefffffffffffffffl; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8800000000l); }
@Test
public void test09595() { x = 0xdeadf00ddeadf00dl; long result = x * 0x27800000000l; AssertJUnit.assertEquals("multiply", result, 0xbd68a01800000000l); }
@Test
public void test09596() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0xffffffd88000004fl); }
@Test
public void test09597() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0xffffffd880000000l); }
@Test
public void test09598() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0xffffffb10000004fl); }
@Test
public void test09599() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0xffffff898000004fl); }
@Test
public void test09600() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0xffffff8980000000l); }
@Test
public void test09601() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0xffffff620000004fl); }
@Test
public void test09602() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0x000000278000004fl); }
@Test
public void test09603() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0x0000002780000000l); }
@Test
public void test09604() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0xffffff6c4852ebfdl); }
@Test
public void test09605() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0x0000000a4852ebfdl); }
@Test
public void test09606() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0x800000000000004fl); }
@Test
public void test09607() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0x800000278000004fl); }
@Test
public void test09608() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0x8000002780000000l); }
@Test
public void test09609() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0x8000000a4852ebfdl); }
@Test
public void test09610() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09611() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0x000000000000004fl); }
@Test
public void test09612() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0x000000000000009el); }
@Test
public void test09613() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0xf00000000000004fl); }
@Test
public void test09614() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffb1l; AssertJUnit.assertEquals("multiply", result, 0x4852ebb84852ebfdl); }
@Test
public void test09615() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0xfffffec400000278l); }
@Test
public void test09616() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0xfffffec400000000l); }
@Test
public void test09617() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8800000278l); }
@Test
public void test09618() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0xfffffc4c00000278l); }
@Test
public void test09619() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0xfffffc4c00000000l); }
@Test
public void test09620() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1000000278l); }
@Test
public void test09621() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0x0000013c00000278l); }
@Test
public void test09622() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0x0000013c00000000l); }
@Test
public void test09623() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0xfffffb6242975fe8l); }
@Test
public void test09624() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0x0000005242975fe8l); }
@Test
public void test09625() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000278l); }
@Test
public void test09626() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0x0000013c00000278l); }
@Test
public void test09627() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0x0000013c00000000l); }
@Test
public void test09628() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0x0000005242975fe8l); }
@Test
public void test09629() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09630() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000278l); }
@Test
public void test09631() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0x00000000000004f0l); }
@Test
public void test09632() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000278l); }
@Test
public void test09633() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffd88l; AssertJUnit.assertEquals("multiply", result, 0x42975dc242975fe8l); }
@Test
public void test09634() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0xffffd88000004f00l); }
@Test
public void test09635() { x = 0x0000000080000000l; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0xffffd88000000000l); }
@Test
public void test09636() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0xffffb10000004f00l); }
@Test
public void test09637() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0xffff898000004f00l); }
@Test
public void test09638() { x = 0x0000000180000000l; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0xffff898000000000l); }
@Test
public void test09639() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0xffff620000004f00l); }
@Test
public void test09640() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0x0000278000004f00l); }
@Test
public void test09641() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0x0000278000000000l); }
@Test
public void test09642() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0xffff6c4852ebfd00l); }
@Test
public void test09643() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0x00000a4852ebfd00l); }
@Test
public void test09644() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004f00l); }
@Test
public void test09645() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0x0000278000004f00l); }
@Test
public void test09646() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0x0000278000000000l); }
@Test
public void test09647() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0x00000a4852ebfd00l); }
@Test
public void test09648() { x = 0x8000000000000000l; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09649() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004f00l); }
@Test
public void test09650() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000009e00l); }
@Test
public void test09651() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004f00l); }
@Test
public void test09652() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffb100l; AssertJUnit.assertEquals("multiply", result, 0x52ebb84852ebfd00l); }
@Test
public void test09653() { x = 0x000000007fffffffl; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004f00000000l); }
@Test
public void test09654() { x = 0x0000000080000000l; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09655() { x = 0x00000000ffffffffl; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004f00000000l); }
@Test
public void test09656() { x = 0x000000017fffffffl; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004f00000000l); }
@Test
public void test09657() { x = 0x0000000180000000l; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09658() { x = 0x00000001ffffffffl; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004f00000000l); }
@Test
public void test09659() { x = 0xffffffff7fffffffl; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004f00000000l); }
@Test
public void test09660() { x = 0xffffffff80000000l; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09661() { x = 0x00000001deadf00dl; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x4852ebfd00000000l); }
@Test
public void test09662() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x4852ebfd00000000l); }
@Test
public void test09663() { x = 0x7fffffffffffffffl; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004f00000000l); }
@Test
public void test09664() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000004f00000000l); }
@Test
public void test09665() { x = 0x7fffffff80000000l; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09666() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x4852ebfd00000000l); }
@Test
public void test09667() { x = 0x8000000000000000l; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09668() { x = 0xffffffffffffffffl; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004f00000000l); }
@Test
public void test09669() { x = 0xfffffffffffffffel; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000009e00000000l); }
@Test
public void test09670() { x = 0xefffffffffffffffl; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000004f00000000l); }
@Test
public void test09671() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffb100000000l; AssertJUnit.assertEquals("multiply", result, 0x4852ebfd00000000l); }
@Test
public void test09672() { x = 0x000000007fffffffl; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000027800000000l); }
@Test
public void test09673() { x = 0x0000000080000000l; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09674() { x = 0x00000000ffffffffl; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000027800000000l); }
@Test
public void test09675() { x = 0x000000017fffffffl; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000027800000000l); }
@Test
public void test09676() { x = 0x0000000180000000l; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09677() { x = 0x00000001ffffffffl; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000027800000000l); }
@Test
public void test09678() { x = 0xffffffff7fffffffl; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000027800000000l); }
@Test
public void test09679() { x = 0xffffffff80000000l; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09680() { x = 0x00000001deadf00dl; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x42975fe800000000l); }
@Test
public void test09681() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x42975fe800000000l); }
@Test
public void test09682() { x = 0x7fffffffffffffffl; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000027800000000l); }
@Test
public void test09683() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000027800000000l); }
@Test
public void test09684() { x = 0x7fffffff80000000l; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09685() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x42975fe800000000l); }
@Test
public void test09686() { x = 0x8000000000000000l; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09687() { x = 0xffffffffffffffffl; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000027800000000l); }
@Test
public void test09688() { x = 0xfffffffffffffffel; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x000004f000000000l); }
@Test
public void test09689() { x = 0xefffffffffffffffl; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000027800000000l); }
@Test
public void test09690() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffd8800000000l; AssertJUnit.assertEquals("multiply", result, 0x42975fe800000000l); }
@Test
public void test09691() { x = 0x000000007fffffffl; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0x000000287fffffafl); }
@Test
public void test09692() { x = 0x0000000080000000l; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0x0000002880000000l); }
@Test
public void test09693() { x = 0x00000000ffffffffl; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0x00000050ffffffafl); }
@Test
public void test09694() { x = 0x000000017fffffffl; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0x000000797fffffafl); }
@Test
public void test09695() { x = 0x0000000180000000l; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0x0000007980000000l); }
@Test
public void test09696() { x = 0x00000001ffffffffl; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0x000000a1ffffffafl); }
@Test
public void test09697() { x = 0xffffffff7fffffffl; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0xffffffd77fffffafl); }
@Test
public void test09698() { x = 0xffffffff80000000l; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0xffffffd780000000l); }
@Test
public void test09699() { x = 0x00000001deadf00dl; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0x000000977508f41dl); }
@Test
public void test09700() { x = 0xffffffffdeadf00dl; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0xfffffff57508f41dl); }
@Test
public void test09701() { x = 0x7fffffffffffffffl; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffafl); }
@Test
public void test09702() { x = 0x7fffffff7fffffffl; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0x7fffffd77fffffafl); }
@Test
public void test09703() { x = 0x7fffffff80000000l; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0x7fffffd780000000l); }
@Test
public void test09704() { x = 0x7fffffffdeadf00dl; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff57508f41dl); }
@Test
public void test09705() { x = 0x8000000000000000l; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09706() { x = 0xffffffffffffffffl; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffafl); }
@Test
public void test09707() { x = 0xfffffffffffffffel; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff5el); }
@Test
public void test09708() { x = 0xefffffffffffffffl; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0xefffffffffffffafl); }
@Test
public void test09709() { x = 0xdeadf00ddeadf00dl; long result = x * 0x51l; AssertJUnit.assertEquals("multiply", result, 0x7508f4637508f41dl); }
@Test
public void test09710() { x = 0x000000007fffffffl; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0x00000143fffffd78l); }
@Test
public void test09711() { x = 0x0000000080000000l; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0x0000014400000000l); }
@Test
public void test09712() { x = 0x00000000ffffffffl; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0x00000287fffffd78l); }
@Test
public void test09713() { x = 0x000000017fffffffl; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0x000003cbfffffd78l); }
@Test
public void test09714() { x = 0x0000000180000000l; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0x000003cc00000000l); }
@Test
public void test09715() { x = 0x00000001ffffffffl; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0x0000050ffffffd78l); }
@Test
public void test09716() { x = 0xffffffff7fffffffl; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0xfffffebbfffffd78l); }
@Test
public void test09717() { x = 0xffffffff80000000l; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0xfffffebc00000000l); }
@Test
public void test09718() { x = 0x00000001deadf00dl; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0x000004bba847a0e8l); }
@Test
public void test09719() { x = 0xffffffffdeadf00dl; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0xffffffaba847a0e8l); }
@Test
public void test09720() { x = 0x7fffffffffffffffl; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd78l); }
@Test
public void test09721() { x = 0x7fffffff7fffffffl; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0xfffffebbfffffd78l); }
@Test
public void test09722() { x = 0x7fffffff80000000l; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0xfffffebc00000000l); }
@Test
public void test09723() { x = 0x7fffffffdeadf00dl; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0xffffffaba847a0e8l); }
@Test
public void test09724() { x = 0x8000000000000000l; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09725() { x = 0xffffffffffffffffl; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd78l); }
@Test
public void test09726() { x = 0xfffffffffffffffel; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffaf0l); }
@Test
public void test09727() { x = 0xefffffffffffffffl; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffd78l); }
@Test
public void test09728() { x = 0xdeadf00ddeadf00dl; long result = x * 0x288l; AssertJUnit.assertEquals("multiply", result, 0xa847a31ba847a0e8l); }
@Test
public void test09729() { x = 0x000000007fffffffl; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0x0000287fffffaf00l); }
@Test
public void test09730() { x = 0x0000000080000000l; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0x0000288000000000l); }
@Test
public void test09731() { x = 0x00000000ffffffffl; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0x000050ffffffaf00l); }
@Test
public void test09732() { x = 0x000000017fffffffl; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0x0000797fffffaf00l); }
@Test
public void test09733() { x = 0x0000000180000000l; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0x0000798000000000l); }
@Test
public void test09734() { x = 0x00000001ffffffffl; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0x0000a1ffffffaf00l); }
@Test
public void test09735() { x = 0xffffffff7fffffffl; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0xffffd77fffffaf00l); }
@Test
public void test09736() { x = 0xffffffff80000000l; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0xffffd78000000000l); }
@Test
public void test09737() { x = 0x00000001deadf00dl; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0x0000977508f41d00l); }
@Test
public void test09738() { x = 0xffffffffdeadf00dl; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0xfffff57508f41d00l); }
@Test
public void test09739() { x = 0x7fffffffffffffffl; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffaf00l); }
@Test
public void test09740() { x = 0x7fffffff7fffffffl; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0xffffd77fffffaf00l); }
@Test
public void test09741() { x = 0x7fffffff80000000l; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0xffffd78000000000l); }
@Test
public void test09742() { x = 0x7fffffffdeadf00dl; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0xfffff57508f41d00l); }
@Test
public void test09743() { x = 0x8000000000000000l; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09744() { x = 0xffffffffffffffffl; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffaf00l); }
@Test
public void test09745() { x = 0xfffffffffffffffel; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff5e00l); }
@Test
public void test09746() { x = 0xefffffffffffffffl; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffaf00l); }
@Test
public void test09747() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5100l; AssertJUnit.assertEquals("multiply", result, 0x08f4637508f41d00l); }
@Test
public void test09748() { x = 0x000000007fffffffl; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffaf00000000l); }
@Test
public void test09749() { x = 0x0000000080000000l; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09750() { x = 0x00000000ffffffffl; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffaf00000000l); }
@Test
public void test09751() { x = 0x000000017fffffffl; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffaf00000000l); }
@Test
public void test09752() { x = 0x0000000180000000l; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09753() { x = 0x00000001ffffffffl; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffaf00000000l); }
@Test
public void test09754() { x = 0xffffffff7fffffffl; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffaf00000000l); }
@Test
public void test09755() { x = 0xffffffff80000000l; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09756() { x = 0x00000001deadf00dl; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0x7508f41d00000000l); }
@Test
public void test09757() { x = 0xffffffffdeadf00dl; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0x7508f41d00000000l); }
@Test
public void test09758() { x = 0x7fffffffffffffffl; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffaf00000000l); }
@Test
public void test09759() { x = 0x7fffffff7fffffffl; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffaf00000000l); }
@Test
public void test09760() { x = 0x7fffffff80000000l; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09761() { x = 0x7fffffffdeadf00dl; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0x7508f41d00000000l); }
@Test
public void test09762() { x = 0x8000000000000000l; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09763() { x = 0xffffffffffffffffl; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffaf00000000l); }
@Test
public void test09764() { x = 0xfffffffffffffffel; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5e00000000l); }
@Test
public void test09765() { x = 0xefffffffffffffffl; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffaf00000000l); }
@Test
public void test09766() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5100000000l; AssertJUnit.assertEquals("multiply", result, 0x7508f41d00000000l); }
@Test
public void test09767() { x = 0x000000007fffffffl; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7800000000l); }
@Test
public void test09768() { x = 0x0000000080000000l; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09769() { x = 0x00000000ffffffffl; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7800000000l); }
@Test
public void test09770() { x = 0x000000017fffffffl; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7800000000l); }
@Test
public void test09771() { x = 0x0000000180000000l; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09772() { x = 0x00000001ffffffffl; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7800000000l); }
@Test
public void test09773() { x = 0xffffffff7fffffffl; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7800000000l); }
@Test
public void test09774() { x = 0xffffffff80000000l; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09775() { x = 0x00000001deadf00dl; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0xa847a0e800000000l); }
@Test
public void test09776() { x = 0xffffffffdeadf00dl; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0xa847a0e800000000l); }
@Test
public void test09777() { x = 0x7fffffffffffffffl; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7800000000l); }
@Test
public void test09778() { x = 0x7fffffff7fffffffl; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7800000000l); }
@Test
public void test09779() { x = 0x7fffffff80000000l; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09780() { x = 0x7fffffffdeadf00dl; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0xa847a0e800000000l); }
@Test
public void test09781() { x = 0x8000000000000000l; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09782() { x = 0xffffffffffffffffl; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7800000000l); }
@Test
public void test09783() { x = 0xfffffffffffffffel; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffaf000000000l); }
@Test
public void test09784() { x = 0xefffffffffffffffl; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7800000000l); }
@Test
public void test09785() { x = 0xdeadf00ddeadf00dl; long result = x * 0x28800000000l; AssertJUnit.assertEquals("multiply", result, 0xa847a0e800000000l); }
@Test
public void test09786() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0xffffffd780000051l); }
@Test
public void test09787() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0xffffffd780000000l); }
@Test
public void test09788() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0xffffffaf00000051l); }
@Test
public void test09789() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0xffffff8680000051l); }
@Test
public void test09790() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0xffffff8680000000l); }
@Test
public void test09791() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0xffffff5e00000051l); }
@Test
public void test09792() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0x0000002880000051l); }
@Test
public void test09793() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0x0000002880000000l); }
@Test
public void test09794() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0xffffff688af70be3l); }
@Test
public void test09795() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0x0000000a8af70be3l); }
@Test
public void test09796() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000051l); }
@Test
public void test09797() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0x8000002880000051l); }
@Test
public void test09798() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0x8000002880000000l); }
@Test
public void test09799() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0x8000000a8af70be3l); }
@Test
public void test09800() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09801() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000051l); }
@Test
public void test09802() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0x00000000000000a2l); }
@Test
public void test09803() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0x1000000000000051l); }
@Test
public void test09804() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffafl; AssertJUnit.assertEquals("multiply", result, 0x8af70b9c8af70be3l); }
@Test
public void test09805() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0xfffffebc00000288l); }
@Test
public void test09806() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0xfffffebc00000000l); }
@Test
public void test09807() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7800000288l); }
@Test
public void test09808() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0xfffffc3400000288l); }
@Test
public void test09809() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0xfffffc3400000000l); }
@Test
public void test09810() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0xfffffaf000000288l); }
@Test
public void test09811() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0x0000014400000288l); }
@Test
public void test09812() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0x0000014400000000l); }
@Test
public void test09813() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0xfffffb4457b85f18l); }
@Test
public void test09814() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0x0000005457b85f18l); }
@Test
public void test09815() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000288l); }
@Test
public void test09816() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0x0000014400000288l); }
@Test
public void test09817() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0x0000014400000000l); }
@Test
public void test09818() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0x0000005457b85f18l); }
@Test
public void test09819() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09820() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000288l); }
@Test
public void test09821() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000510l); }
@Test
public void test09822() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000288l); }
@Test
public void test09823() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffd78l; AssertJUnit.assertEquals("multiply", result, 0x57b85ce457b85f18l); }
@Test
public void test09824() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0xffffd78000005100l); }
@Test
public void test09825() { x = 0x0000000080000000l; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0xffffd78000000000l); }
@Test
public void test09826() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0xffffaf0000005100l); }
@Test
public void test09827() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0xffff868000005100l); }
@Test
public void test09828() { x = 0x0000000180000000l; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0xffff868000000000l); }
@Test
public void test09829() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0xffff5e0000005100l); }
@Test
public void test09830() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0x0000288000005100l); }
@Test
public void test09831() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0x0000288000000000l); }
@Test
public void test09832() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0xffff688af70be300l); }
@Test
public void test09833() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0x00000a8af70be300l); }
@Test
public void test09834() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005100l); }
@Test
public void test09835() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0x0000288000005100l); }
@Test
public void test09836() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0x0000288000000000l); }
@Test
public void test09837() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0x00000a8af70be300l); }
@Test
public void test09838() { x = 0x8000000000000000l; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09839() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005100l); }
@Test
public void test09840() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0x000000000000a200l); }
@Test
public void test09841() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005100l); }
@Test
public void test09842() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffaf00l; AssertJUnit.assertEquals("multiply", result, 0xf70b9c8af70be300l); }
@Test
public void test09843() { x = 0x000000007fffffffl; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000005100000000l); }
@Test
public void test09844() { x = 0x0000000080000000l; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09845() { x = 0x00000000ffffffffl; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005100000000l); }
@Test
public void test09846() { x = 0x000000017fffffffl; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000005100000000l); }
@Test
public void test09847() { x = 0x0000000180000000l; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09848() { x = 0x00000001ffffffffl; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005100000000l); }
@Test
public void test09849() { x = 0xffffffff7fffffffl; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000005100000000l); }
@Test
public void test09850() { x = 0xffffffff80000000l; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09851() { x = 0x00000001deadf00dl; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8af70be300000000l); }
@Test
public void test09852() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8af70be300000000l); }
@Test
public void test09853() { x = 0x7fffffffffffffffl; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005100000000l); }
@Test
public void test09854() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000005100000000l); }
@Test
public void test09855() { x = 0x7fffffff80000000l; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test09856() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8af70be300000000l); }
@Test
public void test09857() { x = 0x8000000000000000l; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09858() { x = 0xffffffffffffffffl; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005100000000l); }
@Test
public void test09859() { x = 0xfffffffffffffffel; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a200000000l); }
@Test
public void test09860() { x = 0xefffffffffffffffl; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005100000000l); }
@Test
public void test09861() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffaf00000000l; AssertJUnit.assertEquals("multiply", result, 0x8af70be300000000l); }
@Test
public void test09862() { x = 0x000000007fffffffl; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000028800000000l); }
@Test
public void test09863() { x = 0x0000000080000000l; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09864() { x = 0x00000000ffffffffl; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000028800000000l); }
@Test
public void test09865() { x = 0x000000017fffffffl; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000028800000000l); }
@Test
public void test09866() { x = 0x0000000180000000l; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09867() { x = 0x00000001ffffffffl; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000028800000000l); }
@Test
public void test09868() { x = 0xffffffff7fffffffl; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000028800000000l); }
@Test
public void test09869() { x = 0xffffffff80000000l; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09870() { x = 0x00000001deadf00dl; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x57b85f1800000000l); }
@Test
public void test09871() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x57b85f1800000000l); }
@Test
public void test09872() { x = 0x7fffffffffffffffl; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000028800000000l); }
@Test
public void test09873() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000028800000000l); }
@Test
public void test09874() { x = 0x7fffffff80000000l; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09875() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x57b85f1800000000l); }
@Test
public void test09876() { x = 0x8000000000000000l; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09877() { x = 0xffffffffffffffffl; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000028800000000l); }
@Test
public void test09878() { x = 0xfffffffffffffffel; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000051000000000l); }
@Test
public void test09879() { x = 0xefffffffffffffffl; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000028800000000l); }
@Test
public void test09880() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffd7800000000l; AssertJUnit.assertEquals("multiply", result, 0x57b85f1800000000l); }
@Test
public void test09881() { x = 0x000000007fffffffl; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0x00000028ffffffael); }
@Test
public void test09882() { x = 0x0000000080000000l; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0x0000002900000000l); }
@Test
public void test09883() { x = 0x00000000ffffffffl; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0x00000051ffffffael); }
@Test
public void test09884() { x = 0x000000017fffffffl; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0x0000007affffffael); }
@Test
public void test09885() { x = 0x0000000180000000l; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0x0000007b00000000l); }
@Test
public void test09886() { x = 0x00000001ffffffffl; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0x000000a3ffffffael); }
@Test
public void test09887() { x = 0xffffffff7fffffffl; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0xffffffd6ffffffael); }
@Test
public void test09888() { x = 0xffffffff80000000l; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0xffffffd700000000l); }
@Test
public void test09889() { x = 0x00000001deadf00dl; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0x0000009953b6e42al); }
@Test
public void test09890() { x = 0xffffffffdeadf00dl; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0xfffffff553b6e42al); }
@Test
public void test09891() { x = 0x7fffffffffffffffl; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffael); }
@Test
public void test09892() { x = 0x7fffffff7fffffffl; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0xffffffd6ffffffael); }
@Test
public void test09893() { x = 0x7fffffff80000000l; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0xffffffd700000000l); }
@Test
public void test09894() { x = 0x7fffffffdeadf00dl; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0xfffffff553b6e42al); }
@Test
public void test09895() { x = 0x8000000000000000l; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09896() { x = 0xffffffffffffffffl; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffael); }
@Test
public void test09897() { x = 0xfffffffffffffffel; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff5cl); }
@Test
public void test09898() { x = 0xefffffffffffffffl; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0xdfffffffffffffael); }
@Test
public void test09899() { x = 0xdeadf00ddeadf00dl; long result = x * 0x52l; AssertJUnit.assertEquals("multiply", result, 0x53b6e47153b6e42al); }
@Test
public void test09900() { x = 0x000000007fffffffl; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0x00000147fffffd70l); }
@Test
public void test09901() { x = 0x0000000080000000l; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0x0000014800000000l); }
@Test
public void test09902() { x = 0x00000000ffffffffl; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0x0000028ffffffd70l); }
@Test
public void test09903() { x = 0x000000017fffffffl; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0x000003d7fffffd70l); }
@Test
public void test09904() { x = 0x0000000180000000l; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0x000003d800000000l); }
@Test
public void test09905() { x = 0x00000001ffffffffl; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0x0000051ffffffd70l); }
@Test
public void test09906() { x = 0xffffffff7fffffffl; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb7fffffd70l); }
@Test
public void test09907() { x = 0xffffffff80000000l; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb800000000l); }
@Test
public void test09908() { x = 0x00000001deadf00dl; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0x000004ca9db72150l); }
@Test
public void test09909() { x = 0xffffffffdeadf00dl; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0xffffffaa9db72150l); }
@Test
public void test09910() { x = 0x7fffffffffffffffl; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd70l); }
@Test
public void test09911() { x = 0x7fffffff7fffffffl; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb7fffffd70l); }
@Test
public void test09912() { x = 0x7fffffff80000000l; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb800000000l); }
@Test
public void test09913() { x = 0x7fffffffdeadf00dl; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0xffffffaa9db72150l); }
@Test
public void test09914() { x = 0x8000000000000000l; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09915() { x = 0xffffffffffffffffl; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd70l); }
@Test
public void test09916() { x = 0xfffffffffffffffel; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffae0l); }
@Test
public void test09917() { x = 0xefffffffffffffffl; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd70l); }
@Test
public void test09918() { x = 0xdeadf00ddeadf00dl; long result = x * 0x290l; AssertJUnit.assertEquals("multiply", result, 0x9db7238a9db72150l); }
@Test
public void test09919() { x = 0x000000007fffffffl; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0x000028ffffffae00l); }
@Test
public void test09920() { x = 0x0000000080000000l; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0x0000290000000000l); }
@Test
public void test09921() { x = 0x00000000ffffffffl; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0x000051ffffffae00l); }
@Test
public void test09922() { x = 0x000000017fffffffl; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0x00007affffffae00l); }
@Test
public void test09923() { x = 0x0000000180000000l; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0x00007b0000000000l); }
@Test
public void test09924() { x = 0x00000001ffffffffl; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0x0000a3ffffffae00l); }
@Test
public void test09925() { x = 0xffffffff7fffffffl; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0xffffd6ffffffae00l); }
@Test
public void test09926() { x = 0xffffffff80000000l; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0xffffd70000000000l); }
@Test
public void test09927() { x = 0x00000001deadf00dl; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0x00009953b6e42a00l); }
@Test
public void test09928() { x = 0xffffffffdeadf00dl; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0xfffff553b6e42a00l); }
@Test
public void test09929() { x = 0x7fffffffffffffffl; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffae00l); }
@Test
public void test09930() { x = 0x7fffffff7fffffffl; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0xffffd6ffffffae00l); }
@Test
public void test09931() { x = 0x7fffffff80000000l; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0xffffd70000000000l); }
@Test
public void test09932() { x = 0x7fffffffdeadf00dl; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0xfffff553b6e42a00l); }
@Test
public void test09933() { x = 0x8000000000000000l; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09934() { x = 0xffffffffffffffffl; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffae00l); }
@Test
public void test09935() { x = 0xfffffffffffffffel; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff5c00l); }
@Test
public void test09936() { x = 0xefffffffffffffffl; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffae00l); }
@Test
public void test09937() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5200l; AssertJUnit.assertEquals("multiply", result, 0xb6e47153b6e42a00l); }
@Test
public void test09938() { x = 0x000000007fffffffl; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffae00000000l); }
@Test
public void test09939() { x = 0x0000000080000000l; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09940() { x = 0x00000000ffffffffl; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffae00000000l); }
@Test
public void test09941() { x = 0x000000017fffffffl; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffae00000000l); }
@Test
public void test09942() { x = 0x0000000180000000l; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09943() { x = 0x00000001ffffffffl; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffae00000000l); }
@Test
public void test09944() { x = 0xffffffff7fffffffl; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffae00000000l); }
@Test
public void test09945() { x = 0xffffffff80000000l; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09946() { x = 0x00000001deadf00dl; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0x53b6e42a00000000l); }
@Test
public void test09947() { x = 0xffffffffdeadf00dl; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0x53b6e42a00000000l); }
@Test
public void test09948() { x = 0x7fffffffffffffffl; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffae00000000l); }
@Test
public void test09949() { x = 0x7fffffff7fffffffl; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffae00000000l); }
@Test
public void test09950() { x = 0x7fffffff80000000l; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09951() { x = 0x7fffffffdeadf00dl; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0x53b6e42a00000000l); }
@Test
public void test09952() { x = 0x8000000000000000l; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09953() { x = 0xffffffffffffffffl; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffae00000000l); }
@Test
public void test09954() { x = 0xfffffffffffffffel; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5c00000000l); }
@Test
public void test09955() { x = 0xefffffffffffffffl; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffae00000000l); }
@Test
public void test09956() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5200000000l; AssertJUnit.assertEquals("multiply", result, 0x53b6e42a00000000l); }
@Test
public void test09957() { x = 0x000000007fffffffl; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7000000000l); }
@Test
public void test09958() { x = 0x0000000080000000l; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09959() { x = 0x00000000ffffffffl; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7000000000l); }
@Test
public void test09960() { x = 0x000000017fffffffl; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7000000000l); }
@Test
public void test09961() { x = 0x0000000180000000l; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09962() { x = 0x00000001ffffffffl; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7000000000l); }
@Test
public void test09963() { x = 0xffffffff7fffffffl; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7000000000l); }
@Test
public void test09964() { x = 0xffffffff80000000l; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09965() { x = 0x00000001deadf00dl; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0x9db7215000000000l); }
@Test
public void test09966() { x = 0xffffffffdeadf00dl; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0x9db7215000000000l); }
@Test
public void test09967() { x = 0x7fffffffffffffffl; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7000000000l); }
@Test
public void test09968() { x = 0x7fffffff7fffffffl; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7000000000l); }
@Test
public void test09969() { x = 0x7fffffff80000000l; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09970() { x = 0x7fffffffdeadf00dl; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0x9db7215000000000l); }
@Test
public void test09971() { x = 0x8000000000000000l; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09972() { x = 0xffffffffffffffffl; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7000000000l); }
@Test
public void test09973() { x = 0xfffffffffffffffel; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffae000000000l); }
@Test
public void test09974() { x = 0xefffffffffffffffl; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7000000000l); }
@Test
public void test09975() { x = 0xdeadf00ddeadf00dl; long result = x * 0x29000000000l; AssertJUnit.assertEquals("multiply", result, 0x9db7215000000000l); }
@Test
public void test09976() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0xffffffd700000052l); }
@Test
public void test09977() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0xffffffd700000000l); }
@Test
public void test09978() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0xffffffae00000052l); }
@Test
public void test09979() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0xffffff8500000052l); }
@Test
public void test09980() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0xffffff8500000000l); }
@Test
public void test09981() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0xffffff5c00000052l); }
@Test
public void test09982() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0x0000002900000052l); }
@Test
public void test09983() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0x0000002900000000l); }
@Test
public void test09984() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0xffffff66ac491bd6l); }
@Test
public void test09985() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0x0000000aac491bd6l); }
@Test
public void test09986() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0x0000000000000052l); }
@Test
public void test09987() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0x0000002900000052l); }
@Test
public void test09988() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0x0000002900000000l); }
@Test
public void test09989() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0x0000000aac491bd6l); }
@Test
public void test09990() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test09991() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0x0000000000000052l); }
@Test
public void test09992() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0x00000000000000a4l); }
@Test
public void test09993() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0x2000000000000052l); }
@Test
public void test09994() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffael; AssertJUnit.assertEquals("multiply", result, 0xac491b8eac491bd6l); }
@Test
public void test09995() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb800000290l); }
@Test
public void test09996() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb800000000l); }
@Test
public void test09997() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7000000290l); }
@Test
public void test09998() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0xfffffc2800000290l); }
@Test
public void test09999() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0xfffffc2800000000l); }
@Test
public void test10000() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0xfffffae000000290l); }
@Test
public void test10001() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0x0000014800000290l); }
@Test
public void test10002() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0x0000014800000000l); }
@Test
public void test10003() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0xfffffb356248deb0l); }
@Test
public void test10004() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0x000000556248deb0l); }
@Test
public void test10005() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000290l); }
@Test
public void test10006() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0x0000014800000290l); }
@Test
public void test10007() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0x0000014800000000l); }
@Test
public void test10008() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0x000000556248deb0l); }
@Test
public void test10009() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10010() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000290l); }
@Test
public void test10011() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000520l); }
@Test
public void test10012() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000290l); }
@Test
public void test10013() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffd70l; AssertJUnit.assertEquals("multiply", result, 0x6248dc756248deb0l); }
@Test
public void test10014() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0xffffd70000005200l); }
@Test
public void test10015() { x = 0x0000000080000000l; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0xffffd70000000000l); }
@Test
public void test10016() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0xffffae0000005200l); }
@Test
public void test10017() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0xffff850000005200l); }
@Test
public void test10018() { x = 0x0000000180000000l; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0xffff850000000000l); }
@Test
public void test10019() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0xffff5c0000005200l); }
@Test
public void test10020() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0x0000290000005200l); }
@Test
public void test10021() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0x0000290000000000l); }
@Test
public void test10022() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0xffff66ac491bd600l); }
@Test
public void test10023() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0x00000aac491bd600l); }
@Test
public void test10024() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005200l); }
@Test
public void test10025() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0x0000290000005200l); }
@Test
public void test10026() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0x0000290000000000l); }
@Test
public void test10027() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0x00000aac491bd600l); }
@Test
public void test10028() { x = 0x8000000000000000l; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10029() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005200l); }
@Test
public void test10030() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0x000000000000a400l); }
@Test
public void test10031() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005200l); }
@Test
public void test10032() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffae00l; AssertJUnit.assertEquals("multiply", result, 0x491b8eac491bd600l); }
@Test
public void test10033() { x = 0x000000007fffffffl; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005200000000l); }
@Test
public void test10034() { x = 0x0000000080000000l; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10035() { x = 0x00000000ffffffffl; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005200000000l); }
@Test
public void test10036() { x = 0x000000017fffffffl; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005200000000l); }
@Test
public void test10037() { x = 0x0000000180000000l; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10038() { x = 0x00000001ffffffffl; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005200000000l); }
@Test
public void test10039() { x = 0xffffffff7fffffffl; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005200000000l); }
@Test
public void test10040() { x = 0xffffffff80000000l; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10041() { x = 0x00000001deadf00dl; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0xac491bd600000000l); }
@Test
public void test10042() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0xac491bd600000000l); }
@Test
public void test10043() { x = 0x7fffffffffffffffl; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005200000000l); }
@Test
public void test10044() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005200000000l); }
@Test
public void test10045() { x = 0x7fffffff80000000l; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10046() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0xac491bd600000000l); }
@Test
public void test10047() { x = 0x8000000000000000l; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10048() { x = 0xffffffffffffffffl; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005200000000l); }
@Test
public void test10049() { x = 0xfffffffffffffffel; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a400000000l); }
@Test
public void test10050() { x = 0xefffffffffffffffl; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005200000000l); }
@Test
public void test10051() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffae00000000l; AssertJUnit.assertEquals("multiply", result, 0xac491bd600000000l); }
@Test
public void test10052() { x = 0x000000007fffffffl; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029000000000l); }
@Test
public void test10053() { x = 0x0000000080000000l; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10054() { x = 0x00000000ffffffffl; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029000000000l); }
@Test
public void test10055() { x = 0x000000017fffffffl; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029000000000l); }
@Test
public void test10056() { x = 0x0000000180000000l; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10057() { x = 0x00000001ffffffffl; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029000000000l); }
@Test
public void test10058() { x = 0xffffffff7fffffffl; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029000000000l); }
@Test
public void test10059() { x = 0xffffffff80000000l; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10060() { x = 0x00000001deadf00dl; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x6248deb000000000l); }
@Test
public void test10061() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x6248deb000000000l); }
@Test
public void test10062() { x = 0x7fffffffffffffffl; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029000000000l); }
@Test
public void test10063() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029000000000l); }
@Test
public void test10064() { x = 0x7fffffff80000000l; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10065() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x6248deb000000000l); }
@Test
public void test10066() { x = 0x8000000000000000l; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10067() { x = 0xffffffffffffffffl; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029000000000l); }
@Test
public void test10068() { x = 0xfffffffffffffffel; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000052000000000l); }
@Test
public void test10069() { x = 0xefffffffffffffffl; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029000000000l); }
@Test
public void test10070() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffd7000000000l; AssertJUnit.assertEquals("multiply", result, 0x6248deb000000000l); }
@Test
public void test10071() { x = 0x000000007fffffffl; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0x000000297fffffadl); }
@Test
public void test10072() { x = 0x0000000080000000l; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0x0000002980000000l); }
@Test
public void test10073() { x = 0x00000000ffffffffl; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0x00000052ffffffadl); }
@Test
public void test10074() { x = 0x000000017fffffffl; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0x0000007c7fffffadl); }
@Test
public void test10075() { x = 0x0000000180000000l; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0x0000007c80000000l); }
@Test
public void test10076() { x = 0x00000001ffffffffl; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0x000000a5ffffffadl); }
@Test
public void test10077() { x = 0xffffffff7fffffffl; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0xffffffd67fffffadl); }
@Test
public void test10078() { x = 0xffffffff80000000l; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0xffffffd680000000l); }
@Test
public void test10079() { x = 0x00000001deadf00dl; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0x0000009b3264d437l); }
@Test
public void test10080() { x = 0xffffffffdeadf00dl; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0xfffffff53264d437l); }
@Test
public void test10081() { x = 0x7fffffffffffffffl; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffffadl); }
@Test
public void test10082() { x = 0x7fffffff7fffffffl; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0x7fffffd67fffffadl); }
@Test
public void test10083() { x = 0x7fffffff80000000l; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0x7fffffd680000000l); }
@Test
public void test10084() { x = 0x7fffffffdeadf00dl; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff53264d437l); }
@Test
public void test10085() { x = 0x8000000000000000l; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10086() { x = 0xffffffffffffffffl; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffadl); }
@Test
public void test10087() { x = 0xfffffffffffffffel; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff5al); }
@Test
public void test10088() { x = 0xefffffffffffffffl; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0xcfffffffffffffadl); }
@Test
public void test10089() { x = 0xdeadf00ddeadf00dl; long result = x * 0x53l; AssertJUnit.assertEquals("multiply", result, 0x3264d47f3264d437l); }
@Test
public void test10090() { x = 0x000000007fffffffl; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0x0000014bfffffd68l); }
@Test
public void test10091() { x = 0x0000000080000000l; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0x0000014c00000000l); }
@Test
public void test10092() { x = 0x00000000ffffffffl; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0x00000297fffffd68l); }
@Test
public void test10093() { x = 0x000000017fffffffl; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0x000003e3fffffd68l); }
@Test
public void test10094() { x = 0x0000000180000000l; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0x000003e400000000l); }
@Test
public void test10095() { x = 0x00000001ffffffffl; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0x0000052ffffffd68l); }
@Test
public void test10096() { x = 0xffffffff7fffffffl; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb3fffffd68l); }
@Test
public void test10097() { x = 0xffffffff80000000l; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb400000000l); }
@Test
public void test10098() { x = 0x00000001deadf00dl; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0x000004d99326a1b8l); }
@Test
public void test10099() { x = 0xffffffffdeadf00dl; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0xffffffa99326a1b8l); }
@Test
public void test10100() { x = 0x7fffffffffffffffl; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd68l); }
@Test
public void test10101() { x = 0x7fffffff7fffffffl; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb3fffffd68l); }
@Test
public void test10102() { x = 0x7fffffff80000000l; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb400000000l); }
@Test
public void test10103() { x = 0x7fffffffdeadf00dl; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0xffffffa99326a1b8l); }
@Test
public void test10104() { x = 0x8000000000000000l; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10105() { x = 0xffffffffffffffffl; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd68l); }
@Test
public void test10106() { x = 0xfffffffffffffffel; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffad0l); }
@Test
public void test10107() { x = 0xefffffffffffffffl; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffd68l); }
@Test
public void test10108() { x = 0xdeadf00ddeadf00dl; long result = x * 0x298l; AssertJUnit.assertEquals("multiply", result, 0x9326a3f99326a1b8l); }
@Test
public void test10109() { x = 0x000000007fffffffl; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0x0000297fffffad00l); }
@Test
public void test10110() { x = 0x0000000080000000l; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0x0000298000000000l); }
@Test
public void test10111() { x = 0x00000000ffffffffl; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0x000052ffffffad00l); }
@Test
public void test10112() { x = 0x000000017fffffffl; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0x00007c7fffffad00l); }
@Test
public void test10113() { x = 0x0000000180000000l; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0x00007c8000000000l); }
@Test
public void test10114() { x = 0x00000001ffffffffl; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0x0000a5ffffffad00l); }
@Test
public void test10115() { x = 0xffffffff7fffffffl; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0xffffd67fffffad00l); }
@Test
public void test10116() { x = 0xffffffff80000000l; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0xffffd68000000000l); }
@Test
public void test10117() { x = 0x00000001deadf00dl; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0x00009b3264d43700l); }
@Test
public void test10118() { x = 0xffffffffdeadf00dl; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0xfffff53264d43700l); }
@Test
public void test10119() { x = 0x7fffffffffffffffl; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffad00l); }
@Test
public void test10120() { x = 0x7fffffff7fffffffl; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0xffffd67fffffad00l); }
@Test
public void test10121() { x = 0x7fffffff80000000l; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0xffffd68000000000l); }
@Test
public void test10122() { x = 0x7fffffffdeadf00dl; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0xfffff53264d43700l); }
@Test
public void test10123() { x = 0x8000000000000000l; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10124() { x = 0xffffffffffffffffl; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffad00l); }
@Test
public void test10125() { x = 0xfffffffffffffffel; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff5a00l); }
@Test
public void test10126() { x = 0xefffffffffffffffl; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffad00l); }
@Test
public void test10127() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5300l; AssertJUnit.assertEquals("multiply", result, 0x64d47f3264d43700l); }
@Test
public void test10128() { x = 0x000000007fffffffl; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffad00000000l); }
@Test
public void test10129() { x = 0x0000000080000000l; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10130() { x = 0x00000000ffffffffl; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffad00000000l); }
@Test
public void test10131() { x = 0x000000017fffffffl; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffad00000000l); }
@Test
public void test10132() { x = 0x0000000180000000l; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10133() { x = 0x00000001ffffffffl; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffad00000000l); }
@Test
public void test10134() { x = 0xffffffff7fffffffl; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffad00000000l); }
@Test
public void test10135() { x = 0xffffffff80000000l; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10136() { x = 0x00000001deadf00dl; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0x3264d43700000000l); }
@Test
public void test10137() { x = 0xffffffffdeadf00dl; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0x3264d43700000000l); }
@Test
public void test10138() { x = 0x7fffffffffffffffl; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffad00000000l); }
@Test
public void test10139() { x = 0x7fffffff7fffffffl; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffffad00000000l); }
@Test
public void test10140() { x = 0x7fffffff80000000l; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10141() { x = 0x7fffffffdeadf00dl; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0x3264d43700000000l); }
@Test
public void test10142() { x = 0x8000000000000000l; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10143() { x = 0xffffffffffffffffl; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffad00000000l); }
@Test
public void test10144() { x = 0xfffffffffffffffel; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff5a00000000l); }
@Test
public void test10145() { x = 0xefffffffffffffffl; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffad00000000l); }
@Test
public void test10146() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5300000000l; AssertJUnit.assertEquals("multiply", result, 0x3264d43700000000l); }
@Test
public void test10147() { x = 0x000000007fffffffl; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6800000000l); }
@Test
public void test10148() { x = 0x0000000080000000l; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10149() { x = 0x00000000ffffffffl; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6800000000l); }
@Test
public void test10150() { x = 0x000000017fffffffl; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6800000000l); }
@Test
public void test10151() { x = 0x0000000180000000l; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10152() { x = 0x00000001ffffffffl; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6800000000l); }
@Test
public void test10153() { x = 0xffffffff7fffffffl; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6800000000l); }
@Test
public void test10154() { x = 0xffffffff80000000l; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10155() { x = 0x00000001deadf00dl; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0x9326a1b800000000l); }
@Test
public void test10156() { x = 0xffffffffdeadf00dl; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0x9326a1b800000000l); }
@Test
public void test10157() { x = 0x7fffffffffffffffl; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6800000000l); }
@Test
public void test10158() { x = 0x7fffffff7fffffffl; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6800000000l); }
@Test
public void test10159() { x = 0x7fffffff80000000l; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10160() { x = 0x7fffffffdeadf00dl; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0x9326a1b800000000l); }
@Test
public void test10161() { x = 0x8000000000000000l; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10162() { x = 0xffffffffffffffffl; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6800000000l); }
@Test
public void test10163() { x = 0xfffffffffffffffel; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffad000000000l); }
@Test
public void test10164() { x = 0xefffffffffffffffl; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6800000000l); }
@Test
public void test10165() { x = 0xdeadf00ddeadf00dl; long result = x * 0x29800000000l; AssertJUnit.assertEquals("multiply", result, 0x9326a1b800000000l); }
@Test
public void test10166() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0xffffffd680000053l); }
@Test
public void test10167() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0xffffffd680000000l); }
@Test
public void test10168() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0xffffffad00000053l); }
@Test
public void test10169() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0xffffff8380000053l); }
@Test
public void test10170() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0xffffff8380000000l); }
@Test
public void test10171() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0xffffff5a00000053l); }
@Test
public void test10172() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0x0000002980000053l); }
@Test
public void test10173() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0x0000002980000000l); }
@Test
public void test10174() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0xffffff64cd9b2bc9l); }
@Test
public void test10175() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0x0000000acd9b2bc9l); }
@Test
public void test10176() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000053l); }
@Test
public void test10177() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0x8000002980000053l); }
@Test
public void test10178() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0x8000002980000000l); }
@Test
public void test10179() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0x8000000acd9b2bc9l); }
@Test
public void test10180() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10181() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000053l); }
@Test
public void test10182() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0x00000000000000a6l); }
@Test
public void test10183() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0x3000000000000053l); }
@Test
public void test10184() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffadl; AssertJUnit.assertEquals("multiply", result, 0xcd9b2b80cd9b2bc9l); }
@Test
public void test10185() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb400000298l); }
@Test
public void test10186() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0xfffffeb400000000l); }
@Test
public void test10187() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0xfffffd6800000298l); }
@Test
public void test10188() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1c00000298l); }
@Test
public void test10189() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1c00000000l); }
@Test
public void test10190() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0xfffffad000000298l); }
@Test
public void test10191() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0x0000014c00000298l); }
@Test
public void test10192() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0x0000014c00000000l); }
@Test
public void test10193() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0xfffffb266cd95e48l); }
@Test
public void test10194() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0x000000566cd95e48l); }
@Test
public void test10195() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000298l); }
@Test
public void test10196() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0x0000014c00000298l); }
@Test
public void test10197() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0x0000014c00000000l); }
@Test
public void test10198() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0x000000566cd95e48l); }
@Test
public void test10199() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10200() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000298l); }
@Test
public void test10201() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000530l); }
@Test
public void test10202() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000298l); }
@Test
public void test10203() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffd68l; AssertJUnit.assertEquals("multiply", result, 0x6cd95c066cd95e48l); }
@Test
public void test10204() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0xffffd68000005300l); }
@Test
public void test10205() { x = 0x0000000080000000l; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0xffffd68000000000l); }
@Test
public void test10206() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0xffffad0000005300l); }
@Test
public void test10207() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0xffff838000005300l); }
@Test
public void test10208() { x = 0x0000000180000000l; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0xffff838000000000l); }
@Test
public void test10209() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0xffff5a0000005300l); }
@Test
public void test10210() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0x0000298000005300l); }
@Test
public void test10211() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0x0000298000000000l); }
@Test
public void test10212() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0xffff64cd9b2bc900l); }
@Test
public void test10213() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0x00000acd9b2bc900l); }
@Test
public void test10214() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005300l); }
@Test
public void test10215() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0x0000298000005300l); }
@Test
public void test10216() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0x0000298000000000l); }
@Test
public void test10217() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0x00000acd9b2bc900l); }
@Test
public void test10218() { x = 0x8000000000000000l; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10219() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005300l); }
@Test
public void test10220() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0x000000000000a600l); }
@Test
public void test10221() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005300l); }
@Test
public void test10222() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffad00l; AssertJUnit.assertEquals("multiply", result, 0x9b2b80cd9b2bc900l); }
@Test
public void test10223() { x = 0x000000007fffffffl; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000005300000000l); }
@Test
public void test10224() { x = 0x0000000080000000l; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10225() { x = 0x00000000ffffffffl; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005300000000l); }
@Test
public void test10226() { x = 0x000000017fffffffl; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000005300000000l); }
@Test
public void test10227() { x = 0x0000000180000000l; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10228() { x = 0x00000001ffffffffl; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005300000000l); }
@Test
public void test10229() { x = 0xffffffff7fffffffl; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000005300000000l); }
@Test
public void test10230() { x = 0xffffffff80000000l; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10231() { x = 0x00000001deadf00dl; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0xcd9b2bc900000000l); }
@Test
public void test10232() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0xcd9b2bc900000000l); }
@Test
public void test10233() { x = 0x7fffffffffffffffl; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005300000000l); }
@Test
public void test10234() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000005300000000l); }
@Test
public void test10235() { x = 0x7fffffff80000000l; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10236() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0xcd9b2bc900000000l); }
@Test
public void test10237() { x = 0x8000000000000000l; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10238() { x = 0xffffffffffffffffl; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005300000000l); }
@Test
public void test10239() { x = 0xfffffffffffffffel; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000a600000000l); }
@Test
public void test10240() { x = 0xefffffffffffffffl; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005300000000l); }
@Test
public void test10241() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffad00000000l; AssertJUnit.assertEquals("multiply", result, 0xcd9b2bc900000000l); }
@Test
public void test10242() { x = 0x000000007fffffffl; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029800000000l); }
@Test
public void test10243() { x = 0x0000000080000000l; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10244() { x = 0x00000000ffffffffl; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029800000000l); }
@Test
public void test10245() { x = 0x000000017fffffffl; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029800000000l); }
@Test
public void test10246() { x = 0x0000000180000000l; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10247() { x = 0x00000001ffffffffl; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029800000000l); }
@Test
public void test10248() { x = 0xffffffff7fffffffl; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029800000000l); }
@Test
public void test10249() { x = 0xffffffff80000000l; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10250() { x = 0x00000001deadf00dl; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x6cd95e4800000000l); }
@Test
public void test10251() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x6cd95e4800000000l); }
@Test
public void test10252() { x = 0x7fffffffffffffffl; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029800000000l); }
@Test
public void test10253() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029800000000l); }
@Test
public void test10254() { x = 0x7fffffff80000000l; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10255() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x6cd95e4800000000l); }
@Test
public void test10256() { x = 0x8000000000000000l; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10257() { x = 0xffffffffffffffffl; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029800000000l); }
@Test
public void test10258() { x = 0xfffffffffffffffel; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000053000000000l); }
@Test
public void test10259() { x = 0xefffffffffffffffl; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000029800000000l); }
@Test
public void test10260() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffd6800000000l; AssertJUnit.assertEquals("multiply", result, 0x6cd95e4800000000l); }
@Test
public void test10261() { x = 0x000000007fffffffl; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0x0000002cffffffa6l); }
@Test
public void test10262() { x = 0x0000000080000000l; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0x0000002d00000000l); }
@Test
public void test10263() { x = 0x00000000ffffffffl; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0x00000059ffffffa6l); }
@Test
public void test10264() { x = 0x000000017fffffffl; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0x00000086ffffffa6l); }
@Test
public void test10265() { x = 0x0000000180000000l; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0x0000008700000000l); }
@Test
public void test10266() { x = 0x00000001ffffffffl; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0x000000b3ffffffa6l); }
@Test
public void test10267() { x = 0xffffffff7fffffffl; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0xffffffd2ffffffa6l); }
@Test
public void test10268() { x = 0xffffffff80000000l; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0xffffffd300000000l); }
@Test
public void test10269() { x = 0x00000001deadf00dl; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0x000000a849266492l); }
@Test
public void test10270() { x = 0xffffffffdeadf00dl; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0xfffffff449266492l); }
@Test
public void test10271() { x = 0x7fffffffffffffffl; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffa6l); }
@Test
public void test10272() { x = 0x7fffffff7fffffffl; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0xffffffd2ffffffa6l); }
@Test
public void test10273() { x = 0x7fffffff80000000l; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0xffffffd300000000l); }
@Test
public void test10274() { x = 0x7fffffffdeadf00dl; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0xfffffff449266492l); }
@Test
public void test10275() { x = 0x8000000000000000l; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10276() { x = 0xffffffffffffffffl; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffa6l); }
@Test
public void test10277() { x = 0xfffffffffffffffel; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff4cl); }
@Test
public void test10278() { x = 0xefffffffffffffffl; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0x5fffffffffffffa6l); }
@Test
public void test10279() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5al; AssertJUnit.assertEquals("multiply", result, 0x492664e049266492l); }
@Test
public void test10280() { x = 0x000000007fffffffl; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0x00000167fffffd30l); }
@Test
public void test10281() { x = 0x0000000080000000l; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0x0000016800000000l); }
@Test
public void test10282() { x = 0x00000000ffffffffl; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0x000002cffffffd30l); }
@Test
public void test10283() { x = 0x000000017fffffffl; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0x00000437fffffd30l); }
@Test
public void test10284() { x = 0x0000000180000000l; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0x0000043800000000l); }
@Test
public void test10285() { x = 0x00000001ffffffffl; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0x0000059ffffffd30l); }
@Test
public void test10286() { x = 0xffffffff7fffffffl; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffe97fffffd30l); }
@Test
public void test10287() { x = 0xffffffff80000000l; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9800000000l); }
@Test
public void test10288() { x = 0x00000001deadf00dl; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0x0000054249332490l); }
@Test
public void test10289() { x = 0xffffffffdeadf00dl; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0xffffffa249332490l); }
@Test
public void test10290() { x = 0x7fffffffffffffffl; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd30l); }
@Test
public void test10291() { x = 0x7fffffff7fffffffl; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffe97fffffd30l); }
@Test
public void test10292() { x = 0x7fffffff80000000l; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9800000000l); }
@Test
public void test10293() { x = 0x7fffffffdeadf00dl; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0xffffffa249332490l); }
@Test
public void test10294() { x = 0x8000000000000000l; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10295() { x = 0xffffffffffffffffl; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd30l); }
@Test
public void test10296() { x = 0xfffffffffffffffel; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffa60l); }
@Test
public void test10297() { x = 0xefffffffffffffffl; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd30l); }
@Test
public void test10298() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2d0l; AssertJUnit.assertEquals("multiply", result, 0x4933270249332490l); }
@Test
public void test10299() { x = 0x000000007fffffffl; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0x00002cffffffa600l); }
@Test
public void test10300() { x = 0x0000000080000000l; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0x00002d0000000000l); }
@Test
public void test10301() { x = 0x00000000ffffffffl; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0x000059ffffffa600l); }
@Test
public void test10302() { x = 0x000000017fffffffl; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0x000086ffffffa600l); }
@Test
public void test10303() { x = 0x0000000180000000l; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0x0000870000000000l); }
@Test
public void test10304() { x = 0x00000001ffffffffl; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0x0000b3ffffffa600l); }
@Test
public void test10305() { x = 0xffffffff7fffffffl; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0xffffd2ffffffa600l); }
@Test
public void test10306() { x = 0xffffffff80000000l; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0xffffd30000000000l); }
@Test
public void test10307() { x = 0x00000001deadf00dl; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0x0000a84926649200l); }
@Test
public void test10308() { x = 0xffffffffdeadf00dl; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0xfffff44926649200l); }
@Test
public void test10309() { x = 0x7fffffffffffffffl; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffa600l); }
@Test
public void test10310() { x = 0x7fffffff7fffffffl; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0xffffd2ffffffa600l); }
@Test
public void test10311() { x = 0x7fffffff80000000l; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0xffffd30000000000l); }
@Test
public void test10312() { x = 0x7fffffffdeadf00dl; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0xfffff44926649200l); }
@Test
public void test10313() { x = 0x8000000000000000l; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10314() { x = 0xffffffffffffffffl; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffa600l); }
@Test
public void test10315() { x = 0xfffffffffffffffel; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff4c00l); }
@Test
public void test10316() { x = 0xefffffffffffffffl; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffa600l); }
@Test
public void test10317() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5a00l; AssertJUnit.assertEquals("multiply", result, 0x2664e04926649200l); }
@Test
public void test10318() { x = 0x000000007fffffffl; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa600000000l); }
@Test
public void test10319() { x = 0x0000000080000000l; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10320() { x = 0x00000000ffffffffl; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa600000000l); }
@Test
public void test10321() { x = 0x000000017fffffffl; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa600000000l); }
@Test
public void test10322() { x = 0x0000000180000000l; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10323() { x = 0x00000001ffffffffl; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa600000000l); }
@Test
public void test10324() { x = 0xffffffff7fffffffl; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa600000000l); }
@Test
public void test10325() { x = 0xffffffff80000000l; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10326() { x = 0x00000001deadf00dl; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0x4926649200000000l); }
@Test
public void test10327() { x = 0xffffffffdeadf00dl; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0x4926649200000000l); }
@Test
public void test10328() { x = 0x7fffffffffffffffl; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa600000000l); }
@Test
public void test10329() { x = 0x7fffffff7fffffffl; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa600000000l); }
@Test
public void test10330() { x = 0x7fffffff80000000l; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10331() { x = 0x7fffffffdeadf00dl; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0x4926649200000000l); }
@Test
public void test10332() { x = 0x8000000000000000l; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10333() { x = 0xffffffffffffffffl; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa600000000l); }
@Test
public void test10334() { x = 0xfffffffffffffffel; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4c00000000l); }
@Test
public void test10335() { x = 0xefffffffffffffffl; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa600000000l); }
@Test
public void test10336() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5a00000000l; AssertJUnit.assertEquals("multiply", result, 0x4926649200000000l); }
@Test
public void test10337() { x = 0x000000007fffffffl; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd3000000000l); }
@Test
public void test10338() { x = 0x0000000080000000l; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10339() { x = 0x00000000ffffffffl; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd3000000000l); }
@Test
public void test10340() { x = 0x000000017fffffffl; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd3000000000l); }
@Test
public void test10341() { x = 0x0000000180000000l; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10342() { x = 0x00000001ffffffffl; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd3000000000l); }
@Test
public void test10343() { x = 0xffffffff7fffffffl; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd3000000000l); }
@Test
public void test10344() { x = 0xffffffff80000000l; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10345() { x = 0x00000001deadf00dl; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0x4933249000000000l); }
@Test
public void test10346() { x = 0xffffffffdeadf00dl; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0x4933249000000000l); }
@Test
public void test10347() { x = 0x7fffffffffffffffl; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd3000000000l); }
@Test
public void test10348() { x = 0x7fffffff7fffffffl; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd3000000000l); }
@Test
public void test10349() { x = 0x7fffffff80000000l; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10350() { x = 0x7fffffffdeadf00dl; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0x4933249000000000l); }
@Test
public void test10351() { x = 0x8000000000000000l; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10352() { x = 0xffffffffffffffffl; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd3000000000l); }
@Test
public void test10353() { x = 0xfffffffffffffffel; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa6000000000l); }
@Test
public void test10354() { x = 0xefffffffffffffffl; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd3000000000l); }
@Test
public void test10355() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2d000000000l; AssertJUnit.assertEquals("multiply", result, 0x4933249000000000l); }
@Test
public void test10356() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0xffffffd30000005al); }
@Test
public void test10357() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0xffffffd300000000l); }
@Test
public void test10358() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0xffffffa60000005al); }
@Test
public void test10359() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0xffffff790000005al); }
@Test
public void test10360() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0xffffff7900000000l); }
@Test
public void test10361() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0xffffff4c0000005al); }
@Test
public void test10362() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0x0000002d0000005al); }
@Test
public void test10363() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0x0000002d00000000l); }
@Test
public void test10364() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0xffffff57b6d99b6el); }
@Test
public void test10365() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0x0000000bb6d99b6el); }
@Test
public void test10366() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0x000000000000005al); }
@Test
public void test10367() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0x0000002d0000005al); }
@Test
public void test10368() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0x0000002d00000000l); }
@Test
public void test10369() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0x0000000bb6d99b6el); }
@Test
public void test10370() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10371() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0x000000000000005al); }
@Test
public void test10372() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000b4l); }
@Test
public void test10373() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0xa00000000000005al); }
@Test
public void test10374() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffa6l; AssertJUnit.assertEquals("multiply", result, 0xb6d99b1fb6d99b6el); }
@Test
public void test10375() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0xfffffe98000002d0l); }
@Test
public void test10376() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9800000000l); }
@Test
public void test10377() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0xfffffd30000002d0l); }
@Test
public void test10378() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0xfffffbc8000002d0l); }
@Test
public void test10379() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0xfffffbc800000000l); }
@Test
public void test10380() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0xfffffa60000002d0l); }
@Test
public void test10381() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0x00000168000002d0l); }
@Test
public void test10382() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0x0000016800000000l); }
@Test
public void test10383() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0xfffffabdb6ccdb70l); }
@Test
public void test10384() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0x0000005db6ccdb70l); }
@Test
public void test10385() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0x00000000000002d0l); }
@Test
public void test10386() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0x00000168000002d0l); }
@Test
public void test10387() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0x0000016800000000l); }
@Test
public void test10388() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0x0000005db6ccdb70l); }
@Test
public void test10389() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10390() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0x00000000000002d0l); }
@Test
public void test10391() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0x00000000000005a0l); }
@Test
public void test10392() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0x00000000000002d0l); }
@Test
public void test10393() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffd30l; AssertJUnit.assertEquals("multiply", result, 0xb6ccd8fdb6ccdb70l); }
@Test
public void test10394() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0xffffd30000005a00l); }
@Test
public void test10395() { x = 0x0000000080000000l; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0xffffd30000000000l); }
@Test
public void test10396() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0xffffa60000005a00l); }
@Test
public void test10397() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0xffff790000005a00l); }
@Test
public void test10398() { x = 0x0000000180000000l; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0xffff790000000000l); }
@Test
public void test10399() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0xffff4c0000005a00l); }
@Test
public void test10400() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0x00002d0000005a00l); }
@Test
public void test10401() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0x00002d0000000000l); }
@Test
public void test10402() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0xffff57b6d99b6e00l); }
@Test
public void test10403() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0x00000bb6d99b6e00l); }
@Test
public void test10404() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005a00l); }
@Test
public void test10405() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0x00002d0000005a00l); }
@Test
public void test10406() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0x00002d0000000000l); }
@Test
public void test10407() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0x00000bb6d99b6e00l); }
@Test
public void test10408() { x = 0x8000000000000000l; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10409() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005a00l); }
@Test
public void test10410() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0x000000000000b400l); }
@Test
public void test10411() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005a00l); }
@Test
public void test10412() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffa600l; AssertJUnit.assertEquals("multiply", result, 0xd99b1fb6d99b6e00l); }
@Test
public void test10413() { x = 0x000000007fffffffl; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005a00000000l); }
@Test
public void test10414() { x = 0x0000000080000000l; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10415() { x = 0x00000000ffffffffl; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005a00000000l); }
@Test
public void test10416() { x = 0x000000017fffffffl; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005a00000000l); }
@Test
public void test10417() { x = 0x0000000180000000l; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10418() { x = 0x00000001ffffffffl; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005a00000000l); }
@Test
public void test10419() { x = 0xffffffff7fffffffl; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005a00000000l); }
@Test
public void test10420() { x = 0xffffffff80000000l; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10421() { x = 0x00000001deadf00dl; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0xb6d99b6e00000000l); }
@Test
public void test10422() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0xb6d99b6e00000000l); }
@Test
public void test10423() { x = 0x7fffffffffffffffl; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005a00000000l); }
@Test
public void test10424() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005a00000000l); }
@Test
public void test10425() { x = 0x7fffffff80000000l; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10426() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0xb6d99b6e00000000l); }
@Test
public void test10427() { x = 0x8000000000000000l; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10428() { x = 0xffffffffffffffffl; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005a00000000l); }
@Test
public void test10429() { x = 0xfffffffffffffffel; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x000000b400000000l); }
@Test
public void test10430() { x = 0xefffffffffffffffl; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000005a00000000l); }
@Test
public void test10431() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffa600000000l; AssertJUnit.assertEquals("multiply", result, 0xb6d99b6e00000000l); }
@Test
public void test10432() { x = 0x000000007fffffffl; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d000000000l); }
@Test
public void test10433() { x = 0x0000000080000000l; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10434() { x = 0x00000000ffffffffl; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d000000000l); }
@Test
public void test10435() { x = 0x000000017fffffffl; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d000000000l); }
@Test
public void test10436() { x = 0x0000000180000000l; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10437() { x = 0x00000001ffffffffl; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d000000000l); }
@Test
public void test10438() { x = 0xffffffff7fffffffl; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d000000000l); }
@Test
public void test10439() { x = 0xffffffff80000000l; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10440() { x = 0x00000001deadf00dl; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0xb6ccdb7000000000l); }
@Test
public void test10441() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0xb6ccdb7000000000l); }
@Test
public void test10442() { x = 0x7fffffffffffffffl; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d000000000l); }
@Test
public void test10443() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d000000000l); }
@Test
public void test10444() { x = 0x7fffffff80000000l; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10445() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0xb6ccdb7000000000l); }
@Test
public void test10446() { x = 0x8000000000000000l; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10447() { x = 0xffffffffffffffffl; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d000000000l); }
@Test
public void test10448() { x = 0xfffffffffffffffel; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000005a000000000l); }
@Test
public void test10449() { x = 0xefffffffffffffffl; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d000000000l); }
@Test
public void test10450() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffd3000000000l; AssertJUnit.assertEquals("multiply", result, 0xb6ccdb7000000000l); }
@Test
public void test10451() { x = 0x000000007fffffffl; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0x000000317fffff9dl); }
@Test
public void test10452() { x = 0x0000000080000000l; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0x0000003180000000l); }
@Test
public void test10453() { x = 0x00000000ffffffffl; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0x00000062ffffff9dl); }
@Test
public void test10454() { x = 0x000000017fffffffl; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0x000000947fffff9dl); }
@Test
public void test10455() { x = 0x0000000180000000l; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0x0000009480000000l); }
@Test
public void test10456() { x = 0x00000001ffffffffl; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0x000000c5ffffff9dl); }
@Test
public void test10457() { x = 0xffffffff7fffffffl; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0xffffffce7fffff9dl); }
@Test
public void test10458() { x = 0xffffffff80000000l; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0xffffffce80000000l); }
@Test
public void test10459() { x = 0x00000001deadf00dl; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0x000000b91d43d507l); }
@Test
public void test10460() { x = 0xffffffffdeadf00dl; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0xfffffff31d43d507l); }
@Test
public void test10461() { x = 0x7fffffffffffffffl; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff9dl); }
@Test
public void test10462() { x = 0x7fffffff7fffffffl; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0x7fffffce7fffff9dl); }
@Test
public void test10463() { x = 0x7fffffff80000000l; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0x7fffffce80000000l); }
@Test
public void test10464() { x = 0x7fffffffdeadf00dl; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0x7ffffff31d43d507l); }
@Test
public void test10465() { x = 0x8000000000000000l; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10466() { x = 0xffffffffffffffffl; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff9dl); }
@Test
public void test10467() { x = 0xfffffffffffffffel; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff3al); }
@Test
public void test10468() { x = 0xefffffffffffffffl; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0xcfffffffffffff9dl); }
@Test
public void test10469() { x = 0xdeadf00ddeadf00dl; long result = x * 0x63l; AssertJUnit.assertEquals("multiply", result, 0x1d43d55d1d43d507l); }
@Test
public void test10470() { x = 0x000000007fffffffl; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0x0000018bfffffce8l); }
@Test
public void test10471() { x = 0x0000000080000000l; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0x0000018c00000000l); }
@Test
public void test10472() { x = 0x00000000ffffffffl; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0x00000317fffffce8l); }
@Test
public void test10473() { x = 0x000000017fffffffl; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0x000004a3fffffce8l); }
@Test
public void test10474() { x = 0x0000000180000000l; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0x000004a400000000l); }
@Test
public void test10475() { x = 0x00000001ffffffffl; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0x0000062ffffffce8l); }
@Test
public void test10476() { x = 0xffffffff7fffffffl; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0xfffffe73fffffce8l); }
@Test
public void test10477() { x = 0xffffffff80000000l; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7400000000l); }
@Test
public void test10478() { x = 0x00000001deadf00dl; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0x000005c8ea1ea838l); }
@Test
public void test10479() { x = 0xffffffffdeadf00dl; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0xffffff98ea1ea838l); }
@Test
public void test10480() { x = 0x7fffffffffffffffl; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffce8l); }
@Test
public void test10481() { x = 0x7fffffff7fffffffl; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0xfffffe73fffffce8l); }
@Test
public void test10482() { x = 0x7fffffff80000000l; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7400000000l); }
@Test
public void test10483() { x = 0x7fffffffdeadf00dl; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0xffffff98ea1ea838l); }
@Test
public void test10484() { x = 0x8000000000000000l; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10485() { x = 0xffffffffffffffffl; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffce8l); }
@Test
public void test10486() { x = 0xfffffffffffffffel; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff9d0l); }
@Test
public void test10487() { x = 0xefffffffffffffffl; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffce8l); }
@Test
public void test10488() { x = 0xdeadf00ddeadf00dl; long result = x * 0x318l; AssertJUnit.assertEquals("multiply", result, 0xea1eaae8ea1ea838l); }
@Test
public void test10489() { x = 0x000000007fffffffl; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0x0000317fffff9d00l); }
@Test
public void test10490() { x = 0x0000000080000000l; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0x0000318000000000l); }
@Test
public void test10491() { x = 0x00000000ffffffffl; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0x000062ffffff9d00l); }
@Test
public void test10492() { x = 0x000000017fffffffl; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0x0000947fffff9d00l); }
@Test
public void test10493() { x = 0x0000000180000000l; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0x0000948000000000l); }
@Test
public void test10494() { x = 0x00000001ffffffffl; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0x0000c5ffffff9d00l); }
@Test
public void test10495() { x = 0xffffffff7fffffffl; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0xffffce7fffff9d00l); }
@Test
public void test10496() { x = 0xffffffff80000000l; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0xffffce8000000000l); }
@Test
public void test10497() { x = 0x00000001deadf00dl; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0x0000b91d43d50700l); }
@Test
public void test10498() { x = 0xffffffffdeadf00dl; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0xfffff31d43d50700l); }
@Test
public void test10499() { x = 0x7fffffffffffffffl; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff9d00l); }
@Test
public void test10500() { x = 0x7fffffff7fffffffl; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0xffffce7fffff9d00l); }
@Test
public void test10501() { x = 0x7fffffff80000000l; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0xffffce8000000000l); }
@Test
public void test10502() { x = 0x7fffffffdeadf00dl; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0xfffff31d43d50700l); }
@Test
public void test10503() { x = 0x8000000000000000l; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10504() { x = 0xffffffffffffffffl; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff9d00l); }
@Test
public void test10505() { x = 0xfffffffffffffffel; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff3a00l); }
@Test
public void test10506() { x = 0xefffffffffffffffl; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff9d00l); }
@Test
public void test10507() { x = 0xdeadf00ddeadf00dl; long result = x * 0x6300l; AssertJUnit.assertEquals("multiply", result, 0x43d55d1d43d50700l); }
@Test
public void test10508() { x = 0x000000007fffffffl; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff9d00000000l); }
@Test
public void test10509() { x = 0x0000000080000000l; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10510() { x = 0x00000000ffffffffl; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9d00000000l); }
@Test
public void test10511() { x = 0x000000017fffffffl; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff9d00000000l); }
@Test
public void test10512() { x = 0x0000000180000000l; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10513() { x = 0x00000001ffffffffl; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9d00000000l); }
@Test
public void test10514() { x = 0xffffffff7fffffffl; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff9d00000000l); }
@Test
public void test10515() { x = 0xffffffff80000000l; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10516() { x = 0x00000001deadf00dl; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0x1d43d50700000000l); }
@Test
public void test10517() { x = 0xffffffffdeadf00dl; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0x1d43d50700000000l); }
@Test
public void test10518() { x = 0x7fffffffffffffffl; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9d00000000l); }
@Test
public void test10519() { x = 0x7fffffff7fffffffl; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff9d00000000l); }
@Test
public void test10520() { x = 0x7fffffff80000000l; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10521() { x = 0x7fffffffdeadf00dl; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0x1d43d50700000000l); }
@Test
public void test10522() { x = 0x8000000000000000l; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10523() { x = 0xffffffffffffffffl; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9d00000000l); }
@Test
public void test10524() { x = 0xfffffffffffffffel; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3a00000000l); }
@Test
public void test10525() { x = 0xefffffffffffffffl; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9d00000000l); }
@Test
public void test10526() { x = 0xdeadf00ddeadf00dl; long result = x * 0x6300000000l; AssertJUnit.assertEquals("multiply", result, 0x1d43d50700000000l); }
@Test
public void test10527() { x = 0x000000007fffffffl; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffce800000000l); }
@Test
public void test10528() { x = 0x0000000080000000l; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10529() { x = 0x00000000ffffffffl; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffce800000000l); }
@Test
public void test10530() { x = 0x000000017fffffffl; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffce800000000l); }
@Test
public void test10531() { x = 0x0000000180000000l; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10532() { x = 0x00000001ffffffffl; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffce800000000l); }
@Test
public void test10533() { x = 0xffffffff7fffffffl; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffce800000000l); }
@Test
public void test10534() { x = 0xffffffff80000000l; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10535() { x = 0x00000001deadf00dl; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0xea1ea83800000000l); }
@Test
public void test10536() { x = 0xffffffffdeadf00dl; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0xea1ea83800000000l); }
@Test
public void test10537() { x = 0x7fffffffffffffffl; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffce800000000l); }
@Test
public void test10538() { x = 0x7fffffff7fffffffl; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffce800000000l); }
@Test
public void test10539() { x = 0x7fffffff80000000l; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10540() { x = 0x7fffffffdeadf00dl; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0xea1ea83800000000l); }
@Test
public void test10541() { x = 0x8000000000000000l; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10542() { x = 0xffffffffffffffffl; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffce800000000l); }
@Test
public void test10543() { x = 0xfffffffffffffffel; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff9d000000000l); }
@Test
public void test10544() { x = 0xefffffffffffffffl; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffce800000000l); }
@Test
public void test10545() { x = 0xdeadf00ddeadf00dl; long result = x * 0x31800000000l; AssertJUnit.assertEquals("multiply", result, 0xea1ea83800000000l); }
@Test
public void test10546() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0xffffffce80000063l); }
@Test
public void test10547() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0xffffffce80000000l); }
@Test
public void test10548() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0xffffff9d00000063l); }
@Test
public void test10549() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0xffffff6b80000063l); }
@Test
public void test10550() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0xffffff6b80000000l); }
@Test
public void test10551() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0xffffff3a00000063l); }
@Test
public void test10552() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0x0000003180000063l); }
@Test
public void test10553() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0x0000003180000000l); }
@Test
public void test10554() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0xffffff46e2bc2af9l); }
@Test
public void test10555() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0x0000000ce2bc2af9l); }
@Test
public void test10556() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000063l); }
@Test
public void test10557() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0x8000003180000063l); }
@Test
public void test10558() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0x8000003180000000l); }
@Test
public void test10559() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0x8000000ce2bc2af9l); }
@Test
public void test10560() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10561() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000063l); }
@Test
public void test10562() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0x00000000000000c6l); }
@Test
public void test10563() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0x3000000000000063l); }
@Test
public void test10564() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff9dl; AssertJUnit.assertEquals("multiply", result, 0xe2bc2aa2e2bc2af9l); }
@Test
public void test10565() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7400000318l); }
@Test
public void test10566() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7400000000l); }
@Test
public void test10567() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0xfffffce800000318l); }
@Test
public void test10568() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0xfffffb5c00000318l); }
@Test
public void test10569() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0xfffffb5c00000000l); }
@Test
public void test10570() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0xfffff9d000000318l); }
@Test
public void test10571() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0x0000018c00000318l); }
@Test
public void test10572() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0x0000018c00000000l); }
@Test
public void test10573() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0xfffffa3715e157c8l); }
@Test
public void test10574() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0x0000006715e157c8l); }
@Test
public void test10575() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000318l); }
@Test
public void test10576() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0x0000018c00000318l); }
@Test
public void test10577() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0x0000018c00000000l); }
@Test
public void test10578() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0x0000006715e157c8l); }
@Test
public void test10579() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10580() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000318l); }
@Test
public void test10581() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000630l); }
@Test
public void test10582() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000318l); }
@Test
public void test10583() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffce8l; AssertJUnit.assertEquals("multiply", result, 0x15e1551715e157c8l); }
@Test
public void test10584() { x = 0x000000007fffffffl; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0xffffce8000006300l); }
@Test
public void test10585() { x = 0x0000000080000000l; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0xffffce8000000000l); }
@Test
public void test10586() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0xffff9d0000006300l); }
@Test
public void test10587() { x = 0x000000017fffffffl; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0xffff6b8000006300l); }
@Test
public void test10588() { x = 0x0000000180000000l; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0xffff6b8000000000l); }
@Test
public void test10589() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0xffff3a0000006300l); }
@Test
public void test10590() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0x0000318000006300l); }
@Test
public void test10591() { x = 0xffffffff80000000l; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0x0000318000000000l); }
@Test
public void test10592() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0xffff46e2bc2af900l); }
@Test
public void test10593() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0x00000ce2bc2af900l); }
@Test
public void test10594() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006300l); }
@Test
public void test10595() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0x0000318000006300l); }
@Test
public void test10596() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0x0000318000000000l); }
@Test
public void test10597() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0x00000ce2bc2af900l); }
@Test
public void test10598() { x = 0x8000000000000000l; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10599() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006300l); }
@Test
public void test10600() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0x000000000000c600l); }
@Test
public void test10601() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006300l); }
@Test
public void test10602() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffff9d00l; AssertJUnit.assertEquals("multiply", result, 0xbc2aa2e2bc2af900l); }
@Test
public void test10603() { x = 0x000000007fffffffl; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000006300000000l); }
@Test
public void test10604() { x = 0x0000000080000000l; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10605() { x = 0x00000000ffffffffl; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006300000000l); }
@Test
public void test10606() { x = 0x000000017fffffffl; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000006300000000l); }
@Test
public void test10607() { x = 0x0000000180000000l; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10608() { x = 0x00000001ffffffffl; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006300000000l); }
@Test
public void test10609() { x = 0xffffffff7fffffffl; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000006300000000l); }
@Test
public void test10610() { x = 0xffffffff80000000l; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10611() { x = 0x00000001deadf00dl; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0xe2bc2af900000000l); }
@Test
public void test10612() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0xe2bc2af900000000l); }
@Test
public void test10613() { x = 0x7fffffffffffffffl; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006300000000l); }
@Test
public void test10614() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000006300000000l); }
@Test
public void test10615() { x = 0x7fffffff80000000l; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10616() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0xe2bc2af900000000l); }
@Test
public void test10617() { x = 0x8000000000000000l; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10618() { x = 0xffffffffffffffffl; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006300000000l); }
@Test
public void test10619() { x = 0xfffffffffffffffel; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c600000000l); }
@Test
public void test10620() { x = 0xefffffffffffffffl; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006300000000l); }
@Test
public void test10621() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff9d00000000l; AssertJUnit.assertEquals("multiply", result, 0xe2bc2af900000000l); }
@Test
public void test10622() { x = 0x000000007fffffffl; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000031800000000l); }
@Test
public void test10623() { x = 0x0000000080000000l; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10624() { x = 0x00000000ffffffffl; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000031800000000l); }
@Test
public void test10625() { x = 0x000000017fffffffl; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000031800000000l); }
@Test
public void test10626() { x = 0x0000000180000000l; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10627() { x = 0x00000001ffffffffl; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000031800000000l); }
@Test
public void test10628() { x = 0xffffffff7fffffffl; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000031800000000l); }
@Test
public void test10629() { x = 0xffffffff80000000l; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10630() { x = 0x00000001deadf00dl; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x15e157c800000000l); }
@Test
public void test10631() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x15e157c800000000l); }
@Test
public void test10632() { x = 0x7fffffffffffffffl; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000031800000000l); }
@Test
public void test10633() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000031800000000l); }
@Test
public void test10634() { x = 0x7fffffff80000000l; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10635() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x15e157c800000000l); }
@Test
public void test10636() { x = 0x8000000000000000l; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10637() { x = 0xffffffffffffffffl; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000031800000000l); }
@Test
public void test10638() { x = 0xfffffffffffffffel; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000063000000000l); }
@Test
public void test10639() { x = 0xefffffffffffffffl; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000031800000000l); }
@Test
public void test10640() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffce800000000l; AssertJUnit.assertEquals("multiply", result, 0x15e157c800000000l); }
@Test
public void test10641() { x = 0x000000007fffffffl; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0x00000032ffffff9al); }
@Test
public void test10642() { x = 0x0000000080000000l; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0x0000003300000000l); }
@Test
public void test10643() { x = 0x00000000ffffffffl; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0x00000065ffffff9al); }
@Test
public void test10644() { x = 0x000000017fffffffl; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0x00000098ffffff9al); }
@Test
public void test10645() { x = 0x0000000180000000l; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0x0000009900000000l); }
@Test
public void test10646() { x = 0x00000001ffffffffl; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0x000000cbffffff9al); }
@Test
public void test10647() { x = 0xffffffff7fffffffl; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0xffffffccffffff9al); }
@Test
public void test10648() { x = 0xffffffff80000000l; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0xffffffcd00000000l); }
@Test
public void test10649() { x = 0x00000001deadf00dl; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0x000000beb94da52el); }
@Test
public void test10650() { x = 0xffffffffdeadf00dl; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0xfffffff2b94da52el); }
@Test
public void test10651() { x = 0x7fffffffffffffffl; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff9al); }
@Test
public void test10652() { x = 0x7fffffff7fffffffl; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0xffffffccffffff9al); }
@Test
public void test10653() { x = 0x7fffffff80000000l; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0xffffffcd00000000l); }
@Test
public void test10654() { x = 0x7fffffffdeadf00dl; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0xfffffff2b94da52el); }
@Test
public void test10655() { x = 0x8000000000000000l; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10656() { x = 0xffffffffffffffffl; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff9al); }
@Test
public void test10657() { x = 0xfffffffffffffffel; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff34l); }
@Test
public void test10658() { x = 0xefffffffffffffffl; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0x9fffffffffffff9al); }
@Test
public void test10659() { x = 0xdeadf00ddeadf00dl; long result = x * 0x66l; AssertJUnit.assertEquals("multiply", result, 0xb94da586b94da52el); }
@Test
public void test10660() { x = 0x000000007fffffffl; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0x00000197fffffcd0l); }
@Test
public void test10661() { x = 0x0000000080000000l; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000000l); }
@Test
public void test10662() { x = 0x00000000ffffffffl; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0x0000032ffffffcd0l); }
@Test
public void test10663() { x = 0x000000017fffffffl; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0x000004c7fffffcd0l); }
@Test
public void test10664() { x = 0x0000000180000000l; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0x000004c800000000l); }
@Test
public void test10665() { x = 0x00000001ffffffffl; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0x0000065ffffffcd0l); }
@Test
public void test10666() { x = 0xffffffff7fffffffl; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0xfffffe67fffffcd0l); }
@Test
public void test10667() { x = 0xffffffff80000000l; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000000l); }
@Test
public void test10668() { x = 0x00000001deadf00dl; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0x000005f5ca6d2970l); }
@Test
public void test10669() { x = 0xffffffffdeadf00dl; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0xffffff95ca6d2970l); }
@Test
public void test10670() { x = 0x7fffffffffffffffl; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffcd0l); }
@Test
public void test10671() { x = 0x7fffffff7fffffffl; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0xfffffe67fffffcd0l); }
@Test
public void test10672() { x = 0x7fffffff80000000l; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000000l); }
@Test
public void test10673() { x = 0x7fffffffdeadf00dl; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0xffffff95ca6d2970l); }
@Test
public void test10674() { x = 0x8000000000000000l; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10675() { x = 0xffffffffffffffffl; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffcd0l); }
@Test
public void test10676() { x = 0xfffffffffffffffel; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff9a0l); }
@Test
public void test10677() { x = 0xefffffffffffffffl; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffcd0l); }
@Test
public void test10678() { x = 0xdeadf00ddeadf00dl; long result = x * 0x330l; AssertJUnit.assertEquals("multiply", result, 0xca6d2c35ca6d2970l); }
@Test
public void test10679() { x = 0x000000007fffffffl; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0x000032ffffff9a00l); }
@Test
public void test10680() { x = 0x0000000080000000l; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0x0000330000000000l); }
@Test
public void test10681() { x = 0x00000000ffffffffl; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0x000065ffffff9a00l); }
@Test
public void test10682() { x = 0x000000017fffffffl; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0x000098ffffff9a00l); }
@Test
public void test10683() { x = 0x0000000180000000l; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0x0000990000000000l); }
@Test
public void test10684() { x = 0x00000001ffffffffl; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0x0000cbffffff9a00l); }
@Test
public void test10685() { x = 0xffffffff7fffffffl; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0xffffccffffff9a00l); }
@Test
public void test10686() { x = 0xffffffff80000000l; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0xffffcd0000000000l); }
@Test
public void test10687() { x = 0x00000001deadf00dl; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0x0000beb94da52e00l); }
@Test
public void test10688() { x = 0xffffffffdeadf00dl; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0xfffff2b94da52e00l); }
@Test
public void test10689() { x = 0x7fffffffffffffffl; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff9a00l); }
@Test
public void test10690() { x = 0x7fffffff7fffffffl; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0xffffccffffff9a00l); }
@Test
public void test10691() { x = 0x7fffffff80000000l; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0xffffcd0000000000l); }
@Test
public void test10692() { x = 0x7fffffffdeadf00dl; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0xfffff2b94da52e00l); }
@Test
public void test10693() { x = 0x8000000000000000l; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10694() { x = 0xffffffffffffffffl; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff9a00l); }
@Test
public void test10695() { x = 0xfffffffffffffffel; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff3400l); }
@Test
public void test10696() { x = 0xefffffffffffffffl; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff9a00l); }
@Test
public void test10697() { x = 0xdeadf00ddeadf00dl; long result = x * 0x6600l; AssertJUnit.assertEquals("multiply", result, 0x4da586b94da52e00l); }
@Test
public void test10698() { x = 0x000000007fffffffl; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9a00000000l); }
@Test
public void test10699() { x = 0x0000000080000000l; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10700() { x = 0x00000000ffffffffl; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9a00000000l); }
@Test
public void test10701() { x = 0x000000017fffffffl; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9a00000000l); }
@Test
public void test10702() { x = 0x0000000180000000l; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10703() { x = 0x00000001ffffffffl; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9a00000000l); }
@Test
public void test10704() { x = 0xffffffff7fffffffl; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9a00000000l); }
@Test
public void test10705() { x = 0xffffffff80000000l; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10706() { x = 0x00000001deadf00dl; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0xb94da52e00000000l); }
@Test
public void test10707() { x = 0xffffffffdeadf00dl; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0xb94da52e00000000l); }
@Test
public void test10708() { x = 0x7fffffffffffffffl; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9a00000000l); }
@Test
public void test10709() { x = 0x7fffffff7fffffffl; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9a00000000l); }
@Test
public void test10710() { x = 0x7fffffff80000000l; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10711() { x = 0x7fffffffdeadf00dl; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0xb94da52e00000000l); }
@Test
public void test10712() { x = 0x8000000000000000l; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10713() { x = 0xffffffffffffffffl; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9a00000000l); }
@Test
public void test10714() { x = 0xfffffffffffffffel; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff3400000000l); }
@Test
public void test10715() { x = 0xefffffffffffffffl; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff9a00000000l); }
@Test
public void test10716() { x = 0xdeadf00ddeadf00dl; long result = x * 0x6600000000l; AssertJUnit.assertEquals("multiply", result, 0xb94da52e00000000l); }
@Test
public void test10717() { x = 0x000000007fffffffl; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffcd000000000l); }
@Test
public void test10718() { x = 0x0000000080000000l; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10719() { x = 0x00000000ffffffffl; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffcd000000000l); }
@Test
public void test10720() { x = 0x000000017fffffffl; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffcd000000000l); }
@Test
public void test10721() { x = 0x0000000180000000l; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10722() { x = 0x00000001ffffffffl; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffcd000000000l); }
@Test
public void test10723() { x = 0xffffffff7fffffffl; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffcd000000000l); }
@Test
public void test10724() { x = 0xffffffff80000000l; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10725() { x = 0x00000001deadf00dl; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0xca6d297000000000l); }
@Test
public void test10726() { x = 0xffffffffdeadf00dl; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0xca6d297000000000l); }
@Test
public void test10727() { x = 0x7fffffffffffffffl; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffcd000000000l); }
@Test
public void test10728() { x = 0x7fffffff7fffffffl; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffcd000000000l); }
@Test
public void test10729() { x = 0x7fffffff80000000l; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10730() { x = 0x7fffffffdeadf00dl; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0xca6d297000000000l); }
@Test
public void test10731() { x = 0x8000000000000000l; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10732() { x = 0xffffffffffffffffl; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffcd000000000l); }
@Test
public void test10733() { x = 0xfffffffffffffffel; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff9a000000000l); }
@Test
public void test10734() { x = 0xefffffffffffffffl; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffcd000000000l); }
@Test
public void test10735() { x = 0xdeadf00ddeadf00dl; long result = x * 0x33000000000l; AssertJUnit.assertEquals("multiply", result, 0xca6d297000000000l); }
@Test
public void test10736() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0xffffffcd00000066l); }
@Test
public void test10737() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0xffffffcd00000000l); }
@Test
public void test10738() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0xffffff9a00000066l); }
@Test
public void test10739() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0xffffff6700000066l); }
@Test
public void test10740() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0xffffff6700000000l); }
@Test
public void test10741() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0xffffff3400000066l); }
@Test
public void test10742() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0x0000003300000066l); }
@Test
public void test10743() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0x0000003300000000l); }
@Test
public void test10744() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0xffffff4146b25ad2l); }
@Test
public void test10745() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0x0000000d46b25ad2l); }
@Test
public void test10746() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0x0000000000000066l); }
@Test
public void test10747() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0x0000003300000066l); }
@Test
public void test10748() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0x0000003300000000l); }
@Test
public void test10749() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0x0000000d46b25ad2l); }
@Test
public void test10750() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10751() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0x0000000000000066l); }
@Test
public void test10752() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0x00000000000000ccl); }
@Test
public void test10753() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0x6000000000000066l); }
@Test
public void test10754() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff9al; AssertJUnit.assertEquals("multiply", result, 0x46b25a7946b25ad2l); }
@Test
public void test10755() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000330l); }
@Test
public void test10756() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6800000000l); }
@Test
public void test10757() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0xfffffcd000000330l); }
@Test
public void test10758() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0xfffffb3800000330l); }
@Test
public void test10759() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0xfffffb3800000000l); }
@Test
public void test10760() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0xfffff9a000000330l); }
@Test
public void test10761() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000330l); }
@Test
public void test10762() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000000l); }
@Test
public void test10763() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0xfffffa0a3592d690l); }
@Test
public void test10764() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0x0000006a3592d690l); }
@Test
public void test10765() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000330l); }
@Test
public void test10766() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000330l); }
@Test
public void test10767() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0x0000019800000000l); }
@Test
public void test10768() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0x0000006a3592d690l); }
@Test
public void test10769() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10770() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000330l); }
@Test
public void test10771() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000660l); }
@Test
public void test10772() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000330l); }
@Test
public void test10773() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffcd0l; AssertJUnit.assertEquals("multiply", result, 0x3592d3ca3592d690l); }
@Test
public void test10774() { x = 0x000000007fffffffl; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0xffffcd0000006600l); }
@Test
public void test10775() { x = 0x0000000080000000l; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0xffffcd0000000000l); }
@Test
public void test10776() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0xffff9a0000006600l); }
@Test
public void test10777() { x = 0x000000017fffffffl; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0xffff670000006600l); }
@Test
public void test10778() { x = 0x0000000180000000l; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0xffff670000000000l); }
@Test
public void test10779() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0xffff340000006600l); }
@Test
public void test10780() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0x0000330000006600l); }
@Test
public void test10781() { x = 0xffffffff80000000l; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0x0000330000000000l); }
@Test
public void test10782() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0xffff4146b25ad200l); }
@Test
public void test10783() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0x00000d46b25ad200l); }
@Test
public void test10784() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006600l); }
@Test
public void test10785() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0x0000330000006600l); }
@Test
public void test10786() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0x0000330000000000l); }
@Test
public void test10787() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0x00000d46b25ad200l); }
@Test
public void test10788() { x = 0x8000000000000000l; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10789() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006600l); }
@Test
public void test10790() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0x000000000000cc00l); }
@Test
public void test10791() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006600l); }
@Test
public void test10792() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffff9a00l; AssertJUnit.assertEquals("multiply", result, 0xb25a7946b25ad200l); }
@Test
public void test10793() { x = 0x000000007fffffffl; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006600000000l); }
@Test
public void test10794() { x = 0x0000000080000000l; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10795() { x = 0x00000000ffffffffl; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006600000000l); }
@Test
public void test10796() { x = 0x000000017fffffffl; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006600000000l); }
@Test
public void test10797() { x = 0x0000000180000000l; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10798() { x = 0x00000001ffffffffl; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006600000000l); }
@Test
public void test10799() { x = 0xffffffff7fffffffl; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006600000000l); }
@Test
public void test10800() { x = 0xffffffff80000000l; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10801() { x = 0x00000001deadf00dl; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x46b25ad200000000l); }
@Test
public void test10802() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x46b25ad200000000l); }
@Test
public void test10803() { x = 0x7fffffffffffffffl; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006600000000l); }
@Test
public void test10804() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006600000000l); }
@Test
public void test10805() { x = 0x7fffffff80000000l; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10806() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x46b25ad200000000l); }
@Test
public void test10807() { x = 0x8000000000000000l; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10808() { x = 0xffffffffffffffffl; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006600000000l); }
@Test
public void test10809() { x = 0xfffffffffffffffel; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000cc00000000l); }
@Test
public void test10810() { x = 0xefffffffffffffffl; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006600000000l); }
@Test
public void test10811() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff9a00000000l; AssertJUnit.assertEquals("multiply", result, 0x46b25ad200000000l); }
@Test
public void test10812() { x = 0x000000007fffffffl; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000033000000000l); }
@Test
public void test10813() { x = 0x0000000080000000l; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10814() { x = 0x00000000ffffffffl; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000033000000000l); }
@Test
public void test10815() { x = 0x000000017fffffffl; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000033000000000l); }
@Test
public void test10816() { x = 0x0000000180000000l; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10817() { x = 0x00000001ffffffffl; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000033000000000l); }
@Test
public void test10818() { x = 0xffffffff7fffffffl; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000033000000000l); }
@Test
public void test10819() { x = 0xffffffff80000000l; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10820() { x = 0x00000001deadf00dl; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x3592d69000000000l); }
@Test
public void test10821() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x3592d69000000000l); }
@Test
public void test10822() { x = 0x7fffffffffffffffl; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000033000000000l); }
@Test
public void test10823() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000033000000000l); }
@Test
public void test10824() { x = 0x7fffffff80000000l; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10825() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x3592d69000000000l); }
@Test
public void test10826() { x = 0x8000000000000000l; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10827() { x = 0xffffffffffffffffl; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000033000000000l); }
@Test
public void test10828() { x = 0xfffffffffffffffel; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000066000000000l); }
@Test
public void test10829() { x = 0xefffffffffffffffl; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000033000000000l); }
@Test
public void test10830() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffcd000000000l; AssertJUnit.assertEquals("multiply", result, 0x3592d69000000000l); }
@Test
public void test10831() { x = 0x000000007fffffffl; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0x0000003e7fffff83l); }
@Test
public void test10832() { x = 0x0000000080000000l; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0x0000003e80000000l); }
@Test
public void test10833() { x = 0x00000000ffffffffl; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0x0000007cffffff83l); }
@Test
public void test10834() { x = 0x000000017fffffffl; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0x000000bb7fffff83l); }
@Test
public void test10835() { x = 0x0000000180000000l; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0x000000bb80000000l); }
@Test
public void test10836() { x = 0x00000001ffffffffl; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0x000000f9ffffff83l); }
@Test
public void test10837() { x = 0xffffffff7fffffffl; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0xffffffc17fffff83l); }
@Test
public void test10838() { x = 0xffffffff80000000l; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0xffffffc180000000l); }
@Test
public void test10839() { x = 0x00000001deadf00dl; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0x000000e9baee3659l); }
@Test
public void test10840() { x = 0xffffffffdeadf00dl; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0xffffffefbaee3659l); }
@Test
public void test10841() { x = 0x7fffffffffffffffl; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff83l); }
@Test
public void test10842() { x = 0x7fffffff7fffffffl; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0x7fffffc17fffff83l); }
@Test
public void test10843() { x = 0x7fffffff80000000l; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0x7fffffc180000000l); }
@Test
public void test10844() { x = 0x7fffffffdeadf00dl; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0x7fffffefbaee3659l); }
@Test
public void test10845() { x = 0x8000000000000000l; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10846() { x = 0xffffffffffffffffl; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff83l); }
@Test
public void test10847() { x = 0xfffffffffffffffel; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff06l); }
@Test
public void test10848() { x = 0xefffffffffffffffl; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0x2fffffffffffff83l); }
@Test
public void test10849() { x = 0xdeadf00ddeadf00dl; long result = x * 0x7dl; AssertJUnit.assertEquals("multiply", result, 0xbaee36c5baee3659l); }
@Test
public void test10850() { x = 0x000000007fffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x000001f3fffffc18l); }
@Test
public void test10851() { x = 0x0000000080000000l; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test10852() { x = 0x00000000ffffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x000003e7fffffc18l); }
@Test
public void test10853() { x = 0x000000017fffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x000005dbfffffc18l); }
@Test
public void test10854() { x = 0x0000000180000000l; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test10855() { x = 0x00000001ffffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x000007cffffffc18l); }
@Test
public void test10856() { x = 0xffffffff7fffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0bfffffc18l); }
@Test
public void test10857() { x = 0xffffffff80000000l; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test10858() { x = 0x00000001deadf00dl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x0000074dd771b2c8l); }
@Test
public void test10859() { x = 0xffffffffdeadf00dl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xffffff7dd771b2c8l); }
@Test
public void test10860() { x = 0x7fffffffffffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffc18l); }
@Test
public void test10861() { x = 0x7fffffff7fffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0bfffffc18l); }
@Test
public void test10862() { x = 0x7fffffff80000000l; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test10863() { x = 0x7fffffffdeadf00dl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xffffff7dd771b2c8l); }
@Test
public void test10864() { x = 0x8000000000000000l; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10865() { x = 0xffffffffffffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffc18l); }
@Test
public void test10866() { x = 0xfffffffffffffffel; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff830l); }
@Test
public void test10867() { x = 0xefffffffffffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffc18l); }
@Test
public void test10868() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xd771b62dd771b2c8l); }
@Test
public void test10869() { x = 0x000000007fffffffl; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0x00003e7fffff8300l); }
@Test
public void test10870() { x = 0x0000000080000000l; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000000000l); }
@Test
public void test10871() { x = 0x00000000ffffffffl; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0x00007cffffff8300l); }
@Test
public void test10872() { x = 0x000000017fffffffl; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0x0000bb7fffff8300l); }
@Test
public void test10873() { x = 0x0000000180000000l; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0x0000bb8000000000l); }
@Test
public void test10874() { x = 0x00000001ffffffffl; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0x0000f9ffffff8300l); }
@Test
public void test10875() { x = 0xffffffff7fffffffl; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0xffffc17fffff8300l); }
@Test
public void test10876() { x = 0xffffffff80000000l; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000000000l); }
@Test
public void test10877() { x = 0x00000001deadf00dl; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0x0000e9baee365900l); }
@Test
public void test10878() { x = 0xffffffffdeadf00dl; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0xffffefbaee365900l); }
@Test
public void test10879() { x = 0x7fffffffffffffffl; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff8300l); }
@Test
public void test10880() { x = 0x7fffffff7fffffffl; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0xffffc17fffff8300l); }
@Test
public void test10881() { x = 0x7fffffff80000000l; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000000000l); }
@Test
public void test10882() { x = 0x7fffffffdeadf00dl; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0xffffefbaee365900l); }
@Test
public void test10883() { x = 0x8000000000000000l; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10884() { x = 0xffffffffffffffffl; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff8300l); }
@Test
public void test10885() { x = 0xfffffffffffffffel; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff0600l); }
@Test
public void test10886() { x = 0xefffffffffffffffl; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff8300l); }
@Test
public void test10887() { x = 0xdeadf00ddeadf00dl; long result = x * 0x7d00l; AssertJUnit.assertEquals("multiply", result, 0xee36c5baee365900l); }
@Test
public void test10888() { x = 0x000000007fffffffl; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff8300000000l); }
@Test
public void test10889() { x = 0x0000000080000000l; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10890() { x = 0x00000000ffffffffl; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8300000000l); }
@Test
public void test10891() { x = 0x000000017fffffffl; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff8300000000l); }
@Test
public void test10892() { x = 0x0000000180000000l; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10893() { x = 0x00000001ffffffffl; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8300000000l); }
@Test
public void test10894() { x = 0xffffffff7fffffffl; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff8300000000l); }
@Test
public void test10895() { x = 0xffffffff80000000l; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10896() { x = 0x00000001deadf00dl; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0xbaee365900000000l); }
@Test
public void test10897() { x = 0xffffffffdeadf00dl; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0xbaee365900000000l); }
@Test
public void test10898() { x = 0x7fffffffffffffffl; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8300000000l); }
@Test
public void test10899() { x = 0x7fffffff7fffffffl; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff8300000000l); }
@Test
public void test10900() { x = 0x7fffffff80000000l; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10901() { x = 0x7fffffffdeadf00dl; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0xbaee365900000000l); }
@Test
public void test10902() { x = 0x8000000000000000l; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10903() { x = 0xffffffffffffffffl; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8300000000l); }
@Test
public void test10904() { x = 0xfffffffffffffffel; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0600000000l); }
@Test
public void test10905() { x = 0xefffffffffffffffl; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff8300000000l); }
@Test
public void test10906() { x = 0xdeadf00ddeadf00dl; long result = x * 0x7d00000000l; AssertJUnit.assertEquals("multiply", result, 0xbaee365900000000l); }
@Test
public void test10907() { x = 0x000000007fffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test10908() { x = 0x0000000080000000l; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10909() { x = 0x00000000ffffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test10910() { x = 0x000000017fffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test10911() { x = 0x0000000180000000l; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10912() { x = 0x00000001ffffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test10913() { x = 0xffffffff7fffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test10914() { x = 0xffffffff80000000l; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10915() { x = 0x00000001deadf00dl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xd771b2c800000000l); }
@Test
public void test10916() { x = 0xffffffffdeadf00dl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xd771b2c800000000l); }
@Test
public void test10917() { x = 0x7fffffffffffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test10918() { x = 0x7fffffff7fffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test10919() { x = 0x7fffffff80000000l; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10920() { x = 0x7fffffffdeadf00dl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xd771b2c800000000l); }
@Test
public void test10921() { x = 0x8000000000000000l; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10922() { x = 0xffffffffffffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test10923() { x = 0xfffffffffffffffel; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test10924() { x = 0xefffffffffffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test10925() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xd771b2c800000000l); }
@Test
public void test10926() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0xffffffc18000007dl); }
@Test
public void test10927() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0xffffffc180000000l); }
@Test
public void test10928() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0xffffff830000007dl); }
@Test
public void test10929() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0xffffff448000007dl); }
@Test
public void test10930() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0xffffff4480000000l); }
@Test
public void test10931() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0xffffff060000007dl); }
@Test
public void test10932() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0x0000003e8000007dl); }
@Test
public void test10933() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0x0000003e80000000l); }
@Test
public void test10934() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0xffffff164511c9a7l); }
@Test
public void test10935() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0x000000104511c9a7l); }
@Test
public void test10936() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0x800000000000007dl); }
@Test
public void test10937() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0x8000003e8000007dl); }
@Test
public void test10938() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0x8000003e80000000l); }
@Test
public void test10939() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0x800000104511c9a7l); }
@Test
public void test10940() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10941() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0x000000000000007dl); }
@Test
public void test10942() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000fal); }
@Test
public void test10943() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0xd00000000000007dl); }
@Test
public void test10944() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff83l; AssertJUnit.assertEquals("multiply", result, 0x4511c93a4511c9a7l); }
@Test
public void test10945() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c000003e8l); }
@Test
public void test10946() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test10947() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0xfffffc18000003e8l); }
@Test
public void test10948() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0xfffffa24000003e8l); }
@Test
public void test10949() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test10950() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0xfffff830000003e8l); }
@Test
public void test10951() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x000001f4000003e8l); }
@Test
public void test10952() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test10953() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0xfffff8b2288e4d38l); }
@Test
public void test10954() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x00000082288e4d38l); }
@Test
public void test10955() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x00000000000003e8l); }
@Test
public void test10956() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x000001f4000003e8l); }
@Test
public void test10957() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test10958() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x00000082288e4d38l); }
@Test
public void test10959() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10960() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x00000000000003e8l); }
@Test
public void test10961() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x00000000000007d0l); }
@Test
public void test10962() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x80000000000003e8l); }
@Test
public void test10963() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x288e49d2288e4d38l); }
@Test
public void test10964() { x = 0x000000007fffffffl; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000007d00l); }
@Test
public void test10965() { x = 0x0000000080000000l; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000000000l); }
@Test
public void test10966() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0xffff830000007d00l); }
@Test
public void test10967() { x = 0x000000017fffffffl; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0xffff448000007d00l); }
@Test
public void test10968() { x = 0x0000000180000000l; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0xffff448000000000l); }
@Test
public void test10969() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0xffff060000007d00l); }
@Test
public void test10970() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000007d00l); }
@Test
public void test10971() { x = 0xffffffff80000000l; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000000000l); }
@Test
public void test10972() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0xffff164511c9a700l); }
@Test
public void test10973() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0x0000104511c9a700l); }
@Test
public void test10974() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000007d00l); }
@Test
public void test10975() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000007d00l); }
@Test
public void test10976() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000000000l); }
@Test
public void test10977() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0x0000104511c9a700l); }
@Test
public void test10978() { x = 0x8000000000000000l; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10979() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000007d00l); }
@Test
public void test10980() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0x000000000000fa00l); }
@Test
public void test10981() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000007d00l); }
@Test
public void test10982() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffff8300l; AssertJUnit.assertEquals("multiply", result, 0x11c93a4511c9a700l); }
@Test
public void test10983() { x = 0x000000007fffffffl; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000007d00000000l); }
@Test
public void test10984() { x = 0x0000000080000000l; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10985() { x = 0x00000000ffffffffl; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007d00000000l); }
@Test
public void test10986() { x = 0x000000017fffffffl; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000007d00000000l); }
@Test
public void test10987() { x = 0x0000000180000000l; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10988() { x = 0x00000001ffffffffl; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007d00000000l); }
@Test
public void test10989() { x = 0xffffffff7fffffffl; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000007d00000000l); }
@Test
public void test10990() { x = 0xffffffff80000000l; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10991() { x = 0x00000001deadf00dl; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x4511c9a700000000l); }
@Test
public void test10992() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x4511c9a700000000l); }
@Test
public void test10993() { x = 0x7fffffffffffffffl; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007d00000000l); }
@Test
public void test10994() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000007d00000000l); }
@Test
public void test10995() { x = 0x7fffffff80000000l; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test10996() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x4511c9a700000000l); }
@Test
public void test10997() { x = 0x8000000000000000l; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test10998() { x = 0xffffffffffffffffl; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007d00000000l); }
@Test
public void test10999() { x = 0xfffffffffffffffel; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x000000fa00000000l); }
@Test
public void test11000() { x = 0xefffffffffffffffl; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000007d00000000l); }
@Test
public void test11001() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff8300000000l; AssertJUnit.assertEquals("multiply", result, 0x4511c9a700000000l); }
@Test
public void test11002() { x = 0x000000007fffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test11003() { x = 0x0000000080000000l; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11004() { x = 0x00000000ffffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test11005() { x = 0x000000017fffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test11006() { x = 0x0000000180000000l; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11007() { x = 0x00000001ffffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test11008() { x = 0xffffffff7fffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test11009() { x = 0xffffffff80000000l; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11010() { x = 0x00000001deadf00dl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x288e4d3800000000l); }
@Test
public void test11011() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x288e4d3800000000l); }
@Test
public void test11012() { x = 0x7fffffffffffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test11013() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test11014() { x = 0x7fffffff80000000l; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11015() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x288e4d3800000000l); }
@Test
public void test11016() { x = 0x8000000000000000l; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11017() { x = 0xffffffffffffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test11018() { x = 0xfffffffffffffffel; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test11019() { x = 0xefffffffffffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test11020() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x288e4d3800000000l); }
@Test
public void test11021() { x = 0x000000007fffffffl; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0x000000707fffff1fl); }
@Test
public void test11022() { x = 0x0000000080000000l; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0x0000007080000000l); }
@Test
public void test11023() { x = 0x00000000ffffffffl; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0x000000e0ffffff1fl); }
@Test
public void test11024() { x = 0x000000017fffffffl; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0x000001517fffff1fl); }
@Test
public void test11025() { x = 0x0000000180000000l; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0x0000015180000000l); }
@Test
public void test11026() { x = 0x00000001ffffffffl; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0x000001c1ffffff1fl); }
@Test
public void test11027() { x = 0xffffffff7fffffffl; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0xffffff8f7fffff1fl); }
@Test
public void test11028() { x = 0xffffffff80000000l; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0xffffff8f80000000l); }
@Test
public void test11029() { x = 0x00000001deadf00dl; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0x000001a4b6dffb6dl); }
@Test
public void test11030() { x = 0xffffffffdeadf00dl; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0xffffffe2b6dffb6dl); }
@Test
public void test11031() { x = 0x7fffffffffffffffl; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff1fl); }
@Test
public void test11032() { x = 0x7fffffff7fffffffl; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0x7fffff8f7fffff1fl); }
@Test
public void test11033() { x = 0x7fffffff80000000l; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0x7fffff8f80000000l); }
@Test
public void test11034() { x = 0x7fffffffdeadf00dl; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe2b6dffb6dl); }
@Test
public void test11035() { x = 0x8000000000000000l; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11036() { x = 0xffffffffffffffffl; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff1fl); }
@Test
public void test11037() { x = 0xfffffffffffffffel; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe3el); }
@Test
public void test11038() { x = 0xefffffffffffffffl; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0xefffffffffffff1fl); }
@Test
public void test11039() { x = 0xdeadf00ddeadf00dl; long result = x * 0xe1l; AssertJUnit.assertEquals("multiply", result, 0xb6dffc30b6dffb6dl); }
@Test
public void test11040() { x = 0x000000007fffffffl; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0x00000383fffff8f8l); }
@Test
public void test11041() { x = 0x0000000080000000l; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0x0000038400000000l); }
@Test
public void test11042() { x = 0x00000000ffffffffl; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0x00000707fffff8f8l); }
@Test
public void test11043() { x = 0x000000017fffffffl; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0x00000a8bfffff8f8l); }
@Test
public void test11044() { x = 0x0000000180000000l; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0x00000a8c00000000l); }
@Test
public void test11045() { x = 0x00000001ffffffffl; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0x00000e0ffffff8f8l); }
@Test
public void test11046() { x = 0xffffffff7fffffffl; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0xfffffc7bfffff8f8l); }
@Test
public void test11047() { x = 0xffffffff80000000l; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0xfffffc7c00000000l); }
@Test
public void test11048() { x = 0x00000001deadf00dl; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0x00000d25b6ffdb68l); }
@Test
public void test11049() { x = 0xffffffffdeadf00dl; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0xffffff15b6ffdb68l); }
@Test
public void test11050() { x = 0x7fffffffffffffffl; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff8f8l); }
@Test
public void test11051() { x = 0x7fffffff7fffffffl; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0xfffffc7bfffff8f8l); }
@Test
public void test11052() { x = 0x7fffffff80000000l; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0xfffffc7c00000000l); }
@Test
public void test11053() { x = 0x7fffffffdeadf00dl; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0xffffff15b6ffdb68l); }
@Test
public void test11054() { x = 0x8000000000000000l; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11055() { x = 0xffffffffffffffffl; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff8f8l); }
@Test
public void test11056() { x = 0xfffffffffffffffel; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff1f0l); }
@Test
public void test11057() { x = 0xefffffffffffffffl; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffff8f8l); }
@Test
public void test11058() { x = 0xdeadf00ddeadf00dl; long result = x * 0x708l; AssertJUnit.assertEquals("multiply", result, 0xb6ffe185b6ffdb68l); }
@Test
public void test11059() { x = 0x000000007fffffffl; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0x0000707fffff1f00l); }
@Test
public void test11060() { x = 0x0000000080000000l; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0x0000708000000000l); }
@Test
public void test11061() { x = 0x00000000ffffffffl; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0x0000e0ffffff1f00l); }
@Test
public void test11062() { x = 0x000000017fffffffl; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0x0001517fffff1f00l); }
@Test
public void test11063() { x = 0x0000000180000000l; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0x0001518000000000l); }
@Test
public void test11064() { x = 0x00000001ffffffffl; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0x0001c1ffffff1f00l); }
@Test
public void test11065() { x = 0xffffffff7fffffffl; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0xffff8f7fffff1f00l); }
@Test
public void test11066() { x = 0xffffffff80000000l; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0xffff8f8000000000l); }
@Test
public void test11067() { x = 0x00000001deadf00dl; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0x0001a4b6dffb6d00l); }
@Test
public void test11068() { x = 0xffffffffdeadf00dl; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0xffffe2b6dffb6d00l); }
@Test
public void test11069() { x = 0x7fffffffffffffffl; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff1f00l); }
@Test
public void test11070() { x = 0x7fffffff7fffffffl; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0xffff8f7fffff1f00l); }
@Test
public void test11071() { x = 0x7fffffff80000000l; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0xffff8f8000000000l); }
@Test
public void test11072() { x = 0x7fffffffdeadf00dl; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0xffffe2b6dffb6d00l); }
@Test
public void test11073() { x = 0x8000000000000000l; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11074() { x = 0xffffffffffffffffl; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff1f00l); }
@Test
public void test11075() { x = 0xfffffffffffffffel; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe3e00l); }
@Test
public void test11076() { x = 0xefffffffffffffffl; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff1f00l); }
@Test
public void test11077() { x = 0xdeadf00ddeadf00dl; long result = x * 0xe100l; AssertJUnit.assertEquals("multiply", result, 0xdffc30b6dffb6d00l); }
@Test
public void test11078() { x = 0x000000007fffffffl; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff1f00000000l); }
@Test
public void test11079() { x = 0x0000000080000000l; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11080() { x = 0x00000000ffffffffl; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1f00000000l); }
@Test
public void test11081() { x = 0x000000017fffffffl; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff1f00000000l); }
@Test
public void test11082() { x = 0x0000000180000000l; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11083() { x = 0x00000001ffffffffl; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1f00000000l); }
@Test
public void test11084() { x = 0xffffffff7fffffffl; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff1f00000000l); }
@Test
public void test11085() { x = 0xffffffff80000000l; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11086() { x = 0x00000001deadf00dl; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0xb6dffb6d00000000l); }
@Test
public void test11087() { x = 0xffffffffdeadf00dl; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0xb6dffb6d00000000l); }
@Test
public void test11088() { x = 0x7fffffffffffffffl; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1f00000000l); }
@Test
public void test11089() { x = 0x7fffffff7fffffffl; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff1f00000000l); }
@Test
public void test11090() { x = 0x7fffffff80000000l; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11091() { x = 0x7fffffffdeadf00dl; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0xb6dffb6d00000000l); }
@Test
public void test11092() { x = 0x8000000000000000l; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11093() { x = 0xffffffffffffffffl; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1f00000000l); }
@Test
public void test11094() { x = 0xfffffffffffffffel; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe3e00000000l); }
@Test
public void test11095() { x = 0xefffffffffffffffl; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff1f00000000l); }
@Test
public void test11096() { x = 0xdeadf00ddeadf00dl; long result = x * 0xe100000000l; AssertJUnit.assertEquals("multiply", result, 0xb6dffb6d00000000l); }
@Test
public void test11097() { x = 0x000000007fffffffl; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff8f800000000l); }
@Test
public void test11098() { x = 0x0000000080000000l; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11099() { x = 0x00000000ffffffffl; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff8f800000000l); }
@Test
public void test11100() { x = 0x000000017fffffffl; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff8f800000000l); }
@Test
public void test11101() { x = 0x0000000180000000l; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11102() { x = 0x00000001ffffffffl; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff8f800000000l); }
@Test
public void test11103() { x = 0xffffffff7fffffffl; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff8f800000000l); }
@Test
public void test11104() { x = 0xffffffff80000000l; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11105() { x = 0x00000001deadf00dl; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0xb6ffdb6800000000l); }
@Test
public void test11106() { x = 0xffffffffdeadf00dl; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0xb6ffdb6800000000l); }
@Test
public void test11107() { x = 0x7fffffffffffffffl; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff8f800000000l); }
@Test
public void test11108() { x = 0x7fffffff7fffffffl; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff8f800000000l); }
@Test
public void test11109() { x = 0x7fffffff80000000l; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11110() { x = 0x7fffffffdeadf00dl; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0xb6ffdb6800000000l); }
@Test
public void test11111() { x = 0x8000000000000000l; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11112() { x = 0xffffffffffffffffl; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff8f800000000l); }
@Test
public void test11113() { x = 0xfffffffffffffffel; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff1f000000000l); }
@Test
public void test11114() { x = 0xefffffffffffffffl; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff8f800000000l); }
@Test
public void test11115() { x = 0xdeadf00ddeadf00dl; long result = x * 0x70800000000l; AssertJUnit.assertEquals("multiply", result, 0xb6ffdb6800000000l); }
@Test
public void test11116() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0xffffff8f800000e1l); }
@Test
public void test11117() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0xffffff8f80000000l); }
@Test
public void test11118() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0xffffff1f000000e1l); }
@Test
public void test11119() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0xfffffeae800000e1l); }
@Test
public void test11120() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0xfffffeae80000000l); }
@Test
public void test11121() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0xfffffe3e000000e1l); }
@Test
public void test11122() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0x00000070800000e1l); }
@Test
public void test11123() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0x0000007080000000l); }
@Test
public void test11124() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0xfffffe5b49200493l); }
@Test
public void test11125() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0x0000001d49200493l); }
@Test
public void test11126() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0x80000000000000e1l); }
@Test
public void test11127() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0x80000070800000e1l); }
@Test
public void test11128() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0x8000007080000000l); }
@Test
public void test11129() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0x8000001d49200493l); }
@Test
public void test11130() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11131() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0x00000000000000e1l); }
@Test
public void test11132() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0x00000000000001c2l); }
@Test
public void test11133() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0x10000000000000e1l); }
@Test
public void test11134() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff1fl; AssertJUnit.assertEquals("multiply", result, 0x492003cf49200493l); }
@Test
public void test11135() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0xfffffc7c00000708l); }
@Test
public void test11136() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0xfffffc7c00000000l); }
@Test
public void test11137() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0xfffff8f800000708l); }
@Test
public void test11138() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0xfffff57400000708l); }
@Test
public void test11139() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0xfffff57400000000l); }
@Test
public void test11140() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0xfffff1f000000708l); }
@Test
public void test11141() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0x0000038400000708l); }
@Test
public void test11142() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0x0000038400000000l); }
@Test
public void test11143() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0xfffff2da49002498l); }
@Test
public void test11144() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0x000000ea49002498l); }
@Test
public void test11145() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000708l); }
@Test
public void test11146() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0x0000038400000708l); }
@Test
public void test11147() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0x0000038400000000l); }
@Test
public void test11148() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0x000000ea49002498l); }
@Test
public void test11149() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11150() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000708l); }
@Test
public void test11151() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000e10l); }
@Test
public void test11152() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000708l); }
@Test
public void test11153() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff8f8l; AssertJUnit.assertEquals("multiply", result, 0x49001e7a49002498l); }
@Test
public void test11154() { x = 0x000000007fffffffl; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0xffff8f800000e100l); }
@Test
public void test11155() { x = 0x0000000080000000l; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0xffff8f8000000000l); }
@Test
public void test11156() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0xffff1f000000e100l); }
@Test
public void test11157() { x = 0x000000017fffffffl; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0xfffeae800000e100l); }
@Test
public void test11158() { x = 0x0000000180000000l; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0xfffeae8000000000l); }
@Test
public void test11159() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0xfffe3e000000e100l); }
@Test
public void test11160() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0x000070800000e100l); }
@Test
public void test11161() { x = 0xffffffff80000000l; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0x0000708000000000l); }
@Test
public void test11162() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0xfffe5b4920049300l); }
@Test
public void test11163() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0x00001d4920049300l); }
@Test
public void test11164() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0x000000000000e100l); }
@Test
public void test11165() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0x000070800000e100l); }
@Test
public void test11166() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0x0000708000000000l); }
@Test
public void test11167() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0x00001d4920049300l); }
@Test
public void test11168() { x = 0x8000000000000000l; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11169() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0x000000000000e100l); }
@Test
public void test11170() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0x000000000001c200l); }
@Test
public void test11171() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0x000000000000e100l); }
@Test
public void test11172() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffff1f00l; AssertJUnit.assertEquals("multiply", result, 0x2003cf4920049300l); }
@Test
public void test11173() { x = 0x000000007fffffffl; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x800000e100000000l); }
@Test
public void test11174() { x = 0x0000000080000000l; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11175() { x = 0x00000000ffffffffl; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e100000000l); }
@Test
public void test11176() { x = 0x000000017fffffffl; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x800000e100000000l); }
@Test
public void test11177() { x = 0x0000000180000000l; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11178() { x = 0x00000001ffffffffl; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e100000000l); }
@Test
public void test11179() { x = 0xffffffff7fffffffl; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x800000e100000000l); }
@Test
public void test11180() { x = 0xffffffff80000000l; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11181() { x = 0x00000001deadf00dl; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x4920049300000000l); }
@Test
public void test11182() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x4920049300000000l); }
@Test
public void test11183() { x = 0x7fffffffffffffffl; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e100000000l); }
@Test
public void test11184() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x800000e100000000l); }
@Test
public void test11185() { x = 0x7fffffff80000000l; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11186() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x4920049300000000l); }
@Test
public void test11187() { x = 0x8000000000000000l; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11188() { x = 0xffffffffffffffffl; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e100000000l); }
@Test
public void test11189() { x = 0xfffffffffffffffel; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x000001c200000000l); }
@Test
public void test11190() { x = 0xefffffffffffffffl; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000e100000000l); }
@Test
public void test11191() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff1f00000000l; AssertJUnit.assertEquals("multiply", result, 0x4920049300000000l); }
@Test
public void test11192() { x = 0x000000007fffffffl; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000070800000000l); }
@Test
public void test11193() { x = 0x0000000080000000l; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11194() { x = 0x00000000ffffffffl; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000070800000000l); }
@Test
public void test11195() { x = 0x000000017fffffffl; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000070800000000l); }
@Test
public void test11196() { x = 0x0000000180000000l; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11197() { x = 0x00000001ffffffffl; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000070800000000l); }
@Test
public void test11198() { x = 0xffffffff7fffffffl; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000070800000000l); }
@Test
public void test11199() { x = 0xffffffff80000000l; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11200() { x = 0x00000001deadf00dl; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x4900249800000000l); }
@Test
public void test11201() { x = 0xffffffffdeadf00dl; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x4900249800000000l); }
@Test
public void test11202() { x = 0x7fffffffffffffffl; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000070800000000l); }
@Test
public void test11203() { x = 0x7fffffff7fffffffl; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000070800000000l); }
@Test
public void test11204() { x = 0x7fffffff80000000l; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11205() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x4900249800000000l); }
@Test
public void test11206() { x = 0x8000000000000000l; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11207() { x = 0xffffffffffffffffl; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000070800000000l); }
@Test
public void test11208() { x = 0xfffffffffffffffel; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000e1000000000l); }
@Test
public void test11209() { x = 0xefffffffffffffffl; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000070800000000l); }
@Test
public void test11210() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffff8f800000000l; AssertJUnit.assertEquals("multiply", result, 0x4900249800000000l); }
@Test
public void test11211() { x = 0x000000007fffffffl; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0x000000797fffff0dl); }
@Test
public void test11212() { x = 0x0000000080000000l; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0x0000007980000000l); }
@Test
public void test11213() { x = 0x00000000ffffffffl; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0x000000f2ffffff0dl); }
@Test
public void test11214() { x = 0x000000017fffffffl; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0x0000016c7fffff0dl); }
@Test
public void test11215() { x = 0x0000000180000000l; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0x0000016c80000000l); }
@Test
public void test11216() { x = 0x00000001ffffffffl; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0x000001e5ffffff0dl); }
@Test
public void test11217() { x = 0xffffffff7fffffffl; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0xffffff867fffff0dl); }
@Test
public void test11218() { x = 0xffffffff80000000l; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0xffffff8680000000l); }
@Test
public void test11219() { x = 0x00000001deadf00dl; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0x000001c65f1adc57l); }
@Test
public void test11220() { x = 0xffffffffdeadf00dl; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0xffffffe05f1adc57l); }
@Test
public void test11221() { x = 0x7fffffffffffffffl; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff0dl); }
@Test
public void test11222() { x = 0x7fffffff7fffffffl; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0x7fffff867fffff0dl); }
@Test
public void test11223() { x = 0x7fffffff80000000l; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0x7fffff8680000000l); }
@Test
public void test11224() { x = 0x7fffffffdeadf00dl; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0x7fffffe05f1adc57l); }
@Test
public void test11225() { x = 0x8000000000000000l; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11226() { x = 0xffffffffffffffffl; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff0dl); }
@Test
public void test11227() { x = 0xfffffffffffffffel; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe1al); }
@Test
public void test11228() { x = 0xefffffffffffffffl; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0xcfffffffffffff0dl); }
@Test
public void test11229() { x = 0xdeadf00ddeadf00dl; long result = x * 0xf3l; AssertJUnit.assertEquals("multiply", result, 0x5f1add2a5f1adc57l); }
@Test
public void test11230() { x = 0x000000007fffffffl; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0x000003cbfffff868l); }
@Test
public void test11231() { x = 0x0000000080000000l; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0x000003cc00000000l); }
@Test
public void test11232() { x = 0x00000000ffffffffl; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0x00000797fffff868l); }
@Test
public void test11233() { x = 0x000000017fffffffl; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0x00000b63fffff868l); }
@Test
public void test11234() { x = 0x0000000180000000l; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0x00000b6400000000l); }
@Test
public void test11235() { x = 0x00000001ffffffffl; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0x00000f2ffffff868l); }
@Test
public void test11236() { x = 0xffffffff7fffffffl; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0xfffffc33fffff868l); }
@Test
public void test11237() { x = 0xffffffff80000000l; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0xfffffc3400000000l); }
@Test
public void test11238() { x = 0x00000001deadf00dl; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0x00000e32f8d6e2b8l); }
@Test
public void test11239() { x = 0xffffffffdeadf00dl; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0xffffff02f8d6e2b8l); }
@Test
public void test11240() { x = 0x7fffffffffffffffl; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff868l); }
@Test
public void test11241() { x = 0x7fffffff7fffffffl; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0xfffffc33fffff868l); }
@Test
public void test11242() { x = 0x7fffffff80000000l; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0xfffffc3400000000l); }
@Test
public void test11243() { x = 0x7fffffffdeadf00dl; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0xffffff02f8d6e2b8l); }
@Test
public void test11244() { x = 0x8000000000000000l; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11245() { x = 0xffffffffffffffffl; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff868l); }
@Test
public void test11246() { x = 0xfffffffffffffffel; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff0d0l); }
@Test
public void test11247() { x = 0xefffffffffffffffl; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffff868l); }
@Test
public void test11248() { x = 0xdeadf00ddeadf00dl; long result = x * 0x798l; AssertJUnit.assertEquals("multiply", result, 0xf8d6e952f8d6e2b8l); }
@Test
public void test11249() { x = 0x000000007fffffffl; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0x0000797fffff0d00l); }
@Test
public void test11250() { x = 0x0000000080000000l; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0x0000798000000000l); }
@Test
public void test11251() { x = 0x00000000ffffffffl; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0x0000f2ffffff0d00l); }
@Test
public void test11252() { x = 0x000000017fffffffl; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0x00016c7fffff0d00l); }
@Test
public void test11253() { x = 0x0000000180000000l; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0x00016c8000000000l); }
@Test
public void test11254() { x = 0x00000001ffffffffl; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0x0001e5ffffff0d00l); }
@Test
public void test11255() { x = 0xffffffff7fffffffl; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0xffff867fffff0d00l); }
@Test
public void test11256() { x = 0xffffffff80000000l; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0xffff868000000000l); }
@Test
public void test11257() { x = 0x00000001deadf00dl; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0x0001c65f1adc5700l); }
@Test
public void test11258() { x = 0xffffffffdeadf00dl; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0xffffe05f1adc5700l); }
@Test
public void test11259() { x = 0x7fffffffffffffffl; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff0d00l); }
@Test
public void test11260() { x = 0x7fffffff7fffffffl; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0xffff867fffff0d00l); }
@Test
public void test11261() { x = 0x7fffffff80000000l; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0xffff868000000000l); }
@Test
public void test11262() { x = 0x7fffffffdeadf00dl; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0xffffe05f1adc5700l); }
@Test
public void test11263() { x = 0x8000000000000000l; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11264() { x = 0xffffffffffffffffl; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff0d00l); }
@Test
public void test11265() { x = 0xfffffffffffffffel; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe1a00l); }
@Test
public void test11266() { x = 0xefffffffffffffffl; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff0d00l); }
@Test
public void test11267() { x = 0xdeadf00ddeadf00dl; long result = x * 0xf300l; AssertJUnit.assertEquals("multiply", result, 0x1add2a5f1adc5700l); }
@Test
public void test11268() { x = 0x000000007fffffffl; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff0d00000000l); }
@Test
public void test11269() { x = 0x0000000080000000l; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11270() { x = 0x00000000ffffffffl; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0d00000000l); }
@Test
public void test11271() { x = 0x000000017fffffffl; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff0d00000000l); }
@Test
public void test11272() { x = 0x0000000180000000l; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11273() { x = 0x00000001ffffffffl; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0d00000000l); }
@Test
public void test11274() { x = 0xffffffff7fffffffl; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff0d00000000l); }
@Test
public void test11275() { x = 0xffffffff80000000l; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11276() { x = 0x00000001deadf00dl; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0x5f1adc5700000000l); }
@Test
public void test11277() { x = 0xffffffffdeadf00dl; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0x5f1adc5700000000l); }
@Test
public void test11278() { x = 0x7fffffffffffffffl; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0d00000000l); }
@Test
public void test11279() { x = 0x7fffffff7fffffffl; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffff0d00000000l); }
@Test
public void test11280() { x = 0x7fffffff80000000l; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11281() { x = 0x7fffffffdeadf00dl; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0x5f1adc5700000000l); }
@Test
public void test11282() { x = 0x8000000000000000l; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11283() { x = 0xffffffffffffffffl; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0d00000000l); }
@Test
public void test11284() { x = 0xfffffffffffffffel; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1a00000000l); }
@Test
public void test11285() { x = 0xefffffffffffffffl; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0d00000000l); }
@Test
public void test11286() { x = 0xdeadf00ddeadf00dl; long result = x * 0xf300000000l; AssertJUnit.assertEquals("multiply", result, 0x5f1adc5700000000l); }
@Test
public void test11287() { x = 0x000000007fffffffl; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff86800000000l); }
@Test
public void test11288() { x = 0x0000000080000000l; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11289() { x = 0x00000000ffffffffl; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff86800000000l); }
@Test
public void test11290() { x = 0x000000017fffffffl; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff86800000000l); }
@Test
public void test11291() { x = 0x0000000180000000l; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11292() { x = 0x00000001ffffffffl; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff86800000000l); }
@Test
public void test11293() { x = 0xffffffff7fffffffl; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff86800000000l); }
@Test
public void test11294() { x = 0xffffffff80000000l; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11295() { x = 0x00000001deadf00dl; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0xf8d6e2b800000000l); }
@Test
public void test11296() { x = 0xffffffffdeadf00dl; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0xf8d6e2b800000000l); }
@Test
public void test11297() { x = 0x7fffffffffffffffl; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff86800000000l); }
@Test
public void test11298() { x = 0x7fffffff7fffffffl; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff86800000000l); }
@Test
public void test11299() { x = 0x7fffffff80000000l; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11300() { x = 0x7fffffffdeadf00dl; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0xf8d6e2b800000000l); }
@Test
public void test11301() { x = 0x8000000000000000l; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11302() { x = 0xffffffffffffffffl; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff86800000000l); }
@Test
public void test11303() { x = 0xfffffffffffffffel; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff0d000000000l); }
@Test
public void test11304() { x = 0xefffffffffffffffl; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff86800000000l); }
@Test
public void test11305() { x = 0xdeadf00ddeadf00dl; long result = x * 0x79800000000l; AssertJUnit.assertEquals("multiply", result, 0xf8d6e2b800000000l); }
@Test
public void test11306() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0xffffff86800000f3l); }
@Test
public void test11307() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0xffffff8680000000l); }
@Test
public void test11308() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0xffffff0d000000f3l); }
@Test
public void test11309() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0xfffffe93800000f3l); }
@Test
public void test11310() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0xfffffe9380000000l); }
@Test
public void test11311() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0xfffffe1a000000f3l); }
@Test
public void test11312() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0x00000079800000f3l); }
@Test
public void test11313() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0x0000007980000000l); }
@Test
public void test11314() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0xfffffe39a0e523a9l); }
@Test
public void test11315() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0x0000001fa0e523a9l); }
@Test
public void test11316() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0x80000000000000f3l); }
@Test
public void test11317() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0x80000079800000f3l); }
@Test
public void test11318() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0x8000007980000000l); }
@Test
public void test11319() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0x8000001fa0e523a9l); }
@Test
public void test11320() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11321() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0x00000000000000f3l); }
@Test
public void test11322() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0x00000000000001e6l); }
@Test
public void test11323() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0x30000000000000f3l); }
@Test
public void test11324() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff0dl; AssertJUnit.assertEquals("multiply", result, 0xa0e522d5a0e523a9l); }
@Test
public void test11325() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0xfffffc3400000798l); }
@Test
public void test11326() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0xfffffc3400000000l); }
@Test
public void test11327() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0xfffff86800000798l); }
@Test
public void test11328() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0xfffff49c00000798l); }
@Test
public void test11329() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0xfffff49c00000000l); }
@Test
public void test11330() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0xfffff0d000000798l); }
@Test
public void test11331() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0x000003cc00000798l); }
@Test
public void test11332() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0x000003cc00000000l); }
@Test
public void test11333() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0xfffff1cd07291d48l); }
@Test
public void test11334() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0x000000fd07291d48l); }
@Test
public void test11335() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000798l); }
@Test
public void test11336() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0x000003cc00000798l); }
@Test
public void test11337() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0x000003cc00000000l); }
@Test
public void test11338() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0x000000fd07291d48l); }
@Test
public void test11339() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11340() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000798l); }
@Test
public void test11341() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000f30l); }
@Test
public void test11342() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000798l); }
@Test
public void test11343() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff868l; AssertJUnit.assertEquals("multiply", result, 0x072916ad07291d48l); }
@Test
public void test11344() { x = 0x000000007fffffffl; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0xffff86800000f300l); }
@Test
public void test11345() { x = 0x0000000080000000l; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0xffff868000000000l); }
@Test
public void test11346() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0xffff0d000000f300l); }
@Test
public void test11347() { x = 0x000000017fffffffl; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0xfffe93800000f300l); }
@Test
public void test11348() { x = 0x0000000180000000l; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0xfffe938000000000l); }
@Test
public void test11349() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0xfffe1a000000f300l); }
@Test
public void test11350() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0x000079800000f300l); }
@Test
public void test11351() { x = 0xffffffff80000000l; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0x0000798000000000l); }
@Test
public void test11352() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0xfffe39a0e523a900l); }
@Test
public void test11353() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0x00001fa0e523a900l); }
@Test
public void test11354() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0x000000000000f300l); }
@Test
public void test11355() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0x000079800000f300l); }
@Test
public void test11356() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0x0000798000000000l); }
@Test
public void test11357() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0x00001fa0e523a900l); }
@Test
public void test11358() { x = 0x8000000000000000l; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11359() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0x000000000000f300l); }
@Test
public void test11360() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0x000000000001e600l); }
@Test
public void test11361() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0x000000000000f300l); }
@Test
public void test11362() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffff0d00l; AssertJUnit.assertEquals("multiply", result, 0xe522d5a0e523a900l); }
@Test
public void test11363() { x = 0x000000007fffffffl; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x800000f300000000l); }
@Test
public void test11364() { x = 0x0000000080000000l; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11365() { x = 0x00000000ffffffffl; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f300000000l); }
@Test
public void test11366() { x = 0x000000017fffffffl; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x800000f300000000l); }
@Test
public void test11367() { x = 0x0000000180000000l; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11368() { x = 0x00000001ffffffffl; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f300000000l); }
@Test
public void test11369() { x = 0xffffffff7fffffffl; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x800000f300000000l); }
@Test
public void test11370() { x = 0xffffffff80000000l; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11371() { x = 0x00000001deadf00dl; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0xa0e523a900000000l); }
@Test
public void test11372() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0xa0e523a900000000l); }
@Test
public void test11373() { x = 0x7fffffffffffffffl; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f300000000l); }
@Test
public void test11374() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x800000f300000000l); }
@Test
public void test11375() { x = 0x7fffffff80000000l; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11376() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0xa0e523a900000000l); }
@Test
public void test11377() { x = 0x8000000000000000l; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11378() { x = 0xffffffffffffffffl; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f300000000l); }
@Test
public void test11379() { x = 0xfffffffffffffffel; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e600000000l); }
@Test
public void test11380() { x = 0xefffffffffffffffl; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0x000000f300000000l); }
@Test
public void test11381() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff0d00000000l; AssertJUnit.assertEquals("multiply", result, 0xa0e523a900000000l); }
@Test
public void test11382() { x = 0x000000007fffffffl; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000079800000000l); }
@Test
public void test11383() { x = 0x0000000080000000l; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11384() { x = 0x00000000ffffffffl; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000079800000000l); }
@Test
public void test11385() { x = 0x000000017fffffffl; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000079800000000l); }
@Test
public void test11386() { x = 0x0000000180000000l; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11387() { x = 0x00000001ffffffffl; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000079800000000l); }
@Test
public void test11388() { x = 0xffffffff7fffffffl; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000079800000000l); }
@Test
public void test11389() { x = 0xffffffff80000000l; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11390() { x = 0x00000001deadf00dl; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x07291d4800000000l); }
@Test
public void test11391() { x = 0xffffffffdeadf00dl; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x07291d4800000000l); }
@Test
public void test11392() { x = 0x7fffffffffffffffl; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000079800000000l); }
@Test
public void test11393() { x = 0x7fffffff7fffffffl; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000079800000000l); }
@Test
public void test11394() { x = 0x7fffffff80000000l; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11395() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x07291d4800000000l); }
@Test
public void test11396() { x = 0x8000000000000000l; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11397() { x = 0xffffffffffffffffl; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000079800000000l); }
@Test
public void test11398() { x = 0xfffffffffffffffel; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000f3000000000l); }
@Test
public void test11399() { x = 0xefffffffffffffffl; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000079800000000l); }
@Test
public void test11400() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffff86800000000l; AssertJUnit.assertEquals("multiply", result, 0x07291d4800000000l); }
@Test
public void test11401() { x = 0x000000007fffffffl; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0x0000007cffffff06l); }
@Test
public void test11402() { x = 0x0000000080000000l; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0x0000007d00000000l); }
@Test
public void test11403() { x = 0x00000000ffffffffl; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0x000000f9ffffff06l); }
@Test
public void test11404() { x = 0x000000017fffffffl; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0x00000176ffffff06l); }
@Test
public void test11405() { x = 0x0000000180000000l; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0x0000017700000000l); }
@Test
public void test11406() { x = 0x00000001ffffffffl; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0x000001f3ffffff06l); }
@Test
public void test11407() { x = 0xffffffff7fffffffl; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0xffffff82ffffff06l); }
@Test
public void test11408() { x = 0xffffffff80000000l; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0xffffff8300000000l); }
@Test
public void test11409() { x = 0x00000001deadf00dl; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0x000001d375dc6cb2l); }
@Test
public void test11410() { x = 0xffffffffdeadf00dl; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0xffffffdf75dc6cb2l); }
@Test
public void test11411() { x = 0x7fffffffffffffffl; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff06l); }
@Test
public void test11412() { x = 0x7fffffff7fffffffl; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0xffffff82ffffff06l); }
@Test
public void test11413() { x = 0x7fffffff80000000l; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0xffffff8300000000l); }
@Test
public void test11414() { x = 0x7fffffffdeadf00dl; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0xffffffdf75dc6cb2l); }
@Test
public void test11415() { x = 0x8000000000000000l; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11416() { x = 0xffffffffffffffffl; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff06l); }
@Test
public void test11417() { x = 0xfffffffffffffffel; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe0cl); }
@Test
public void test11418() { x = 0xefffffffffffffffl; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0x5fffffffffffff06l); }
@Test
public void test11419() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfal; AssertJUnit.assertEquals("multiply", result, 0x75dc6d8b75dc6cb2l); }
@Test
public void test11420() { x = 0x000000007fffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x000003e7fffff830l); }
@Test
public void test11421() { x = 0x0000000080000000l; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test11422() { x = 0x00000000ffffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x000007cffffff830l); }
@Test
public void test11423() { x = 0x000000017fffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x00000bb7fffff830l); }
@Test
public void test11424() { x = 0x0000000180000000l; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test11425() { x = 0x00000001ffffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x00000f9ffffff830l); }
@Test
public void test11426() { x = 0xffffffff7fffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffc17fffff830l); }
@Test
public void test11427() { x = 0xffffffff80000000l; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test11428() { x = 0x00000001deadf00dl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x00000e9baee36590l); }
@Test
public void test11429() { x = 0xffffffffdeadf00dl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffefbaee36590l); }
@Test
public void test11430() { x = 0x7fffffffffffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff830l); }
@Test
public void test11431() { x = 0x7fffffff7fffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffc17fffff830l); }
@Test
public void test11432() { x = 0x7fffffff80000000l; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test11433() { x = 0x7fffffffdeadf00dl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffefbaee36590l); }
@Test
public void test11434() { x = 0x8000000000000000l; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11435() { x = 0xffffffffffffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff830l); }
@Test
public void test11436() { x = 0xfffffffffffffffel; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff060l); }
@Test
public void test11437() { x = 0xefffffffffffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff830l); }
@Test
public void test11438() { x = 0xdeadf00ddeadf00dl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xaee36c5baee36590l); }
@Test
public void test11439() { x = 0x000000007fffffffl; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0x00007cffffff0600l); }
@Test
public void test11440() { x = 0x0000000080000000l; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0x00007d0000000000l); }
@Test
public void test11441() { x = 0x00000000ffffffffl; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0x0000f9ffffff0600l); }
@Test
public void test11442() { x = 0x000000017fffffffl; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0x000176ffffff0600l); }
@Test
public void test11443() { x = 0x0000000180000000l; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0x0001770000000000l); }
@Test
public void test11444() { x = 0x00000001ffffffffl; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0x0001f3ffffff0600l); }
@Test
public void test11445() { x = 0xffffffff7fffffffl; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0xffff82ffffff0600l); }
@Test
public void test11446() { x = 0xffffffff80000000l; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0xffff830000000000l); }
@Test
public void test11447() { x = 0x00000001deadf00dl; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0x0001d375dc6cb200l); }
@Test
public void test11448() { x = 0xffffffffdeadf00dl; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0xffffdf75dc6cb200l); }
@Test
public void test11449() { x = 0x7fffffffffffffffl; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff0600l); }
@Test
public void test11450() { x = 0x7fffffff7fffffffl; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0xffff82ffffff0600l); }
@Test
public void test11451() { x = 0x7fffffff80000000l; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0xffff830000000000l); }
@Test
public void test11452() { x = 0x7fffffffdeadf00dl; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0xffffdf75dc6cb200l); }
@Test
public void test11453() { x = 0x8000000000000000l; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11454() { x = 0xffffffffffffffffl; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff0600l); }
@Test
public void test11455() { x = 0xfffffffffffffffel; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe0c00l); }
@Test
public void test11456() { x = 0xefffffffffffffffl; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff0600l); }
@Test
public void test11457() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfa00l; AssertJUnit.assertEquals("multiply", result, 0xdc6d8b75dc6cb200l); }
@Test
public void test11458() { x = 0x000000007fffffffl; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0600000000l); }
@Test
public void test11459() { x = 0x0000000080000000l; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11460() { x = 0x00000000ffffffffl; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0600000000l); }
@Test
public void test11461() { x = 0x000000017fffffffl; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0600000000l); }
@Test
public void test11462() { x = 0x0000000180000000l; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11463() { x = 0x00000001ffffffffl; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0600000000l); }
@Test
public void test11464() { x = 0xffffffff7fffffffl; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0600000000l); }
@Test
public void test11465() { x = 0xffffffff80000000l; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11466() { x = 0x00000001deadf00dl; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0x75dc6cb200000000l); }
@Test
public void test11467() { x = 0xffffffffdeadf00dl; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0x75dc6cb200000000l); }
@Test
public void test11468() { x = 0x7fffffffffffffffl; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0600000000l); }
@Test
public void test11469() { x = 0x7fffffff7fffffffl; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0600000000l); }
@Test
public void test11470() { x = 0x7fffffff80000000l; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11471() { x = 0x7fffffffdeadf00dl; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0x75dc6cb200000000l); }
@Test
public void test11472() { x = 0x8000000000000000l; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11473() { x = 0xffffffffffffffffl; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0600000000l); }
@Test
public void test11474() { x = 0xfffffffffffffffel; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test11475() { x = 0xefffffffffffffffl; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff0600000000l); }
@Test
public void test11476() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfa00000000l; AssertJUnit.assertEquals("multiply", result, 0x75dc6cb200000000l); }
@Test
public void test11477() { x = 0x000000007fffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test11478() { x = 0x0000000080000000l; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11479() { x = 0x00000000ffffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test11480() { x = 0x000000017fffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test11481() { x = 0x0000000180000000l; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11482() { x = 0x00000001ffffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test11483() { x = 0xffffffff7fffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test11484() { x = 0xffffffff80000000l; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11485() { x = 0x00000001deadf00dl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xaee3659000000000l); }
@Test
public void test11486() { x = 0xffffffffdeadf00dl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xaee3659000000000l); }
@Test
public void test11487() { x = 0x7fffffffffffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test11488() { x = 0x7fffffff7fffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test11489() { x = 0x7fffffff80000000l; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11490() { x = 0x7fffffffdeadf00dl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xaee3659000000000l); }
@Test
public void test11491() { x = 0x8000000000000000l; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11492() { x = 0xffffffffffffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test11493() { x = 0xfffffffffffffffel; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000000l); }
@Test
public void test11494() { x = 0xefffffffffffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test11495() { x = 0xdeadf00ddeadf00dl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xaee3659000000000l); }
@Test
public void test11496() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0xffffff83000000fal); }
@Test
public void test11497() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0xffffff8300000000l); }
@Test
public void test11498() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0xffffff06000000fal); }
@Test
public void test11499() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0xfffffe89000000fal); }
@Test
public void test11500() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8900000000l); }
@Test
public void test11501() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c000000fal); }
@Test
public void test11502() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0x0000007d000000fal); }
@Test
public void test11503() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0x0000007d00000000l); }
@Test
public void test11504() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0xfffffe2c8a23934el); }
@Test
public void test11505() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0x000000208a23934el); }
@Test
public void test11506() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000fal); }
@Test
public void test11507() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0x0000007d000000fal); }
@Test
public void test11508() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0x0000007d00000000l); }
@Test
public void test11509() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0x000000208a23934el); }
@Test
public void test11510() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11511() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000fal); }
@Test
public void test11512() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001f4l); }
@Test
public void test11513() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0xa0000000000000fal); }
@Test
public void test11514() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff06l; AssertJUnit.assertEquals("multiply", result, 0x8a2392748a23934el); }
@Test
public void test11515() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0xfffffc18000007d0l); }
@Test
public void test11516() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test11517() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0xfffff830000007d0l); }
@Test
public void test11518() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0xfffff448000007d0l); }
@Test
public void test11519() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test11520() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0xfffff060000007d0l); }
@Test
public void test11521() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x000003e8000007d0l); }
@Test
public void test11522() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test11523() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0xfffff164511c9a70l); }
@Test
public void test11524() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x00000104511c9a70l); }
@Test
public void test11525() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x00000000000007d0l); }
@Test
public void test11526() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x000003e8000007d0l); }
@Test
public void test11527() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test11528() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x00000104511c9a70l); }
@Test
public void test11529() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11530() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x00000000000007d0l); }
@Test
public void test11531() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000fa0l); }
@Test
public void test11532() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x00000000000007d0l); }
@Test
public void test11533() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x511c93a4511c9a70l); }
@Test
public void test11534() { x = 0x000000007fffffffl; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0xffff83000000fa00l); }
@Test
public void test11535() { x = 0x0000000080000000l; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0xffff830000000000l); }
@Test
public void test11536() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0xffff06000000fa00l); }
@Test
public void test11537() { x = 0x000000017fffffffl; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0xfffe89000000fa00l); }
@Test
public void test11538() { x = 0x0000000180000000l; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0xfffe890000000000l); }
@Test
public void test11539() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0xfffe0c000000fa00l); }
@Test
public void test11540() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0x00007d000000fa00l); }
@Test
public void test11541() { x = 0xffffffff80000000l; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0x00007d0000000000l); }
@Test
public void test11542() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0xfffe2c8a23934e00l); }
@Test
public void test11543() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0x0000208a23934e00l); }
@Test
public void test11544() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0x000000000000fa00l); }
@Test
public void test11545() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0x00007d000000fa00l); }
@Test
public void test11546() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0x00007d0000000000l); }
@Test
public void test11547() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0x0000208a23934e00l); }
@Test
public void test11548() { x = 0x8000000000000000l; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11549() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0x000000000000fa00l); }
@Test
public void test11550() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0x000000000001f400l); }
@Test
public void test11551() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0x000000000000fa00l); }
@Test
public void test11552() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffff0600l; AssertJUnit.assertEquals("multiply", result, 0x2392748a23934e00l); }
@Test
public void test11553() { x = 0x000000007fffffffl; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x000000fa00000000l); }
@Test
public void test11554() { x = 0x0000000080000000l; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11555() { x = 0x00000000ffffffffl; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x000000fa00000000l); }
@Test
public void test11556() { x = 0x000000017fffffffl; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x000000fa00000000l); }
@Test
public void test11557() { x = 0x0000000180000000l; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11558() { x = 0x00000001ffffffffl; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x000000fa00000000l); }
@Test
public void test11559() { x = 0xffffffff7fffffffl; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x000000fa00000000l); }
@Test
public void test11560() { x = 0xffffffff80000000l; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11561() { x = 0x00000001deadf00dl; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x8a23934e00000000l); }
@Test
public void test11562() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x8a23934e00000000l); }
@Test
public void test11563() { x = 0x7fffffffffffffffl; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x000000fa00000000l); }
@Test
public void test11564() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x000000fa00000000l); }
@Test
public void test11565() { x = 0x7fffffff80000000l; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11566() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x8a23934e00000000l); }
@Test
public void test11567() { x = 0x8000000000000000l; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11568() { x = 0xffffffffffffffffl; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x000000fa00000000l); }
@Test
public void test11569() { x = 0xfffffffffffffffel; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test11570() { x = 0xefffffffffffffffl; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x000000fa00000000l); }
@Test
public void test11571() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff0600000000l; AssertJUnit.assertEquals("multiply", result, 0x8a23934e00000000l); }
@Test
public void test11572() { x = 0x000000007fffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test11573() { x = 0x0000000080000000l; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11574() { x = 0x00000000ffffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test11575() { x = 0x000000017fffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test11576() { x = 0x0000000180000000l; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11577() { x = 0x00000001ffffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test11578() { x = 0xffffffff7fffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test11579() { x = 0xffffffff80000000l; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11580() { x = 0x00000001deadf00dl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x511c9a7000000000l); }
@Test
public void test11581() { x = 0xffffffffdeadf00dl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x511c9a7000000000l); }
@Test
public void test11582() { x = 0x7fffffffffffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test11583() { x = 0x7fffffff7fffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test11584() { x = 0x7fffffff80000000l; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11585() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x511c9a7000000000l); }
@Test
public void test11586() { x = 0x8000000000000000l; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11587() { x = 0xffffffffffffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test11588() { x = 0xfffffffffffffffel; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000000000l); }
@Test
public void test11589() { x = 0xefffffffffffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test11590() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x511c9a7000000000l); }
@Test
public void test11591() { x = 0x000000007fffffffl; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0x000000aa7ffffeabl); }
@Test
public void test11592() { x = 0x0000000080000000l; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0x000000aa80000000l); }
@Test
public void test11593() { x = 0x00000000ffffffffl; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0x00000154fffffeabl); }
@Test
public void test11594() { x = 0x000000017fffffffl; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0x000001ff7ffffeabl); }
@Test
public void test11595() { x = 0x0000000180000000l; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0x000001ff80000000l); }
@Test
public void test11596() { x = 0x00000001ffffffffl; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0x000002a9fffffeabl); }
@Test
public void test11597() { x = 0xffffffff7fffffffl; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0xffffff557ffffeabl); }
@Test
public void test11598() { x = 0xffffffff80000000l; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0xffffff5580000000l); }
@Test
public void test11599() { x = 0x00000001deadf00dl; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0x0000027d9db0c151l); }
@Test
public void test11600() { x = 0xffffffffdeadf00dl; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0xffffffd39db0c151l); }
@Test
public void test11601() { x = 0x7fffffffffffffffl; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffeabl); }
@Test
public void test11602() { x = 0x7fffffff7fffffffl; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0x7fffff557ffffeabl); }
@Test
public void test11603() { x = 0x7fffffff80000000l; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0x7fffff5580000000l); }
@Test
public void test11604() { x = 0x7fffffffdeadf00dl; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0x7fffffd39db0c151l); }
@Test
public void test11605() { x = 0x8000000000000000l; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11606() { x = 0xffffffffffffffffl; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffeabl); }
@Test
public void test11607() { x = 0xfffffffffffffffel; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd56l); }
@Test
public void test11608() { x = 0xefffffffffffffffl; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0xaffffffffffffeabl); }
@Test
public void test11609() { x = 0xdeadf00ddeadf00dl; long result = x * 0x155l; AssertJUnit.assertEquals("multiply", result, 0x9db0c2799db0c151l); }
@Test
public void test11610() { x = 0x000000007fffffffl; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0x00000553fffff558l); }
@Test
public void test11611() { x = 0x0000000080000000l; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0x0000055400000000l); }
@Test
public void test11612() { x = 0x00000000ffffffffl; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0x00000aa7fffff558l); }
@Test
public void test11613() { x = 0x000000017fffffffl; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0x00000ffbfffff558l); }
@Test
public void test11614() { x = 0x0000000180000000l; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0x00000ffc00000000l); }
@Test
public void test11615() { x = 0x00000001ffffffffl; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0x0000154ffffff558l); }
@Test
public void test11616() { x = 0xffffffff7fffffffl; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0xfffffaabfffff558l); }
@Test
public void test11617() { x = 0xffffffff80000000l; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0xfffffaac00000000l); }
@Test
public void test11618() { x = 0x00000001deadf00dl; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0x000013eced860a88l); }
@Test
public void test11619() { x = 0xffffffffdeadf00dl; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9ced860a88l); }
@Test
public void test11620() { x = 0x7fffffffffffffffl; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff558l); }
@Test
public void test11621() { x = 0x7fffffff7fffffffl; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0xfffffaabfffff558l); }
@Test
public void test11622() { x = 0x7fffffff80000000l; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0xfffffaac00000000l); }
@Test
public void test11623() { x = 0x7fffffffdeadf00dl; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9ced860a88l); }
@Test
public void test11624() { x = 0x8000000000000000l; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11625() { x = 0xffffffffffffffffl; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff558l); }
@Test
public void test11626() { x = 0xfffffffffffffffel; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffeab0l); }
@Test
public void test11627() { x = 0xefffffffffffffffl; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffff558l); }
@Test
public void test11628() { x = 0xdeadf00ddeadf00dl; long result = x * 0xaa8l; AssertJUnit.assertEquals("multiply", result, 0xed8613cced860a88l); }
@Test
public void test11629() { x = 0x000000007fffffffl; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0x0000aa7ffffeab00l); }
@Test
public void test11630() { x = 0x0000000080000000l; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0x0000aa8000000000l); }
@Test
public void test11631() { x = 0x00000000ffffffffl; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0x000154fffffeab00l); }
@Test
public void test11632() { x = 0x000000017fffffffl; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0x0001ff7ffffeab00l); }
@Test
public void test11633() { x = 0x0000000180000000l; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0x0001ff8000000000l); }
@Test
public void test11634() { x = 0x00000001ffffffffl; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0x0002a9fffffeab00l); }
@Test
public void test11635() { x = 0xffffffff7fffffffl; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0xffff557ffffeab00l); }
@Test
public void test11636() { x = 0xffffffff80000000l; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0xffff558000000000l); }
@Test
public void test11637() { x = 0x00000001deadf00dl; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0x00027d9db0c15100l); }
@Test
public void test11638() { x = 0xffffffffdeadf00dl; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0xffffd39db0c15100l); }
@Test
public void test11639() { x = 0x7fffffffffffffffl; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffeab00l); }
@Test
public void test11640() { x = 0x7fffffff7fffffffl; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0xffff557ffffeab00l); }
@Test
public void test11641() { x = 0x7fffffff80000000l; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0xffff558000000000l); }
@Test
public void test11642() { x = 0x7fffffffdeadf00dl; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0xffffd39db0c15100l); }
@Test
public void test11643() { x = 0x8000000000000000l; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11644() { x = 0xffffffffffffffffl; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffeab00l); }
@Test
public void test11645() { x = 0xfffffffffffffffel; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffd5600l); }
@Test
public void test11646() { x = 0xefffffffffffffffl; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffeab00l); }
@Test
public void test11647() { x = 0xdeadf00ddeadf00dl; long result = x * 0x15500l; AssertJUnit.assertEquals("multiply", result, 0xb0c2799db0c15100l); }
@Test
public void test11648() { x = 0x000000007fffffffl; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffeab00000000l); }
@Test
public void test11649() { x = 0x0000000080000000l; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11650() { x = 0x00000000ffffffffl; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeab00000000l); }
@Test
public void test11651() { x = 0x000000017fffffffl; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffeab00000000l); }
@Test
public void test11652() { x = 0x0000000180000000l; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11653() { x = 0x00000001ffffffffl; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeab00000000l); }
@Test
public void test11654() { x = 0xffffffff7fffffffl; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffeab00000000l); }
@Test
public void test11655() { x = 0xffffffff80000000l; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11656() { x = 0x00000001deadf00dl; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0x9db0c15100000000l); }
@Test
public void test11657() { x = 0xffffffffdeadf00dl; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0x9db0c15100000000l); }
@Test
public void test11658() { x = 0x7fffffffffffffffl; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeab00000000l); }
@Test
public void test11659() { x = 0x7fffffff7fffffffl; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffeab00000000l); }
@Test
public void test11660() { x = 0x7fffffff80000000l; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11661() { x = 0x7fffffffdeadf00dl; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0x9db0c15100000000l); }
@Test
public void test11662() { x = 0x8000000000000000l; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11663() { x = 0xffffffffffffffffl; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeab00000000l); }
@Test
public void test11664() { x = 0xfffffffffffffffel; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd5600000000l); }
@Test
public void test11665() { x = 0xefffffffffffffffl; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeab00000000l); }
@Test
public void test11666() { x = 0xdeadf00ddeadf00dl; long result = x * 0x15500000000l; AssertJUnit.assertEquals("multiply", result, 0x9db0c15100000000l); }
@Test
public void test11667() { x = 0x000000007fffffffl; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55800000000l); }
@Test
public void test11668() { x = 0x0000000080000000l; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11669() { x = 0x00000000ffffffffl; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55800000000l); }
@Test
public void test11670() { x = 0x000000017fffffffl; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55800000000l); }
@Test
public void test11671() { x = 0x0000000180000000l; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11672() { x = 0x00000001ffffffffl; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55800000000l); }
@Test
public void test11673() { x = 0xffffffff7fffffffl; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55800000000l); }
@Test
public void test11674() { x = 0xffffffff80000000l; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11675() { x = 0x00000001deadf00dl; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0xed860a8800000000l); }
@Test
public void test11676() { x = 0xffffffffdeadf00dl; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0xed860a8800000000l); }
@Test
public void test11677() { x = 0x7fffffffffffffffl; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55800000000l); }
@Test
public void test11678() { x = 0x7fffffff7fffffffl; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55800000000l); }
@Test
public void test11679() { x = 0x7fffffff80000000l; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11680() { x = 0x7fffffffdeadf00dl; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0xed860a8800000000l); }
@Test
public void test11681() { x = 0x8000000000000000l; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11682() { x = 0xffffffffffffffffl; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55800000000l); }
@Test
public void test11683() { x = 0xfffffffffffffffel; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffeab000000000l); }
@Test
public void test11684() { x = 0xefffffffffffffffl; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55800000000l); }
@Test
public void test11685() { x = 0xdeadf00ddeadf00dl; long result = x * 0xaa800000000l; AssertJUnit.assertEquals("multiply", result, 0xed860a8800000000l); }
@Test
public void test11686() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0xffffff5580000155l); }
@Test
public void test11687() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0xffffff5580000000l); }
@Test
public void test11688() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0xfffffeab00000155l); }
@Test
public void test11689() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0xfffffe0080000155l); }
@Test
public void test11690() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0xfffffe0080000000l); }
@Test
public void test11691() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0xfffffd5600000155l); }
@Test
public void test11692() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0x000000aa80000155l); }
@Test
public void test11693() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0x000000aa80000000l); }
@Test
public void test11694() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0xfffffd82624f3eafl); }
@Test
public void test11695() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0x0000002c624f3eafl); }
@Test
public void test11696() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000155l); }
@Test
public void test11697() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0x800000aa80000155l); }
@Test
public void test11698() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0x800000aa80000000l); }
@Test
public void test11699() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0x8000002c624f3eafl); }
@Test
public void test11700() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11701() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000155l); }
@Test
public void test11702() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0x00000000000002aal); }
@Test
public void test11703() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0x5000000000000155l); }
@Test
public void test11704() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffeabl; AssertJUnit.assertEquals("multiply", result, 0x624f3d86624f3eafl); }
@Test
public void test11705() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0xfffffaac00000aa8l); }
@Test
public void test11706() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0xfffffaac00000000l); }
@Test
public void test11707() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0xfffff55800000aa8l); }
@Test
public void test11708() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0xfffff00400000aa8l); }
@Test
public void test11709() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0xfffff00400000000l); }
@Test
public void test11710() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0xffffeab000000aa8l); }
@Test
public void test11711() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0x0000055400000aa8l); }
@Test
public void test11712() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0x0000055400000000l); }
@Test
public void test11713() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0xffffec131279f578l); }
@Test
public void test11714() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0x000001631279f578l); }
@Test
public void test11715() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000aa8l); }
@Test
public void test11716() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0x0000055400000aa8l); }
@Test
public void test11717() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0x0000055400000000l); }
@Test
public void test11718() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0x000001631279f578l); }
@Test
public void test11719() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11720() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000aa8l); }
@Test
public void test11721() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001550l); }
@Test
public void test11722() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000aa8l); }
@Test
public void test11723() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff558l; AssertJUnit.assertEquals("multiply", result, 0x1279ec331279f578l); }
@Test
public void test11724() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0xffff558000015500l); }
@Test
public void test11725() { x = 0x0000000080000000l; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0xffff558000000000l); }
@Test
public void test11726() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0xfffeab0000015500l); }
@Test
public void test11727() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0xfffe008000015500l); }
@Test
public void test11728() { x = 0x0000000180000000l; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0xfffe008000000000l); }
@Test
public void test11729() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0xfffd560000015500l); }
@Test
public void test11730() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0x0000aa8000015500l); }
@Test
public void test11731() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0x0000aa8000000000l); }
@Test
public void test11732() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0xfffd82624f3eaf00l); }
@Test
public void test11733() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0x00002c624f3eaf00l); }
@Test
public void test11734() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000015500l); }
@Test
public void test11735() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0x0000aa8000015500l); }
@Test
public void test11736() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0x0000aa8000000000l); }
@Test
public void test11737() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0x00002c624f3eaf00l); }
@Test
public void test11738() { x = 0x8000000000000000l; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11739() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000015500l); }
@Test
public void test11740() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0x000000000002aa00l); }
@Test
public void test11741() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000015500l); }
@Test
public void test11742() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffeab00l; AssertJUnit.assertEquals("multiply", result, 0x4f3d86624f3eaf00l); }
@Test
public void test11743() { x = 0x000000007fffffffl; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000015500000000l); }
@Test
public void test11744() { x = 0x0000000080000000l; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11745() { x = 0x00000000ffffffffl; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015500000000l); }
@Test
public void test11746() { x = 0x000000017fffffffl; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000015500000000l); }
@Test
public void test11747() { x = 0x0000000180000000l; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11748() { x = 0x00000001ffffffffl; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015500000000l); }
@Test
public void test11749() { x = 0xffffffff7fffffffl; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000015500000000l); }
@Test
public void test11750() { x = 0xffffffff80000000l; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11751() { x = 0x00000001deadf00dl; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x624f3eaf00000000l); }
@Test
public void test11752() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x624f3eaf00000000l); }
@Test
public void test11753() { x = 0x7fffffffffffffffl; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015500000000l); }
@Test
public void test11754() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000015500000000l); }
@Test
public void test11755() { x = 0x7fffffff80000000l; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11756() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x624f3eaf00000000l); }
@Test
public void test11757() { x = 0x8000000000000000l; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11758() { x = 0xffffffffffffffffl; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015500000000l); }
@Test
public void test11759() { x = 0xfffffffffffffffel; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x000002aa00000000l); }
@Test
public void test11760() { x = 0xefffffffffffffffl; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015500000000l); }
@Test
public void test11761() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffeab00000000l; AssertJUnit.assertEquals("multiply", result, 0x624f3eaf00000000l); }
@Test
public void test11762() { x = 0x000000007fffffffl; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000aa800000000l); }
@Test
public void test11763() { x = 0x0000000080000000l; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11764() { x = 0x00000000ffffffffl; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000aa800000000l); }
@Test
public void test11765() { x = 0x000000017fffffffl; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000aa800000000l); }
@Test
public void test11766() { x = 0x0000000180000000l; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11767() { x = 0x00000001ffffffffl; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000aa800000000l); }
@Test
public void test11768() { x = 0xffffffff7fffffffl; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000aa800000000l); }
@Test
public void test11769() { x = 0xffffffff80000000l; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11770() { x = 0x00000001deadf00dl; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x1279f57800000000l); }
@Test
public void test11771() { x = 0xffffffffdeadf00dl; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x1279f57800000000l); }
@Test
public void test11772() { x = 0x7fffffffffffffffl; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000aa800000000l); }
@Test
public void test11773() { x = 0x7fffffff7fffffffl; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000aa800000000l); }
@Test
public void test11774() { x = 0x7fffffff80000000l; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11775() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x1279f57800000000l); }
@Test
public void test11776() { x = 0x8000000000000000l; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11777() { x = 0xffffffffffffffffl; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000aa800000000l); }
@Test
public void test11778() { x = 0xfffffffffffffffel; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000155000000000l); }
@Test
public void test11779() { x = 0xefffffffffffffffl; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000aa800000000l); }
@Test
public void test11780() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffff55800000000l; AssertJUnit.assertEquals("multiply", result, 0x1279f57800000000l); }
@Test
public void test11781() { x = 0x000000007fffffffl; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0x000000aafffffeaal); }
@Test
public void test11782() { x = 0x0000000080000000l; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0x000000ab00000000l); }
@Test
public void test11783() { x = 0x00000000ffffffffl; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0x00000155fffffeaal); }
@Test
public void test11784() { x = 0x000000017fffffffl; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0x00000200fffffeaal); }
@Test
public void test11785() { x = 0x0000000180000000l; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0x0000020100000000l); }
@Test
public void test11786() { x = 0x00000001ffffffffl; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0x000002abfffffeaal); }
@Test
public void test11787() { x = 0xffffffff7fffffffl; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0xffffff54fffffeaal); }
@Test
public void test11788() { x = 0xffffffff80000000l; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0xffffff5500000000l); }
@Test
public void test11789() { x = 0x00000001deadf00dl; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0x0000027f7c5eb15el); }
@Test
public void test11790() { x = 0xffffffffdeadf00dl; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0xffffffd37c5eb15el); }
@Test
public void test11791() { x = 0x7fffffffffffffffl; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffeaal); }
@Test
public void test11792() { x = 0x7fffffff7fffffffl; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0xffffff54fffffeaal); }
@Test
public void test11793() { x = 0x7fffffff80000000l; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0xffffff5500000000l); }
@Test
public void test11794() { x = 0x7fffffffdeadf00dl; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0xffffffd37c5eb15el); }
@Test
public void test11795() { x = 0x8000000000000000l; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11796() { x = 0xffffffffffffffffl; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffeaal); }
@Test
public void test11797() { x = 0xfffffffffffffffel; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd54l); }
@Test
public void test11798() { x = 0xefffffffffffffffl; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0x9ffffffffffffeaal); }
@Test
public void test11799() { x = 0xdeadf00ddeadf00dl; long result = x * 0x156l; AssertJUnit.assertEquals("multiply", result, 0x7c5eb2877c5eb15el); }
@Test
public void test11800() { x = 0x000000007fffffffl; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0x00000557fffff550l); }
@Test
public void test11801() { x = 0x0000000080000000l; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0x0000055800000000l); }
@Test
public void test11802() { x = 0x00000000ffffffffl; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0x00000aaffffff550l); }
@Test
public void test11803() { x = 0x000000017fffffffl; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0x00001007fffff550l); }
@Test
public void test11804() { x = 0x0000000180000000l; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0x0000100800000000l); }
@Test
public void test11805() { x = 0x00000001ffffffffl; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0x0000155ffffff550l); }
@Test
public void test11806() { x = 0xffffffff7fffffffl; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0xfffffaa7fffff550l); }
@Test
public void test11807() { x = 0xffffffff80000000l; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0xfffffaa800000000l); }
@Test
public void test11808() { x = 0x00000001deadf00dl; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0x000013fbe2f58af0l); }
@Test
public void test11809() { x = 0xffffffffdeadf00dl; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9be2f58af0l); }
@Test
public void test11810() { x = 0x7fffffffffffffffl; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff550l); }
@Test
public void test11811() { x = 0x7fffffff7fffffffl; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0xfffffaa7fffff550l); }
@Test
public void test11812() { x = 0x7fffffff80000000l; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0xfffffaa800000000l); }
@Test
public void test11813() { x = 0x7fffffffdeadf00dl; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9be2f58af0l); }
@Test
public void test11814() { x = 0x8000000000000000l; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11815() { x = 0xffffffffffffffffl; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff550l); }
@Test
public void test11816() { x = 0xfffffffffffffffel; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffeaa0l); }
@Test
public void test11817() { x = 0xefffffffffffffffl; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff550l); }
@Test
public void test11818() { x = 0xdeadf00ddeadf00dl; long result = x * 0xab0l; AssertJUnit.assertEquals("multiply", result, 0xe2f5943be2f58af0l); }
@Test
public void test11819() { x = 0x000000007fffffffl; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0x0000aafffffeaa00l); }
@Test
public void test11820() { x = 0x0000000080000000l; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0x0000ab0000000000l); }
@Test
public void test11821() { x = 0x00000000ffffffffl; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0x000155fffffeaa00l); }
@Test
public void test11822() { x = 0x000000017fffffffl; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0x000200fffffeaa00l); }
@Test
public void test11823() { x = 0x0000000180000000l; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0x0002010000000000l); }
@Test
public void test11824() { x = 0x00000001ffffffffl; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0x0002abfffffeaa00l); }
@Test
public void test11825() { x = 0xffffffff7fffffffl; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0xffff54fffffeaa00l); }
@Test
public void test11826() { x = 0xffffffff80000000l; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0xffff550000000000l); }
@Test
public void test11827() { x = 0x00000001deadf00dl; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0x00027f7c5eb15e00l); }
@Test
public void test11828() { x = 0xffffffffdeadf00dl; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0xffffd37c5eb15e00l); }
@Test
public void test11829() { x = 0x7fffffffffffffffl; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffeaa00l); }
@Test
public void test11830() { x = 0x7fffffff7fffffffl; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0xffff54fffffeaa00l); }
@Test
public void test11831() { x = 0x7fffffff80000000l; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0xffff550000000000l); }
@Test
public void test11832() { x = 0x7fffffffdeadf00dl; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0xffffd37c5eb15e00l); }
@Test
public void test11833() { x = 0x8000000000000000l; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11834() { x = 0xffffffffffffffffl; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffeaa00l); }
@Test
public void test11835() { x = 0xfffffffffffffffel; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffd5400l); }
@Test
public void test11836() { x = 0xefffffffffffffffl; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffeaa00l); }
@Test
public void test11837() { x = 0xdeadf00ddeadf00dl; long result = x * 0x15600l; AssertJUnit.assertEquals("multiply", result, 0x5eb2877c5eb15e00l); }
@Test
public void test11838() { x = 0x000000007fffffffl; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeaa00000000l); }
@Test
public void test11839() { x = 0x0000000080000000l; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11840() { x = 0x00000000ffffffffl; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeaa00000000l); }
@Test
public void test11841() { x = 0x000000017fffffffl; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeaa00000000l); }
@Test
public void test11842() { x = 0x0000000180000000l; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11843() { x = 0x00000001ffffffffl; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeaa00000000l); }
@Test
public void test11844() { x = 0xffffffff7fffffffl; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeaa00000000l); }
@Test
public void test11845() { x = 0xffffffff80000000l; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11846() { x = 0x00000001deadf00dl; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0x7c5eb15e00000000l); }
@Test
public void test11847() { x = 0xffffffffdeadf00dl; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0x7c5eb15e00000000l); }
@Test
public void test11848() { x = 0x7fffffffffffffffl; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeaa00000000l); }
@Test
public void test11849() { x = 0x7fffffff7fffffffl; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeaa00000000l); }
@Test
public void test11850() { x = 0x7fffffff80000000l; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11851() { x = 0x7fffffffdeadf00dl; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0x7c5eb15e00000000l); }
@Test
public void test11852() { x = 0x8000000000000000l; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11853() { x = 0xffffffffffffffffl; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeaa00000000l); }
@Test
public void test11854() { x = 0xfffffffffffffffel; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd5400000000l); }
@Test
public void test11855() { x = 0xefffffffffffffffl; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffeaa00000000l); }
@Test
public void test11856() { x = 0xdeadf00ddeadf00dl; long result = x * 0x15600000000l; AssertJUnit.assertEquals("multiply", result, 0x7c5eb15e00000000l); }
@Test
public void test11857() { x = 0x000000007fffffffl; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55000000000l); }
@Test
public void test11858() { x = 0x0000000080000000l; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11859() { x = 0x00000000ffffffffl; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55000000000l); }
@Test
public void test11860() { x = 0x000000017fffffffl; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55000000000l); }
@Test
public void test11861() { x = 0x0000000180000000l; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11862() { x = 0x00000001ffffffffl; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55000000000l); }
@Test
public void test11863() { x = 0xffffffff7fffffffl; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55000000000l); }
@Test
public void test11864() { x = 0xffffffff80000000l; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11865() { x = 0x00000001deadf00dl; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0xe2f58af000000000l); }
@Test
public void test11866() { x = 0xffffffffdeadf00dl; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0xe2f58af000000000l); }
@Test
public void test11867() { x = 0x7fffffffffffffffl; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55000000000l); }
@Test
public void test11868() { x = 0x7fffffff7fffffffl; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55000000000l); }
@Test
public void test11869() { x = 0x7fffffff80000000l; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11870() { x = 0x7fffffffdeadf00dl; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0xe2f58af000000000l); }
@Test
public void test11871() { x = 0x8000000000000000l; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11872() { x = 0xffffffffffffffffl; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55000000000l); }
@Test
public void test11873() { x = 0xfffffffffffffffel; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffeaa000000000l); }
@Test
public void test11874() { x = 0xefffffffffffffffl; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff55000000000l); }
@Test
public void test11875() { x = 0xdeadf00ddeadf00dl; long result = x * 0xab000000000l; AssertJUnit.assertEquals("multiply", result, 0xe2f58af000000000l); }
@Test
public void test11876() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0xffffff5500000156l); }
@Test
public void test11877() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0xffffff5500000000l); }
@Test
public void test11878() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0xfffffeaa00000156l); }
@Test
public void test11879() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0xfffffdff00000156l); }
@Test
public void test11880() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0xfffffdff00000000l); }
@Test
public void test11881() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0xfffffd5400000156l); }
@Test
public void test11882() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0x000000ab00000156l); }
@Test
public void test11883() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0x000000ab00000000l); }
@Test
public void test11884() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0xfffffd8083a14ea2l); }
@Test
public void test11885() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0x0000002c83a14ea2l); }
@Test
public void test11886() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000156l); }
@Test
public void test11887() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0x000000ab00000156l); }
@Test
public void test11888() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0x000000ab00000000l); }
@Test
public void test11889() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0x0000002c83a14ea2l); }
@Test
public void test11890() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11891() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000156l); }
@Test
public void test11892() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0x00000000000002acl); }
@Test
public void test11893() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0x6000000000000156l); }
@Test
public void test11894() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffeaal; AssertJUnit.assertEquals("multiply", result, 0x83a14d7883a14ea2l); }
@Test
public void test11895() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0xfffffaa800000ab0l); }
@Test
public void test11896() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0xfffffaa800000000l); }
@Test
public void test11897() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0xfffff55000000ab0l); }
@Test
public void test11898() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0xffffeff800000ab0l); }
@Test
public void test11899() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0xffffeff800000000l); }
@Test
public void test11900() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0xffffeaa000000ab0l); }
@Test
public void test11901() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0x0000055800000ab0l); }
@Test
public void test11902() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0x0000055800000000l); }
@Test
public void test11903() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0xffffec041d0a7510l); }
@Test
public void test11904() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0x000001641d0a7510l); }
@Test
public void test11905() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000ab0l); }
@Test
public void test11906() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0x0000055800000ab0l); }
@Test
public void test11907() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0x0000055800000000l); }
@Test
public void test11908() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0x000001641d0a7510l); }
@Test
public void test11909() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11910() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000ab0l); }
@Test
public void test11911() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001560l); }
@Test
public void test11912() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000ab0l); }
@Test
public void test11913() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff550l; AssertJUnit.assertEquals("multiply", result, 0x1d0a6bc41d0a7510l); }
@Test
public void test11914() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0xffff550000015600l); }
@Test
public void test11915() { x = 0x0000000080000000l; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0xffff550000000000l); }
@Test
public void test11916() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0xfffeaa0000015600l); }
@Test
public void test11917() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0xfffdff0000015600l); }
@Test
public void test11918() { x = 0x0000000180000000l; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0xfffdff0000000000l); }
@Test
public void test11919() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0xfffd540000015600l); }
@Test
public void test11920() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0x0000ab0000015600l); }
@Test
public void test11921() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0x0000ab0000000000l); }
@Test
public void test11922() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0xfffd8083a14ea200l); }
@Test
public void test11923() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0x00002c83a14ea200l); }
@Test
public void test11924() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000015600l); }
@Test
public void test11925() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0x0000ab0000015600l); }
@Test
public void test11926() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0x0000ab0000000000l); }
@Test
public void test11927() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0x00002c83a14ea200l); }
@Test
public void test11928() { x = 0x8000000000000000l; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11929() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000015600l); }
@Test
public void test11930() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0x000000000002ac00l); }
@Test
public void test11931() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000015600l); }
@Test
public void test11932() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffeaa00l; AssertJUnit.assertEquals("multiply", result, 0xa14d7883a14ea200l); }
@Test
public void test11933() { x = 0x000000007fffffffl; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015600000000l); }
@Test
public void test11934() { x = 0x0000000080000000l; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11935() { x = 0x00000000ffffffffl; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015600000000l); }
@Test
public void test11936() { x = 0x000000017fffffffl; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015600000000l); }
@Test
public void test11937() { x = 0x0000000180000000l; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11938() { x = 0x00000001ffffffffl; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015600000000l); }
@Test
public void test11939() { x = 0xffffffff7fffffffl; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015600000000l); }
@Test
public void test11940() { x = 0xffffffff80000000l; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11941() { x = 0x00000001deadf00dl; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x83a14ea200000000l); }
@Test
public void test11942() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x83a14ea200000000l); }
@Test
public void test11943() { x = 0x7fffffffffffffffl; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015600000000l); }
@Test
public void test11944() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015600000000l); }
@Test
public void test11945() { x = 0x7fffffff80000000l; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11946() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x83a14ea200000000l); }
@Test
public void test11947() { x = 0x8000000000000000l; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11948() { x = 0xffffffffffffffffl; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015600000000l); }
@Test
public void test11949() { x = 0xfffffffffffffffel; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x000002ac00000000l); }
@Test
public void test11950() { x = 0xefffffffffffffffl; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000015600000000l); }
@Test
public void test11951() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffeaa00000000l; AssertJUnit.assertEquals("multiply", result, 0x83a14ea200000000l); }
@Test
public void test11952() { x = 0x000000007fffffffl; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ab000000000l); }
@Test
public void test11953() { x = 0x0000000080000000l; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11954() { x = 0x00000000ffffffffl; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ab000000000l); }
@Test
public void test11955() { x = 0x000000017fffffffl; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ab000000000l); }
@Test
public void test11956() { x = 0x0000000180000000l; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11957() { x = 0x00000001ffffffffl; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ab000000000l); }
@Test
public void test11958() { x = 0xffffffff7fffffffl; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ab000000000l); }
@Test
public void test11959() { x = 0xffffffff80000000l; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11960() { x = 0x00000001deadf00dl; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x1d0a751000000000l); }
@Test
public void test11961() { x = 0xffffffffdeadf00dl; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x1d0a751000000000l); }
@Test
public void test11962() { x = 0x7fffffffffffffffl; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ab000000000l); }
@Test
public void test11963() { x = 0x7fffffff7fffffffl; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ab000000000l); }
@Test
public void test11964() { x = 0x7fffffff80000000l; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11965() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x1d0a751000000000l); }
@Test
public void test11966() { x = 0x8000000000000000l; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test11967() { x = 0xffffffffffffffffl; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ab000000000l); }
@Test
public void test11968() { x = 0xfffffffffffffffel; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000156000000000l); }
@Test
public void test11969() { x = 0xefffffffffffffffl; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ab000000000l); }
@Test
public void test11970() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffff55000000000l; AssertJUnit.assertEquals("multiply", result, 0x1d0a751000000000l); }
@Test
public void test11971() { x = 0x000000007fffffffl; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0x000000b67ffffe93l); }
@Test
public void test11972() { x = 0x0000000080000000l; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0x000000b680000000l); }
@Test
public void test11973() { x = 0x00000000ffffffffl; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0x0000016cfffffe93l); }
@Test
public void test11974() { x = 0x000000017fffffffl; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0x000002237ffffe93l); }
@Test
public void test11975() { x = 0x0000000180000000l; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0x0000022380000000l); }
@Test
public void test11976() { x = 0x00000001ffffffffl; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0x000002d9fffffe93l); }
@Test
public void test11977() { x = 0xffffffff7fffffffl; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0xffffff497ffffe93l); }
@Test
public void test11978() { x = 0xffffffff80000000l; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0xffffff4980000000l); }
@Test
public void test11979() { x = 0x00000001deadf00dl; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0x000002aa7dff4289l); }
@Test
public void test11980() { x = 0xffffffffdeadf00dl; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0xffffffd07dff4289l); }
@Test
public void test11981() { x = 0x7fffffffffffffffl; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffe93l); }
@Test
public void test11982() { x = 0x7fffffff7fffffffl; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0x7fffff497ffffe93l); }
@Test
public void test11983() { x = 0x7fffffff80000000l; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0x7fffff4980000000l); }
@Test
public void test11984() { x = 0x7fffffffdeadf00dl; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0x7fffffd07dff4289l); }
@Test
public void test11985() { x = 0x8000000000000000l; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test11986() { x = 0xffffffffffffffffl; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe93l); }
@Test
public void test11987() { x = 0xfffffffffffffffel; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd26l); }
@Test
public void test11988() { x = 0xefffffffffffffffl; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0x2ffffffffffffe93l); }
@Test
public void test11989() { x = 0xdeadf00ddeadf00dl; long result = x * 0x16dl; AssertJUnit.assertEquals("multiply", result, 0x7dff43c67dff4289l); }
@Test
public void test11990() { x = 0x000000007fffffffl; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0x000005b3fffff498l); }
@Test
public void test11991() { x = 0x0000000080000000l; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0x000005b400000000l); }
@Test
public void test11992() { x = 0x00000000ffffffffl; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0x00000b67fffff498l); }
@Test
public void test11993() { x = 0x000000017fffffffl; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0x0000111bfffff498l); }
@Test
public void test11994() { x = 0x0000000180000000l; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0x0000111c00000000l); }
@Test
public void test11995() { x = 0x00000001ffffffffl; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0x000016cffffff498l); }
@Test
public void test11996() { x = 0xffffffff7fffffffl; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0xfffffa4bfffff498l); }
@Test
public void test11997() { x = 0xffffffff80000000l; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0xfffffa4c00000000l); }
@Test
public void test11998() { x = 0x00000001deadf00dl; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0x00001553effa1448l); }
@Test
public void test11999() { x = 0xffffffffdeadf00dl; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0xfffffe83effa1448l); }
@Test
public void test12000() { x = 0x7fffffffffffffffl; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff498l); }
@Test
public void test12001() { x = 0x7fffffff7fffffffl; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0xfffffa4bfffff498l); }
@Test
public void test12002() { x = 0x7fffffff80000000l; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0xfffffa4c00000000l); }
@Test
public void test12003() { x = 0x7fffffffdeadf00dl; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0xfffffe83effa1448l); }
@Test
public void test12004() { x = 0x8000000000000000l; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12005() { x = 0xffffffffffffffffl; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff498l); }
@Test
public void test12006() { x = 0xfffffffffffffffel; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe930l); }
@Test
public void test12007() { x = 0xefffffffffffffffl; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffff498l); }
@Test
public void test12008() { x = 0xdeadf00ddeadf00dl; long result = x * 0xb68l; AssertJUnit.assertEquals("multiply", result, 0xeffa1e33effa1448l); }
@Test
public void test12009() { x = 0x000000007fffffffl; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0x0000b67ffffe9300l); }
@Test
public void test12010() { x = 0x0000000080000000l; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0x0000b68000000000l); }
@Test
public void test12011() { x = 0x00000000ffffffffl; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0x00016cfffffe9300l); }
@Test
public void test12012() { x = 0x000000017fffffffl; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0x0002237ffffe9300l); }
@Test
public void test12013() { x = 0x0000000180000000l; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0x0002238000000000l); }
@Test
public void test12014() { x = 0x00000001ffffffffl; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0x0002d9fffffe9300l); }
@Test
public void test12015() { x = 0xffffffff7fffffffl; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0xffff497ffffe9300l); }
@Test
public void test12016() { x = 0xffffffff80000000l; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0xffff498000000000l); }
@Test
public void test12017() { x = 0x00000001deadf00dl; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0x0002aa7dff428900l); }
@Test
public void test12018() { x = 0xffffffffdeadf00dl; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0xffffd07dff428900l); }
@Test
public void test12019() { x = 0x7fffffffffffffffl; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe9300l); }
@Test
public void test12020() { x = 0x7fffffff7fffffffl; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0xffff497ffffe9300l); }
@Test
public void test12021() { x = 0x7fffffff80000000l; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0xffff498000000000l); }
@Test
public void test12022() { x = 0x7fffffffdeadf00dl; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0xffffd07dff428900l); }
@Test
public void test12023() { x = 0x8000000000000000l; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12024() { x = 0xffffffffffffffffl; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe9300l); }
@Test
public void test12025() { x = 0xfffffffffffffffel; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffd2600l); }
@Test
public void test12026() { x = 0xefffffffffffffffl; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe9300l); }
@Test
public void test12027() { x = 0xdeadf00ddeadf00dl; long result = x * 0x16d00l; AssertJUnit.assertEquals("multiply", result, 0xff43c67dff428900l); }
@Test
public void test12028() { x = 0x000000007fffffffl; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe9300000000l); }
@Test
public void test12029() { x = 0x0000000080000000l; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12030() { x = 0x00000000ffffffffl; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9300000000l); }
@Test
public void test12031() { x = 0x000000017fffffffl; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe9300000000l); }
@Test
public void test12032() { x = 0x0000000180000000l; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12033() { x = 0x00000001ffffffffl; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9300000000l); }
@Test
public void test12034() { x = 0xffffffff7fffffffl; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe9300000000l); }
@Test
public void test12035() { x = 0xffffffff80000000l; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12036() { x = 0x00000001deadf00dl; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7dff428900000000l); }
@Test
public void test12037() { x = 0xffffffffdeadf00dl; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7dff428900000000l); }
@Test
public void test12038() { x = 0x7fffffffffffffffl; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9300000000l); }
@Test
public void test12039() { x = 0x7fffffff7fffffffl; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe9300000000l); }
@Test
public void test12040() { x = 0x7fffffff80000000l; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12041() { x = 0x7fffffffdeadf00dl; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7dff428900000000l); }
@Test
public void test12042() { x = 0x8000000000000000l; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12043() { x = 0xffffffffffffffffl; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9300000000l); }
@Test
public void test12044() { x = 0xfffffffffffffffel; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd2600000000l); }
@Test
public void test12045() { x = 0xefffffffffffffffl; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9300000000l); }
@Test
public void test12046() { x = 0xdeadf00ddeadf00dl; long result = x * 0x16d00000000l; AssertJUnit.assertEquals("multiply", result, 0x7dff428900000000l); }
@Test
public void test12047() { x = 0x000000007fffffffl; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff49800000000l); }
@Test
public void test12048() { x = 0x0000000080000000l; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12049() { x = 0x00000000ffffffffl; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff49800000000l); }
@Test
public void test12050() { x = 0x000000017fffffffl; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff49800000000l); }
@Test
public void test12051() { x = 0x0000000180000000l; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12052() { x = 0x00000001ffffffffl; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff49800000000l); }
@Test
public void test12053() { x = 0xffffffff7fffffffl; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff49800000000l); }
@Test
public void test12054() { x = 0xffffffff80000000l; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12055() { x = 0x00000001deadf00dl; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0xeffa144800000000l); }
@Test
public void test12056() { x = 0xffffffffdeadf00dl; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0xeffa144800000000l); }
@Test
public void test12057() { x = 0x7fffffffffffffffl; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff49800000000l); }
@Test
public void test12058() { x = 0x7fffffff7fffffffl; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff49800000000l); }
@Test
public void test12059() { x = 0x7fffffff80000000l; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12060() { x = 0x7fffffffdeadf00dl; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0xeffa144800000000l); }
@Test
public void test12061() { x = 0x8000000000000000l; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12062() { x = 0xffffffffffffffffl; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff49800000000l); }
@Test
public void test12063() { x = 0xfffffffffffffffel; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe93000000000l); }
@Test
public void test12064() { x = 0xefffffffffffffffl; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff49800000000l); }
@Test
public void test12065() { x = 0xdeadf00ddeadf00dl; long result = x * 0xb6800000000l; AssertJUnit.assertEquals("multiply", result, 0xeffa144800000000l); }
@Test
public void test12066() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0xffffff498000016dl); }
@Test
public void test12067() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0xffffff4980000000l); }
@Test
public void test12068() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0xfffffe930000016dl); }
@Test
public void test12069() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0xfffffddc8000016dl); }
@Test
public void test12070() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0xfffffddc80000000l); }
@Test
public void test12071() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0xfffffd260000016dl); }
@Test
public void test12072() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0x000000b68000016dl); }
@Test
public void test12073() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0x000000b680000000l); }
@Test
public void test12074() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0xfffffd558200bd77l); }
@Test
public void test12075() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0x0000002f8200bd77l); }
@Test
public void test12076() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0x800000000000016dl); }
@Test
public void test12077() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0x800000b68000016dl); }
@Test
public void test12078() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0x800000b680000000l); }
@Test
public void test12079() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0x8000002f8200bd77l); }
@Test
public void test12080() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12081() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0x000000000000016dl); }
@Test
public void test12082() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0x00000000000002dal); }
@Test
public void test12083() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0xd00000000000016dl); }
@Test
public void test12084() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe93l; AssertJUnit.assertEquals("multiply", result, 0x8200bc398200bd77l); }
@Test
public void test12085() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0xfffffa4c00000b68l); }
@Test
public void test12086() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0xfffffa4c00000000l); }
@Test
public void test12087() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0xfffff49800000b68l); }
@Test
public void test12088() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0xffffeee400000b68l); }
@Test
public void test12089() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0xffffeee400000000l); }
@Test
public void test12090() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0xffffe93000000b68l); }
@Test
public void test12091() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0x000005b400000b68l); }
@Test
public void test12092() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0x000005b400000000l); }
@Test
public void test12093() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0xffffeaac1005ebb8l); }
@Test
public void test12094() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0x0000017c1005ebb8l); }
@Test
public void test12095() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000b68l); }
@Test
public void test12096() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0x000005b400000b68l); }
@Test
public void test12097() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0x000005b400000000l); }
@Test
public void test12098() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0x0000017c1005ebb8l); }
@Test
public void test12099() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12100() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000b68l); }
@Test
public void test12101() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0x00000000000016d0l); }
@Test
public void test12102() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000b68l); }
@Test
public void test12103() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff498l; AssertJUnit.assertEquals("multiply", result, 0x1005e1cc1005ebb8l); }
@Test
public void test12104() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0xffff498000016d00l); }
@Test
public void test12105() { x = 0x0000000080000000l; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0xffff498000000000l); }
@Test
public void test12106() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0xfffe930000016d00l); }
@Test
public void test12107() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0xfffddc8000016d00l); }
@Test
public void test12108() { x = 0x0000000180000000l; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0xfffddc8000000000l); }
@Test
public void test12109() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0xfffd260000016d00l); }
@Test
public void test12110() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0x0000b68000016d00l); }
@Test
public void test12111() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0x0000b68000000000l); }
@Test
public void test12112() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0xfffd558200bd7700l); }
@Test
public void test12113() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0x00002f8200bd7700l); }
@Test
public void test12114() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000016d00l); }
@Test
public void test12115() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0x0000b68000016d00l); }
@Test
public void test12116() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0x0000b68000000000l); }
@Test
public void test12117() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0x00002f8200bd7700l); }
@Test
public void test12118() { x = 0x8000000000000000l; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12119() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000016d00l); }
@Test
public void test12120() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0x000000000002da00l); }
@Test
public void test12121() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000016d00l); }
@Test
public void test12122() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffe9300l; AssertJUnit.assertEquals("multiply", result, 0x00bc398200bd7700l); }
@Test
public void test12123() { x = 0x000000007fffffffl; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000016d00000000l); }
@Test
public void test12124() { x = 0x0000000080000000l; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12125() { x = 0x00000000ffffffffl; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016d00000000l); }
@Test
public void test12126() { x = 0x000000017fffffffl; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000016d00000000l); }
@Test
public void test12127() { x = 0x0000000180000000l; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12128() { x = 0x00000001ffffffffl; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016d00000000l); }
@Test
public void test12129() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000016d00000000l); }
@Test
public void test12130() { x = 0xffffffff80000000l; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12131() { x = 0x00000001deadf00dl; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x8200bd7700000000l); }
@Test
public void test12132() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x8200bd7700000000l); }
@Test
public void test12133() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016d00000000l); }
@Test
public void test12134() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000016d00000000l); }
@Test
public void test12135() { x = 0x7fffffff80000000l; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12136() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x8200bd7700000000l); }
@Test
public void test12137() { x = 0x8000000000000000l; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12138() { x = 0xffffffffffffffffl; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016d00000000l); }
@Test
public void test12139() { x = 0xfffffffffffffffel; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x000002da00000000l); }
@Test
public void test12140() { x = 0xefffffffffffffffl; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000016d00000000l); }
@Test
public void test12141() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe9300000000l; AssertJUnit.assertEquals("multiply", result, 0x8200bd7700000000l); }
@Test
public void test12142() { x = 0x000000007fffffffl; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000b6800000000l); }
@Test
public void test12143() { x = 0x0000000080000000l; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12144() { x = 0x00000000ffffffffl; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000b6800000000l); }
@Test
public void test12145() { x = 0x000000017fffffffl; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000b6800000000l); }
@Test
public void test12146() { x = 0x0000000180000000l; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12147() { x = 0x00000001ffffffffl; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000b6800000000l); }
@Test
public void test12148() { x = 0xffffffff7fffffffl; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000b6800000000l); }
@Test
public void test12149() { x = 0xffffffff80000000l; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12150() { x = 0x00000001deadf00dl; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x1005ebb800000000l); }
@Test
public void test12151() { x = 0xffffffffdeadf00dl; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x1005ebb800000000l); }
@Test
public void test12152() { x = 0x7fffffffffffffffl; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000b6800000000l); }
@Test
public void test12153() { x = 0x7fffffff7fffffffl; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000b6800000000l); }
@Test
public void test12154() { x = 0x7fffffff80000000l; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12155() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x1005ebb800000000l); }
@Test
public void test12156() { x = 0x8000000000000000l; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12157() { x = 0xffffffffffffffffl; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000b6800000000l); }
@Test
public void test12158() { x = 0xfffffffffffffffel; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x000016d000000000l); }
@Test
public void test12159() { x = 0xefffffffffffffffl; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000b6800000000l); }
@Test
public void test12160() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffff49800000000l; AssertJUnit.assertEquals("multiply", result, 0x1005ebb800000000l); }
@Test
public void test12161() { x = 0x000000007fffffffl; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0x000000bb7ffffe89l); }
@Test
public void test12162() { x = 0x0000000080000000l; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0x000000bb80000000l); }
@Test
public void test12163() { x = 0x00000000ffffffffl; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0x00000176fffffe89l); }
@Test
public void test12164() { x = 0x000000017fffffffl; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0x000002327ffffe89l); }
@Test
public void test12165() { x = 0x0000000180000000l; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0x0000023280000000l); }
@Test
public void test12166() { x = 0x00000001ffffffffl; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0x000002edfffffe89l); }
@Test
public void test12167() { x = 0xffffffff7fffffffl; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0xffffff447ffffe89l); }
@Test
public void test12168() { x = 0xffffffff80000000l; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0xffffff4480000000l); }
@Test
public void test12169() { x = 0x00000001deadf00dl; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0x000002bd30caa30bl); }
@Test
public void test12170() { x = 0xffffffffdeadf00dl; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0xffffffcf30caa30bl); }
@Test
public void test12171() { x = 0x7fffffffffffffffl; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffe89l); }
@Test
public void test12172() { x = 0x7fffffff7fffffffl; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0x7fffff447ffffe89l); }
@Test
public void test12173() { x = 0x7fffffff80000000l; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0x7fffff4480000000l); }
@Test
public void test12174() { x = 0x7fffffffdeadf00dl; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0x7fffffcf30caa30bl); }
@Test
public void test12175() { x = 0x8000000000000000l; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12176() { x = 0xffffffffffffffffl; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe89l); }
@Test
public void test12177() { x = 0xfffffffffffffffel; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd12l); }
@Test
public void test12178() { x = 0xefffffffffffffffl; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0x8ffffffffffffe89l); }
@Test
public void test12179() { x = 0xdeadf00ddeadf00dl; long result = x * 0x177l; AssertJUnit.assertEquals("multiply", result, 0x30caa45130caa30bl); }
@Test
public void test12180() { x = 0x000000007fffffffl; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0x000005dbfffff448l); }
@Test
public void test12181() { x = 0x0000000080000000l; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test12182() { x = 0x00000000ffffffffl; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0x00000bb7fffff448l); }
@Test
public void test12183() { x = 0x000000017fffffffl; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0x00001193fffff448l); }
@Test
public void test12184() { x = 0x0000000180000000l; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0x0000119400000000l); }
@Test
public void test12185() { x = 0x00000001ffffffffl; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0x0000176ffffff448l); }
@Test
public void test12186() { x = 0xffffffff7fffffffl; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffa23fffff448l); }
@Test
public void test12187() { x = 0xffffffff80000000l; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test12188() { x = 0x00000001deadf00dl; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0x000015e986551858l); }
@Test
public void test12189() { x = 0xffffffffdeadf00dl; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7986551858l); }
@Test
public void test12190() { x = 0x7fffffffffffffffl; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff448l); }
@Test
public void test12191() { x = 0x7fffffff7fffffffl; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffa23fffff448l); }
@Test
public void test12192() { x = 0x7fffffff80000000l; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test12193() { x = 0x7fffffffdeadf00dl; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7986551858l); }
@Test
public void test12194() { x = 0x8000000000000000l; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12195() { x = 0xffffffffffffffffl; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff448l); }
@Test
public void test12196() { x = 0xfffffffffffffffel; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe890l); }
@Test
public void test12197() { x = 0xefffffffffffffffl; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffff448l); }
@Test
public void test12198() { x = 0xdeadf00ddeadf00dl; long result = x * 0xbb8l; AssertJUnit.assertEquals("multiply", result, 0x8655228986551858l); }
@Test
public void test12199() { x = 0x000000007fffffffl; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0x0000bb7ffffe8900l); }
@Test
public void test12200() { x = 0x0000000080000000l; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0x0000bb8000000000l); }
@Test
public void test12201() { x = 0x00000000ffffffffl; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0x000176fffffe8900l); }
@Test
public void test12202() { x = 0x000000017fffffffl; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0x0002327ffffe8900l); }
@Test
public void test12203() { x = 0x0000000180000000l; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0x0002328000000000l); }
@Test
public void test12204() { x = 0x00000001ffffffffl; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0x0002edfffffe8900l); }
@Test
public void test12205() { x = 0xffffffff7fffffffl; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0xffff447ffffe8900l); }
@Test
public void test12206() { x = 0xffffffff80000000l; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0xffff448000000000l); }
@Test
public void test12207() { x = 0x00000001deadf00dl; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0x0002bd30caa30b00l); }
@Test
public void test12208() { x = 0xffffffffdeadf00dl; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0xffffcf30caa30b00l); }
@Test
public void test12209() { x = 0x7fffffffffffffffl; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe8900l); }
@Test
public void test12210() { x = 0x7fffffff7fffffffl; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0xffff447ffffe8900l); }
@Test
public void test12211() { x = 0x7fffffff80000000l; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0xffff448000000000l); }
@Test
public void test12212() { x = 0x7fffffffdeadf00dl; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0xffffcf30caa30b00l); }
@Test
public void test12213() { x = 0x8000000000000000l; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12214() { x = 0xffffffffffffffffl; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe8900l); }
@Test
public void test12215() { x = 0xfffffffffffffffel; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffd1200l); }
@Test
public void test12216() { x = 0xefffffffffffffffl; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe8900l); }
@Test
public void test12217() { x = 0xdeadf00ddeadf00dl; long result = x * 0x17700l; AssertJUnit.assertEquals("multiply", result, 0xcaa45130caa30b00l); }
@Test
public void test12218() { x = 0x000000007fffffffl; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe8900000000l); }
@Test
public void test12219() { x = 0x0000000080000000l; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12220() { x = 0x00000000ffffffffl; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8900000000l); }
@Test
public void test12221() { x = 0x000000017fffffffl; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe8900000000l); }
@Test
public void test12222() { x = 0x0000000180000000l; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12223() { x = 0x00000001ffffffffl; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8900000000l); }
@Test
public void test12224() { x = 0xffffffff7fffffffl; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe8900000000l); }
@Test
public void test12225() { x = 0xffffffff80000000l; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12226() { x = 0x00000001deadf00dl; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0x30caa30b00000000l); }
@Test
public void test12227() { x = 0xffffffffdeadf00dl; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0x30caa30b00000000l); }
@Test
public void test12228() { x = 0x7fffffffffffffffl; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8900000000l); }
@Test
public void test12229() { x = 0x7fffffff7fffffffl; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe8900000000l); }
@Test
public void test12230() { x = 0x7fffffff80000000l; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12231() { x = 0x7fffffffdeadf00dl; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0x30caa30b00000000l); }
@Test
public void test12232() { x = 0x8000000000000000l; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12233() { x = 0xffffffffffffffffl; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8900000000l); }
@Test
public void test12234() { x = 0xfffffffffffffffel; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000000l); }
@Test
public void test12235() { x = 0xefffffffffffffffl; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8900000000l); }
@Test
public void test12236() { x = 0xdeadf00ddeadf00dl; long result = x * 0x17700000000l; AssertJUnit.assertEquals("multiply", result, 0x30caa30b00000000l); }
@Test
public void test12237() { x = 0x000000007fffffffl; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test12238() { x = 0x0000000080000000l; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12239() { x = 0x00000000ffffffffl; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test12240() { x = 0x000000017fffffffl; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test12241() { x = 0x0000000180000000l; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12242() { x = 0x00000001ffffffffl; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test12243() { x = 0xffffffff7fffffffl; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test12244() { x = 0xffffffff80000000l; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12245() { x = 0x00000001deadf00dl; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0x8655185800000000l); }
@Test
public void test12246() { x = 0xffffffffdeadf00dl; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0x8655185800000000l); }
@Test
public void test12247() { x = 0x7fffffffffffffffl; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test12248() { x = 0x7fffffff7fffffffl; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test12249() { x = 0x7fffffff80000000l; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12250() { x = 0x7fffffffdeadf00dl; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0x8655185800000000l); }
@Test
public void test12251() { x = 0x8000000000000000l; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12252() { x = 0xffffffffffffffffl; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test12253() { x = 0xfffffffffffffffel; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000000l); }
@Test
public void test12254() { x = 0xefffffffffffffffl; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test12255() { x = 0xdeadf00ddeadf00dl; long result = x * 0xbb800000000l; AssertJUnit.assertEquals("multiply", result, 0x8655185800000000l); }
@Test
public void test12256() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0xffffff4480000177l); }
@Test
public void test12257() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0xffffff4480000000l); }
@Test
public void test12258() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8900000177l); }
@Test
public void test12259() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0xfffffdcd80000177l); }
@Test
public void test12260() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0xfffffdcd80000000l); }
@Test
public void test12261() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000177l); }
@Test
public void test12262() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0x000000bb80000177l); }
@Test
public void test12263() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0x000000bb80000000l); }
@Test
public void test12264() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0xfffffd42cf355cf5l); }
@Test
public void test12265() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0x00000030cf355cf5l); }
@Test
public void test12266() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000177l); }
@Test
public void test12267() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0x800000bb80000177l); }
@Test
public void test12268() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0x800000bb80000000l); }
@Test
public void test12269() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0x80000030cf355cf5l); }
@Test
public void test12270() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12271() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000177l); }
@Test
public void test12272() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0x00000000000002eel); }
@Test
public void test12273() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0x7000000000000177l); }
@Test
public void test12274() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe89l; AssertJUnit.assertEquals("multiply", result, 0xcf355baecf355cf5l); }
@Test
public void test12275() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000bb8l); }
@Test
public void test12276() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test12277() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000bb8l); }
@Test
public void test12278() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000bb8l); }
@Test
public void test12279() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000000l); }
@Test
public void test12280() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000bb8l); }
@Test
public void test12281() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000bb8l); }
@Test
public void test12282() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test12283() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0xffffea1679aae7a8l); }
@Test
public void test12284() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0x0000018679aae7a8l); }
@Test
public void test12285() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000bb8l); }
@Test
public void test12286() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000bb8l); }
@Test
public void test12287() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test12288() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0x0000018679aae7a8l); }
@Test
public void test12289() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12290() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000bb8l); }
@Test
public void test12291() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001770l); }
@Test
public void test12292() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000bb8l); }
@Test
public void test12293() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff448l; AssertJUnit.assertEquals("multiply", result, 0x79aadd7679aae7a8l); }
@Test
public void test12294() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0xffff448000017700l); }
@Test
public void test12295() { x = 0x0000000080000000l; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0xffff448000000000l); }
@Test
public void test12296() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0xfffe890000017700l); }
@Test
public void test12297() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0xfffdcd8000017700l); }
@Test
public void test12298() { x = 0x0000000180000000l; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0xfffdcd8000000000l); }
@Test
public void test12299() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0xfffd120000017700l); }
@Test
public void test12300() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0x0000bb8000017700l); }
@Test
public void test12301() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0x0000bb8000000000l); }
@Test
public void test12302() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0xfffd42cf355cf500l); }
@Test
public void test12303() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0x000030cf355cf500l); }
@Test
public void test12304() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000017700l); }
@Test
public void test12305() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0x0000bb8000017700l); }
@Test
public void test12306() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0x0000bb8000000000l); }
@Test
public void test12307() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0x000030cf355cf500l); }
@Test
public void test12308() { x = 0x8000000000000000l; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12309() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000017700l); }
@Test
public void test12310() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0x000000000002ee00l); }
@Test
public void test12311() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000017700l); }
@Test
public void test12312() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffe8900l; AssertJUnit.assertEquals("multiply", result, 0x355baecf355cf500l); }
@Test
public void test12313() { x = 0x000000007fffffffl; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000017700000000l); }
@Test
public void test12314() { x = 0x0000000080000000l; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12315() { x = 0x00000000ffffffffl; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000017700000000l); }
@Test
public void test12316() { x = 0x000000017fffffffl; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000017700000000l); }
@Test
public void test12317() { x = 0x0000000180000000l; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12318() { x = 0x00000001ffffffffl; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000017700000000l); }
@Test
public void test12319() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000017700000000l); }
@Test
public void test12320() { x = 0xffffffff80000000l; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12321() { x = 0x00000001deadf00dl; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0xcf355cf500000000l); }
@Test
public void test12322() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0xcf355cf500000000l); }
@Test
public void test12323() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000017700000000l); }
@Test
public void test12324() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000017700000000l); }
@Test
public void test12325() { x = 0x7fffffff80000000l; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12326() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0xcf355cf500000000l); }
@Test
public void test12327() { x = 0x8000000000000000l; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12328() { x = 0xffffffffffffffffl; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000017700000000l); }
@Test
public void test12329() { x = 0xfffffffffffffffel; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x000002ee00000000l); }
@Test
public void test12330() { x = 0xefffffffffffffffl; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000017700000000l); }
@Test
public void test12331() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe8900000000l; AssertJUnit.assertEquals("multiply", result, 0xcf355cf500000000l); }
@Test
public void test12332() { x = 0x000000007fffffffl; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test12333() { x = 0x0000000080000000l; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12334() { x = 0x00000000ffffffffl; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test12335() { x = 0x000000017fffffffl; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test12336() { x = 0x0000000180000000l; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12337() { x = 0x00000001ffffffffl; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test12338() { x = 0xffffffff7fffffffl; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test12339() { x = 0xffffffff80000000l; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12340() { x = 0x00000001deadf00dl; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x79aae7a800000000l); }
@Test
public void test12341() { x = 0xffffffffdeadf00dl; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x79aae7a800000000l); }
@Test
public void test12342() { x = 0x7fffffffffffffffl; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test12343() { x = 0x7fffffff7fffffffl; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test12344() { x = 0x7fffffff80000000l; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12345() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x79aae7a800000000l); }
@Test
public void test12346() { x = 0x8000000000000000l; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12347() { x = 0xffffffffffffffffl; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test12348() { x = 0xfffffffffffffffel; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000177000000000l); }
@Test
public void test12349() { x = 0xefffffffffffffffl; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test12350() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffff44800000000l; AssertJUnit.assertEquals("multiply", result, 0x79aae7a800000000l); }
@Test
public void test12351() { x = 0x000000007fffffffl; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0x000000ca7ffffe6bl); }
@Test
public void test12352() { x = 0x0000000080000000l; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0x000000ca80000000l); }
@Test
public void test12353() { x = 0x00000000ffffffffl; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0x00000194fffffe6bl); }
@Test
public void test12354() { x = 0x000000017fffffffl; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0x0000025f7ffffe6bl); }
@Test
public void test12355() { x = 0x0000000180000000l; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0x0000025f80000000l); }
@Test
public void test12356() { x = 0x00000001ffffffffl; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0x00000329fffffe6bl); }
@Test
public void test12357() { x = 0xffffffff7fffffffl; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0xffffff357ffffe6bl); }
@Test
public void test12358() { x = 0xffffffff80000000l; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0xffffff3580000000l); }
@Test
public void test12359() { x = 0x00000001deadf00dl; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0x000002f5492cc491l); }
@Test
public void test12360() { x = 0xffffffffdeadf00dl; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0xffffffcb492cc491l); }
@Test
public void test12361() { x = 0x7fffffffffffffffl; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffe6bl); }
@Test
public void test12362() { x = 0x7fffffff7fffffffl; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0x7fffff357ffffe6bl); }
@Test
public void test12363() { x = 0x7fffffff80000000l; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0x7fffff3580000000l); }
@Test
public void test12364() { x = 0x7fffffffdeadf00dl; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0x7fffffcb492cc491l); }
@Test
public void test12365() { x = 0x8000000000000000l; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12366() { x = 0xffffffffffffffffl; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe6bl); }
@Test
public void test12367() { x = 0xfffffffffffffffel; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffcd6l); }
@Test
public void test12368() { x = 0xefffffffffffffffl; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0xaffffffffffffe6bl); }
@Test
public void test12369() { x = 0xdeadf00ddeadf00dl; long result = x * 0x195l; AssertJUnit.assertEquals("multiply", result, 0x492cc5f1492cc491l); }
@Test
public void test12370() { x = 0x000000007fffffffl; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0x00000653fffff358l); }
@Test
public void test12371() { x = 0x0000000080000000l; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0x0000065400000000l); }
@Test
public void test12372() { x = 0x00000000ffffffffl; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0x00000ca7fffff358l); }
@Test
public void test12373() { x = 0x000000017fffffffl; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0x000012fbfffff358l); }
@Test
public void test12374() { x = 0x0000000180000000l; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0x000012fc00000000l); }
@Test
public void test12375() { x = 0x00000001ffffffffl; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0x0000194ffffff358l); }
@Test
public void test12376() { x = 0xffffffff7fffffffl; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0xfffff9abfffff358l); }
@Test
public void test12377() { x = 0xffffffff80000000l; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0xfffff9ac00000000l); }
@Test
public void test12378() { x = 0x00000001deadf00dl; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0x000017aa49662488l); }
@Test
public void test12379() { x = 0xffffffffdeadf00dl; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5a49662488l); }
@Test
public void test12380() { x = 0x7fffffffffffffffl; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff358l); }
@Test
public void test12381() { x = 0x7fffffff7fffffffl; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0xfffff9abfffff358l); }
@Test
public void test12382() { x = 0x7fffffff80000000l; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0xfffff9ac00000000l); }
@Test
public void test12383() { x = 0x7fffffffdeadf00dl; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe5a49662488l); }
@Test
public void test12384() { x = 0x8000000000000000l; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12385() { x = 0xffffffffffffffffl; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff358l); }
@Test
public void test12386() { x = 0xfffffffffffffffel; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe6b0l); }
@Test
public void test12387() { x = 0xefffffffffffffffl; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffff358l); }
@Test
public void test12388() { x = 0xdeadf00ddeadf00dl; long result = x * 0xca8l; AssertJUnit.assertEquals("multiply", result, 0x49662f8a49662488l); }
@Test
public void test12389() { x = 0x000000007fffffffl; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0x0000ca7ffffe6b00l); }
@Test
public void test12390() { x = 0x0000000080000000l; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0x0000ca8000000000l); }
@Test
public void test12391() { x = 0x00000000ffffffffl; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0x000194fffffe6b00l); }
@Test
public void test12392() { x = 0x000000017fffffffl; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0x00025f7ffffe6b00l); }
@Test
public void test12393() { x = 0x0000000180000000l; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0x00025f8000000000l); }
@Test
public void test12394() { x = 0x00000001ffffffffl; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0x000329fffffe6b00l); }
@Test
public void test12395() { x = 0xffffffff7fffffffl; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0xffff357ffffe6b00l); }
@Test
public void test12396() { x = 0xffffffff80000000l; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0xffff358000000000l); }
@Test
public void test12397() { x = 0x00000001deadf00dl; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0x0002f5492cc49100l); }
@Test
public void test12398() { x = 0xffffffffdeadf00dl; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0xffffcb492cc49100l); }
@Test
public void test12399() { x = 0x7fffffffffffffffl; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe6b00l); }
@Test
public void test12400() { x = 0x7fffffff7fffffffl; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0xffff357ffffe6b00l); }
@Test
public void test12401() { x = 0x7fffffff80000000l; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0xffff358000000000l); }
@Test
public void test12402() { x = 0x7fffffffdeadf00dl; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0xffffcb492cc49100l); }
@Test
public void test12403() { x = 0x8000000000000000l; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12404() { x = 0xffffffffffffffffl; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe6b00l); }
@Test
public void test12405() { x = 0xfffffffffffffffel; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffcd600l); }
@Test
public void test12406() { x = 0xefffffffffffffffl; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe6b00l); }
@Test
public void test12407() { x = 0xdeadf00ddeadf00dl; long result = x * 0x19500l; AssertJUnit.assertEquals("multiply", result, 0x2cc5f1492cc49100l); }
@Test
public void test12408() { x = 0x000000007fffffffl; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe6b00000000l); }
@Test
public void test12409() { x = 0x0000000080000000l; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12410() { x = 0x00000000ffffffffl; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6b00000000l); }
@Test
public void test12411() { x = 0x000000017fffffffl; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe6b00000000l); }
@Test
public void test12412() { x = 0x0000000180000000l; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12413() { x = 0x00000001ffffffffl; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6b00000000l); }
@Test
public void test12414() { x = 0xffffffff7fffffffl; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe6b00000000l); }
@Test
public void test12415() { x = 0xffffffff80000000l; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12416() { x = 0x00000001deadf00dl; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0x492cc49100000000l); }
@Test
public void test12417() { x = 0xffffffffdeadf00dl; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0x492cc49100000000l); }
@Test
public void test12418() { x = 0x7fffffffffffffffl; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6b00000000l); }
@Test
public void test12419() { x = 0x7fffffff7fffffffl; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe6b00000000l); }
@Test
public void test12420() { x = 0x7fffffff80000000l; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12421() { x = 0x7fffffffdeadf00dl; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0x492cc49100000000l); }
@Test
public void test12422() { x = 0x8000000000000000l; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12423() { x = 0xffffffffffffffffl; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6b00000000l); }
@Test
public void test12424() { x = 0xfffffffffffffffel; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffcd600000000l); }
@Test
public void test12425() { x = 0xefffffffffffffffl; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe6b00000000l); }
@Test
public void test12426() { x = 0xdeadf00ddeadf00dl; long result = x * 0x19500000000l; AssertJUnit.assertEquals("multiply", result, 0x492cc49100000000l); }
@Test
public void test12427() { x = 0x000000007fffffffl; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff35800000000l); }
@Test
public void test12428() { x = 0x0000000080000000l; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12429() { x = 0x00000000ffffffffl; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff35800000000l); }
@Test
public void test12430() { x = 0x000000017fffffffl; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff35800000000l); }
@Test
public void test12431() { x = 0x0000000180000000l; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12432() { x = 0x00000001ffffffffl; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff35800000000l); }
@Test
public void test12433() { x = 0xffffffff7fffffffl; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff35800000000l); }
@Test
public void test12434() { x = 0xffffffff80000000l; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12435() { x = 0x00000001deadf00dl; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0x4966248800000000l); }
@Test
public void test12436() { x = 0xffffffffdeadf00dl; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0x4966248800000000l); }
@Test
public void test12437() { x = 0x7fffffffffffffffl; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff35800000000l); }
@Test
public void test12438() { x = 0x7fffffff7fffffffl; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff35800000000l); }
@Test
public void test12439() { x = 0x7fffffff80000000l; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12440() { x = 0x7fffffffdeadf00dl; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0x4966248800000000l); }
@Test
public void test12441() { x = 0x8000000000000000l; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12442() { x = 0xffffffffffffffffl; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff35800000000l); }
@Test
public void test12443() { x = 0xfffffffffffffffel; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe6b000000000l); }
@Test
public void test12444() { x = 0xefffffffffffffffl; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff35800000000l); }
@Test
public void test12445() { x = 0xdeadf00ddeadf00dl; long result = x * 0xca800000000l; AssertJUnit.assertEquals("multiply", result, 0x4966248800000000l); }
@Test
public void test12446() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0xffffff3580000195l); }
@Test
public void test12447() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0xffffff3580000000l); }
@Test
public void test12448() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0xfffffe6b00000195l); }
@Test
public void test12449() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0xfffffda080000195l); }
@Test
public void test12450() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0xfffffda080000000l); }
@Test
public void test12451() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0xfffffcd600000195l); }
@Test
public void test12452() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0x000000ca80000195l); }
@Test
public void test12453() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0x000000ca80000000l); }
@Test
public void test12454() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0xfffffd0ab6d33b6fl); }
@Test
public void test12455() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0x00000034b6d33b6fl); }
@Test
public void test12456() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000195l); }
@Test
public void test12457() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0x800000ca80000195l); }
@Test
public void test12458() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0x800000ca80000000l); }
@Test
public void test12459() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0x80000034b6d33b6fl); }
@Test
public void test12460() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12461() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000195l); }
@Test
public void test12462() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0x000000000000032al); }
@Test
public void test12463() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0x5000000000000195l); }
@Test
public void test12464() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe6bl; AssertJUnit.assertEquals("multiply", result, 0xb6d33a0eb6d33b6fl); }
@Test
public void test12465() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0xfffff9ac00000ca8l); }
@Test
public void test12466() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0xfffff9ac00000000l); }
@Test
public void test12467() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0xfffff35800000ca8l); }
@Test
public void test12468() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0xffffed0400000ca8l); }
@Test
public void test12469() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0xffffed0400000000l); }
@Test
public void test12470() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0xffffe6b000000ca8l); }
@Test
public void test12471() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0x0000065400000ca8l); }
@Test
public void test12472() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0x0000065400000000l); }
@Test
public void test12473() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0xffffe855b699db78l); }
@Test
public void test12474() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0x000001a5b699db78l); }
@Test
public void test12475() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000ca8l); }
@Test
public void test12476() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0x0000065400000ca8l); }
@Test
public void test12477() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0x0000065400000000l); }
@Test
public void test12478() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0x000001a5b699db78l); }
@Test
public void test12479() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12480() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000ca8l); }
@Test
public void test12481() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001950l); }
@Test
public void test12482() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000ca8l); }
@Test
public void test12483() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff358l; AssertJUnit.assertEquals("multiply", result, 0xb699d075b699db78l); }
@Test
public void test12484() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0xffff358000019500l); }
@Test
public void test12485() { x = 0x0000000080000000l; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0xffff358000000000l); }
@Test
public void test12486() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0xfffe6b0000019500l); }
@Test
public void test12487() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0xfffda08000019500l); }
@Test
public void test12488() { x = 0x0000000180000000l; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0xfffda08000000000l); }
@Test
public void test12489() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0xfffcd60000019500l); }
@Test
public void test12490() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0x0000ca8000019500l); }
@Test
public void test12491() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0x0000ca8000000000l); }
@Test
public void test12492() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0xfffd0ab6d33b6f00l); }
@Test
public void test12493() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0x000034b6d33b6f00l); }
@Test
public void test12494() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000019500l); }
@Test
public void test12495() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0x0000ca8000019500l); }
@Test
public void test12496() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0x0000ca8000000000l); }
@Test
public void test12497() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0x000034b6d33b6f00l); }
@Test
public void test12498() { x = 0x8000000000000000l; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12499() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000019500l); }
@Test
public void test12500() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000032a00l); }
@Test
public void test12501() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000019500l); }
@Test
public void test12502() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffe6b00l; AssertJUnit.assertEquals("multiply", result, 0xd33a0eb6d33b6f00l); }
@Test
public void test12503() { x = 0x000000007fffffffl; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000019500000000l); }
@Test
public void test12504() { x = 0x0000000080000000l; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12505() { x = 0x00000000ffffffffl; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019500000000l); }
@Test
public void test12506() { x = 0x000000017fffffffl; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000019500000000l); }
@Test
public void test12507() { x = 0x0000000180000000l; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12508() { x = 0x00000001ffffffffl; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019500000000l); }
@Test
public void test12509() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000019500000000l); }
@Test
public void test12510() { x = 0xffffffff80000000l; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12511() { x = 0x00000001deadf00dl; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0xb6d33b6f00000000l); }
@Test
public void test12512() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0xb6d33b6f00000000l); }
@Test
public void test12513() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019500000000l); }
@Test
public void test12514() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000019500000000l); }
@Test
public void test12515() { x = 0x7fffffff80000000l; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12516() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0xb6d33b6f00000000l); }
@Test
public void test12517() { x = 0x8000000000000000l; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12518() { x = 0xffffffffffffffffl; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019500000000l); }
@Test
public void test12519() { x = 0xfffffffffffffffel; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000032a00000000l); }
@Test
public void test12520() { x = 0xefffffffffffffffl; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000019500000000l); }
@Test
public void test12521() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe6b00000000l; AssertJUnit.assertEquals("multiply", result, 0xb6d33b6f00000000l); }
@Test
public void test12522() { x = 0x000000007fffffffl; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ca800000000l); }
@Test
public void test12523() { x = 0x0000000080000000l; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12524() { x = 0x00000000ffffffffl; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ca800000000l); }
@Test
public void test12525() { x = 0x000000017fffffffl; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ca800000000l); }
@Test
public void test12526() { x = 0x0000000180000000l; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12527() { x = 0x00000001ffffffffl; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ca800000000l); }
@Test
public void test12528() { x = 0xffffffff7fffffffl; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ca800000000l); }
@Test
public void test12529() { x = 0xffffffff80000000l; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12530() { x = 0x00000001deadf00dl; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0xb699db7800000000l); }
@Test
public void test12531() { x = 0xffffffffdeadf00dl; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0xb699db7800000000l); }
@Test
public void test12532() { x = 0x7fffffffffffffffl; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ca800000000l); }
@Test
public void test12533() { x = 0x7fffffff7fffffffl; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ca800000000l); }
@Test
public void test12534() { x = 0x7fffffff80000000l; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12535() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0xb699db7800000000l); }
@Test
public void test12536() { x = 0x8000000000000000l; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12537() { x = 0xffffffffffffffffl; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ca800000000l); }
@Test
public void test12538() { x = 0xfffffffffffffffel; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000195000000000l); }
@Test
public void test12539() { x = 0xefffffffffffffffl; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000ca800000000l); }
@Test
public void test12540() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffff35800000000l; AssertJUnit.assertEquals("multiply", result, 0xb699db7800000000l); }
@Test
public void test12541() { x = 0x000000007fffffffl; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0x000000f37ffffe19l); }
@Test
public void test12542() { x = 0x0000000080000000l; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0x000000f380000000l); }
@Test
public void test12543() { x = 0x00000000ffffffffl; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0x000001e6fffffe19l); }
@Test
public void test12544() { x = 0x000000017fffffffl; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0x000002da7ffffe19l); }
@Test
public void test12545() { x = 0x0000000180000000l; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0x000002da80000000l); }
@Test
public void test12546() { x = 0x00000001ffffffffl; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0x000003cdfffffe19l); }
@Test
public void test12547() { x = 0xffffffff7fffffffl; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0xffffff0c7ffffe19l); }
@Test
public void test12548() { x = 0xffffffff80000000l; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0xffffff0c80000000l); }
@Test
public void test12549() { x = 0x00000001deadf00dl; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0x0000038e9ce3a8bbl); }
@Test
public void test12550() { x = 0xffffffffdeadf00dl; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0xffffffc09ce3a8bbl); }
@Test
public void test12551() { x = 0x7fffffffffffffffl; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffe19l); }
@Test
public void test12552() { x = 0x7fffffff7fffffffl; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0x7fffff0c7ffffe19l); }
@Test
public void test12553() { x = 0x7fffffff80000000l; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0x7fffff0c80000000l); }
@Test
public void test12554() { x = 0x7fffffffdeadf00dl; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0x7fffffc09ce3a8bbl); }
@Test
public void test12555() { x = 0x8000000000000000l; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12556() { x = 0xffffffffffffffffl; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe19l); }
@Test
public void test12557() { x = 0xfffffffffffffffel; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffc32l); }
@Test
public void test12558() { x = 0xefffffffffffffffl; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0x8ffffffffffffe19l); }
@Test
public void test12559() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1e7l; AssertJUnit.assertEquals("multiply", result, 0x9ce3aa629ce3a8bbl); }
@Test
public void test12560() { x = 0x000000007fffffffl; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0x0000079bfffff0c8l); }
@Test
public void test12561() { x = 0x0000000080000000l; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0x0000079c00000000l); }
@Test
public void test12562() { x = 0x00000000ffffffffl; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0x00000f37fffff0c8l); }
@Test
public void test12563() { x = 0x000000017fffffffl; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0x000016d3fffff0c8l); }
@Test
public void test12564() { x = 0x0000000180000000l; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0x000016d400000000l); }
@Test
public void test12565() { x = 0x00000001ffffffffl; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0x00001e6ffffff0c8l); }
@Test
public void test12566() { x = 0xffffffff7fffffffl; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0xfffff863fffff0c8l); }
@Test
public void test12567() { x = 0xffffffff80000000l; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0xfffff86400000000l); }
@Test
public void test12568() { x = 0x00000001deadf00dl; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0x00001c74e71d45d8l); }
@Test
public void test12569() { x = 0xffffffffdeadf00dl; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0xfffffe04e71d45d8l); }
@Test
public void test12570() { x = 0x7fffffffffffffffl; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff0c8l); }
@Test
public void test12571() { x = 0x7fffffff7fffffffl; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0xfffff863fffff0c8l); }
@Test
public void test12572() { x = 0x7fffffff80000000l; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0xfffff86400000000l); }
@Test
public void test12573() { x = 0x7fffffffdeadf00dl; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0xfffffe04e71d45d8l); }
@Test
public void test12574() { x = 0x8000000000000000l; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12575() { x = 0xffffffffffffffffl; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff0c8l); }
@Test
public void test12576() { x = 0xfffffffffffffffel; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe190l); }
@Test
public void test12577() { x = 0xefffffffffffffffl; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffff0c8l); }
@Test
public void test12578() { x = 0xdeadf00ddeadf00dl; long result = x * 0xf38l; AssertJUnit.assertEquals("multiply", result, 0xe71d5314e71d45d8l); }
@Test
public void test12579() { x = 0x000000007fffffffl; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0x0000f37ffffe1900l); }
@Test
public void test12580() { x = 0x0000000080000000l; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0x0000f38000000000l); }
@Test
public void test12581() { x = 0x00000000ffffffffl; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0x0001e6fffffe1900l); }
@Test
public void test12582() { x = 0x000000017fffffffl; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0x0002da7ffffe1900l); }
@Test
public void test12583() { x = 0x0000000180000000l; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0x0002da8000000000l); }
@Test
public void test12584() { x = 0x00000001ffffffffl; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0x0003cdfffffe1900l); }
@Test
public void test12585() { x = 0xffffffff7fffffffl; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0xffff0c7ffffe1900l); }
@Test
public void test12586() { x = 0xffffffff80000000l; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0xffff0c8000000000l); }
@Test
public void test12587() { x = 0x00000001deadf00dl; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0x00038e9ce3a8bb00l); }
@Test
public void test12588() { x = 0xffffffffdeadf00dl; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0xffffc09ce3a8bb00l); }
@Test
public void test12589() { x = 0x7fffffffffffffffl; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe1900l); }
@Test
public void test12590() { x = 0x7fffffff7fffffffl; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0xffff0c7ffffe1900l); }
@Test
public void test12591() { x = 0x7fffffff80000000l; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0xffff0c8000000000l); }
@Test
public void test12592() { x = 0x7fffffffdeadf00dl; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0xffffc09ce3a8bb00l); }
@Test
public void test12593() { x = 0x8000000000000000l; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12594() { x = 0xffffffffffffffffl; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe1900l); }
@Test
public void test12595() { x = 0xfffffffffffffffel; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffc3200l); }
@Test
public void test12596() { x = 0xefffffffffffffffl; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe1900l); }
@Test
public void test12597() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1e700l; AssertJUnit.assertEquals("multiply", result, 0xe3aa629ce3a8bb00l); }
@Test
public void test12598() { x = 0x000000007fffffffl; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe1900000000l); }
@Test
public void test12599() { x = 0x0000000080000000l; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12600() { x = 0x00000000ffffffffl; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1900000000l); }
@Test
public void test12601() { x = 0x000000017fffffffl; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe1900000000l); }
@Test
public void test12602() { x = 0x0000000180000000l; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12603() { x = 0x00000001ffffffffl; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1900000000l); }
@Test
public void test12604() { x = 0xffffffff7fffffffl; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe1900000000l); }
@Test
public void test12605() { x = 0xffffffff80000000l; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12606() { x = 0x00000001deadf00dl; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0x9ce3a8bb00000000l); }
@Test
public void test12607() { x = 0xffffffffdeadf00dl; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0x9ce3a8bb00000000l); }
@Test
public void test12608() { x = 0x7fffffffffffffffl; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1900000000l); }
@Test
public void test12609() { x = 0x7fffffff7fffffffl; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe1900000000l); }
@Test
public void test12610() { x = 0x7fffffff80000000l; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12611() { x = 0x7fffffffdeadf00dl; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0x9ce3a8bb00000000l); }
@Test
public void test12612() { x = 0x8000000000000000l; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12613() { x = 0xffffffffffffffffl; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1900000000l); }
@Test
public void test12614() { x = 0xfffffffffffffffel; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc3200000000l); }
@Test
public void test12615() { x = 0xefffffffffffffffl; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe1900000000l); }
@Test
public void test12616() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1e700000000l; AssertJUnit.assertEquals("multiply", result, 0x9ce3a8bb00000000l); }
@Test
public void test12617() { x = 0x000000007fffffffl; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff0c800000000l); }
@Test
public void test12618() { x = 0x0000000080000000l; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12619() { x = 0x00000000ffffffffl; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff0c800000000l); }
@Test
public void test12620() { x = 0x000000017fffffffl; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff0c800000000l); }
@Test
public void test12621() { x = 0x0000000180000000l; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12622() { x = 0x00000001ffffffffl; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff0c800000000l); }
@Test
public void test12623() { x = 0xffffffff7fffffffl; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff0c800000000l); }
@Test
public void test12624() { x = 0xffffffff80000000l; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12625() { x = 0x00000001deadf00dl; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0xe71d45d800000000l); }
@Test
public void test12626() { x = 0xffffffffdeadf00dl; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0xe71d45d800000000l); }
@Test
public void test12627() { x = 0x7fffffffffffffffl; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff0c800000000l); }
@Test
public void test12628() { x = 0x7fffffff7fffffffl; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff0c800000000l); }
@Test
public void test12629() { x = 0x7fffffff80000000l; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12630() { x = 0x7fffffffdeadf00dl; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0xe71d45d800000000l); }
@Test
public void test12631() { x = 0x8000000000000000l; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12632() { x = 0xffffffffffffffffl; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff0c800000000l); }
@Test
public void test12633() { x = 0xfffffffffffffffel; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe19000000000l); }
@Test
public void test12634() { x = 0xefffffffffffffffl; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff0c800000000l); }
@Test
public void test12635() { x = 0xdeadf00ddeadf00dl; long result = x * 0xf3800000000l; AssertJUnit.assertEquals("multiply", result, 0xe71d45d800000000l); }
@Test
public void test12636() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0xffffff0c800001e7l); }
@Test
public void test12637() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0xffffff0c80000000l); }
@Test
public void test12638() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0xfffffe19000001e7l); }
@Test
public void test12639() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0xfffffd25800001e7l); }
@Test
public void test12640() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0xfffffd2580000000l); }
@Test
public void test12641() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0xfffffc32000001e7l); }
@Test
public void test12642() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0x000000f3800001e7l); }
@Test
public void test12643() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0x000000f380000000l); }
@Test
public void test12644() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0xfffffc71631c5745l); }
@Test
public void test12645() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0x0000003f631c5745l); }
@Test
public void test12646() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0x80000000000001e7l); }
@Test
public void test12647() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0x800000f3800001e7l); }
@Test
public void test12648() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0x800000f380000000l); }
@Test
public void test12649() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0x8000003f631c5745l); }
@Test
public void test12650() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12651() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001e7l); }
@Test
public void test12652() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0x00000000000003cel); }
@Test
public void test12653() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0x70000000000001e7l); }
@Test
public void test12654() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe19l; AssertJUnit.assertEquals("multiply", result, 0x631c559d631c5745l); }
@Test
public void test12655() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0xfffff86400000f38l); }
@Test
public void test12656() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0xfffff86400000000l); }
@Test
public void test12657() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0xfffff0c800000f38l); }
@Test
public void test12658() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0xffffe92c00000f38l); }
@Test
public void test12659() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0xffffe92c00000000l); }
@Test
public void test12660() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0xffffe19000000f38l); }
@Test
public void test12661() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0x0000079c00000f38l); }
@Test
public void test12662() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0x0000079c00000000l); }
@Test
public void test12663() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0xffffe38b18e2ba28l); }
@Test
public void test12664() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0x000001fb18e2ba28l); }
@Test
public void test12665() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000f38l); }
@Test
public void test12666() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0x0000079c00000f38l); }
@Test
public void test12667() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0x0000079c00000000l); }
@Test
public void test12668() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0x000001fb18e2ba28l); }
@Test
public void test12669() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12670() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000f38l); }
@Test
public void test12671() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001e70l); }
@Test
public void test12672() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000f38l); }
@Test
public void test12673() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff0c8l; AssertJUnit.assertEquals("multiply", result, 0x18e2aceb18e2ba28l); }
@Test
public void test12674() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0xffff0c800001e700l); }
@Test
public void test12675() { x = 0x0000000080000000l; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0xffff0c8000000000l); }
@Test
public void test12676() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0xfffe19000001e700l); }
@Test
public void test12677() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0xfffd25800001e700l); }
@Test
public void test12678() { x = 0x0000000180000000l; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0xfffd258000000000l); }
@Test
public void test12679() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0xfffc32000001e700l); }
@Test
public void test12680() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0x0000f3800001e700l); }
@Test
public void test12681() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0x0000f38000000000l); }
@Test
public void test12682() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0xfffc71631c574500l); }
@Test
public void test12683() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0x00003f631c574500l); }
@Test
public void test12684() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0x000000000001e700l); }
@Test
public void test12685() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0x0000f3800001e700l); }
@Test
public void test12686() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0x0000f38000000000l); }
@Test
public void test12687() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0x00003f631c574500l); }
@Test
public void test12688() { x = 0x8000000000000000l; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12689() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0x000000000001e700l); }
@Test
public void test12690() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0x000000000003ce00l); }
@Test
public void test12691() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0x000000000001e700l); }
@Test
public void test12692() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffe1900l; AssertJUnit.assertEquals("multiply", result, 0x1c559d631c574500l); }
@Test
public void test12693() { x = 0x000000007fffffffl; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x800001e700000000l); }
@Test
public void test12694() { x = 0x0000000080000000l; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12695() { x = 0x00000000ffffffffl; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e700000000l); }
@Test
public void test12696() { x = 0x000000017fffffffl; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x800001e700000000l); }
@Test
public void test12697() { x = 0x0000000180000000l; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12698() { x = 0x00000001ffffffffl; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e700000000l); }
@Test
public void test12699() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x800001e700000000l); }
@Test
public void test12700() { x = 0xffffffff80000000l; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12701() { x = 0x00000001deadf00dl; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x631c574500000000l); }
@Test
public void test12702() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x631c574500000000l); }
@Test
public void test12703() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e700000000l); }
@Test
public void test12704() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x800001e700000000l); }
@Test
public void test12705() { x = 0x7fffffff80000000l; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12706() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x631c574500000000l); }
@Test
public void test12707() { x = 0x8000000000000000l; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12708() { x = 0xffffffffffffffffl; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e700000000l); }
@Test
public void test12709() { x = 0xfffffffffffffffel; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x000003ce00000000l); }
@Test
public void test12710() { x = 0xefffffffffffffffl; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x000001e700000000l); }
@Test
public void test12711() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe1900000000l; AssertJUnit.assertEquals("multiply", result, 0x631c574500000000l); }
@Test
public void test12712() { x = 0x000000007fffffffl; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000f3800000000l); }
@Test
public void test12713() { x = 0x0000000080000000l; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12714() { x = 0x00000000ffffffffl; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000f3800000000l); }
@Test
public void test12715() { x = 0x000000017fffffffl; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000f3800000000l); }
@Test
public void test12716() { x = 0x0000000180000000l; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12717() { x = 0x00000001ffffffffl; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000f3800000000l); }
@Test
public void test12718() { x = 0xffffffff7fffffffl; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000f3800000000l); }
@Test
public void test12719() { x = 0xffffffff80000000l; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12720() { x = 0x00000001deadf00dl; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x18e2ba2800000000l); }
@Test
public void test12721() { x = 0xffffffffdeadf00dl; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x18e2ba2800000000l); }
@Test
public void test12722() { x = 0x7fffffffffffffffl; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000f3800000000l); }
@Test
public void test12723() { x = 0x7fffffff7fffffffl; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000f3800000000l); }
@Test
public void test12724() { x = 0x7fffffff80000000l; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12725() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x18e2ba2800000000l); }
@Test
public void test12726() { x = 0x8000000000000000l; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12727() { x = 0xffffffffffffffffl; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000f3800000000l); }
@Test
public void test12728() { x = 0xfffffffffffffffel; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x00001e7000000000l); }
@Test
public void test12729() { x = 0xefffffffffffffffl; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x00000f3800000000l); }
@Test
public void test12730() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffff0c800000000l; AssertJUnit.assertEquals("multiply", result, 0x18e2ba2800000000l); }
@Test
public void test12731() { x = 0x000000007fffffffl; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0x000000f9fffffe0cl); }
@Test
public void test12732() { x = 0x0000000080000000l; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0x000000fa00000000l); }
@Test
public void test12733() { x = 0x00000000ffffffffl; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0x000001f3fffffe0cl); }
@Test
public void test12734() { x = 0x000000017fffffffl; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0x000002edfffffe0cl); }
@Test
public void test12735() { x = 0x0000000180000000l; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0x000002ee00000000l); }
@Test
public void test12736() { x = 0x00000001ffffffffl; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0x000003e7fffffe0cl); }
@Test
public void test12737() { x = 0xffffffff7fffffffl; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0xffffff05fffffe0cl); }
@Test
public void test12738() { x = 0xffffffff80000000l; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0xffffff0600000000l); }
@Test
public void test12739() { x = 0x00000001deadf00dl; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0x000003a6ebb8d964l); }
@Test
public void test12740() { x = 0xffffffffdeadf00dl; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0xffffffbeebb8d964l); }
@Test
public void test12741() { x = 0x7fffffffffffffffl; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe0cl); }
@Test
public void test12742() { x = 0x7fffffff7fffffffl; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0xffffff05fffffe0cl); }
@Test
public void test12743() { x = 0x7fffffff80000000l; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0xffffff0600000000l); }
@Test
public void test12744() { x = 0x7fffffffdeadf00dl; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0xffffffbeebb8d964l); }
@Test
public void test12745() { x = 0x8000000000000000l; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12746() { x = 0xffffffffffffffffl; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe0cl); }
@Test
public void test12747() { x = 0xfffffffffffffffel; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffc18l); }
@Test
public void test12748() { x = 0xefffffffffffffffl; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0xbffffffffffffe0cl); }
@Test
public void test12749() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1f4l; AssertJUnit.assertEquals("multiply", result, 0xebb8db16ebb8d964l); }
@Test
public void test12750() { x = 0x000000007fffffffl; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0x000007cffffff060l); }
@Test
public void test12751() { x = 0x0000000080000000l; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test12752() { x = 0x00000000ffffffffl; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0x00000f9ffffff060l); }
@Test
public void test12753() { x = 0x000000017fffffffl; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0x0000176ffffff060l); }
@Test
public void test12754() { x = 0x0000000180000000l; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0x0000177000000000l); }
@Test
public void test12755() { x = 0x00000001ffffffffl; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0x00001f3ffffff060l); }
@Test
public void test12756() { x = 0xffffffff7fffffffl; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0xfffff82ffffff060l); }
@Test
public void test12757() { x = 0xffffffff80000000l; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test12758() { x = 0x00000001deadf00dl; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0x00001d375dc6cb20l); }
@Test
public void test12759() { x = 0xffffffffdeadf00dl; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0xfffffdf75dc6cb20l); }
@Test
public void test12760() { x = 0x7fffffffffffffffl; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff060l); }
@Test
public void test12761() { x = 0x7fffffff7fffffffl; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0xfffff82ffffff060l); }
@Test
public void test12762() { x = 0x7fffffff80000000l; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test12763() { x = 0x7fffffffdeadf00dl; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0xfffffdf75dc6cb20l); }
@Test
public void test12764() { x = 0x8000000000000000l; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12765() { x = 0xffffffffffffffffl; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff060l); }
@Test
public void test12766() { x = 0xfffffffffffffffel; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe0c0l); }
@Test
public void test12767() { x = 0xefffffffffffffffl; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff060l); }
@Test
public void test12768() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfa0l; AssertJUnit.assertEquals("multiply", result, 0x5dc6d8b75dc6cb20l); }
@Test
public void test12769() { x = 0x000000007fffffffl; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0x0000f9fffffe0c00l); }
@Test
public void test12770() { x = 0x0000000080000000l; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0x0000fa0000000000l); }
@Test
public void test12771() { x = 0x00000000ffffffffl; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0x0001f3fffffe0c00l); }
@Test
public void test12772() { x = 0x000000017fffffffl; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0x0002edfffffe0c00l); }
@Test
public void test12773() { x = 0x0000000180000000l; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0x0002ee0000000000l); }
@Test
public void test12774() { x = 0x00000001ffffffffl; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0x0003e7fffffe0c00l); }
@Test
public void test12775() { x = 0xffffffff7fffffffl; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0xffff05fffffe0c00l); }
@Test
public void test12776() { x = 0xffffffff80000000l; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0xffff060000000000l); }
@Test
public void test12777() { x = 0x00000001deadf00dl; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0x0003a6ebb8d96400l); }
@Test
public void test12778() { x = 0xffffffffdeadf00dl; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0xffffbeebb8d96400l); }
@Test
public void test12779() { x = 0x7fffffffffffffffl; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe0c00l); }
@Test
public void test12780() { x = 0x7fffffff7fffffffl; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0xffff05fffffe0c00l); }
@Test
public void test12781() { x = 0x7fffffff80000000l; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0xffff060000000000l); }
@Test
public void test12782() { x = 0x7fffffffdeadf00dl; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0xffffbeebb8d96400l); }
@Test
public void test12783() { x = 0x8000000000000000l; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12784() { x = 0xffffffffffffffffl; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe0c00l); }
@Test
public void test12785() { x = 0xfffffffffffffffel; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffc1800l); }
@Test
public void test12786() { x = 0xefffffffffffffffl; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe0c00l); }
@Test
public void test12787() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1f400l; AssertJUnit.assertEquals("multiply", result, 0xb8db16ebb8d96400l); }
@Test
public void test12788() { x = 0x000000007fffffffl; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test12789() { x = 0x0000000080000000l; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12790() { x = 0x00000000ffffffffl; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test12791() { x = 0x000000017fffffffl; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test12792() { x = 0x0000000180000000l; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12793() { x = 0x00000001ffffffffl; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test12794() { x = 0xffffffff7fffffffl; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test12795() { x = 0xffffffff80000000l; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12796() { x = 0x00000001deadf00dl; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0xebb8d96400000000l); }
@Test
public void test12797() { x = 0xffffffffdeadf00dl; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0xebb8d96400000000l); }
@Test
public void test12798() { x = 0x7fffffffffffffffl; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test12799() { x = 0x7fffffff7fffffffl; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test12800() { x = 0x7fffffff80000000l; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12801() { x = 0x7fffffffdeadf00dl; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0xebb8d96400000000l); }
@Test
public void test12802() { x = 0x8000000000000000l; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12803() { x = 0xffffffffffffffffl; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test12804() { x = 0xfffffffffffffffel; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test12805() { x = 0xefffffffffffffffl; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test12806() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1f400000000l; AssertJUnit.assertEquals("multiply", result, 0xebb8d96400000000l); }
@Test
public void test12807() { x = 0x000000007fffffffl; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000000l); }
@Test
public void test12808() { x = 0x0000000080000000l; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12809() { x = 0x00000000ffffffffl; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000000l); }
@Test
public void test12810() { x = 0x000000017fffffffl; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000000l); }
@Test
public void test12811() { x = 0x0000000180000000l; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12812() { x = 0x00000001ffffffffl; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000000l); }
@Test
public void test12813() { x = 0xffffffff7fffffffl; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000000l); }
@Test
public void test12814() { x = 0xffffffff80000000l; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12815() { x = 0x00000001deadf00dl; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0x5dc6cb2000000000l); }
@Test
public void test12816() { x = 0xffffffffdeadf00dl; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0x5dc6cb2000000000l); }
@Test
public void test12817() { x = 0x7fffffffffffffffl; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000000l); }
@Test
public void test12818() { x = 0x7fffffff7fffffffl; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000000l); }
@Test
public void test12819() { x = 0x7fffffff80000000l; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12820() { x = 0x7fffffffdeadf00dl; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0x5dc6cb2000000000l); }
@Test
public void test12821() { x = 0x8000000000000000l; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12822() { x = 0xffffffffffffffffl; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000000l); }
@Test
public void test12823() { x = 0xfffffffffffffffel; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000000000l); }
@Test
public void test12824() { x = 0xefffffffffffffffl; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000000l); }
@Test
public void test12825() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfa000000000l; AssertJUnit.assertEquals("multiply", result, 0x5dc6cb2000000000l); }
@Test
public void test12826() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0xffffff06000001f4l); }
@Test
public void test12827() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0xffffff0600000000l); }
@Test
public void test12828() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c000001f4l); }
@Test
public void test12829() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0xfffffd12000001f4l); }
@Test
public void test12830() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000000l); }
@Test
public void test12831() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0xfffffc18000001f4l); }
@Test
public void test12832() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0x000000fa000001f4l); }
@Test
public void test12833() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0x000000fa00000000l); }
@Test
public void test12834() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0xfffffc591447269cl); }
@Test
public void test12835() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0x000000411447269cl); }
@Test
public void test12836() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0x00000000000001f4l); }
@Test
public void test12837() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0x000000fa000001f4l); }
@Test
public void test12838() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0x000000fa00000000l); }
@Test
public void test12839() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0x000000411447269cl); }
@Test
public void test12840() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12841() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0x00000000000001f4l); }
@Test
public void test12842() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0x00000000000003e8l); }
@Test
public void test12843() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0x40000000000001f4l); }
@Test
public void test12844() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe0cl; AssertJUnit.assertEquals("multiply", result, 0x144724e91447269cl); }
@Test
public void test12845() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000fa0l); }
@Test
public void test12846() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test12847() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000fa0l); }
@Test
public void test12848() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000fa0l); }
@Test
public void test12849() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000000l); }
@Test
public void test12850() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000000fa0l); }
@Test
public void test12851() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000fa0l); }
@Test
public void test12852() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test12853() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0xffffe2c8a23934e0l); }
@Test
public void test12854() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0x00000208a23934e0l); }
@Test
public void test12855() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000fa0l); }
@Test
public void test12856() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000fa0l); }
@Test
public void test12857() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test12858() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0x00000208a23934e0l); }
@Test
public void test12859() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12860() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000fa0l); }
@Test
public void test12861() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001f40l); }
@Test
public void test12862() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000fa0l); }
@Test
public void test12863() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff060l; AssertJUnit.assertEquals("multiply", result, 0xa2392748a23934e0l); }
@Test
public void test12864() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0xffff06000001f400l); }
@Test
public void test12865() { x = 0x0000000080000000l; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0xffff060000000000l); }
@Test
public void test12866() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0xfffe0c000001f400l); }
@Test
public void test12867() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0xfffd12000001f400l); }
@Test
public void test12868() { x = 0x0000000180000000l; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0xfffd120000000000l); }
@Test
public void test12869() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0xfffc18000001f400l); }
@Test
public void test12870() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0x0000fa000001f400l); }
@Test
public void test12871() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0x0000fa0000000000l); }
@Test
public void test12872() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0xfffc591447269c00l); }
@Test
public void test12873() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0x0000411447269c00l); }
@Test
public void test12874() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0x000000000001f400l); }
@Test
public void test12875() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0x0000fa000001f400l); }
@Test
public void test12876() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0x0000fa0000000000l); }
@Test
public void test12877() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0x0000411447269c00l); }
@Test
public void test12878() { x = 0x8000000000000000l; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12879() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0x000000000001f400l); }
@Test
public void test12880() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0x000000000003e800l); }
@Test
public void test12881() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0x000000000001f400l); }
@Test
public void test12882() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffe0c00l; AssertJUnit.assertEquals("multiply", result, 0x4724e91447269c00l); }
@Test
public void test12883() { x = 0x000000007fffffffl; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test12884() { x = 0x0000000080000000l; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12885() { x = 0x00000000ffffffffl; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test12886() { x = 0x000000017fffffffl; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test12887() { x = 0x0000000180000000l; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12888() { x = 0x00000001ffffffffl; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test12889() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test12890() { x = 0xffffffff80000000l; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12891() { x = 0x00000001deadf00dl; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x1447269c00000000l); }
@Test
public void test12892() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x1447269c00000000l); }
@Test
public void test12893() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test12894() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test12895() { x = 0x7fffffff80000000l; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12896() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x1447269c00000000l); }
@Test
public void test12897() { x = 0x8000000000000000l; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12898() { x = 0xffffffffffffffffl; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test12899() { x = 0xfffffffffffffffel; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test12900() { x = 0xefffffffffffffffl; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test12901() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe0c00000000l; AssertJUnit.assertEquals("multiply", result, 0x1447269c00000000l); }
@Test
public void test12902() { x = 0x000000007fffffffl; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000000000l); }
@Test
public void test12903() { x = 0x0000000080000000l; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12904() { x = 0x00000000ffffffffl; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000000000l); }
@Test
public void test12905() { x = 0x000000017fffffffl; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000000000l); }
@Test
public void test12906() { x = 0x0000000180000000l; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12907() { x = 0x00000001ffffffffl; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000000000l); }
@Test
public void test12908() { x = 0xffffffff7fffffffl; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000000000l); }
@Test
public void test12909() { x = 0xffffffff80000000l; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12910() { x = 0x00000001deadf00dl; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0xa23934e000000000l); }
@Test
public void test12911() { x = 0xffffffffdeadf00dl; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0xa23934e000000000l); }
@Test
public void test12912() { x = 0x7fffffffffffffffl; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000000000l); }
@Test
public void test12913() { x = 0x7fffffff7fffffffl; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000000000l); }
@Test
public void test12914() { x = 0x7fffffff80000000l; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12915() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0xa23934e000000000l); }
@Test
public void test12916() { x = 0x8000000000000000l; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12917() { x = 0xffffffffffffffffl; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000000000l); }
@Test
public void test12918() { x = 0xfffffffffffffffel; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000000000l); }
@Test
public void test12919() { x = 0xefffffffffffffffl; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000000000l); }
@Test
public void test12920() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffff06000000000l; AssertJUnit.assertEquals("multiply", result, 0xa23934e000000000l); }
@Test
public void test12921() { x = 0x000000007fffffffl; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0x000001387ffffd8fl); }
@Test
public void test12922() { x = 0x0000000080000000l; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0x0000013880000000l); }
@Test
public void test12923() { x = 0x00000000ffffffffl; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0x00000270fffffd8fl); }
@Test
public void test12924() { x = 0x000000017fffffffl; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0x000003a97ffffd8fl); }
@Test
public void test12925() { x = 0x0000000180000000l; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0x000003a980000000l); }
@Test
public void test12926() { x = 0x00000001ffffffffl; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0x000004e1fffffd8fl); }
@Test
public void test12927() { x = 0xffffffff7fffffffl; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0xfffffec77ffffd8fl); }
@Test
public void test12928() { x = 0xffffffff80000000l; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0xfffffec780000000l); }
@Test
public void test12929() { x = 0x00000001deadf00dl; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0x00000490a6a70fbdl); }
@Test
public void test12930() { x = 0xffffffffdeadf00dl; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0xffffffaea6a70fbdl); }
@Test
public void test12931() { x = 0x7fffffffffffffffl; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffd8fl); }
@Test
public void test12932() { x = 0x7fffffff7fffffffl; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0x7ffffec77ffffd8fl); }
@Test
public void test12933() { x = 0x7fffffff80000000l; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0x7ffffec780000000l); }
@Test
public void test12934() { x = 0x7fffffffdeadf00dl; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0x7fffffaea6a70fbdl); }
@Test
public void test12935() { x = 0x8000000000000000l; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12936() { x = 0xffffffffffffffffl; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd8fl); }
@Test
public void test12937() { x = 0xfffffffffffffffel; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffb1el); }
@Test
public void test12938() { x = 0xefffffffffffffffl; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0xeffffffffffffd8fl); }
@Test
public void test12939() { x = 0xdeadf00ddeadf00dl; long result = x * 0x271l; AssertJUnit.assertEquals("multiply", result, 0xa6a711dca6a70fbdl); }
@Test
public void test12940() { x = 0x000000007fffffffl; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0x000009c3ffffec78l); }
@Test
public void test12941() { x = 0x0000000080000000l; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0x000009c400000000l); }
@Test
public void test12942() { x = 0x00000000ffffffffl; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0x00001387ffffec78l); }
@Test
public void test12943() { x = 0x000000017fffffffl; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0x00001d4bffffec78l); }
@Test
public void test12944() { x = 0x0000000180000000l; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0x00001d4c00000000l); }
@Test
public void test12945() { x = 0x00000001ffffffffl; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0x0000270fffffec78l); }
@Test
public void test12946() { x = 0xffffffff7fffffffl; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0xfffff63bffffec78l); }
@Test
public void test12947() { x = 0xffffffff80000000l; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0xfffff63c00000000l); }
@Test
public void test12948() { x = 0x00000001deadf00dl; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0x0000248535387de8l); }
@Test
public void test12949() { x = 0xffffffffdeadf00dl; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7535387de8l); }
@Test
public void test12950() { x = 0x7fffffffffffffffl; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffec78l); }
@Test
public void test12951() { x = 0x7fffffff7fffffffl; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0xfffff63bffffec78l); }
@Test
public void test12952() { x = 0x7fffffff80000000l; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0xfffff63c00000000l); }
@Test
public void test12953() { x = 0x7fffffffdeadf00dl; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0xfffffd7535387de8l); }
@Test
public void test12954() { x = 0x8000000000000000l; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12955() { x = 0xffffffffffffffffl; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffec78l); }
@Test
public void test12956() { x = 0xfffffffffffffffel; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd8f0l); }
@Test
public void test12957() { x = 0xefffffffffffffffl; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffec78l); }
@Test
public void test12958() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1388l; AssertJUnit.assertEquals("multiply", result, 0x35388ee535387de8l); }
@Test
public void test12959() { x = 0x000000007fffffffl; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0x0001387ffffd8f00l); }
@Test
public void test12960() { x = 0x0000000080000000l; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0x0001388000000000l); }
@Test
public void test12961() { x = 0x00000000ffffffffl; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0x000270fffffd8f00l); }
@Test
public void test12962() { x = 0x000000017fffffffl; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0x0003a97ffffd8f00l); }
@Test
public void test12963() { x = 0x0000000180000000l; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0x0003a98000000000l); }
@Test
public void test12964() { x = 0x00000001ffffffffl; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0x0004e1fffffd8f00l); }
@Test
public void test12965() { x = 0xffffffff7fffffffl; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0xfffec77ffffd8f00l); }
@Test
public void test12966() { x = 0xffffffff80000000l; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0xfffec78000000000l); }
@Test
public void test12967() { x = 0x00000001deadf00dl; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0x000490a6a70fbd00l); }
@Test
public void test12968() { x = 0xffffffffdeadf00dl; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0xffffaea6a70fbd00l); }
@Test
public void test12969() { x = 0x7fffffffffffffffl; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffd8f00l); }
@Test
public void test12970() { x = 0x7fffffff7fffffffl; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0xfffec77ffffd8f00l); }
@Test
public void test12971() { x = 0x7fffffff80000000l; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0xfffec78000000000l); }
@Test
public void test12972() { x = 0x7fffffffdeadf00dl; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0xffffaea6a70fbd00l); }
@Test
public void test12973() { x = 0x8000000000000000l; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12974() { x = 0xffffffffffffffffl; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffd8f00l); }
@Test
public void test12975() { x = 0xfffffffffffffffel; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffb1e00l); }
@Test
public void test12976() { x = 0xefffffffffffffffl; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffd8f00l); }
@Test
public void test12977() { x = 0xdeadf00ddeadf00dl; long result = x * 0x27100l; AssertJUnit.assertEquals("multiply", result, 0xa711dca6a70fbd00l); }
@Test
public void test12978() { x = 0x000000007fffffffl; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffd8f00000000l); }
@Test
public void test12979() { x = 0x0000000080000000l; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12980() { x = 0x00000000ffffffffl; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8f00000000l); }
@Test
public void test12981() { x = 0x000000017fffffffl; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffd8f00000000l); }
@Test
public void test12982() { x = 0x0000000180000000l; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12983() { x = 0x00000001ffffffffl; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8f00000000l); }
@Test
public void test12984() { x = 0xffffffff7fffffffl; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffd8f00000000l); }
@Test
public void test12985() { x = 0xffffffff80000000l; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12986() { x = 0x00000001deadf00dl; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0xa6a70fbd00000000l); }
@Test
public void test12987() { x = 0xffffffffdeadf00dl; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0xa6a70fbd00000000l); }
@Test
public void test12988() { x = 0x7fffffffffffffffl; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8f00000000l); }
@Test
public void test12989() { x = 0x7fffffff7fffffffl; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffd8f00000000l); }
@Test
public void test12990() { x = 0x7fffffff80000000l; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test12991() { x = 0x7fffffffdeadf00dl; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0xa6a70fbd00000000l); }
@Test
public void test12992() { x = 0x8000000000000000l; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12993() { x = 0xffffffffffffffffl; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8f00000000l); }
@Test
public void test12994() { x = 0xfffffffffffffffel; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e00000000l); }
@Test
public void test12995() { x = 0xefffffffffffffffl; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8f00000000l); }
@Test
public void test12996() { x = 0xdeadf00ddeadf00dl; long result = x * 0x27100000000l; AssertJUnit.assertEquals("multiply", result, 0xa6a70fbd00000000l); }
@Test
public void test12997() { x = 0x000000007fffffffl; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800000000l); }
@Test
public void test12998() { x = 0x0000000080000000l; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test12999() { x = 0x00000000ffffffffl; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800000000l); }
@Test
public void test13000() { x = 0x000000017fffffffl; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800000000l); }
@Test
public void test13001() { x = 0x0000000180000000l; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13002() { x = 0x00000001ffffffffl; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800000000l); }
@Test
public void test13003() { x = 0xffffffff7fffffffl; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800000000l); }
@Test
public void test13004() { x = 0xffffffff80000000l; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13005() { x = 0x00000001deadf00dl; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0x35387de800000000l); }
@Test
public void test13006() { x = 0xffffffffdeadf00dl; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0x35387de800000000l); }
@Test
public void test13007() { x = 0x7fffffffffffffffl; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800000000l); }
@Test
public void test13008() { x = 0x7fffffff7fffffffl; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800000000l); }
@Test
public void test13009() { x = 0x7fffffff80000000l; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13010() { x = 0x7fffffffdeadf00dl; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0x35387de800000000l); }
@Test
public void test13011() { x = 0x8000000000000000l; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13012() { x = 0xffffffffffffffffl; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800000000l); }
@Test
public void test13013() { x = 0xfffffffffffffffel; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000000000l); }
@Test
public void test13014() { x = 0xefffffffffffffffl; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800000000l); }
@Test
public void test13015() { x = 0xdeadf00ddeadf00dl; long result = x * 0x138800000000l; AssertJUnit.assertEquals("multiply", result, 0x35387de800000000l); }
@Test
public void test13016() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0xfffffec780000271l); }
@Test
public void test13017() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0xfffffec780000000l); }
@Test
public void test13018() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0xfffffd8f00000271l); }
@Test
public void test13019() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0xfffffc5680000271l); }
@Test
public void test13020() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0xfffffc5680000000l); }
@Test
public void test13021() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e00000271l); }
@Test
public void test13022() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0x0000013880000271l); }
@Test
public void test13023() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0x0000013880000000l); }
@Test
public void test13024() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0xfffffb6f5958f043l); }
@Test
public void test13025() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0x000000515958f043l); }
@Test
public void test13026() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000271l); }
@Test
public void test13027() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0x8000013880000271l); }
@Test
public void test13028() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0x8000013880000000l); }
@Test
public void test13029() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0x800000515958f043l); }
@Test
public void test13030() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13031() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000271l); }
@Test
public void test13032() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0x00000000000004e2l); }
@Test
public void test13033() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0x1000000000000271l); }
@Test
public void test13034() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffd8fl; AssertJUnit.assertEquals("multiply", result, 0x5958ee235958f043l); }
@Test
public void test13035() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0xfffff63c00001388l); }
@Test
public void test13036() { x = 0x0000000080000000l; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0xfffff63c00000000l); }
@Test
public void test13037() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800001388l); }
@Test
public void test13038() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0xffffe2b400001388l); }
@Test
public void test13039() { x = 0x0000000180000000l; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0xffffe2b400000000l); }
@Test
public void test13040() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000001388l); }
@Test
public void test13041() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0x000009c400001388l); }
@Test
public void test13042() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0x000009c400000000l); }
@Test
public void test13043() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0xffffdb7acac78218l); }
@Test
public void test13044() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0x0000028acac78218l); }
@Test
public void test13045() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001388l); }
@Test
public void test13046() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0x000009c400001388l); }
@Test
public void test13047() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0x000009c400000000l); }
@Test
public void test13048() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0x0000028acac78218l); }
@Test
public void test13049() { x = 0x8000000000000000l; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13050() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001388l); }
@Test
public void test13051() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002710l); }
@Test
public void test13052() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0x8000000000001388l); }
@Test
public void test13053() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffec78l; AssertJUnit.assertEquals("multiply", result, 0xcac7711acac78218l); }
@Test
public void test13054() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0xfffec78000027100l); }
@Test
public void test13055() { x = 0x0000000080000000l; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0xfffec78000000000l); }
@Test
public void test13056() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0xfffd8f0000027100l); }
@Test
public void test13057() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0xfffc568000027100l); }
@Test
public void test13058() { x = 0x0000000180000000l; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0xfffc568000000000l); }
@Test
public void test13059() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0xfffb1e0000027100l); }
@Test
public void test13060() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0x0001388000027100l); }
@Test
public void test13061() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0x0001388000000000l); }
@Test
public void test13062() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0xfffb6f5958f04300l); }
@Test
public void test13063() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0x0000515958f04300l); }
@Test
public void test13064() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000027100l); }
@Test
public void test13065() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0x0001388000027100l); }
@Test
public void test13066() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0x0001388000000000l); }
@Test
public void test13067() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0x0000515958f04300l); }
@Test
public void test13068() { x = 0x8000000000000000l; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13069() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000027100l); }
@Test
public void test13070() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0x000000000004e200l); }
@Test
public void test13071() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000027100l); }
@Test
public void test13072() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffd8f00l; AssertJUnit.assertEquals("multiply", result, 0x58ee235958f04300l); }
@Test
public void test13073() { x = 0x000000007fffffffl; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000027100000000l); }
@Test
public void test13074() { x = 0x0000000080000000l; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13075() { x = 0x00000000ffffffffl; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000027100000000l); }
@Test
public void test13076() { x = 0x000000017fffffffl; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000027100000000l); }
@Test
public void test13077() { x = 0x0000000180000000l; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13078() { x = 0x00000001ffffffffl; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000027100000000l); }
@Test
public void test13079() { x = 0xffffffff7fffffffl; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000027100000000l); }
@Test
public void test13080() { x = 0xffffffff80000000l; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13081() { x = 0x00000001deadf00dl; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x5958f04300000000l); }
@Test
public void test13082() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x5958f04300000000l); }
@Test
public void test13083() { x = 0x7fffffffffffffffl; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000027100000000l); }
@Test
public void test13084() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000027100000000l); }
@Test
public void test13085() { x = 0x7fffffff80000000l; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13086() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x5958f04300000000l); }
@Test
public void test13087() { x = 0x8000000000000000l; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13088() { x = 0xffffffffffffffffl; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000027100000000l); }
@Test
public void test13089() { x = 0xfffffffffffffffel; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x000004e200000000l); }
@Test
public void test13090() { x = 0xefffffffffffffffl; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000027100000000l); }
@Test
public void test13091() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffd8f00000000l; AssertJUnit.assertEquals("multiply", result, 0x5958f04300000000l); }
@Test
public void test13092() { x = 0x000000007fffffffl; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000138800000000l); }
@Test
public void test13093() { x = 0x0000000080000000l; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13094() { x = 0x00000000ffffffffl; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000138800000000l); }
@Test
public void test13095() { x = 0x000000017fffffffl; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000138800000000l); }
@Test
public void test13096() { x = 0x0000000180000000l; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13097() { x = 0x00000001ffffffffl; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000138800000000l); }
@Test
public void test13098() { x = 0xffffffff7fffffffl; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000138800000000l); }
@Test
public void test13099() { x = 0xffffffff80000000l; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13100() { x = 0x00000001deadf00dl; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0xcac7821800000000l); }
@Test
public void test13101() { x = 0xffffffffdeadf00dl; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0xcac7821800000000l); }
@Test
public void test13102() { x = 0x7fffffffffffffffl; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000138800000000l); }
@Test
public void test13103() { x = 0x7fffffff7fffffffl; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000138800000000l); }
@Test
public void test13104() { x = 0x7fffffff80000000l; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13105() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0xcac7821800000000l); }
@Test
public void test13106() { x = 0x8000000000000000l; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13107() { x = 0xffffffffffffffffl; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000138800000000l); }
@Test
public void test13108() { x = 0xfffffffffffffffel; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000271000000000l); }
@Test
public void test13109() { x = 0xefffffffffffffffl; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000138800000000l); }
@Test
public void test13110() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffec7800000000l; AssertJUnit.assertEquals("multiply", result, 0xcac7821800000000l); }
@Test
public void test13111() { x = 0x000000007fffffffl; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0x0000016c7ffffd27l); }
@Test
public void test13112() { x = 0x0000000080000000l; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0x0000016c80000000l); }
@Test
public void test13113() { x = 0x00000000ffffffffl; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0x000002d8fffffd27l); }
@Test
public void test13114() { x = 0x000000017fffffffl; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0x000004457ffffd27l); }
@Test
public void test13115() { x = 0x0000000180000000l; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0x0000044580000000l); }
@Test
public void test13116() { x = 0x00000001ffffffffl; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0x000005b1fffffd27l); }
@Test
public void test13117() { x = 0xffffffff7fffffffl; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0xfffffe937ffffd27l); }
@Test
public void test13118() { x = 0xffffffff80000000l; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9380000000l); }
@Test
public void test13119() { x = 0x00000001deadf00dl; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0x000005531d509505l); }
@Test
public void test13120() { x = 0xffffffffdeadf00dl; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0xffffffa11d509505l); }
@Test
public void test13121() { x = 0x7fffffffffffffffl; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffd27l); }
@Test
public void test13122() { x = 0x7fffffff7fffffffl; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe937ffffd27l); }
@Test
public void test13123() { x = 0x7fffffff80000000l; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0x7ffffe9380000000l); }
@Test
public void test13124() { x = 0x7fffffffdeadf00dl; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0x7fffffa11d509505l); }
@Test
public void test13125() { x = 0x8000000000000000l; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13126() { x = 0xffffffffffffffffl; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd27l); }
@Test
public void test13127() { x = 0xfffffffffffffffel; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffa4el); }
@Test
public void test13128() { x = 0xefffffffffffffffl; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0x6ffffffffffffd27l); }
@Test
public void test13129() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2d9l; AssertJUnit.assertEquals("multiply", result, 0x1d50977f1d509505l); }
@Test
public void test13130() { x = 0x000000007fffffffl; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0x00000b63ffffe938l); }
@Test
public void test13131() { x = 0x0000000080000000l; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0x00000b6400000000l); }
@Test
public void test13132() { x = 0x00000000ffffffffl; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0x000016c7ffffe938l); }
@Test
public void test13133() { x = 0x000000017fffffffl; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0x0000222bffffe938l); }
@Test
public void test13134() { x = 0x0000000180000000l; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0x0000222c00000000l); }
@Test
public void test13135() { x = 0x00000001ffffffffl; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0x00002d8fffffe938l); }
@Test
public void test13136() { x = 0xffffffff7fffffffl; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0xfffff49bffffe938l); }
@Test
public void test13137() { x = 0xffffffff80000000l; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0xfffff49c00000000l); }
@Test
public void test13138() { x = 0x00000001deadf00dl; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0x00002a98ea84a828l); }
@Test
public void test13139() { x = 0xffffffffdeadf00dl; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0xfffffd08ea84a828l); }
@Test
public void test13140() { x = 0x7fffffffffffffffl; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe938l); }
@Test
public void test13141() { x = 0x7fffffff7fffffffl; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0xfffff49bffffe938l); }
@Test
public void test13142() { x = 0x7fffffff80000000l; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0xfffff49c00000000l); }
@Test
public void test13143() { x = 0x7fffffffdeadf00dl; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0xfffffd08ea84a828l); }
@Test
public void test13144() { x = 0x8000000000000000l; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13145() { x = 0xffffffffffffffffl; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe938l); }
@Test
public void test13146() { x = 0xfffffffffffffffel; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd270l); }
@Test
public void test13147() { x = 0xefffffffffffffffl; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffe938l); }
@Test
public void test13148() { x = 0xdeadf00ddeadf00dl; long result = x * 0x16c8l; AssertJUnit.assertEquals("multiply", result, 0xea84bbf8ea84a828l); }
@Test
public void test13149() { x = 0x000000007fffffffl; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0x00016c7ffffd2700l); }
@Test
public void test13150() { x = 0x0000000080000000l; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0x00016c8000000000l); }
@Test
public void test13151() { x = 0x00000000ffffffffl; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0x0002d8fffffd2700l); }
@Test
public void test13152() { x = 0x000000017fffffffl; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0x0004457ffffd2700l); }
@Test
public void test13153() { x = 0x0000000180000000l; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0x0004458000000000l); }
@Test
public void test13154() { x = 0x00000001ffffffffl; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0x0005b1fffffd2700l); }
@Test
public void test13155() { x = 0xffffffff7fffffffl; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0xfffe937ffffd2700l); }
@Test
public void test13156() { x = 0xffffffff80000000l; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0xfffe938000000000l); }
@Test
public void test13157() { x = 0x00000001deadf00dl; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0x0005531d50950500l); }
@Test
public void test13158() { x = 0xffffffffdeadf00dl; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0xffffa11d50950500l); }
@Test
public void test13159() { x = 0x7fffffffffffffffl; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffd2700l); }
@Test
public void test13160() { x = 0x7fffffff7fffffffl; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0xfffe937ffffd2700l); }
@Test
public void test13161() { x = 0x7fffffff80000000l; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0xfffe938000000000l); }
@Test
public void test13162() { x = 0x7fffffffdeadf00dl; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0xffffa11d50950500l); }
@Test
public void test13163() { x = 0x8000000000000000l; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13164() { x = 0xffffffffffffffffl; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffd2700l); }
@Test
public void test13165() { x = 0xfffffffffffffffel; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffa4e00l); }
@Test
public void test13166() { x = 0xefffffffffffffffl; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffd2700l); }
@Test
public void test13167() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2d900l; AssertJUnit.assertEquals("multiply", result, 0x50977f1d50950500l); }
@Test
public void test13168() { x = 0x000000007fffffffl; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffd2700000000l); }
@Test
public void test13169() { x = 0x0000000080000000l; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13170() { x = 0x00000000ffffffffl; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd2700000000l); }
@Test
public void test13171() { x = 0x000000017fffffffl; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffd2700000000l); }
@Test
public void test13172() { x = 0x0000000180000000l; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13173() { x = 0x00000001ffffffffl; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd2700000000l); }
@Test
public void test13174() { x = 0xffffffff7fffffffl; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffd2700000000l); }
@Test
public void test13175() { x = 0xffffffff80000000l; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13176() { x = 0x00000001deadf00dl; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0x1d50950500000000l); }
@Test
public void test13177() { x = 0xffffffffdeadf00dl; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0x1d50950500000000l); }
@Test
public void test13178() { x = 0x7fffffffffffffffl; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd2700000000l); }
@Test
public void test13179() { x = 0x7fffffff7fffffffl; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffd2700000000l); }
@Test
public void test13180() { x = 0x7fffffff80000000l; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13181() { x = 0x7fffffffdeadf00dl; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0x1d50950500000000l); }
@Test
public void test13182() { x = 0x8000000000000000l; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13183() { x = 0xffffffffffffffffl; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd2700000000l); }
@Test
public void test13184() { x = 0xfffffffffffffffel; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa4e00000000l); }
@Test
public void test13185() { x = 0xefffffffffffffffl; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd2700000000l); }
@Test
public void test13186() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2d900000000l; AssertJUnit.assertEquals("multiply", result, 0x1d50950500000000l); }
@Test
public void test13187() { x = 0x000000007fffffffl; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe93800000000l); }
@Test
public void test13188() { x = 0x0000000080000000l; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13189() { x = 0x00000000ffffffffl; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe93800000000l); }
@Test
public void test13190() { x = 0x000000017fffffffl; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe93800000000l); }
@Test
public void test13191() { x = 0x0000000180000000l; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13192() { x = 0x00000001ffffffffl; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe93800000000l); }
@Test
public void test13193() { x = 0xffffffff7fffffffl; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe93800000000l); }
@Test
public void test13194() { x = 0xffffffff80000000l; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13195() { x = 0x00000001deadf00dl; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0xea84a82800000000l); }
@Test
public void test13196() { x = 0xffffffffdeadf00dl; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0xea84a82800000000l); }
@Test
public void test13197() { x = 0x7fffffffffffffffl; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe93800000000l); }
@Test
public void test13198() { x = 0x7fffffff7fffffffl; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe93800000000l); }
@Test
public void test13199() { x = 0x7fffffff80000000l; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13200() { x = 0x7fffffffdeadf00dl; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0xea84a82800000000l); }
@Test
public void test13201() { x = 0x8000000000000000l; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13202() { x = 0xffffffffffffffffl; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe93800000000l); }
@Test
public void test13203() { x = 0xfffffffffffffffel; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd27000000000l); }
@Test
public void test13204() { x = 0xefffffffffffffffl; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe93800000000l); }
@Test
public void test13205() { x = 0xdeadf00ddeadf00dl; long result = x * 0x16c800000000l; AssertJUnit.assertEquals("multiply", result, 0xea84a82800000000l); }
@Test
public void test13206() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0xfffffe93800002d9l); }
@Test
public void test13207() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0xfffffe9380000000l); }
@Test
public void test13208() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0xfffffd27000002d9l); }
@Test
public void test13209() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0xfffffbba800002d9l); }
@Test
public void test13210() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0xfffffbba80000000l); }
@Test
public void test13211() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0xfffffa4e000002d9l); }
@Test
public void test13212() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0x0000016c800002d9l); }
@Test
public void test13213() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0x0000016c80000000l); }
@Test
public void test13214() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0xfffffaace2af6afbl); }
@Test
public void test13215() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0x0000005ee2af6afbl); }
@Test
public void test13216() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0x80000000000002d9l); }
@Test
public void test13217() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0x8000016c800002d9l); }
@Test
public void test13218() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0x8000016c80000000l); }
@Test
public void test13219() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0x8000005ee2af6afbl); }
@Test
public void test13220() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13221() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0x00000000000002d9l); }
@Test
public void test13222() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0x00000000000005b2l); }
@Test
public void test13223() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0x90000000000002d9l); }
@Test
public void test13224() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffd27l; AssertJUnit.assertEquals("multiply", result, 0xe2af6880e2af6afbl); }
@Test
public void test13225() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0xfffff49c000016c8l); }
@Test
public void test13226() { x = 0x0000000080000000l; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0xfffff49c00000000l); }
@Test
public void test13227() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0xffffe938000016c8l); }
@Test
public void test13228() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0xffffddd4000016c8l); }
@Test
public void test13229() { x = 0x0000000180000000l; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0xffffddd400000000l); }
@Test
public void test13230() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0xffffd270000016c8l); }
@Test
public void test13231() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0x00000b64000016c8l); }
@Test
public void test13232() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0x00000b6400000000l); }
@Test
public void test13233() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0xffffd567157b57d8l); }
@Test
public void test13234() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0x000002f7157b57d8l); }
@Test
public void test13235() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0x00000000000016c8l); }
@Test
public void test13236() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0x00000b64000016c8l); }
@Test
public void test13237() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0x00000b6400000000l); }
@Test
public void test13238() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0x000002f7157b57d8l); }
@Test
public void test13239() { x = 0x8000000000000000l; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13240() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0x00000000000016c8l); }
@Test
public void test13241() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002d90l); }
@Test
public void test13242() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0x80000000000016c8l); }
@Test
public void test13243() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffe938l; AssertJUnit.assertEquals("multiply", result, 0x157b4407157b57d8l); }
@Test
public void test13244() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0xfffe93800002d900l); }
@Test
public void test13245() { x = 0x0000000080000000l; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0xfffe938000000000l); }
@Test
public void test13246() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0xfffd27000002d900l); }
@Test
public void test13247() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0xfffbba800002d900l); }
@Test
public void test13248() { x = 0x0000000180000000l; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0xfffbba8000000000l); }
@Test
public void test13249() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0xfffa4e000002d900l); }
@Test
public void test13250() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0x00016c800002d900l); }
@Test
public void test13251() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0x00016c8000000000l); }
@Test
public void test13252() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0xfffaace2af6afb00l); }
@Test
public void test13253() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0x00005ee2af6afb00l); }
@Test
public void test13254() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0x000000000002d900l); }
@Test
public void test13255() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0x00016c800002d900l); }
@Test
public void test13256() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0x00016c8000000000l); }
@Test
public void test13257() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0x00005ee2af6afb00l); }
@Test
public void test13258() { x = 0x8000000000000000l; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13259() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0x000000000002d900l); }
@Test
public void test13260() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0x000000000005b200l); }
@Test
public void test13261() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0x000000000002d900l); }
@Test
public void test13262() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffd2700l; AssertJUnit.assertEquals("multiply", result, 0xaf6880e2af6afb00l); }
@Test
public void test13263() { x = 0x000000007fffffffl; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x800002d900000000l); }
@Test
public void test13264() { x = 0x0000000080000000l; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13265() { x = 0x00000000ffffffffl; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d900000000l); }
@Test
public void test13266() { x = 0x000000017fffffffl; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x800002d900000000l); }
@Test
public void test13267() { x = 0x0000000180000000l; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13268() { x = 0x00000001ffffffffl; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d900000000l); }
@Test
public void test13269() { x = 0xffffffff7fffffffl; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x800002d900000000l); }
@Test
public void test13270() { x = 0xffffffff80000000l; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13271() { x = 0x00000001deadf00dl; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0xe2af6afb00000000l); }
@Test
public void test13272() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0xe2af6afb00000000l); }
@Test
public void test13273() { x = 0x7fffffffffffffffl; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d900000000l); }
@Test
public void test13274() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x800002d900000000l); }
@Test
public void test13275() { x = 0x7fffffff80000000l; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13276() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0xe2af6afb00000000l); }
@Test
public void test13277() { x = 0x8000000000000000l; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13278() { x = 0xffffffffffffffffl; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d900000000l); }
@Test
public void test13279() { x = 0xfffffffffffffffel; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x000005b200000000l); }
@Test
public void test13280() { x = 0xefffffffffffffffl; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0x000002d900000000l); }
@Test
public void test13281() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffd2700000000l; AssertJUnit.assertEquals("multiply", result, 0xe2af6afb00000000l); }
@Test
public void test13282() { x = 0x000000007fffffffl; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x000016c800000000l); }
@Test
public void test13283() { x = 0x0000000080000000l; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13284() { x = 0x00000000ffffffffl; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x000016c800000000l); }
@Test
public void test13285() { x = 0x000000017fffffffl; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x000016c800000000l); }
@Test
public void test13286() { x = 0x0000000180000000l; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13287() { x = 0x00000001ffffffffl; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x000016c800000000l); }
@Test
public void test13288() { x = 0xffffffff7fffffffl; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x000016c800000000l); }
@Test
public void test13289() { x = 0xffffffff80000000l; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13290() { x = 0x00000001deadf00dl; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x157b57d800000000l); }
@Test
public void test13291() { x = 0xffffffffdeadf00dl; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x157b57d800000000l); }
@Test
public void test13292() { x = 0x7fffffffffffffffl; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x000016c800000000l); }
@Test
public void test13293() { x = 0x7fffffff7fffffffl; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x000016c800000000l); }
@Test
public void test13294() { x = 0x7fffffff80000000l; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13295() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x157b57d800000000l); }
@Test
public void test13296() { x = 0x8000000000000000l; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13297() { x = 0xffffffffffffffffl; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x000016c800000000l); }
@Test
public void test13298() { x = 0xfffffffffffffffel; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x00002d9000000000l); }
@Test
public void test13299() { x = 0xefffffffffffffffl; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x000016c800000000l); }
@Test
public void test13300() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffe93800000000l; AssertJUnit.assertEquals("multiply", result, 0x157b57d800000000l); }
@Test
public void test13301() { x = 0x000000007fffffffl; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0x00000176fffffd12l); }
@Test
public void test13302() { x = 0x0000000080000000l; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0x0000017700000000l); }
@Test
public void test13303() { x = 0x00000000ffffffffl; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0x000002edfffffd12l); }
@Test
public void test13304() { x = 0x000000017fffffffl; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0x00000464fffffd12l); }
@Test
public void test13305() { x = 0x0000000180000000l; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0x0000046500000000l); }
@Test
public void test13306() { x = 0x00000001ffffffffl; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0x000005dbfffffd12l); }
@Test
public void test13307() { x = 0xffffffff7fffffffl; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0xfffffe88fffffd12l); }
@Test
public void test13308() { x = 0xffffffff80000000l; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0xfffffe8900000000l); }
@Test
public void test13309() { x = 0x00000001deadf00dl; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0x0000057a61954616l); }
@Test
public void test13310() { x = 0xffffffffdeadf00dl; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0xffffff9e61954616l); }
@Test
public void test13311() { x = 0x7fffffffffffffffl; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd12l); }
@Test
public void test13312() { x = 0x7fffffff7fffffffl; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0xfffffe88fffffd12l); }
@Test
public void test13313() { x = 0x7fffffff80000000l; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0xfffffe8900000000l); }
@Test
public void test13314() { x = 0x7fffffffdeadf00dl; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0xffffff9e61954616l); }
@Test
public void test13315() { x = 0x8000000000000000l; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13316() { x = 0xffffffffffffffffl; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd12l); }
@Test
public void test13317() { x = 0xfffffffffffffffel; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffa24l); }
@Test
public void test13318() { x = 0xefffffffffffffffl; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0x1ffffffffffffd12l); }
@Test
public void test13319() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2eel; AssertJUnit.assertEquals("multiply", result, 0x619548a261954616l); }
@Test
public void test13320() { x = 0x000000007fffffffl; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0x00000bb7ffffe890l); }
@Test
public void test13321() { x = 0x0000000080000000l; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test13322() { x = 0x00000000ffffffffl; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0x0000176fffffe890l); }
@Test
public void test13323() { x = 0x000000017fffffffl; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0x00002327ffffe890l); }
@Test
public void test13324() { x = 0x0000000180000000l; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0x0000232800000000l); }
@Test
public void test13325() { x = 0x00000001ffffffffl; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0x00002edfffffe890l); }
@Test
public void test13326() { x = 0xffffffff7fffffffl; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0xfffff447ffffe890l); }
@Test
public void test13327() { x = 0xffffffff80000000l; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test13328() { x = 0x00000001deadf00dl; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0x00002bd30caa30b0l); }
@Test
public void test13329() { x = 0xffffffffdeadf00dl; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0xfffffcf30caa30b0l); }
@Test
public void test13330() { x = 0x7fffffffffffffffl; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe890l); }
@Test
public void test13331() { x = 0x7fffffff7fffffffl; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0xfffff447ffffe890l); }
@Test
public void test13332() { x = 0x7fffffff80000000l; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test13333() { x = 0x7fffffffdeadf00dl; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0xfffffcf30caa30b0l); }
@Test
public void test13334() { x = 0x8000000000000000l; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13335() { x = 0xffffffffffffffffl; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe890l); }
@Test
public void test13336() { x = 0xfffffffffffffffel; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd120l); }
@Test
public void test13337() { x = 0xefffffffffffffffl; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe890l); }
@Test
public void test13338() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1770l; AssertJUnit.assertEquals("multiply", result, 0x0caa45130caa30b0l); }
@Test
public void test13339() { x = 0x000000007fffffffl; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0x000176fffffd1200l); }
@Test
public void test13340() { x = 0x0000000080000000l; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0x0001770000000000l); }
@Test
public void test13341() { x = 0x00000000ffffffffl; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0x0002edfffffd1200l); }
@Test
public void test13342() { x = 0x000000017fffffffl; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0x000464fffffd1200l); }
@Test
public void test13343() { x = 0x0000000180000000l; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0x0004650000000000l); }
@Test
public void test13344() { x = 0x00000001ffffffffl; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0x0005dbfffffd1200l); }
@Test
public void test13345() { x = 0xffffffff7fffffffl; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0xfffe88fffffd1200l); }
@Test
public void test13346() { x = 0xffffffff80000000l; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0xfffe890000000000l); }
@Test
public void test13347() { x = 0x00000001deadf00dl; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0x00057a6195461600l); }
@Test
public void test13348() { x = 0xffffffffdeadf00dl; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0xffff9e6195461600l); }
@Test
public void test13349() { x = 0x7fffffffffffffffl; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffd1200l); }
@Test
public void test13350() { x = 0x7fffffff7fffffffl; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0xfffe88fffffd1200l); }
@Test
public void test13351() { x = 0x7fffffff80000000l; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0xfffe890000000000l); }
@Test
public void test13352() { x = 0x7fffffffdeadf00dl; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0xffff9e6195461600l); }
@Test
public void test13353() { x = 0x8000000000000000l; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13354() { x = 0xffffffffffffffffl; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffd1200l); }
@Test
public void test13355() { x = 0xfffffffffffffffel; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffa2400l); }
@Test
public void test13356() { x = 0xefffffffffffffffl; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffd1200l); }
@Test
public void test13357() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2ee00l; AssertJUnit.assertEquals("multiply", result, 0x9548a26195461600l); }
@Test
public void test13358() { x = 0x000000007fffffffl; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000000l); }
@Test
public void test13359() { x = 0x0000000080000000l; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13360() { x = 0x00000000ffffffffl; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000000l); }
@Test
public void test13361() { x = 0x000000017fffffffl; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000000l); }
@Test
public void test13362() { x = 0x0000000180000000l; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13363() { x = 0x00000001ffffffffl; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000000l); }
@Test
public void test13364() { x = 0xffffffff7fffffffl; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000000l); }
@Test
public void test13365() { x = 0xffffffff80000000l; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13366() { x = 0x00000001deadf00dl; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0x6195461600000000l); }
@Test
public void test13367() { x = 0xffffffffdeadf00dl; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0x6195461600000000l); }
@Test
public void test13368() { x = 0x7fffffffffffffffl; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000000l); }
@Test
public void test13369() { x = 0x7fffffff7fffffffl; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000000l); }
@Test
public void test13370() { x = 0x7fffffff80000000l; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13371() { x = 0x7fffffffdeadf00dl; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0x6195461600000000l); }
@Test
public void test13372() { x = 0x8000000000000000l; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13373() { x = 0xffffffffffffffffl; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000000l); }
@Test
public void test13374() { x = 0xfffffffffffffffel; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test13375() { x = 0xefffffffffffffffl; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000000l); }
@Test
public void test13376() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2ee00000000l; AssertJUnit.assertEquals("multiply", result, 0x6195461600000000l); }
@Test
public void test13377() { x = 0x000000007fffffffl; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000000l); }
@Test
public void test13378() { x = 0x0000000080000000l; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13379() { x = 0x00000000ffffffffl; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000000l); }
@Test
public void test13380() { x = 0x000000017fffffffl; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000000l); }
@Test
public void test13381() { x = 0x0000000180000000l; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13382() { x = 0x00000001ffffffffl; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000000l); }
@Test
public void test13383() { x = 0xffffffff7fffffffl; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000000l); }
@Test
public void test13384() { x = 0xffffffff80000000l; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13385() { x = 0x00000001deadf00dl; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0x0caa30b000000000l); }
@Test
public void test13386() { x = 0xffffffffdeadf00dl; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0x0caa30b000000000l); }
@Test
public void test13387() { x = 0x7fffffffffffffffl; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000000l); }
@Test
public void test13388() { x = 0x7fffffff7fffffffl; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000000l); }
@Test
public void test13389() { x = 0x7fffffff80000000l; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13390() { x = 0x7fffffffdeadf00dl; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0x0caa30b000000000l); }
@Test
public void test13391() { x = 0x8000000000000000l; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13392() { x = 0xffffffffffffffffl; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000000l); }
@Test
public void test13393() { x = 0xfffffffffffffffel; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd12000000000l); }
@Test
public void test13394() { x = 0xefffffffffffffffl; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000000l); }
@Test
public void test13395() { x = 0xdeadf00ddeadf00dl; long result = x * 0x177000000000l; AssertJUnit.assertEquals("multiply", result, 0x0caa30b000000000l); }
@Test
public void test13396() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0xfffffe89000002eel); }
@Test
public void test13397() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8900000000l); }
@Test
public void test13398() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0xfffffd12000002eel); }
@Test
public void test13399() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0xfffffb9b000002eel); }
@Test
public void test13400() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0xfffffb9b00000000l); }
@Test
public void test13401() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0xfffffa24000002eel); }
@Test
public void test13402() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0x00000177000002eel); }
@Test
public void test13403() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0x0000017700000000l); }
@Test
public void test13404() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0xfffffa859e6ab9eal); }
@Test
public void test13405() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0x000000619e6ab9eal); }
@Test
public void test13406() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0x00000000000002eel); }
@Test
public void test13407() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0x00000177000002eel); }
@Test
public void test13408() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0x0000017700000000l); }
@Test
public void test13409() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0x000000619e6ab9eal); }
@Test
public void test13410() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13411() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0x00000000000002eel); }
@Test
public void test13412() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0x00000000000005dcl); }
@Test
public void test13413() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0xe0000000000002eel); }
@Test
public void test13414() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffd12l; AssertJUnit.assertEquals("multiply", result, 0x9e6ab75d9e6ab9eal); }
@Test
public void test13415() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800001770l); }
@Test
public void test13416() { x = 0x0000000080000000l; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test13417() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000001770l); }
@Test
public void test13418() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800001770l); }
@Test
public void test13419() { x = 0x0000000180000000l; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800000000l); }
@Test
public void test13420() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0xffffd12000001770l); }
@Test
public void test13421() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800001770l); }
@Test
public void test13422() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test13423() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0xffffd42cf355cf50l); }
@Test
public void test13424() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0x0000030cf355cf50l); }
@Test
public void test13425() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001770l); }
@Test
public void test13426() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800001770l); }
@Test
public void test13427() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test13428() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0x0000030cf355cf50l); }
@Test
public void test13429() { x = 0x8000000000000000l; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13430() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001770l); }
@Test
public void test13431() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002ee0l); }
@Test
public void test13432() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001770l); }
@Test
public void test13433() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffe890l; AssertJUnit.assertEquals("multiply", result, 0xf355baecf355cf50l); }
@Test
public void test13434() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0xfffe89000002ee00l); }
@Test
public void test13435() { x = 0x0000000080000000l; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0xfffe890000000000l); }
@Test
public void test13436() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0xfffd12000002ee00l); }
@Test
public void test13437() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0xfffb9b000002ee00l); }
@Test
public void test13438() { x = 0x0000000180000000l; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0xfffb9b0000000000l); }
@Test
public void test13439() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0xfffa24000002ee00l); }
@Test
public void test13440() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0x000177000002ee00l); }
@Test
public void test13441() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0x0001770000000000l); }
@Test
public void test13442() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0xfffa859e6ab9ea00l); }
@Test
public void test13443() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0x0000619e6ab9ea00l); }
@Test
public void test13444() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0x000000000002ee00l); }
@Test
public void test13445() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0x000177000002ee00l); }
@Test
public void test13446() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0x0001770000000000l); }
@Test
public void test13447() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0x0000619e6ab9ea00l); }
@Test
public void test13448() { x = 0x8000000000000000l; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13449() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0x000000000002ee00l); }
@Test
public void test13450() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0x000000000005dc00l); }
@Test
public void test13451() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0x000000000002ee00l); }
@Test
public void test13452() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffd1200l; AssertJUnit.assertEquals("multiply", result, 0x6ab75d9e6ab9ea00l); }
@Test
public void test13453() { x = 0x000000007fffffffl; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x000002ee00000000l); }
@Test
public void test13454() { x = 0x0000000080000000l; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13455() { x = 0x00000000ffffffffl; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x000002ee00000000l); }
@Test
public void test13456() { x = 0x000000017fffffffl; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x000002ee00000000l); }
@Test
public void test13457() { x = 0x0000000180000000l; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13458() { x = 0x00000001ffffffffl; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x000002ee00000000l); }
@Test
public void test13459() { x = 0xffffffff7fffffffl; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x000002ee00000000l); }
@Test
public void test13460() { x = 0xffffffff80000000l; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13461() { x = 0x00000001deadf00dl; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x9e6ab9ea00000000l); }
@Test
public void test13462() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x9e6ab9ea00000000l); }
@Test
public void test13463() { x = 0x7fffffffffffffffl; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x000002ee00000000l); }
@Test
public void test13464() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x000002ee00000000l); }
@Test
public void test13465() { x = 0x7fffffff80000000l; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13466() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x9e6ab9ea00000000l); }
@Test
public void test13467() { x = 0x8000000000000000l; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13468() { x = 0xffffffffffffffffl; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x000002ee00000000l); }
@Test
public void test13469() { x = 0xfffffffffffffffel; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test13470() { x = 0xefffffffffffffffl; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x000002ee00000000l); }
@Test
public void test13471() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffd1200000000l; AssertJUnit.assertEquals("multiply", result, 0x9e6ab9ea00000000l); }
@Test
public void test13472() { x = 0x000000007fffffffl; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000177000000000l); }
@Test
public void test13473() { x = 0x0000000080000000l; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13474() { x = 0x00000000ffffffffl; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000177000000000l); }
@Test
public void test13475() { x = 0x000000017fffffffl; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000177000000000l); }
@Test
public void test13476() { x = 0x0000000180000000l; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13477() { x = 0x00000001ffffffffl; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000177000000000l); }
@Test
public void test13478() { x = 0xffffffff7fffffffl; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000177000000000l); }
@Test
public void test13479() { x = 0xffffffff80000000l; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13480() { x = 0x00000001deadf00dl; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0xf355cf5000000000l); }
@Test
public void test13481() { x = 0xffffffffdeadf00dl; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0xf355cf5000000000l); }
@Test
public void test13482() { x = 0x7fffffffffffffffl; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000177000000000l); }
@Test
public void test13483() { x = 0x7fffffff7fffffffl; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000177000000000l); }
@Test
public void test13484() { x = 0x7fffffff80000000l; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13485() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0xf355cf5000000000l); }
@Test
public void test13486() { x = 0x8000000000000000l; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13487() { x = 0xffffffffffffffffl; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000177000000000l); }
@Test
public void test13488() { x = 0xfffffffffffffffel; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x00002ee000000000l); }
@Test
public void test13489() { x = 0xefffffffffffffffl; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000177000000000l); }
@Test
public void test13490() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffe89000000000l; AssertJUnit.assertEquals("multiply", result, 0xf355cf5000000000l); }
@Test
public void test13491() { x = 0x000000007fffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x000001f3fffffc18l); }
@Test
public void test13492() { x = 0x0000000080000000l; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test13493() { x = 0x00000000ffffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x000003e7fffffc18l); }
@Test
public void test13494() { x = 0x000000017fffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x000005dbfffffc18l); }
@Test
public void test13495() { x = 0x0000000180000000l; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test13496() { x = 0x00000001ffffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x000007cffffffc18l); }
@Test
public void test13497() { x = 0xffffffff7fffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0bfffffc18l); }
@Test
public void test13498() { x = 0xffffffff80000000l; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test13499() { x = 0x00000001deadf00dl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x0000074dd771b2c8l); }
@Test
public void test13500() { x = 0xffffffffdeadf00dl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xffffff7dd771b2c8l); }
@Test
public void test13501() { x = 0x7fffffffffffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffc18l); }
@Test
public void test13502() { x = 0x7fffffff7fffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0bfffffc18l); }
@Test
public void test13503() { x = 0x7fffffff80000000l; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test13504() { x = 0x7fffffffdeadf00dl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xffffff7dd771b2c8l); }
@Test
public void test13505() { x = 0x8000000000000000l; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13506() { x = 0xffffffffffffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffc18l); }
@Test
public void test13507() { x = 0xfffffffffffffffel; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff830l); }
@Test
public void test13508() { x = 0xefffffffffffffffl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffc18l); }
@Test
public void test13509() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3e8l; AssertJUnit.assertEquals("multiply", result, 0xd771b62dd771b2c8l); }
@Test
public void test13510() { x = 0x000000007fffffffl; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0x00000f9fffffe0c0l); }
@Test
public void test13511() { x = 0x0000000080000000l; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000000000l); }
@Test
public void test13512() { x = 0x00000000ffffffffl; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0x00001f3fffffe0c0l); }
@Test
public void test13513() { x = 0x000000017fffffffl; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0x00002edfffffe0c0l); }
@Test
public void test13514() { x = 0x0000000180000000l; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0x00002ee000000000l); }
@Test
public void test13515() { x = 0x00000001ffffffffl; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0x00003e7fffffe0c0l); }
@Test
public void test13516() { x = 0xffffffff7fffffffl; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0xfffff05fffffe0c0l); }
@Test
public void test13517() { x = 0xffffffff80000000l; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000000l); }
@Test
public void test13518() { x = 0x00000001deadf00dl; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0x00003a6ebb8d9640l); }
@Test
public void test13519() { x = 0xffffffffdeadf00dl; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0xfffffbeebb8d9640l); }
@Test
public void test13520() { x = 0x7fffffffffffffffl; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe0c0l); }
@Test
public void test13521() { x = 0x7fffffff7fffffffl; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0xfffff05fffffe0c0l); }
@Test
public void test13522() { x = 0x7fffffff80000000l; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000000l); }
@Test
public void test13523() { x = 0x7fffffffdeadf00dl; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0xfffffbeebb8d9640l); }
@Test
public void test13524() { x = 0x8000000000000000l; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13525() { x = 0xffffffffffffffffl; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe0c0l); }
@Test
public void test13526() { x = 0xfffffffffffffffel; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc180l); }
@Test
public void test13527() { x = 0xefffffffffffffffl; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe0c0l); }
@Test
public void test13528() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1f40l; AssertJUnit.assertEquals("multiply", result, 0xbb8db16ebb8d9640l); }
@Test
public void test13529() { x = 0x000000007fffffffl; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0x0001f3fffffc1800l); }
@Test
public void test13530() { x = 0x0000000080000000l; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0x0001f40000000000l); }
@Test
public void test13531() { x = 0x00000000ffffffffl; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0x0003e7fffffc1800l); }
@Test
public void test13532() { x = 0x000000017fffffffl; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0x0005dbfffffc1800l); }
@Test
public void test13533() { x = 0x0000000180000000l; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0x0005dc0000000000l); }
@Test
public void test13534() { x = 0x00000001ffffffffl; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0x0007cffffffc1800l); }
@Test
public void test13535() { x = 0xffffffff7fffffffl; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0xfffe0bfffffc1800l); }
@Test
public void test13536() { x = 0xffffffff80000000l; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0xfffe0c0000000000l); }
@Test
public void test13537() { x = 0x00000001deadf00dl; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0x00074dd771b2c800l); }
@Test
public void test13538() { x = 0xffffffffdeadf00dl; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0xffff7dd771b2c800l); }
@Test
public void test13539() { x = 0x7fffffffffffffffl; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffc1800l); }
@Test
public void test13540() { x = 0x7fffffff7fffffffl; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0xfffe0bfffffc1800l); }
@Test
public void test13541() { x = 0x7fffffff80000000l; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0xfffe0c0000000000l); }
@Test
public void test13542() { x = 0x7fffffffdeadf00dl; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0xffff7dd771b2c800l); }
@Test
public void test13543() { x = 0x8000000000000000l; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13544() { x = 0xffffffffffffffffl; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffc1800l); }
@Test
public void test13545() { x = 0xfffffffffffffffel; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff83000l); }
@Test
public void test13546() { x = 0xefffffffffffffffl; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffc1800l); }
@Test
public void test13547() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3e800l; AssertJUnit.assertEquals("multiply", result, 0x71b62dd771b2c800l); }
@Test
public void test13548() { x = 0x000000007fffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test13549() { x = 0x0000000080000000l; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13550() { x = 0x00000000ffffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test13551() { x = 0x000000017fffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test13552() { x = 0x0000000180000000l; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13553() { x = 0x00000001ffffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test13554() { x = 0xffffffff7fffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test13555() { x = 0xffffffff80000000l; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13556() { x = 0x00000001deadf00dl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xd771b2c800000000l); }
@Test
public void test13557() { x = 0xffffffffdeadf00dl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xd771b2c800000000l); }
@Test
public void test13558() { x = 0x7fffffffffffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test13559() { x = 0x7fffffff7fffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test13560() { x = 0x7fffffff80000000l; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13561() { x = 0x7fffffffdeadf00dl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xd771b2c800000000l); }
@Test
public void test13562() { x = 0x8000000000000000l; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13563() { x = 0xffffffffffffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test13564() { x = 0xfffffffffffffffel; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test13565() { x = 0xefffffffffffffffl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test13566() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3e800000000l; AssertJUnit.assertEquals("multiply", result, 0xd771b2c800000000l); }
@Test
public void test13567() { x = 0x000000007fffffffl; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000000000l); }
@Test
public void test13568() { x = 0x0000000080000000l; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13569() { x = 0x00000000ffffffffl; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000000000l); }
@Test
public void test13570() { x = 0x000000017fffffffl; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000000000l); }
@Test
public void test13571() { x = 0x0000000180000000l; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13572() { x = 0x00000001ffffffffl; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000000000l); }
@Test
public void test13573() { x = 0xffffffff7fffffffl; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000000000l); }
@Test
public void test13574() { x = 0xffffffff80000000l; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13575() { x = 0x00000001deadf00dl; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0xbb8d964000000000l); }
@Test
public void test13576() { x = 0xffffffffdeadf00dl; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0xbb8d964000000000l); }
@Test
public void test13577() { x = 0x7fffffffffffffffl; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000000000l); }
@Test
public void test13578() { x = 0x7fffffff7fffffffl; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000000000l); }
@Test
public void test13579() { x = 0x7fffffff80000000l; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13580() { x = 0x7fffffffdeadf00dl; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0xbb8d964000000000l); }
@Test
public void test13581() { x = 0x8000000000000000l; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13582() { x = 0xffffffffffffffffl; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000000000l); }
@Test
public void test13583() { x = 0xfffffffffffffffel; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000000000l); }
@Test
public void test13584() { x = 0xefffffffffffffffl; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000000000l); }
@Test
public void test13585() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1f4000000000l; AssertJUnit.assertEquals("multiply", result, 0xbb8d964000000000l); }
@Test
public void test13586() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c000003e8l); }
@Test
public void test13587() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0c00000000l); }
@Test
public void test13588() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0xfffffc18000003e8l); }
@Test
public void test13589() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0xfffffa24000003e8l); }
@Test
public void test13590() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test13591() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0xfffff830000003e8l); }
@Test
public void test13592() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x000001f4000003e8l); }
@Test
public void test13593() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test13594() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0xfffff8b2288e4d38l); }
@Test
public void test13595() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x00000082288e4d38l); }
@Test
public void test13596() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x00000000000003e8l); }
@Test
public void test13597() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x000001f4000003e8l); }
@Test
public void test13598() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x000001f400000000l); }
@Test
public void test13599() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x00000082288e4d38l); }
@Test
public void test13600() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13601() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x00000000000003e8l); }
@Test
public void test13602() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x00000000000007d0l); }
@Test
public void test13603() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x80000000000003e8l); }
@Test
public void test13604() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffc18l; AssertJUnit.assertEquals("multiply", result, 0x288e49d2288e4d38l); }
@Test
public void test13605() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000001f40l); }
@Test
public void test13606() { x = 0x0000000080000000l; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000000l); }
@Test
public void test13607() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000001f40l); }
@Test
public void test13608() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0xffffd12000001f40l); }
@Test
public void test13609() { x = 0x0000000180000000l; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0xffffd12000000000l); }
@Test
public void test13610() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000001f40l); }
@Test
public void test13611() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000001f40l); }
@Test
public void test13612() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000000000l); }
@Test
public void test13613() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0xffffc591447269c0l); }
@Test
public void test13614() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0x00000411447269c0l); }
@Test
public void test13615() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001f40l); }
@Test
public void test13616() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000001f40l); }
@Test
public void test13617() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000000000l); }
@Test
public void test13618() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0x00000411447269c0l); }
@Test
public void test13619() { x = 0x8000000000000000l; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13620() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001f40l); }
@Test
public void test13621() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003e80l); }
@Test
public void test13622() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001f40l); }
@Test
public void test13623() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffe0c0l; AssertJUnit.assertEquals("multiply", result, 0x44724e91447269c0l); }
@Test
public void test13624() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0xfffe0c000003e800l); }
@Test
public void test13625() { x = 0x0000000080000000l; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0xfffe0c0000000000l); }
@Test
public void test13626() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0xfffc18000003e800l); }
@Test
public void test13627() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0xfffa24000003e800l); }
@Test
public void test13628() { x = 0x0000000180000000l; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0xfffa240000000000l); }
@Test
public void test13629() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0xfff830000003e800l); }
@Test
public void test13630() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0x0001f4000003e800l); }
@Test
public void test13631() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0x0001f40000000000l); }
@Test
public void test13632() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0xfff8b2288e4d3800l); }
@Test
public void test13633() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0x000082288e4d3800l); }
@Test
public void test13634() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0x000000000003e800l); }
@Test
public void test13635() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0x0001f4000003e800l); }
@Test
public void test13636() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0x0001f40000000000l); }
@Test
public void test13637() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0x000082288e4d3800l); }
@Test
public void test13638() { x = 0x8000000000000000l; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13639() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0x000000000003e800l); }
@Test
public void test13640() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0x000000000007d000l); }
@Test
public void test13641() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0x000000000003e800l); }
@Test
public void test13642() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffc1800l; AssertJUnit.assertEquals("multiply", result, 0x8e49d2288e4d3800l); }
@Test
public void test13643() { x = 0x000000007fffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test13644() { x = 0x0000000080000000l; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13645() { x = 0x00000000ffffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test13646() { x = 0x000000017fffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test13647() { x = 0x0000000180000000l; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13648() { x = 0x00000001ffffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test13649() { x = 0xffffffff7fffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test13650() { x = 0xffffffff80000000l; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13651() { x = 0x00000001deadf00dl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x288e4d3800000000l); }
@Test
public void test13652() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x288e4d3800000000l); }
@Test
public void test13653() { x = 0x7fffffffffffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test13654() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test13655() { x = 0x7fffffff80000000l; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13656() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x288e4d3800000000l); }
@Test
public void test13657() { x = 0x8000000000000000l; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13658() { x = 0xffffffffffffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test13659() { x = 0xfffffffffffffffel; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test13660() { x = 0xefffffffffffffffl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test13661() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffc1800000000l; AssertJUnit.assertEquals("multiply", result, 0x288e4d3800000000l); }
@Test
public void test13662() { x = 0x000000007fffffffl; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000000000l); }
@Test
public void test13663() { x = 0x0000000080000000l; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13664() { x = 0x00000000ffffffffl; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000000000l); }
@Test
public void test13665() { x = 0x000000017fffffffl; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000000000l); }
@Test
public void test13666() { x = 0x0000000180000000l; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13667() { x = 0x00000001ffffffffl; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000000000l); }
@Test
public void test13668() { x = 0xffffffff7fffffffl; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000000000l); }
@Test
public void test13669() { x = 0xffffffff80000000l; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13670() { x = 0x00000001deadf00dl; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x447269c000000000l); }
@Test
public void test13671() { x = 0xffffffffdeadf00dl; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x447269c000000000l); }
@Test
public void test13672() { x = 0x7fffffffffffffffl; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000000000l); }
@Test
public void test13673() { x = 0x7fffffff7fffffffl; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000000000l); }
@Test
public void test13674() { x = 0x7fffffff80000000l; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13675() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x447269c000000000l); }
@Test
public void test13676() { x = 0x8000000000000000l; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13677() { x = 0xffffffffffffffffl; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000000000l); }
@Test
public void test13678() { x = 0xfffffffffffffffel; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000000000l); }
@Test
public void test13679() { x = 0xefffffffffffffffl; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000000000l); }
@Test
public void test13680() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffe0c000000000l; AssertJUnit.assertEquals("multiply", result, 0x447269c000000000l); }
@Test
public void test13681() { x = 0x000000007fffffffl; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0x000002327ffffb9bl); }
@Test
public void test13682() { x = 0x0000000080000000l; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0x0000023280000000l); }
@Test
public void test13683() { x = 0x00000000ffffffffl; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0x00000464fffffb9bl); }
@Test
public void test13684() { x = 0x000000017fffffffl; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0x000006977ffffb9bl); }
@Test
public void test13685() { x = 0x0000000180000000l; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0x0000069780000000l); }
@Test
public void test13686() { x = 0x00000001ffffffffl; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0x000008c9fffffb9bl); }
@Test
public void test13687() { x = 0xffffffff7fffffffl; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0xfffffdcd7ffffb9bl); }
@Test
public void test13688() { x = 0xffffffff80000000l; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0xfffffdcd80000000l); }
@Test
public void test13689() { x = 0x00000001deadf00dl; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0x00000837925fe921l); }
@Test
public void test13690() { x = 0xffffffffdeadf00dl; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0xffffff6d925fe921l); }
@Test
public void test13691() { x = 0x7fffffffffffffffl; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffb9bl); }
@Test
public void test13692() { x = 0x7fffffff7fffffffl; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0x7ffffdcd7ffffb9bl); }
@Test
public void test13693() { x = 0x7fffffff80000000l; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0x7ffffdcd80000000l); }
@Test
public void test13694() { x = 0x7fffffffdeadf00dl; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0x7fffff6d925fe921l); }
@Test
public void test13695() { x = 0x8000000000000000l; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13696() { x = 0xffffffffffffffffl; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffb9bl); }
@Test
public void test13697() { x = 0xfffffffffffffffel; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff736l); }
@Test
public void test13698() { x = 0xefffffffffffffffl; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0xaffffffffffffb9bl); }
@Test
public void test13699() { x = 0xdeadf00ddeadf00dl; long result = x * 0x465l; AssertJUnit.assertEquals("multiply", result, 0x925fecf3925fe921l); }
@Test
public void test13700() { x = 0x000000007fffffffl; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0x00001193ffffdcd8l); }
@Test
public void test13701() { x = 0x0000000080000000l; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0x0000119400000000l); }
@Test
public void test13702() { x = 0x00000000ffffffffl; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0x00002327ffffdcd8l); }
@Test
public void test13703() { x = 0x000000017fffffffl; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0x000034bbffffdcd8l); }
@Test
public void test13704() { x = 0x0000000180000000l; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0x000034bc00000000l); }
@Test
public void test13705() { x = 0x00000001ffffffffl; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0x0000464fffffdcd8l); }
@Test
public void test13706() { x = 0xffffffff7fffffffl; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0xffffee6bffffdcd8l); }
@Test
public void test13707() { x = 0xffffffff80000000l; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000000l); }
@Test
public void test13708() { x = 0x00000001deadf00dl; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0x000041bc92ff4908l); }
@Test
public void test13709() { x = 0xffffffffdeadf00dl; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0xfffffb6c92ff4908l); }
@Test
public void test13710() { x = 0x7fffffffffffffffl; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdcd8l); }
@Test
public void test13711() { x = 0x7fffffff7fffffffl; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0xffffee6bffffdcd8l); }
@Test
public void test13712() { x = 0x7fffffff80000000l; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000000l); }
@Test
public void test13713() { x = 0x7fffffffdeadf00dl; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0xfffffb6c92ff4908l); }
@Test
public void test13714() { x = 0x8000000000000000l; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13715() { x = 0xffffffffffffffffl; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdcd8l); }
@Test
public void test13716() { x = 0xfffffffffffffffel; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb9b0l); }
@Test
public void test13717() { x = 0xefffffffffffffffl; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffdcd8l); }
@Test
public void test13718() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2328l; AssertJUnit.assertEquals("multiply", result, 0x92ff679c92ff4908l); }
@Test
public void test13719() { x = 0x000000007fffffffl; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0x0002327ffffb9b00l); }
@Test
public void test13720() { x = 0x0000000080000000l; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0x0002328000000000l); }
@Test
public void test13721() { x = 0x00000000ffffffffl; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0x000464fffffb9b00l); }
@Test
public void test13722() { x = 0x000000017fffffffl; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0x0006977ffffb9b00l); }
@Test
public void test13723() { x = 0x0000000180000000l; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0x0006978000000000l); }
@Test
public void test13724() { x = 0x00000001ffffffffl; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0x0008c9fffffb9b00l); }
@Test
public void test13725() { x = 0xffffffff7fffffffl; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0xfffdcd7ffffb9b00l); }
@Test
public void test13726() { x = 0xffffffff80000000l; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0xfffdcd8000000000l); }
@Test
public void test13727() { x = 0x00000001deadf00dl; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0x000837925fe92100l); }
@Test
public void test13728() { x = 0xffffffffdeadf00dl; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0xffff6d925fe92100l); }
@Test
public void test13729() { x = 0x7fffffffffffffffl; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffb9b00l); }
@Test
public void test13730() { x = 0x7fffffff7fffffffl; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0xfffdcd7ffffb9b00l); }
@Test
public void test13731() { x = 0x7fffffff80000000l; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0xfffdcd8000000000l); }
@Test
public void test13732() { x = 0x7fffffffdeadf00dl; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0xffff6d925fe92100l); }
@Test
public void test13733() { x = 0x8000000000000000l; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13734() { x = 0xffffffffffffffffl; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffb9b00l); }
@Test
public void test13735() { x = 0xfffffffffffffffel; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff73600l); }
@Test
public void test13736() { x = 0xefffffffffffffffl; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffb9b00l); }
@Test
public void test13737() { x = 0xdeadf00ddeadf00dl; long result = x * 0x46500l; AssertJUnit.assertEquals("multiply", result, 0x5fecf3925fe92100l); }
@Test
public void test13738() { x = 0x000000007fffffffl; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffb9b00000000l); }
@Test
public void test13739() { x = 0x0000000080000000l; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13740() { x = 0x00000000ffffffffl; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb9b00000000l); }
@Test
public void test13741() { x = 0x000000017fffffffl; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffb9b00000000l); }
@Test
public void test13742() { x = 0x0000000180000000l; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13743() { x = 0x00000001ffffffffl; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb9b00000000l); }
@Test
public void test13744() { x = 0xffffffff7fffffffl; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffb9b00000000l); }
@Test
public void test13745() { x = 0xffffffff80000000l; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13746() { x = 0x00000001deadf00dl; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0x925fe92100000000l); }
@Test
public void test13747() { x = 0xffffffffdeadf00dl; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0x925fe92100000000l); }
@Test
public void test13748() { x = 0x7fffffffffffffffl; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb9b00000000l); }
@Test
public void test13749() { x = 0x7fffffff7fffffffl; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffb9b00000000l); }
@Test
public void test13750() { x = 0x7fffffff80000000l; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13751() { x = 0x7fffffffdeadf00dl; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0x925fe92100000000l); }
@Test
public void test13752() { x = 0x8000000000000000l; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13753() { x = 0xffffffffffffffffl; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb9b00000000l); }
@Test
public void test13754() { x = 0xfffffffffffffffel; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000000l); }
@Test
public void test13755() { x = 0xefffffffffffffffl; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb9b00000000l); }
@Test
public void test13756() { x = 0xdeadf00ddeadf00dl; long result = x * 0x46500000000l; AssertJUnit.assertEquals("multiply", result, 0x925fe92100000000l); }
@Test
public void test13757() { x = 0x000000007fffffffl; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800000000l); }
@Test
public void test13758() { x = 0x0000000080000000l; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13759() { x = 0x00000000ffffffffl; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800000000l); }
@Test
public void test13760() { x = 0x000000017fffffffl; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800000000l); }
@Test
public void test13761() { x = 0x0000000180000000l; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13762() { x = 0x00000001ffffffffl; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800000000l); }
@Test
public void test13763() { x = 0xffffffff7fffffffl; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800000000l); }
@Test
public void test13764() { x = 0xffffffff80000000l; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13765() { x = 0x00000001deadf00dl; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0x92ff490800000000l); }
@Test
public void test13766() { x = 0xffffffffdeadf00dl; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0x92ff490800000000l); }
@Test
public void test13767() { x = 0x7fffffffffffffffl; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800000000l); }
@Test
public void test13768() { x = 0x7fffffff7fffffffl; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800000000l); }
@Test
public void test13769() { x = 0x7fffffff80000000l; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13770() { x = 0x7fffffffdeadf00dl; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0x92ff490800000000l); }
@Test
public void test13771() { x = 0x8000000000000000l; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13772() { x = 0xffffffffffffffffl; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800000000l); }
@Test
public void test13773() { x = 0xfffffffffffffffel; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000000000l); }
@Test
public void test13774() { x = 0xefffffffffffffffl; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800000000l); }
@Test
public void test13775() { x = 0xdeadf00ddeadf00dl; long result = x * 0x232800000000l; AssertJUnit.assertEquals("multiply", result, 0x92ff490800000000l); }
@Test
public void test13776() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0xfffffdcd80000465l); }
@Test
public void test13777() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0xfffffdcd80000000l); }
@Test
public void test13778() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0xfffffb9b00000465l); }
@Test
public void test13779() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0xfffff96880000465l); }
@Test
public void test13780() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0xfffff96880000000l); }
@Test
public void test13781() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000465l); }
@Test
public void test13782() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0x0000023280000465l); }
@Test
public void test13783() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0x0000023280000000l); }
@Test
public void test13784() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0xfffff7c86da016dfl); }
@Test
public void test13785() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0x000000926da016dfl); }
@Test
public void test13786() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000465l); }
@Test
public void test13787() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0x8000023280000465l); }
@Test
public void test13788() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0x8000023280000000l); }
@Test
public void test13789() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0x800000926da016dfl); }
@Test
public void test13790() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13791() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000465l); }
@Test
public void test13792() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0x00000000000008cal); }
@Test
public void test13793() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0x5000000000000465l); }
@Test
public void test13794() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffb9bl; AssertJUnit.assertEquals("multiply", result, 0x6da0130c6da016dfl); }
@Test
public void test13795() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00002328l); }
@Test
public void test13796() { x = 0x0000000080000000l; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000000l); }
@Test
public void test13797() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800002328l); }
@Test
public void test13798() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0xffffcb4400002328l); }
@Test
public void test13799() { x = 0x0000000180000000l; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0xffffcb4400000000l); }
@Test
public void test13800() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000002328l); }
@Test
public void test13801() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0x0000119400002328l); }
@Test
public void test13802() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0x0000119400000000l); }
@Test
public void test13803() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0xffffbe436d00b6f8l); }
@Test
public void test13804() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0x000004936d00b6f8l); }
@Test
public void test13805() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002328l); }
@Test
public void test13806() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0x0000119400002328l); }
@Test
public void test13807() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0x0000119400000000l); }
@Test
public void test13808() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0x000004936d00b6f8l); }
@Test
public void test13809() { x = 0x8000000000000000l; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13810() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002328l); }
@Test
public void test13811() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004650l); }
@Test
public void test13812() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000002328l); }
@Test
public void test13813() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffdcd8l; AssertJUnit.assertEquals("multiply", result, 0x6d0098636d00b6f8l); }
@Test
public void test13814() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0xfffdcd8000046500l); }
@Test
public void test13815() { x = 0x0000000080000000l; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0xfffdcd8000000000l); }
@Test
public void test13816() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0xfffb9b0000046500l); }
@Test
public void test13817() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0xfff9688000046500l); }
@Test
public void test13818() { x = 0x0000000180000000l; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0xfff9688000000000l); }
@Test
public void test13819() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0xfff7360000046500l); }
@Test
public void test13820() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0x0002328000046500l); }
@Test
public void test13821() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0x0002328000000000l); }
@Test
public void test13822() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0xfff7c86da016df00l); }
@Test
public void test13823() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0x0000926da016df00l); }
@Test
public void test13824() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000046500l); }
@Test
public void test13825() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0x0002328000046500l); }
@Test
public void test13826() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0x0002328000000000l); }
@Test
public void test13827() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0x0000926da016df00l); }
@Test
public void test13828() { x = 0x8000000000000000l; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13829() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000046500l); }
@Test
public void test13830() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0x000000000008ca00l); }
@Test
public void test13831() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000046500l); }
@Test
public void test13832() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffb9b00l; AssertJUnit.assertEquals("multiply", result, 0xa0130c6da016df00l); }
@Test
public void test13833() { x = 0x000000007fffffffl; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000046500000000l); }
@Test
public void test13834() { x = 0x0000000080000000l; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13835() { x = 0x00000000ffffffffl; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000046500000000l); }
@Test
public void test13836() { x = 0x000000017fffffffl; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000046500000000l); }
@Test
public void test13837() { x = 0x0000000180000000l; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13838() { x = 0x00000001ffffffffl; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000046500000000l); }
@Test
public void test13839() { x = 0xffffffff7fffffffl; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000046500000000l); }
@Test
public void test13840() { x = 0xffffffff80000000l; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13841() { x = 0x00000001deadf00dl; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x6da016df00000000l); }
@Test
public void test13842() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x6da016df00000000l); }
@Test
public void test13843() { x = 0x7fffffffffffffffl; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000046500000000l); }
@Test
public void test13844() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000046500000000l); }
@Test
public void test13845() { x = 0x7fffffff80000000l; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test13846() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x6da016df00000000l); }
@Test
public void test13847() { x = 0x8000000000000000l; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13848() { x = 0xffffffffffffffffl; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000046500000000l); }
@Test
public void test13849() { x = 0xfffffffffffffffel; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x000008ca00000000l); }
@Test
public void test13850() { x = 0xefffffffffffffffl; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000046500000000l); }
@Test
public void test13851() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffb9b00000000l; AssertJUnit.assertEquals("multiply", result, 0x6da016df00000000l); }
@Test
public void test13852() { x = 0x000000007fffffffl; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000232800000000l); }
@Test
public void test13853() { x = 0x0000000080000000l; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13854() { x = 0x00000000ffffffffl; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000232800000000l); }
@Test
public void test13855() { x = 0x000000017fffffffl; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000232800000000l); }
@Test
public void test13856() { x = 0x0000000180000000l; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13857() { x = 0x00000001ffffffffl; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000232800000000l); }
@Test
public void test13858() { x = 0xffffffff7fffffffl; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000232800000000l); }
@Test
public void test13859() { x = 0xffffffff80000000l; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13860() { x = 0x00000001deadf00dl; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x6d00b6f800000000l); }
@Test
public void test13861() { x = 0xffffffffdeadf00dl; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x6d00b6f800000000l); }
@Test
public void test13862() { x = 0x7fffffffffffffffl; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000232800000000l); }
@Test
public void test13863() { x = 0x7fffffff7fffffffl; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000232800000000l); }
@Test
public void test13864() { x = 0x7fffffff80000000l; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13865() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x6d00b6f800000000l); }
@Test
public void test13866() { x = 0x8000000000000000l; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13867() { x = 0xffffffffffffffffl; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000232800000000l); }
@Test
public void test13868() { x = 0xfffffffffffffffel; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000465000000000l); }
@Test
public void test13869() { x = 0xefffffffffffffffl; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000232800000000l); }
@Test
public void test13870() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffdcd800000000l; AssertJUnit.assertEquals("multiply", result, 0x6d00b6f800000000l); }
@Test
public void test13871() { x = 0x000000007fffffffl; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0x00000270fffffb1el); }
@Test
public void test13872() { x = 0x0000000080000000l; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0x0000027100000000l); }
@Test
public void test13873() { x = 0x00000000ffffffffl; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0x000004e1fffffb1el); }
@Test
public void test13874() { x = 0x000000017fffffffl; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0x00000752fffffb1el); }
@Test
public void test13875() { x = 0x0000000180000000l; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0x0000075300000000l); }
@Test
public void test13876() { x = 0x00000001ffffffffl; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0x000009c3fffffb1el); }
@Test
public void test13877() { x = 0xffffffff7fffffffl; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8efffffb1el); }
@Test
public void test13878() { x = 0xffffffff80000000l; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8f00000000l); }
@Test
public void test13879() { x = 0x00000001deadf00dl; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0x000009214d4e1f7al); }
@Test
public void test13880() { x = 0xffffffffdeadf00dl; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0xffffff5d4d4e1f7al); }
@Test
public void test13881() { x = 0x7fffffffffffffffl; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffb1el); }
@Test
public void test13882() { x = 0x7fffffff7fffffffl; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8efffffb1el); }
@Test
public void test13883() { x = 0x7fffffff80000000l; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0xfffffd8f00000000l); }
@Test
public void test13884() { x = 0x7fffffffdeadf00dl; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0xffffff5d4d4e1f7al); }
@Test
public void test13885() { x = 0x8000000000000000l; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13886() { x = 0xffffffffffffffffl; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffb1el); }
@Test
public void test13887() { x = 0xfffffffffffffffel; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff63cl); }
@Test
public void test13888() { x = 0xefffffffffffffffl; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0xdffffffffffffb1el); }
@Test
public void test13889() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4e2l; AssertJUnit.assertEquals("multiply", result, 0x4d4e23b94d4e1f7al); }
@Test
public void test13890() { x = 0x000000007fffffffl; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0x00001387ffffd8f0l); }
@Test
public void test13891() { x = 0x0000000080000000l; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0x0000138800000000l); }
@Test
public void test13892() { x = 0x00000000ffffffffl; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0x0000270fffffd8f0l); }
@Test
public void test13893() { x = 0x000000017fffffffl; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0x00003a97ffffd8f0l); }
@Test
public void test13894() { x = 0x0000000180000000l; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0x00003a9800000000l); }
@Test
public void test13895() { x = 0x00000001ffffffffl; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0x00004e1fffffd8f0l); }
@Test
public void test13896() { x = 0xffffffff7fffffffl; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0xffffec77ffffd8f0l); }
@Test
public void test13897() { x = 0xffffffff80000000l; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800000000l); }
@Test
public void test13898() { x = 0x00000001deadf00dl; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0x0000490a6a70fbd0l); }
@Test
public void test13899() { x = 0xffffffffdeadf00dl; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0xfffffaea6a70fbd0l); }
@Test
public void test13900() { x = 0x7fffffffffffffffl; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd8f0l); }
@Test
public void test13901() { x = 0x7fffffff7fffffffl; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0xffffec77ffffd8f0l); }
@Test
public void test13902() { x = 0x7fffffff80000000l; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800000000l); }
@Test
public void test13903() { x = 0x7fffffffdeadf00dl; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0xfffffaea6a70fbd0l); }
@Test
public void test13904() { x = 0x8000000000000000l; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13905() { x = 0xffffffffffffffffl; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd8f0l); }
@Test
public void test13906() { x = 0xfffffffffffffffel; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb1e0l); }
@Test
public void test13907() { x = 0xefffffffffffffffl; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd8f0l); }
@Test
public void test13908() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2710l; AssertJUnit.assertEquals("multiply", result, 0x6a711dca6a70fbd0l); }
@Test
public void test13909() { x = 0x000000007fffffffl; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0x000270fffffb1e00l); }
@Test
public void test13910() { x = 0x0000000080000000l; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0x0002710000000000l); }
@Test
public void test13911() { x = 0x00000000ffffffffl; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0x0004e1fffffb1e00l); }
@Test
public void test13912() { x = 0x000000017fffffffl; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0x000752fffffb1e00l); }
@Test
public void test13913() { x = 0x0000000180000000l; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0x0007530000000000l); }
@Test
public void test13914() { x = 0x00000001ffffffffl; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0x0009c3fffffb1e00l); }
@Test
public void test13915() { x = 0xffffffff7fffffffl; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0xfffd8efffffb1e00l); }
@Test
public void test13916() { x = 0xffffffff80000000l; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0xfffd8f0000000000l); }
@Test
public void test13917() { x = 0x00000001deadf00dl; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0x0009214d4e1f7a00l); }
@Test
public void test13918() { x = 0xffffffffdeadf00dl; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0xffff5d4d4e1f7a00l); }
@Test
public void test13919() { x = 0x7fffffffffffffffl; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffb1e00l); }
@Test
public void test13920() { x = 0x7fffffff7fffffffl; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0xfffd8efffffb1e00l); }
@Test
public void test13921() { x = 0x7fffffff80000000l; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0xfffd8f0000000000l); }
@Test
public void test13922() { x = 0x7fffffffdeadf00dl; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0xffff5d4d4e1f7a00l); }
@Test
public void test13923() { x = 0x8000000000000000l; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13924() { x = 0xffffffffffffffffl; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffb1e00l); }
@Test
public void test13925() { x = 0xfffffffffffffffel; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff63c00l); }
@Test
public void test13926() { x = 0xefffffffffffffffl; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffb1e00l); }
@Test
public void test13927() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4e200l; AssertJUnit.assertEquals("multiply", result, 0x4e23b94d4e1f7a00l); }
@Test
public void test13928() { x = 0x000000007fffffffl; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e00000000l); }
@Test
public void test13929() { x = 0x0000000080000000l; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13930() { x = 0x00000000ffffffffl; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e00000000l); }
@Test
public void test13931() { x = 0x000000017fffffffl; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e00000000l); }
@Test
public void test13932() { x = 0x0000000180000000l; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13933() { x = 0x00000001ffffffffl; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e00000000l); }
@Test
public void test13934() { x = 0xffffffff7fffffffl; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e00000000l); }
@Test
public void test13935() { x = 0xffffffff80000000l; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13936() { x = 0x00000001deadf00dl; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0x4d4e1f7a00000000l); }
@Test
public void test13937() { x = 0xffffffffdeadf00dl; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0x4d4e1f7a00000000l); }
@Test
public void test13938() { x = 0x7fffffffffffffffl; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e00000000l); }
@Test
public void test13939() { x = 0x7fffffff7fffffffl; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e00000000l); }
@Test
public void test13940() { x = 0x7fffffff80000000l; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13941() { x = 0x7fffffffdeadf00dl; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0x4d4e1f7a00000000l); }
@Test
public void test13942() { x = 0x8000000000000000l; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13943() { x = 0xffffffffffffffffl; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e00000000l); }
@Test
public void test13944() { x = 0xfffffffffffffffel; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff63c00000000l); }
@Test
public void test13945() { x = 0xefffffffffffffffl; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e00000000l); }
@Test
public void test13946() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4e200000000l; AssertJUnit.assertEquals("multiply", result, 0x4d4e1f7a00000000l); }
@Test
public void test13947() { x = 0x000000007fffffffl; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000000000l); }
@Test
public void test13948() { x = 0x0000000080000000l; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13949() { x = 0x00000000ffffffffl; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000000000l); }
@Test
public void test13950() { x = 0x000000017fffffffl; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000000000l); }
@Test
public void test13951() { x = 0x0000000180000000l; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13952() { x = 0x00000001ffffffffl; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000000000l); }
@Test
public void test13953() { x = 0xffffffff7fffffffl; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000000000l); }
@Test
public void test13954() { x = 0xffffffff80000000l; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13955() { x = 0x00000001deadf00dl; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0x6a70fbd000000000l); }
@Test
public void test13956() { x = 0xffffffffdeadf00dl; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0x6a70fbd000000000l); }
@Test
public void test13957() { x = 0x7fffffffffffffffl; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000000000l); }
@Test
public void test13958() { x = 0x7fffffff7fffffffl; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000000000l); }
@Test
public void test13959() { x = 0x7fffffff80000000l; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13960() { x = 0x7fffffffdeadf00dl; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0x6a70fbd000000000l); }
@Test
public void test13961() { x = 0x8000000000000000l; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13962() { x = 0xffffffffffffffffl; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000000000l); }
@Test
public void test13963() { x = 0xfffffffffffffffel; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb1e000000000l); }
@Test
public void test13964() { x = 0xefffffffffffffffl; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000000000l); }
@Test
public void test13965() { x = 0xdeadf00ddeadf00dl; long result = x * 0x271000000000l; AssertJUnit.assertEquals("multiply", result, 0x6a70fbd000000000l); }
@Test
public void test13966() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0xfffffd8f000004e2l); }
@Test
public void test13967() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0xfffffd8f00000000l); }
@Test
public void test13968() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e000004e2l); }
@Test
public void test13969() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0xfffff8ad000004e2l); }
@Test
public void test13970() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0xfffff8ad00000000l); }
@Test
public void test13971() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0xfffff63c000004e2l); }
@Test
public void test13972() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0x00000271000004e2l); }
@Test
public void test13973() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0x0000027100000000l); }
@Test
public void test13974() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0xfffff6deb2b1e086l); }
@Test
public void test13975() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0x000000a2b2b1e086l); }
@Test
public void test13976() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0x00000000000004e2l); }
@Test
public void test13977() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0x00000271000004e2l); }
@Test
public void test13978() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0x0000027100000000l); }
@Test
public void test13979() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0x000000a2b2b1e086l); }
@Test
public void test13980() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test13981() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0x00000000000004e2l); }
@Test
public void test13982() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0x00000000000009c4l); }
@Test
public void test13983() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0x20000000000004e2l); }
@Test
public void test13984() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffb1el; AssertJUnit.assertEquals("multiply", result, 0xb2b1dc46b2b1e086l); }
@Test
public void test13985() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800002710l); }
@Test
public void test13986() { x = 0x0000000080000000l; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800000000l); }
@Test
public void test13987() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000002710l); }
@Test
public void test13988() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0xffffc56800002710l); }
@Test
public void test13989() { x = 0x0000000180000000l; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0xffffc56800000000l); }
@Test
public void test13990() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0xffffb1e000002710l); }
@Test
public void test13991() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0x0000138800002710l); }
@Test
public void test13992() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0x0000138800000000l); }
@Test
public void test13993() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0xffffb6f5958f0430l); }
@Test
public void test13994() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0x00000515958f0430l); }
@Test
public void test13995() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002710l); }
@Test
public void test13996() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0x0000138800002710l); }
@Test
public void test13997() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0x0000138800000000l); }
@Test
public void test13998() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0x00000515958f0430l); }
@Test
public void test13999() { x = 0x8000000000000000l; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14000() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002710l); }
@Test
public void test14001() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004e20l); }
@Test
public void test14002() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002710l); }
@Test
public void test14003() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffd8f0l; AssertJUnit.assertEquals("multiply", result, 0x958ee235958f0430l); }
@Test
public void test14004() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0xfffd8f000004e200l); }
@Test
public void test14005() { x = 0x0000000080000000l; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0xfffd8f0000000000l); }
@Test
public void test14006() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0xfffb1e000004e200l); }
@Test
public void test14007() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0xfff8ad000004e200l); }
@Test
public void test14008() { x = 0x0000000180000000l; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0xfff8ad0000000000l); }
@Test
public void test14009() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0xfff63c000004e200l); }
@Test
public void test14010() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0x000271000004e200l); }
@Test
public void test14011() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0x0002710000000000l); }
@Test
public void test14012() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0xfff6deb2b1e08600l); }
@Test
public void test14013() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0x0000a2b2b1e08600l); }
@Test
public void test14014() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0x000000000004e200l); }
@Test
public void test14015() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0x000271000004e200l); }
@Test
public void test14016() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0x0002710000000000l); }
@Test
public void test14017() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0x0000a2b2b1e08600l); }
@Test
public void test14018() { x = 0x8000000000000000l; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14019() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0x000000000004e200l); }
@Test
public void test14020() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0x000000000009c400l); }
@Test
public void test14021() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0x000000000004e200l); }
@Test
public void test14022() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffb1e00l; AssertJUnit.assertEquals("multiply", result, 0xb1dc46b2b1e08600l); }
@Test
public void test14023() { x = 0x000000007fffffffl; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x000004e200000000l); }
@Test
public void test14024() { x = 0x0000000080000000l; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14025() { x = 0x00000000ffffffffl; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x000004e200000000l); }
@Test
public void test14026() { x = 0x000000017fffffffl; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x000004e200000000l); }
@Test
public void test14027() { x = 0x0000000180000000l; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14028() { x = 0x00000001ffffffffl; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x000004e200000000l); }
@Test
public void test14029() { x = 0xffffffff7fffffffl; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x000004e200000000l); }
@Test
public void test14030() { x = 0xffffffff80000000l; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14031() { x = 0x00000001deadf00dl; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0xb2b1e08600000000l); }
@Test
public void test14032() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0xb2b1e08600000000l); }
@Test
public void test14033() { x = 0x7fffffffffffffffl; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x000004e200000000l); }
@Test
public void test14034() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x000004e200000000l); }
@Test
public void test14035() { x = 0x7fffffff80000000l; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14036() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0xb2b1e08600000000l); }
@Test
public void test14037() { x = 0x8000000000000000l; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14038() { x = 0xffffffffffffffffl; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x000004e200000000l); }
@Test
public void test14039() { x = 0xfffffffffffffffel; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x000009c400000000l); }
@Test
public void test14040() { x = 0xefffffffffffffffl; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0x000004e200000000l); }
@Test
public void test14041() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffb1e00000000l; AssertJUnit.assertEquals("multiply", result, 0xb2b1e08600000000l); }
@Test
public void test14042() { x = 0x000000007fffffffl; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000271000000000l); }
@Test
public void test14043() { x = 0x0000000080000000l; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14044() { x = 0x00000000ffffffffl; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000271000000000l); }
@Test
public void test14045() { x = 0x000000017fffffffl; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000271000000000l); }
@Test
public void test14046() { x = 0x0000000180000000l; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14047() { x = 0x00000001ffffffffl; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000271000000000l); }
@Test
public void test14048() { x = 0xffffffff7fffffffl; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000271000000000l); }
@Test
public void test14049() { x = 0xffffffff80000000l; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14050() { x = 0x00000001deadf00dl; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x958f043000000000l); }
@Test
public void test14051() { x = 0xffffffffdeadf00dl; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x958f043000000000l); }
@Test
public void test14052() { x = 0x7fffffffffffffffl; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000271000000000l); }
@Test
public void test14053() { x = 0x7fffffff7fffffffl; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000271000000000l); }
@Test
public void test14054() { x = 0x7fffffff80000000l; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14055() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x958f043000000000l); }
@Test
public void test14056() { x = 0x8000000000000000l; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14057() { x = 0xffffffffffffffffl; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000271000000000l); }
@Test
public void test14058() { x = 0xfffffffffffffffel; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x00004e2000000000l); }
@Test
public void test14059() { x = 0xefffffffffffffffl; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000271000000000l); }
@Test
public void test14060() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffd8f000000000l; AssertJUnit.assertEquals("multiply", result, 0x958f043000000000l); }
@Test
public void test14061() { x = 0x000000007fffffffl; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0x000002da7ffffa4bl); }
@Test
public void test14062() { x = 0x0000000080000000l; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0x000002da80000000l); }
@Test
public void test14063() { x = 0x00000000ffffffffl; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0x000005b4fffffa4bl); }
@Test
public void test14064() { x = 0x000000017fffffffl; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0x0000088f7ffffa4bl); }
@Test
public void test14065() { x = 0x0000000180000000l; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0x0000088f80000000l); }
@Test
public void test14066() { x = 0x00000001ffffffffl; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0x00000b69fffffa4bl); }
@Test
public void test14067() { x = 0xffffffff7fffffffl; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0xfffffd257ffffa4bl); }
@Test
public void test14068() { x = 0xffffffff80000000l; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0xfffffd2580000000l); }
@Test
public void test14069() { x = 0x00000001deadf00dl; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0x00000aabd6aafa31l); }
@Test
public void test14070() { x = 0xffffffffdeadf00dl; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0xffffff41d6aafa31l); }
@Test
public void test14071() { x = 0x7fffffffffffffffl; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffa4bl); }
@Test
public void test14072() { x = 0x7fffffff7fffffffl; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0x7ffffd257ffffa4bl); }
@Test
public void test14073() { x = 0x7fffffff80000000l; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0x7ffffd2580000000l); }
@Test
public void test14074() { x = 0x7fffffffdeadf00dl; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0x7fffff41d6aafa31l); }
@Test
public void test14075() { x = 0x8000000000000000l; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test14076() { x = 0xffffffffffffffffl; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffa4bl); }
@Test
public void test14077() { x = 0xfffffffffffffffel; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff496l); }
@Test
public void test14078() { x = 0xefffffffffffffffl; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0xaffffffffffffa4bl); }
@Test
public void test14079() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5b5l; AssertJUnit.assertEquals("multiply", result, 0xd6aaff27d6aafa31l); }
@Test
public void test14080() { x = 0x000000007fffffffl; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0x000016d3ffffd258l); }
@Test
public void test14081() { x = 0x0000000080000000l; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0x000016d400000000l); }
@Test
public void test14082() { x = 0x00000000ffffffffl; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0x00002da7ffffd258l); }
@Test
public void test14083() { x = 0x000000017fffffffl; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0x0000447bffffd258l); }
@Test
public void test14084() { x = 0x0000000180000000l; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0x0000447c00000000l); }
@Test
public void test14085() { x = 0x00000001ffffffffl; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0x00005b4fffffd258l); }
@Test
public void test14086() { x = 0xffffffff7fffffffl; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0xffffe92bffffd258l); }
@Test
public void test14087() { x = 0xffffffff80000000l; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0xffffe92c00000000l); }
@Test
public void test14088() { x = 0x00000001deadf00dl; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0x0000555eb557d188l); }
@Test
public void test14089() { x = 0xffffffffdeadf00dl; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0xfffffa0eb557d188l); }
@Test
public void test14090() { x = 0x7fffffffffffffffl; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd258l); }
@Test
public void test14091() { x = 0x7fffffff7fffffffl; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0xffffe92bffffd258l); }
@Test
public void test14092() { x = 0x7fffffff80000000l; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0xffffe92c00000000l); }
@Test
public void test14093() { x = 0x7fffffffdeadf00dl; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0xfffffa0eb557d188l); }
@Test
public void test14094() { x = 0x8000000000000000l; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14095() { x = 0xffffffffffffffffl; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd258l); }
@Test
public void test14096() { x = 0xfffffffffffffffel; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffa4b0l); }
@Test
public void test14097() { x = 0xefffffffffffffffl; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffd258l); }
@Test
public void test14098() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2da8l; AssertJUnit.assertEquals("multiply", result, 0xb557f93eb557d188l); }
@Test
public void test14099() { x = 0x000000007fffffffl; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0x0002da7ffffa4b00l); }
@Test
public void test14100() { x = 0x0000000080000000l; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0x0002da8000000000l); }
@Test
public void test14101() { x = 0x00000000ffffffffl; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0x0005b4fffffa4b00l); }
@Test
public void test14102() { x = 0x000000017fffffffl; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0x00088f7ffffa4b00l); }
@Test
public void test14103() { x = 0x0000000180000000l; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0x00088f8000000000l); }
@Test
public void test14104() { x = 0x00000001ffffffffl; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0x000b69fffffa4b00l); }
@Test
public void test14105() { x = 0xffffffff7fffffffl; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0xfffd257ffffa4b00l); }
@Test
public void test14106() { x = 0xffffffff80000000l; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0xfffd258000000000l); }
@Test
public void test14107() { x = 0x00000001deadf00dl; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0x000aabd6aafa3100l); }
@Test
public void test14108() { x = 0xffffffffdeadf00dl; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0xffff41d6aafa3100l); }
@Test
public void test14109() { x = 0x7fffffffffffffffl; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffa4b00l); }
@Test
public void test14110() { x = 0x7fffffff7fffffffl; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0xfffd257ffffa4b00l); }
@Test
public void test14111() { x = 0x7fffffff80000000l; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0xfffd258000000000l); }
@Test
public void test14112() { x = 0x7fffffffdeadf00dl; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0xffff41d6aafa3100l); }
@Test
public void test14113() { x = 0x8000000000000000l; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14114() { x = 0xffffffffffffffffl; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffa4b00l); }
@Test
public void test14115() { x = 0xfffffffffffffffel; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff49600l); }
@Test
public void test14116() { x = 0xefffffffffffffffl; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffa4b00l); }
@Test
public void test14117() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5b500l; AssertJUnit.assertEquals("multiply", result, 0xaaff27d6aafa3100l); }
@Test
public void test14118() { x = 0x000000007fffffffl; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffa4b00000000l); }
@Test
public void test14119() { x = 0x0000000080000000l; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test14120() { x = 0x00000000ffffffffl; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa4b00000000l); }
@Test
public void test14121() { x = 0x000000017fffffffl; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffa4b00000000l); }
@Test
public void test14122() { x = 0x0000000180000000l; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test14123() { x = 0x00000001ffffffffl; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa4b00000000l); }
@Test
public void test14124() { x = 0xffffffff7fffffffl; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffa4b00000000l); }
@Test
public void test14125() { x = 0xffffffff80000000l; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test14126() { x = 0x00000001deadf00dl; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0xd6aafa3100000000l); }
@Test
public void test14127() { x = 0xffffffffdeadf00dl; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0xd6aafa3100000000l); }
@Test
public void test14128() { x = 0x7fffffffffffffffl; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa4b00000000l); }
@Test
public void test14129() { x = 0x7fffffff7fffffffl; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0x7ffffa4b00000000l); }
@Test
public void test14130() { x = 0x7fffffff80000000l; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test14131() { x = 0x7fffffffdeadf00dl; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0xd6aafa3100000000l); }
@Test
public void test14132() { x = 0x8000000000000000l; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14133() { x = 0xffffffffffffffffl; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa4b00000000l); }
@Test
public void test14134() { x = 0xfffffffffffffffel; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff49600000000l); }
@Test
public void test14135() { x = 0xefffffffffffffffl; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa4b00000000l); }
@Test
public void test14136() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5b500000000l; AssertJUnit.assertEquals("multiply", result, 0xd6aafa3100000000l); }
@Test
public void test14137() { x = 0x000000007fffffffl; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd25800000000l); }
@Test
public void test14138() { x = 0x0000000080000000l; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14139() { x = 0x00000000ffffffffl; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd25800000000l); }
@Test
public void test14140() { x = 0x000000017fffffffl; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd25800000000l); }
@Test
public void test14141() { x = 0x0000000180000000l; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14142() { x = 0x00000001ffffffffl; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd25800000000l); }
@Test
public void test14143() { x = 0xffffffff7fffffffl; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd25800000000l); }
@Test
public void test14144() { x = 0xffffffff80000000l; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14145() { x = 0x00000001deadf00dl; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0xb557d18800000000l); }
@Test
public void test14146() { x = 0xffffffffdeadf00dl; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0xb557d18800000000l); }
@Test
public void test14147() { x = 0x7fffffffffffffffl; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd25800000000l); }
@Test
public void test14148() { x = 0x7fffffff7fffffffl; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd25800000000l); }
@Test
public void test14149() { x = 0x7fffffff80000000l; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14150() { x = 0x7fffffffdeadf00dl; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0xb557d18800000000l); }
@Test
public void test14151() { x = 0x8000000000000000l; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14152() { x = 0xffffffffffffffffl; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd25800000000l); }
@Test
public void test14153() { x = 0xfffffffffffffffel; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffa4b000000000l); }
@Test
public void test14154() { x = 0xefffffffffffffffl; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd25800000000l); }
@Test
public void test14155() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2da800000000l; AssertJUnit.assertEquals("multiply", result, 0xb557d18800000000l); }
@Test
public void test14156() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0xfffffd25800005b5l); }
@Test
public void test14157() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0xfffffd2580000000l); }
@Test
public void test14158() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0xfffffa4b000005b5l); }
@Test
public void test14159() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0xfffff770800005b5l); }
@Test
public void test14160() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0xfffff77080000000l); }
@Test
public void test14161() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0xfffff496000005b5l); }
@Test
public void test14162() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0x000002da800005b5l); }
@Test
public void test14163() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0x000002da80000000l); }
@Test
public void test14164() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0xfffff554295505cfl); }
@Test
public void test14165() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0x000000be295505cfl); }
@Test
public void test14166() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0x80000000000005b5l); }
@Test
public void test14167() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0x800002da800005b5l); }
@Test
public void test14168() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0x800002da80000000l); }
@Test
public void test14169() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0x800000be295505cfl); }
@Test
public void test14170() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test14171() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0x00000000000005b5l); }
@Test
public void test14172() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000b6al); }
@Test
public void test14173() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0x50000000000005b5l); }
@Test
public void test14174() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffa4bl; AssertJUnit.assertEquals("multiply", result, 0x295500d8295505cfl); }
@Test
public void test14175() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0xffffe92c00002da8l); }
@Test
public void test14176() { x = 0x0000000080000000l; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0xffffe92c00000000l); }
@Test
public void test14177() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0xffffd25800002da8l); }
@Test
public void test14178() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0xffffbb8400002da8l); }
@Test
public void test14179() { x = 0x0000000180000000l; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0xffffbb8400000000l); }
@Test
public void test14180() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0xffffa4b000002da8l); }
@Test
public void test14181() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0x000016d400002da8l); }
@Test
public void test14182() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0x000016d400000000l); }
@Test
public void test14183() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0xffffaaa14aa82e78l); }
@Test
public void test14184() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0x000005f14aa82e78l); }
@Test
public void test14185() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002da8l); }
@Test
public void test14186() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0x000016d400002da8l); }
@Test
public void test14187() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0x000016d400000000l); }
@Test
public void test14188() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0x000005f14aa82e78l); }
@Test
public void test14189() { x = 0x8000000000000000l; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14190() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002da8l); }
@Test
public void test14191() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005b50l); }
@Test
public void test14192() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0x8000000000002da8l); }
@Test
public void test14193() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffd258l; AssertJUnit.assertEquals("multiply", result, 0x4aa806c14aa82e78l); }
@Test
public void test14194() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0xfffd25800005b500l); }
@Test
public void test14195() { x = 0x0000000080000000l; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0xfffd258000000000l); }
@Test
public void test14196() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0xfffa4b000005b500l); }
@Test
public void test14197() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0xfff770800005b500l); }
@Test
public void test14198() { x = 0x0000000180000000l; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0xfff7708000000000l); }
@Test
public void test14199() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0xfff496000005b500l); }
@Test
public void test14200() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0x0002da800005b500l); }
@Test
public void test14201() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0x0002da8000000000l); }
@Test
public void test14202() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0xfff554295505cf00l); }
@Test
public void test14203() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0x0000be295505cf00l); }
@Test
public void test14204() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0x000000000005b500l); }
@Test
public void test14205() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0x0002da800005b500l); }
@Test
public void test14206() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0x0002da8000000000l); }
@Test
public void test14207() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0x0000be295505cf00l); }
@Test
public void test14208() { x = 0x8000000000000000l; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14209() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0x000000000005b500l); }
@Test
public void test14210() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0x00000000000b6a00l); }
@Test
public void test14211() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0x000000000005b500l); }
@Test
public void test14212() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffa4b00l; AssertJUnit.assertEquals("multiply", result, 0x5500d8295505cf00l); }
@Test
public void test14213() { x = 0x000000007fffffffl; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x800005b500000000l); }
@Test
public void test14214() { x = 0x0000000080000000l; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test14215() { x = 0x00000000ffffffffl; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x000005b500000000l); }
@Test
public void test14216() { x = 0x000000017fffffffl; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x800005b500000000l); }
@Test
public void test14217() { x = 0x0000000180000000l; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test14218() { x = 0x00000001ffffffffl; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x000005b500000000l); }
@Test
public void test14219() { x = 0xffffffff7fffffffl; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x800005b500000000l); }
@Test
public void test14220() { x = 0xffffffff80000000l; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test14221() { x = 0x00000001deadf00dl; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x295505cf00000000l); }
@Test
public void test14222() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x295505cf00000000l); }
@Test
public void test14223() { x = 0x7fffffffffffffffl; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x000005b500000000l); }
@Test
public void test14224() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x800005b500000000l); }
@Test
public void test14225() { x = 0x7fffffff80000000l; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test14226() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x295505cf00000000l); }
@Test
public void test14227() { x = 0x8000000000000000l; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14228() { x = 0xffffffffffffffffl; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x000005b500000000l); }
@Test
public void test14229() { x = 0xfffffffffffffffel; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x00000b6a00000000l); }
@Test
public void test14230() { x = 0xefffffffffffffffl; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x000005b500000000l); }
@Test
public void test14231() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffa4b00000000l; AssertJUnit.assertEquals("multiply", result, 0x295505cf00000000l); }
@Test
public void test14232() { x = 0x000000007fffffffl; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x00002da800000000l); }
@Test
public void test14233() { x = 0x0000000080000000l; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14234() { x = 0x00000000ffffffffl; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x00002da800000000l); }
@Test
public void test14235() { x = 0x000000017fffffffl; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x00002da800000000l); }
@Test
public void test14236() { x = 0x0000000180000000l; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14237() { x = 0x00000001ffffffffl; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x00002da800000000l); }
@Test
public void test14238() { x = 0xffffffff7fffffffl; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x00002da800000000l); }
@Test
public void test14239() { x = 0xffffffff80000000l; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14240() { x = 0x00000001deadf00dl; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x4aa82e7800000000l); }
@Test
public void test14241() { x = 0xffffffffdeadf00dl; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x4aa82e7800000000l); }
@Test
public void test14242() { x = 0x7fffffffffffffffl; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x00002da800000000l); }
@Test
public void test14243() { x = 0x7fffffff7fffffffl; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x00002da800000000l); }
@Test
public void test14244() { x = 0x7fffffff80000000l; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14245() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x4aa82e7800000000l); }
@Test
public void test14246() { x = 0x8000000000000000l; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14247() { x = 0xffffffffffffffffl; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x00002da800000000l); }
@Test
public void test14248() { x = 0xfffffffffffffffel; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x00005b5000000000l); }
@Test
public void test14249() { x = 0xefffffffffffffffl; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x00002da800000000l); }
@Test
public void test14250() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffd25800000000l; AssertJUnit.assertEquals("multiply", result, 0x4aa82e7800000000l); }
@Test
public void test14251() { x = 0x000000007fffffffl; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0x000002edfffffa24l); }
@Test
public void test14252() { x = 0x0000000080000000l; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0x000002ee00000000l); }
@Test
public void test14253() { x = 0x00000000ffffffffl; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0x000005dbfffffa24l); }
@Test
public void test14254() { x = 0x000000017fffffffl; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0x000008c9fffffa24l); }
@Test
public void test14255() { x = 0x0000000180000000l; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0x000008ca00000000l); }
@Test
public void test14256() { x = 0x00000001ffffffffl; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0x00000bb7fffffa24l); }
@Test
public void test14257() { x = 0xffffffff7fffffffl; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0xfffffd11fffffa24l); }
@Test
public void test14258() { x = 0xffffffff80000000l; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000000l); }
@Test
public void test14259() { x = 0x00000001deadf00dl; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0x00000af4c32a8c2cl); }
@Test
public void test14260() { x = 0xffffffffdeadf00dl; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0xffffff3cc32a8c2cl); }
@Test
public void test14261() { x = 0x7fffffffffffffffl; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffa24l); }
@Test
public void test14262() { x = 0x7fffffff7fffffffl; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0xfffffd11fffffa24l); }
@Test
public void test14263() { x = 0x7fffffff80000000l; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000000l); }
@Test
public void test14264() { x = 0x7fffffffdeadf00dl; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0xffffff3cc32a8c2cl); }
@Test
public void test14265() { x = 0x8000000000000000l; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14266() { x = 0xffffffffffffffffl; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffa24l); }
@Test
public void test14267() { x = 0xfffffffffffffffel; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff448l); }
@Test
public void test14268() { x = 0xefffffffffffffffl; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0x3ffffffffffffa24l); }
@Test
public void test14269() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5dcl; AssertJUnit.assertEquals("multiply", result, 0xc32a9144c32a8c2cl); }
@Test
public void test14270() { x = 0x000000007fffffffl; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0x0000176fffffd120l); }
@Test
public void test14271() { x = 0x0000000080000000l; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0x0000177000000000l); }
@Test
public void test14272() { x = 0x00000000ffffffffl; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0x00002edfffffd120l); }
@Test
public void test14273() { x = 0x000000017fffffffl; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0x0000464fffffd120l); }
@Test
public void test14274() { x = 0x0000000180000000l; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0x0000465000000000l); }
@Test
public void test14275() { x = 0x00000001ffffffffl; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0x00005dbfffffd120l); }
@Test
public void test14276() { x = 0xffffffff7fffffffl; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0xffffe88fffffd120l); }
@Test
public void test14277() { x = 0xffffffff80000000l; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000000l); }
@Test
public void test14278() { x = 0x00000001deadf00dl; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0x000057a619546160l); }
@Test
public void test14279() { x = 0xffffffffdeadf00dl; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0xfffff9e619546160l); }
@Test
public void test14280() { x = 0x7fffffffffffffffl; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd120l); }
@Test
public void test14281() { x = 0x7fffffff7fffffffl; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0xffffe88fffffd120l); }
@Test
public void test14282() { x = 0x7fffffff80000000l; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000000l); }
@Test
public void test14283() { x = 0x7fffffffdeadf00dl; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0xfffff9e619546160l); }
@Test
public void test14284() { x = 0x8000000000000000l; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14285() { x = 0xffffffffffffffffl; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd120l); }
@Test
public void test14286() { x = 0xfffffffffffffffel; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffa240l); }
@Test
public void test14287() { x = 0xefffffffffffffffl; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffd120l); }
@Test
public void test14288() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2ee0l; AssertJUnit.assertEquals("multiply", result, 0x19548a2619546160l); }
@Test
public void test14289() { x = 0x000000007fffffffl; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0x0002edfffffa2400l); }
@Test
public void test14290() { x = 0x0000000080000000l; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0x0002ee0000000000l); }
@Test
public void test14291() { x = 0x00000000ffffffffl; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0x0005dbfffffa2400l); }
@Test
public void test14292() { x = 0x000000017fffffffl; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0x0008c9fffffa2400l); }
@Test
public void test14293() { x = 0x0000000180000000l; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0x0008ca0000000000l); }
@Test
public void test14294() { x = 0x00000001ffffffffl; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0x000bb7fffffa2400l); }
@Test
public void test14295() { x = 0xffffffff7fffffffl; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0xfffd11fffffa2400l); }
@Test
public void test14296() { x = 0xffffffff80000000l; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0xfffd120000000000l); }
@Test
public void test14297() { x = 0x00000001deadf00dl; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0x000af4c32a8c2c00l); }
@Test
public void test14298() { x = 0xffffffffdeadf00dl; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0xffff3cc32a8c2c00l); }
@Test
public void test14299() { x = 0x7fffffffffffffffl; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffa2400l); }
@Test
public void test14300() { x = 0x7fffffff7fffffffl; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0xfffd11fffffa2400l); }
@Test
public void test14301() { x = 0x7fffffff80000000l; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0xfffd120000000000l); }
@Test
public void test14302() { x = 0x7fffffffdeadf00dl; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0xffff3cc32a8c2c00l); }
@Test
public void test14303() { x = 0x8000000000000000l; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14304() { x = 0xffffffffffffffffl; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffa2400l); }
@Test
public void test14305() { x = 0xfffffffffffffffel; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff44800l); }
@Test
public void test14306() { x = 0xefffffffffffffffl; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffa2400l); }
@Test
public void test14307() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5dc00l; AssertJUnit.assertEquals("multiply", result, 0x2a9144c32a8c2c00l); }
@Test
public void test14308() { x = 0x000000007fffffffl; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test14309() { x = 0x0000000080000000l; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14310() { x = 0x00000000ffffffffl; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test14311() { x = 0x000000017fffffffl; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test14312() { x = 0x0000000180000000l; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14313() { x = 0x00000001ffffffffl; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test14314() { x = 0xffffffff7fffffffl; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test14315() { x = 0xffffffff80000000l; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14316() { x = 0x00000001deadf00dl; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0xc32a8c2c00000000l); }
@Test
public void test14317() { x = 0xffffffffdeadf00dl; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0xc32a8c2c00000000l); }
@Test
public void test14318() { x = 0x7fffffffffffffffl; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test14319() { x = 0x7fffffff7fffffffl; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test14320() { x = 0x7fffffff80000000l; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14321() { x = 0x7fffffffdeadf00dl; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0xc32a8c2c00000000l); }
@Test
public void test14322() { x = 0x8000000000000000l; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14323() { x = 0xffffffffffffffffl; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test14324() { x = 0xfffffffffffffffel; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test14325() { x = 0xefffffffffffffffl; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa2400000000l); }
@Test
public void test14326() { x = 0xdeadf00ddeadf00dl; long result = x * 0x5dc00000000l; AssertJUnit.assertEquals("multiply", result, 0xc32a8c2c00000000l); }
@Test
public void test14327() { x = 0x000000007fffffffl; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd12000000000l); }
@Test
public void test14328() { x = 0x0000000080000000l; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14329() { x = 0x00000000ffffffffl; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd12000000000l); }
@Test
public void test14330() { x = 0x000000017fffffffl; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd12000000000l); }
@Test
public void test14331() { x = 0x0000000180000000l; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14332() { x = 0x00000001ffffffffl; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd12000000000l); }
@Test
public void test14333() { x = 0xffffffff7fffffffl; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd12000000000l); }
@Test
public void test14334() { x = 0xffffffff80000000l; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14335() { x = 0x00000001deadf00dl; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0x1954616000000000l); }
@Test
public void test14336() { x = 0xffffffffdeadf00dl; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0x1954616000000000l); }
@Test
public void test14337() { x = 0x7fffffffffffffffl; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd12000000000l); }
@Test
public void test14338() { x = 0x7fffffff7fffffffl; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd12000000000l); }
@Test
public void test14339() { x = 0x7fffffff80000000l; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14340() { x = 0x7fffffffdeadf00dl; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0x1954616000000000l); }
@Test
public void test14341() { x = 0x8000000000000000l; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14342() { x = 0xffffffffffffffffl; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd12000000000l); }
@Test
public void test14343() { x = 0xfffffffffffffffel; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffa24000000000l); }
@Test
public void test14344() { x = 0xefffffffffffffffl; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffd12000000000l); }
@Test
public void test14345() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2ee000000000l; AssertJUnit.assertEquals("multiply", result, 0x1954616000000000l); }
@Test
public void test14346() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0xfffffd12000005dcl); }
@Test
public void test14347() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0xfffffd1200000000l); }
@Test
public void test14348() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0xfffffa24000005dcl); }
@Test
public void test14349() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0xfffff736000005dcl); }
@Test
public void test14350() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000000l); }
@Test
public void test14351() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0xfffff448000005dcl); }
@Test
public void test14352() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0x000002ee000005dcl); }
@Test
public void test14353() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0x000002ee00000000l); }
@Test
public void test14354() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0xfffff50b3cd573d4l); }
@Test
public void test14355() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0x000000c33cd573d4l); }
@Test
public void test14356() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0x00000000000005dcl); }
@Test
public void test14357() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0x000002ee000005dcl); }
@Test
public void test14358() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0x000002ee00000000l); }
@Test
public void test14359() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0x000000c33cd573d4l); }
@Test
public void test14360() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14361() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0x00000000000005dcl); }
@Test
public void test14362() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000bb8l); }
@Test
public void test14363() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0xc0000000000005dcl); }
@Test
public void test14364() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffa24l; AssertJUnit.assertEquals("multiply", result, 0x3cd56ebb3cd573d4l); }
@Test
public void test14365() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000002ee0l); }
@Test
public void test14366() { x = 0x0000000080000000l; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0xffffe89000000000l); }
@Test
public void test14367() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0xffffd12000002ee0l); }
@Test
public void test14368() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000002ee0l); }
@Test
public void test14369() { x = 0x0000000180000000l; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000000000l); }
@Test
public void test14370() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0xffffa24000002ee0l); }
@Test
public void test14371() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0x0000177000002ee0l); }
@Test
public void test14372() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0x0000177000000000l); }
@Test
public void test14373() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0xffffa859e6ab9ea0l); }
@Test
public void test14374() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0x00000619e6ab9ea0l); }
@Test
public void test14375() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002ee0l); }
@Test
public void test14376() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0x0000177000002ee0l); }
@Test
public void test14377() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0x0000177000000000l); }
@Test
public void test14378() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0x00000619e6ab9ea0l); }
@Test
public void test14379() { x = 0x8000000000000000l; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14380() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002ee0l); }
@Test
public void test14381() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0x0000000000005dc0l); }
@Test
public void test14382() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0x0000000000002ee0l); }
@Test
public void test14383() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffd120l; AssertJUnit.assertEquals("multiply", result, 0xe6ab75d9e6ab9ea0l); }
@Test
public void test14384() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0xfffd12000005dc00l); }
@Test
public void test14385() { x = 0x0000000080000000l; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0xfffd120000000000l); }
@Test
public void test14386() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0xfffa24000005dc00l); }
@Test
public void test14387() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0xfff736000005dc00l); }
@Test
public void test14388() { x = 0x0000000180000000l; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0xfff7360000000000l); }
@Test
public void test14389() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0xfff448000005dc00l); }
@Test
public void test14390() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0x0002ee000005dc00l); }
@Test
public void test14391() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0x0002ee0000000000l); }
@Test
public void test14392() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0xfff50b3cd573d400l); }
@Test
public void test14393() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0x0000c33cd573d400l); }
@Test
public void test14394() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0x000000000005dc00l); }
@Test
public void test14395() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0x0002ee000005dc00l); }
@Test
public void test14396() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0x0002ee0000000000l); }
@Test
public void test14397() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0x0000c33cd573d400l); }
@Test
public void test14398() { x = 0x8000000000000000l; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14399() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0x000000000005dc00l); }
@Test
public void test14400() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0x00000000000bb800l); }
@Test
public void test14401() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0x000000000005dc00l); }
@Test
public void test14402() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffa2400l; AssertJUnit.assertEquals("multiply", result, 0xd56ebb3cd573d400l); }
@Test
public void test14403() { x = 0x000000007fffffffl; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test14404() { x = 0x0000000080000000l; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14405() { x = 0x00000000ffffffffl; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test14406() { x = 0x000000017fffffffl; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test14407() { x = 0x0000000180000000l; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14408() { x = 0x00000001ffffffffl; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test14409() { x = 0xffffffff7fffffffl; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test14410() { x = 0xffffffff80000000l; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14411() { x = 0x00000001deadf00dl; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x3cd573d400000000l); }
@Test
public void test14412() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x3cd573d400000000l); }
@Test
public void test14413() { x = 0x7fffffffffffffffl; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test14414() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test14415() { x = 0x7fffffff80000000l; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14416() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x3cd573d400000000l); }
@Test
public void test14417() { x = 0x8000000000000000l; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14418() { x = 0xffffffffffffffffl; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test14419() { x = 0xfffffffffffffffel; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test14420() { x = 0xefffffffffffffffl; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x000005dc00000000l); }
@Test
public void test14421() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffa2400000000l; AssertJUnit.assertEquals("multiply", result, 0x3cd573d400000000l); }
@Test
public void test14422() { x = 0x000000007fffffffl; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x00002ee000000000l); }
@Test
public void test14423() { x = 0x0000000080000000l; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14424() { x = 0x00000000ffffffffl; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x00002ee000000000l); }
@Test
public void test14425() { x = 0x000000017fffffffl; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x00002ee000000000l); }
@Test
public void test14426() { x = 0x0000000180000000l; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14427() { x = 0x00000001ffffffffl; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x00002ee000000000l); }
@Test
public void test14428() { x = 0xffffffff7fffffffl; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x00002ee000000000l); }
@Test
public void test14429() { x = 0xffffffff80000000l; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14430() { x = 0x00000001deadf00dl; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0xe6ab9ea000000000l); }
@Test
public void test14431() { x = 0xffffffffdeadf00dl; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0xe6ab9ea000000000l); }
@Test
public void test14432() { x = 0x7fffffffffffffffl; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x00002ee000000000l); }
@Test
public void test14433() { x = 0x7fffffff7fffffffl; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x00002ee000000000l); }
@Test
public void test14434() { x = 0x7fffffff80000000l; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14435() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0xe6ab9ea000000000l); }
@Test
public void test14436() { x = 0x8000000000000000l; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14437() { x = 0xffffffffffffffffl; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x00002ee000000000l); }
@Test
public void test14438() { x = 0xfffffffffffffffel; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x00005dc000000000l); }
@Test
public void test14439() { x = 0xefffffffffffffffl; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0x00002ee000000000l); }
@Test
public void test14440() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffd12000000000l; AssertJUnit.assertEquals("multiply", result, 0xe6ab9ea000000000l); }
@Test
public void test14441() { x = 0x000000007fffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x000003e7fffff830l); }
@Test
public void test14442() { x = 0x0000000080000000l; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test14443() { x = 0x00000000ffffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x000007cffffff830l); }
@Test
public void test14444() { x = 0x000000017fffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x00000bb7fffff830l); }
@Test
public void test14445() { x = 0x0000000180000000l; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x00000bb800000000l); }
@Test
public void test14446() { x = 0x00000001ffffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x00000f9ffffff830l); }
@Test
public void test14447() { x = 0xffffffff7fffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffc17fffff830l); }
@Test
public void test14448() { x = 0xffffffff80000000l; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test14449() { x = 0x00000001deadf00dl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x00000e9baee36590l); }
@Test
public void test14450() { x = 0xffffffffdeadf00dl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffefbaee36590l); }
@Test
public void test14451() { x = 0x7fffffffffffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff830l); }
@Test
public void test14452() { x = 0x7fffffff7fffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffc17fffff830l); }
@Test
public void test14453() { x = 0x7fffffff80000000l; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test14454() { x = 0x7fffffffdeadf00dl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffefbaee36590l); }
@Test
public void test14455() { x = 0x8000000000000000l; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14456() { x = 0xffffffffffffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff830l); }
@Test
public void test14457() { x = 0xfffffffffffffffel; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff060l); }
@Test
public void test14458() { x = 0xefffffffffffffffl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff830l); }
@Test
public void test14459() { x = 0xdeadf00ddeadf00dl; long result = x * 0x7d0l; AssertJUnit.assertEquals("multiply", result, 0xaee36c5baee36590l); }
@Test
public void test14460() { x = 0x000000007fffffffl; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0x00001f3fffffc180l); }
@Test
public void test14461() { x = 0x0000000080000000l; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000000000l); }
@Test
public void test14462() { x = 0x00000000ffffffffl; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0x00003e7fffffc180l); }
@Test
public void test14463() { x = 0x000000017fffffffl; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0x00005dbfffffc180l); }
@Test
public void test14464() { x = 0x0000000180000000l; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0x00005dc000000000l); }
@Test
public void test14465() { x = 0x00000001ffffffffl; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0x00007cffffffc180l); }
@Test
public void test14466() { x = 0xffffffff7fffffffl; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0xffffe0bfffffc180l); }
@Test
public void test14467() { x = 0xffffffff80000000l; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000000000l); }
@Test
public void test14468() { x = 0x00000001deadf00dl; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0x000074dd771b2c80l); }
@Test
public void test14469() { x = 0xffffffffdeadf00dl; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0xfffff7dd771b2c80l); }
@Test
public void test14470() { x = 0x7fffffffffffffffl; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc180l); }
@Test
public void test14471() { x = 0x7fffffff7fffffffl; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0xffffe0bfffffc180l); }
@Test
public void test14472() { x = 0x7fffffff80000000l; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000000000l); }
@Test
public void test14473() { x = 0x7fffffffdeadf00dl; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0xfffff7dd771b2c80l); }
@Test
public void test14474() { x = 0x8000000000000000l; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14475() { x = 0xffffffffffffffffl; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc180l); }
@Test
public void test14476() { x = 0xfffffffffffffffel; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff8300l); }
@Test
public void test14477() { x = 0xefffffffffffffffl; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc180l); }
@Test
public void test14478() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3e80l; AssertJUnit.assertEquals("multiply", result, 0x771b62dd771b2c80l); }
@Test
public void test14479() { x = 0x000000007fffffffl; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0x0003e7fffff83000l); }
@Test
public void test14480() { x = 0x0000000080000000l; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0x0003e80000000000l); }
@Test
public void test14481() { x = 0x00000000ffffffffl; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0x0007cffffff83000l); }
@Test
public void test14482() { x = 0x000000017fffffffl; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0x000bb7fffff83000l); }
@Test
public void test14483() { x = 0x0000000180000000l; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0x000bb80000000000l); }
@Test
public void test14484() { x = 0x00000001ffffffffl; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0x000f9ffffff83000l); }
@Test
public void test14485() { x = 0xffffffff7fffffffl; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0xfffc17fffff83000l); }
@Test
public void test14486() { x = 0xffffffff80000000l; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0xfffc180000000000l); }
@Test
public void test14487() { x = 0x00000001deadf00dl; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0x000e9baee3659000l); }
@Test
public void test14488() { x = 0xffffffffdeadf00dl; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0xfffefbaee3659000l); }
@Test
public void test14489() { x = 0x7fffffffffffffffl; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff83000l); }
@Test
public void test14490() { x = 0x7fffffff7fffffffl; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0xfffc17fffff83000l); }
@Test
public void test14491() { x = 0x7fffffff80000000l; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0xfffc180000000000l); }
@Test
public void test14492() { x = 0x7fffffffdeadf00dl; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0xfffefbaee3659000l); }
@Test
public void test14493() { x = 0x8000000000000000l; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14494() { x = 0xffffffffffffffffl; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff83000l); }
@Test
public void test14495() { x = 0xfffffffffffffffel; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff06000l); }
@Test
public void test14496() { x = 0xefffffffffffffffl; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff83000l); }
@Test
public void test14497() { x = 0xdeadf00ddeadf00dl; long result = x * 0x7d000l; AssertJUnit.assertEquals("multiply", result, 0xe36c5baee3659000l); }
@Test
public void test14498() { x = 0x000000007fffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test14499() { x = 0x0000000080000000l; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14500() { x = 0x00000000ffffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test14501() { x = 0x000000017fffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test14502() { x = 0x0000000180000000l; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14503() { x = 0x00000001ffffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test14504() { x = 0xffffffff7fffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test14505() { x = 0xffffffff80000000l; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14506() { x = 0x00000001deadf00dl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xaee3659000000000l); }
@Test
public void test14507() { x = 0xffffffffdeadf00dl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xaee3659000000000l); }
@Test
public void test14508() { x = 0x7fffffffffffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test14509() { x = 0x7fffffff7fffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test14510() { x = 0x7fffffff80000000l; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14511() { x = 0x7fffffffdeadf00dl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xaee3659000000000l); }
@Test
public void test14512() { x = 0x8000000000000000l; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14513() { x = 0xffffffffffffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test14514() { x = 0xfffffffffffffffel; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff06000000000l); }
@Test
public void test14515() { x = 0xefffffffffffffffl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff83000000000l); }
@Test
public void test14516() { x = 0xdeadf00ddeadf00dl; long result = x * 0x7d000000000l; AssertJUnit.assertEquals("multiply", result, 0xaee3659000000000l); }
@Test
public void test14517() { x = 0x000000007fffffffl; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000000000l); }
@Test
public void test14518() { x = 0x0000000080000000l; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14519() { x = 0x00000000ffffffffl; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000000000l); }
@Test
public void test14520() { x = 0x000000017fffffffl; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000000000l); }
@Test
public void test14521() { x = 0x0000000180000000l; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14522() { x = 0x00000001ffffffffl; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000000000l); }
@Test
public void test14523() { x = 0xffffffff7fffffffl; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000000000l); }
@Test
public void test14524() { x = 0xffffffff80000000l; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14525() { x = 0x00000001deadf00dl; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0x771b2c8000000000l); }
@Test
public void test14526() { x = 0xffffffffdeadf00dl; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0x771b2c8000000000l); }
@Test
public void test14527() { x = 0x7fffffffffffffffl; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000000000l); }
@Test
public void test14528() { x = 0x7fffffff7fffffffl; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000000000l); }
@Test
public void test14529() { x = 0x7fffffff80000000l; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14530() { x = 0x7fffffffdeadf00dl; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0x771b2c8000000000l); }
@Test
public void test14531() { x = 0x8000000000000000l; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14532() { x = 0xffffffffffffffffl; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000000000l); }
@Test
public void test14533() { x = 0xfffffffffffffffel; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0xffff830000000000l); }
@Test
public void test14534() { x = 0xefffffffffffffffl; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000000000l); }
@Test
public void test14535() { x = 0xdeadf00ddeadf00dl; long result = x * 0x3e8000000000l; AssertJUnit.assertEquals("multiply", result, 0x771b2c8000000000l); }
@Test
public void test14536() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0xfffffc18000007d0l); }
@Test
public void test14537() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1800000000l); }
@Test
public void test14538() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0xfffff830000007d0l); }
@Test
public void test14539() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0xfffff448000007d0l); }
@Test
public void test14540() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0xfffff44800000000l); }
@Test
public void test14541() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0xfffff060000007d0l); }
@Test
public void test14542() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x000003e8000007d0l); }
@Test
public void test14543() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test14544() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0xfffff164511c9a70l); }
@Test
public void test14545() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x00000104511c9a70l); }
@Test
public void test14546() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x00000000000007d0l); }
@Test
public void test14547() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x000003e8000007d0l); }
@Test
public void test14548() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x000003e800000000l); }
@Test
public void test14549() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x00000104511c9a70l); }
@Test
public void test14550() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14551() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x00000000000007d0l); }
@Test
public void test14552() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000fa0l); }
@Test
public void test14553() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x00000000000007d0l); }
@Test
public void test14554() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff830l; AssertJUnit.assertEquals("multiply", result, 0x511c93a4511c9a70l); }
@Test
public void test14555() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000003e80l); }
@Test
public void test14556() { x = 0x0000000080000000l; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0xffffe0c000000000l); }
@Test
public void test14557() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0xffffc18000003e80l); }
@Test
public void test14558() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0xffffa24000003e80l); }
@Test
public void test14559() { x = 0x0000000180000000l; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0xffffa24000000000l); }
@Test
public void test14560() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0xffff830000003e80l); }
@Test
public void test14561() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000003e80l); }
@Test
public void test14562() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000000000l); }
@Test
public void test14563() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0xffff8b2288e4d380l); }
@Test
public void test14564() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0x0000082288e4d380l); }
@Test
public void test14565() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003e80l); }
@Test
public void test14566() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000003e80l); }
@Test
public void test14567() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0x00001f4000000000l); }
@Test
public void test14568() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0x0000082288e4d380l); }
@Test
public void test14569() { x = 0x8000000000000000l; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14570() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003e80l); }
@Test
public void test14571() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0x0000000000007d00l); }
@Test
public void test14572() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003e80l); }
@Test
public void test14573() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffc180l; AssertJUnit.assertEquals("multiply", result, 0x88e49d2288e4d380l); }
@Test
public void test14574() { x = 0x000000007fffffffl; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0xfffc18000007d000l); }
@Test
public void test14575() { x = 0x0000000080000000l; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0xfffc180000000000l); }
@Test
public void test14576() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0xfff830000007d000l); }
@Test
public void test14577() { x = 0x000000017fffffffl; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0xfff448000007d000l); }
@Test
public void test14578() { x = 0x0000000180000000l; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0xfff4480000000000l); }
@Test
public void test14579() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0xfff060000007d000l); }
@Test
public void test14580() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0x0003e8000007d000l); }
@Test
public void test14581() { x = 0xffffffff80000000l; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0x0003e80000000000l); }
@Test
public void test14582() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0xfff164511c9a7000l); }
@Test
public void test14583() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0x000104511c9a7000l); }
@Test
public void test14584() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0x000000000007d000l); }
@Test
public void test14585() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0x0003e8000007d000l); }
@Test
public void test14586() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0x0003e80000000000l); }
@Test
public void test14587() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0x000104511c9a7000l); }
@Test
public void test14588() { x = 0x8000000000000000l; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14589() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0x000000000007d000l); }
@Test
public void test14590() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0x00000000000fa000l); }
@Test
public void test14591() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0x000000000007d000l); }
@Test
public void test14592() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffff83000l; AssertJUnit.assertEquals("multiply", result, 0x1c93a4511c9a7000l); }
@Test
public void test14593() { x = 0x000000007fffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test14594() { x = 0x0000000080000000l; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14595() { x = 0x00000000ffffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test14596() { x = 0x000000017fffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test14597() { x = 0x0000000180000000l; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14598() { x = 0x00000001ffffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test14599() { x = 0xffffffff7fffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test14600() { x = 0xffffffff80000000l; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14601() { x = 0x00000001deadf00dl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x511c9a7000000000l); }
@Test
public void test14602() { x = 0xffffffffdeadf00dl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x511c9a7000000000l); }
@Test
public void test14603() { x = 0x7fffffffffffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test14604() { x = 0x7fffffff7fffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test14605() { x = 0x7fffffff80000000l; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14606() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x511c9a7000000000l); }
@Test
public void test14607() { x = 0x8000000000000000l; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14608() { x = 0xffffffffffffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test14609() { x = 0xfffffffffffffffel; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fa000000000l); }
@Test
public void test14610() { x = 0xefffffffffffffffl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x000007d000000000l); }
@Test
public void test14611() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffff83000000000l; AssertJUnit.assertEquals("multiply", result, 0x511c9a7000000000l); }
@Test
public void test14612() { x = 0x000000007fffffffl; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000000000l); }
@Test
public void test14613() { x = 0x0000000080000000l; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14614() { x = 0x00000000ffffffffl; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000000000l); }
@Test
public void test14615() { x = 0x000000017fffffffl; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000000000l); }
@Test
public void test14616() { x = 0x0000000180000000l; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14617() { x = 0x00000001ffffffffl; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000000000l); }
@Test
public void test14618() { x = 0xffffffff7fffffffl; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000000000l); }
@Test
public void test14619() { x = 0xffffffff80000000l; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14620() { x = 0x00000001deadf00dl; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x88e4d38000000000l); }
@Test
public void test14621() { x = 0xffffffffdeadf00dl; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x88e4d38000000000l); }
@Test
public void test14622() { x = 0x7fffffffffffffffl; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000000000l); }
@Test
public void test14623() { x = 0x7fffffff7fffffffl; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000000000l); }
@Test
public void test14624() { x = 0x7fffffff80000000l; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14625() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x88e4d38000000000l); }
@Test
public void test14626() { x = 0x8000000000000000l; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14627() { x = 0xffffffffffffffffl; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000000000l); }
@Test
public void test14628() { x = 0xfffffffffffffffel; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x00007d0000000000l); }
@Test
public void test14629() { x = 0xefffffffffffffffl; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x00003e8000000000l); }
@Test
public void test14630() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffc18000000000l; AssertJUnit.assertEquals("multiply", result, 0x88e4d38000000000l); }
@Test
public void test14631() { x = 0x000000007fffffffl; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0x00000464fffff736l); }
@Test
public void test14632() { x = 0x0000000080000000l; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0x0000046500000000l); }
@Test
public void test14633() { x = 0x00000000ffffffffl; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0x000008c9fffff736l); }
@Test
public void test14634() { x = 0x000000017fffffffl; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0x00000d2efffff736l); }
@Test
public void test14635() { x = 0x0000000180000000l; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0x00000d2f00000000l); }
@Test
public void test14636() { x = 0x00000001ffffffffl; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0x00001193fffff736l); }
@Test
public void test14637() { x = 0xffffffff7fffffffl; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0xfffffb9afffff736l); }
@Test
public void test14638() { x = 0xffffffff80000000l; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0xfffffb9b00000000l); }
@Test
public void test14639() { x = 0x00000001deadf00dl; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0x0000106f24bfd242l); }
@Test
public void test14640() { x = 0xffffffffdeadf00dl; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0xfffffedb24bfd242l); }
@Test
public void test14641() { x = 0x7fffffffffffffffl; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff736l); }
@Test
public void test14642() { x = 0x7fffffff7fffffffl; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0xfffffb9afffff736l); }
@Test
public void test14643() { x = 0x7fffffff80000000l; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0xfffffb9b00000000l); }
@Test
public void test14644() { x = 0x7fffffffdeadf00dl; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0xfffffedb24bfd242l); }
@Test
public void test14645() { x = 0x8000000000000000l; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14646() { x = 0xffffffffffffffffl; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff736l); }
@Test
public void test14647() { x = 0xfffffffffffffffel; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffee6cl); }
@Test
public void test14648() { x = 0xefffffffffffffffl; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0x5ffffffffffff736l); }
@Test
public void test14649() { x = 0xdeadf00ddeadf00dl; long result = x * 0x8cal; AssertJUnit.assertEquals("multiply", result, 0x24bfd9e724bfd242l); }
@Test
public void test14650() { x = 0x000000007fffffffl; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0x00002327ffffb9b0l); }
@Test
public void test14651() { x = 0x0000000080000000l; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0x0000232800000000l); }
@Test
public void test14652() { x = 0x00000000ffffffffl; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0x0000464fffffb9b0l); }
@Test
public void test14653() { x = 0x000000017fffffffl; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0x00006977ffffb9b0l); }
@Test
public void test14654() { x = 0x0000000180000000l; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0x0000697800000000l); }
@Test
public void test14655() { x = 0x00000001ffffffffl; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0x00008c9fffffb9b0l); }
@Test
public void test14656() { x = 0xffffffff7fffffffl; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd7ffffb9b0l); }
@Test
public void test14657() { x = 0xffffffff80000000l; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800000000l); }
@Test
public void test14658() { x = 0x00000001deadf00dl; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0x0000837925fe9210l); }
@Test
public void test14659() { x = 0xffffffffdeadf00dl; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0xfffff6d925fe9210l); }
@Test
public void test14660() { x = 0x7fffffffffffffffl; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb9b0l); }
@Test
public void test14661() { x = 0x7fffffff7fffffffl; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd7ffffb9b0l); }
@Test
public void test14662() { x = 0x7fffffff80000000l; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800000000l); }
@Test
public void test14663() { x = 0x7fffffffdeadf00dl; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0xfffff6d925fe9210l); }
@Test
public void test14664() { x = 0x8000000000000000l; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14665() { x = 0xffffffffffffffffl; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb9b0l); }
@Test
public void test14666() { x = 0xfffffffffffffffel; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff7360l); }
@Test
public void test14667() { x = 0xefffffffffffffffl; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb9b0l); }
@Test
public void test14668() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4650l; AssertJUnit.assertEquals("multiply", result, 0x25fecf3925fe9210l); }
@Test
public void test14669() { x = 0x000000007fffffffl; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0x000464fffff73600l); }
@Test
public void test14670() { x = 0x0000000080000000l; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0x0004650000000000l); }
@Test
public void test14671() { x = 0x00000000ffffffffl; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0x0008c9fffff73600l); }
@Test
public void test14672() { x = 0x000000017fffffffl; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0x000d2efffff73600l); }
@Test
public void test14673() { x = 0x0000000180000000l; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0x000d2f0000000000l); }
@Test
public void test14674() { x = 0x00000001ffffffffl; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0x001193fffff73600l); }
@Test
public void test14675() { x = 0xffffffff7fffffffl; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0xfffb9afffff73600l); }
@Test
public void test14676() { x = 0xffffffff80000000l; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0xfffb9b0000000000l); }
@Test
public void test14677() { x = 0x00000001deadf00dl; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0x00106f24bfd24200l); }
@Test
public void test14678() { x = 0xffffffffdeadf00dl; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0xfffedb24bfd24200l); }
@Test
public void test14679() { x = 0x7fffffffffffffffl; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff73600l); }
@Test
public void test14680() { x = 0x7fffffff7fffffffl; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0xfffb9afffff73600l); }
@Test
public void test14681() { x = 0x7fffffff80000000l; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0xfffb9b0000000000l); }
@Test
public void test14682() { x = 0x7fffffffdeadf00dl; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0xfffedb24bfd24200l); }
@Test
public void test14683() { x = 0x8000000000000000l; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14684() { x = 0xffffffffffffffffl; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff73600l); }
@Test
public void test14685() { x = 0xfffffffffffffffel; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffee6c00l); }
@Test
public void test14686() { x = 0xefffffffffffffffl; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff73600l); }
@Test
public void test14687() { x = 0xdeadf00ddeadf00dl; long result = x * 0x8ca00l; AssertJUnit.assertEquals("multiply", result, 0xbfd9e724bfd24200l); }
@Test
public void test14688() { x = 0x000000007fffffffl; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000000l); }
@Test
public void test14689() { x = 0x0000000080000000l; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14690() { x = 0x00000000ffffffffl; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000000l); }
@Test
public void test14691() { x = 0x000000017fffffffl; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000000l); }
@Test
public void test14692() { x = 0x0000000180000000l; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14693() { x = 0x00000001ffffffffl; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000000l); }
@Test
public void test14694() { x = 0xffffffff7fffffffl; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000000l); }
@Test
public void test14695() { x = 0xffffffff80000000l; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14696() { x = 0x00000001deadf00dl; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0x24bfd24200000000l); }
@Test
public void test14697() { x = 0xffffffffdeadf00dl; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0x24bfd24200000000l); }
@Test
public void test14698() { x = 0x7fffffffffffffffl; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000000l); }
@Test
public void test14699() { x = 0x7fffffff7fffffffl; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000000l); }
@Test
public void test14700() { x = 0x7fffffff80000000l; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14701() { x = 0x7fffffffdeadf00dl; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0x24bfd24200000000l); }
@Test
public void test14702() { x = 0x8000000000000000l; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14703() { x = 0xffffffffffffffffl; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000000l); }
@Test
public void test14704() { x = 0xfffffffffffffffel; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000000l); }
@Test
public void test14705() { x = 0xefffffffffffffffl; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000000l); }
@Test
public void test14706() { x = 0xdeadf00ddeadf00dl; long result = x * 0x8ca00000000l; AssertJUnit.assertEquals("multiply", result, 0x24bfd24200000000l); }
@Test
public void test14707() { x = 0x000000007fffffffl; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000000000l); }
@Test
public void test14708() { x = 0x0000000080000000l; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14709() { x = 0x00000000ffffffffl; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000000000l); }
@Test
public void test14710() { x = 0x000000017fffffffl; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000000000l); }
@Test
public void test14711() { x = 0x0000000180000000l; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14712() { x = 0x00000001ffffffffl; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000000000l); }
@Test
public void test14713() { x = 0xffffffff7fffffffl; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000000000l); }
@Test
public void test14714() { x = 0xffffffff80000000l; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14715() { x = 0x00000001deadf00dl; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0x25fe921000000000l); }
@Test
public void test14716() { x = 0xffffffffdeadf00dl; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0x25fe921000000000l); }
@Test
public void test14717() { x = 0x7fffffffffffffffl; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000000000l); }
@Test
public void test14718() { x = 0x7fffffff7fffffffl; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000000000l); }
@Test
public void test14719() { x = 0x7fffffff80000000l; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14720() { x = 0x7fffffffdeadf00dl; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0x25fe921000000000l); }
@Test
public void test14721() { x = 0x8000000000000000l; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14722() { x = 0xffffffffffffffffl; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000000000l); }
@Test
public void test14723() { x = 0xfffffffffffffffel; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0xffff736000000000l); }
@Test
public void test14724() { x = 0xefffffffffffffffl; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000000000l); }
@Test
public void test14725() { x = 0xdeadf00ddeadf00dl; long result = x * 0x465000000000l; AssertJUnit.assertEquals("multiply", result, 0x25fe921000000000l); }
@Test
public void test14726() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0xfffffb9b000008cal); }
@Test
public void test14727() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0xfffffb9b00000000l); }
@Test
public void test14728() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0xfffff736000008cal); }
@Test
public void test14729() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0xfffff2d1000008cal); }
@Test
public void test14730() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0xfffff2d100000000l); }
@Test
public void test14731() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c000008cal); }
@Test
public void test14732() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0x00000465000008cal); }
@Test
public void test14733() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0x0000046500000000l); }
@Test
public void test14734() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0xffffef90db402dbel); }
@Test
public void test14735() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0x00000124db402dbel); }
@Test
public void test14736() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0x00000000000008cal); }
@Test
public void test14737() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0x00000465000008cal); }
@Test
public void test14738() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0x0000046500000000l); }
@Test
public void test14739() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0x00000124db402dbel); }
@Test
public void test14740() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14741() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0x00000000000008cal); }
@Test
public void test14742() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001194l); }
@Test
public void test14743() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0xa0000000000008cal); }
@Test
public void test14744() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff736l; AssertJUnit.assertEquals("multiply", result, 0xdb402618db402dbel); }
@Test
public void test14745() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800004650l); }
@Test
public void test14746() { x = 0x0000000080000000l; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800000000l); }
@Test
public void test14747() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000004650l); }
@Test
public void test14748() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0xffff968800004650l); }
@Test
public void test14749() { x = 0x0000000180000000l; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0xffff968800000000l); }
@Test
public void test14750() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0xffff736000004650l); }
@Test
public void test14751() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0x0000232800004650l); }
@Test
public void test14752() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0x0000232800000000l); }
@Test
public void test14753() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0xffff7c86da016df0l); }
@Test
public void test14754() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0x00000926da016df0l); }
@Test
public void test14755() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004650l); }
@Test
public void test14756() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0x0000232800004650l); }
@Test
public void test14757() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0x0000232800000000l); }
@Test
public void test14758() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0x00000926da016df0l); }
@Test
public void test14759() { x = 0x8000000000000000l; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14760() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004650l); }
@Test
public void test14761() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000008ca0l); }
@Test
public void test14762() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004650l); }
@Test
public void test14763() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffb9b0l; AssertJUnit.assertEquals("multiply", result, 0xda0130c6da016df0l); }
@Test
public void test14764() { x = 0x000000007fffffffl; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0xfffb9b000008ca00l); }
@Test
public void test14765() { x = 0x0000000080000000l; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0xfffb9b0000000000l); }
@Test
public void test14766() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0xfff736000008ca00l); }
@Test
public void test14767() { x = 0x000000017fffffffl; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0xfff2d1000008ca00l); }
@Test
public void test14768() { x = 0x0000000180000000l; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0xfff2d10000000000l); }
@Test
public void test14769() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0xffee6c000008ca00l); }
@Test
public void test14770() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0x000465000008ca00l); }
@Test
public void test14771() { x = 0xffffffff80000000l; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0x0004650000000000l); }
@Test
public void test14772() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0xffef90db402dbe00l); }
@Test
public void test14773() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0x000124db402dbe00l); }
@Test
public void test14774() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0x000000000008ca00l); }
@Test
public void test14775() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0x000465000008ca00l); }
@Test
public void test14776() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0x0004650000000000l); }
@Test
public void test14777() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0x000124db402dbe00l); }
@Test
public void test14778() { x = 0x8000000000000000l; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14779() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0x000000000008ca00l); }
@Test
public void test14780() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0x0000000000119400l); }
@Test
public void test14781() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0x000000000008ca00l); }
@Test
public void test14782() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffff73600l; AssertJUnit.assertEquals("multiply", result, 0x402618db402dbe00l); }
@Test
public void test14783() { x = 0x000000007fffffffl; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x000008ca00000000l); }
@Test
public void test14784() { x = 0x0000000080000000l; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14785() { x = 0x00000000ffffffffl; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x000008ca00000000l); }
@Test
public void test14786() { x = 0x000000017fffffffl; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x000008ca00000000l); }
@Test
public void test14787() { x = 0x0000000180000000l; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14788() { x = 0x00000001ffffffffl; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x000008ca00000000l); }
@Test
public void test14789() { x = 0xffffffff7fffffffl; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x000008ca00000000l); }
@Test
public void test14790() { x = 0xffffffff80000000l; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14791() { x = 0x00000001deadf00dl; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0xdb402dbe00000000l); }
@Test
public void test14792() { x = 0xffffffffdeadf00dl; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0xdb402dbe00000000l); }
@Test
public void test14793() { x = 0x7fffffffffffffffl; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x000008ca00000000l); }
@Test
public void test14794() { x = 0x7fffffff7fffffffl; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x000008ca00000000l); }
@Test
public void test14795() { x = 0x7fffffff80000000l; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14796() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0xdb402dbe00000000l); }
@Test
public void test14797() { x = 0x8000000000000000l; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14798() { x = 0xffffffffffffffffl; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x000008ca00000000l); }
@Test
public void test14799() { x = 0xfffffffffffffffel; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x0000119400000000l); }
@Test
public void test14800() { x = 0xefffffffffffffffl; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0x000008ca00000000l); }
@Test
public void test14801() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffff73600000000l; AssertJUnit.assertEquals("multiply", result, 0xdb402dbe00000000l); }
@Test
public void test14802() { x = 0x000000007fffffffl; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000465000000000l); }
@Test
public void test14803() { x = 0x0000000080000000l; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14804() { x = 0x00000000ffffffffl; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000465000000000l); }
@Test
public void test14805() { x = 0x000000017fffffffl; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000465000000000l); }
@Test
public void test14806() { x = 0x0000000180000000l; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14807() { x = 0x00000001ffffffffl; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000465000000000l); }
@Test
public void test14808() { x = 0xffffffff7fffffffl; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000465000000000l); }
@Test
public void test14809() { x = 0xffffffff80000000l; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14810() { x = 0x00000001deadf00dl; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0xda016df000000000l); }
@Test
public void test14811() { x = 0xffffffffdeadf00dl; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0xda016df000000000l); }
@Test
public void test14812() { x = 0x7fffffffffffffffl; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000465000000000l); }
@Test
public void test14813() { x = 0x7fffffff7fffffffl; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000465000000000l); }
@Test
public void test14814() { x = 0x7fffffff80000000l; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14815() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0xda016df000000000l); }
@Test
public void test14816() { x = 0x8000000000000000l; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14817() { x = 0xffffffffffffffffl; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000465000000000l); }
@Test
public void test14818() { x = 0xfffffffffffffffel; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x00008ca000000000l); }
@Test
public void test14819() { x = 0xefffffffffffffffl; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000465000000000l); }
@Test
public void test14820() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffb9b000000000l; AssertJUnit.assertEquals("multiply", result, 0xda016df000000000l); }
@Test
public void test14821() { x = 0x000000007fffffffl; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0x000004e1fffff63cl); }
@Test
public void test14822() { x = 0x0000000080000000l; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0x000004e200000000l); }
@Test
public void test14823() { x = 0x00000000ffffffffl; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0x000009c3fffff63cl); }
@Test
public void test14824() { x = 0x000000017fffffffl; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0x00000ea5fffff63cl); }
@Test
public void test14825() { x = 0x0000000180000000l; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0x00000ea600000000l); }
@Test
public void test14826() { x = 0x00000001ffffffffl; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0x00001387fffff63cl); }
@Test
public void test14827() { x = 0xffffffff7fffffffl; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1dfffff63cl); }
@Test
public void test14828() { x = 0xffffffff80000000l; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e00000000l); }
@Test
public void test14829() { x = 0x00000001deadf00dl; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0x000012429a9c3ef4l); }
@Test
public void test14830() { x = 0xffffffffdeadf00dl; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0xfffffeba9a9c3ef4l); }
@Test
public void test14831() { x = 0x7fffffffffffffffl; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff63cl); }
@Test
public void test14832() { x = 0x7fffffff7fffffffl; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1dfffff63cl); }
@Test
public void test14833() { x = 0x7fffffff80000000l; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e00000000l); }
@Test
public void test14834() { x = 0x7fffffffdeadf00dl; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0xfffffeba9a9c3ef4l); }
@Test
public void test14835() { x = 0x8000000000000000l; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14836() { x = 0xffffffffffffffffl; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff63cl); }
@Test
public void test14837() { x = 0xfffffffffffffffel; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffec78l); }
@Test
public void test14838() { x = 0xefffffffffffffffl; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0xbffffffffffff63cl); }
@Test
public void test14839() { x = 0xdeadf00ddeadf00dl; long result = x * 0x9c4l; AssertJUnit.assertEquals("multiply", result, 0x9a9c47729a9c3ef4l); }
@Test
public void test14840() { x = 0x000000007fffffffl; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0x0000270fffffb1e0l); }
@Test
public void test14841() { x = 0x0000000080000000l; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0x0000271000000000l); }
@Test
public void test14842() { x = 0x00000000ffffffffl; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0x00004e1fffffb1e0l); }
@Test
public void test14843() { x = 0x000000017fffffffl; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0x0000752fffffb1e0l); }
@Test
public void test14844() { x = 0x0000000180000000l; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0x0000753000000000l); }
@Test
public void test14845() { x = 0x00000001ffffffffl; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0x00009c3fffffb1e0l); }
@Test
public void test14846() { x = 0xffffffff7fffffffl; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0xffffd8efffffb1e0l); }
@Test
public void test14847() { x = 0xffffffff80000000l; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000000000l); }
@Test
public void test14848() { x = 0x00000001deadf00dl; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0x00009214d4e1f7a0l); }
@Test
public void test14849() { x = 0xffffffffdeadf00dl; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0xfffff5d4d4e1f7a0l); }
@Test
public void test14850() { x = 0x7fffffffffffffffl; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb1e0l); }
@Test
public void test14851() { x = 0x7fffffff7fffffffl; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0xffffd8efffffb1e0l); }
@Test
public void test14852() { x = 0x7fffffff80000000l; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000000000l); }
@Test
public void test14853() { x = 0x7fffffffdeadf00dl; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0xfffff5d4d4e1f7a0l); }
@Test
public void test14854() { x = 0x8000000000000000l; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14855() { x = 0xffffffffffffffffl; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb1e0l); }
@Test
public void test14856() { x = 0xfffffffffffffffel; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff63c0l); }
@Test
public void test14857() { x = 0xefffffffffffffffl; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffb1e0l); }
@Test
public void test14858() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4e20l; AssertJUnit.assertEquals("multiply", result, 0xd4e23b94d4e1f7a0l); }
@Test
public void test14859() { x = 0x000000007fffffffl; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0x0004e1fffff63c00l); }
@Test
public void test14860() { x = 0x0000000080000000l; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0x0004e20000000000l); }
@Test
public void test14861() { x = 0x00000000ffffffffl; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0x0009c3fffff63c00l); }
@Test
public void test14862() { x = 0x000000017fffffffl; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0x000ea5fffff63c00l); }
@Test
public void test14863() { x = 0x0000000180000000l; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0x000ea60000000000l); }
@Test
public void test14864() { x = 0x00000001ffffffffl; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0x001387fffff63c00l); }
@Test
public void test14865() { x = 0xffffffff7fffffffl; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0xfffb1dfffff63c00l); }
@Test
public void test14866() { x = 0xffffffff80000000l; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0xfffb1e0000000000l); }
@Test
public void test14867() { x = 0x00000001deadf00dl; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0x0012429a9c3ef400l); }
@Test
public void test14868() { x = 0xffffffffdeadf00dl; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0xfffeba9a9c3ef400l); }
@Test
public void test14869() { x = 0x7fffffffffffffffl; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff63c00l); }
@Test
public void test14870() { x = 0x7fffffff7fffffffl; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0xfffb1dfffff63c00l); }
@Test
public void test14871() { x = 0x7fffffff80000000l; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0xfffb1e0000000000l); }
@Test
public void test14872() { x = 0x7fffffffdeadf00dl; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0xfffeba9a9c3ef400l); }
@Test
public void test14873() { x = 0x8000000000000000l; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14874() { x = 0xffffffffffffffffl; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff63c00l); }
@Test
public void test14875() { x = 0xfffffffffffffffel; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffec7800l); }
@Test
public void test14876() { x = 0xefffffffffffffffl; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffff63c00l); }
@Test
public void test14877() { x = 0xdeadf00ddeadf00dl; long result = x * 0x9c400l; AssertJUnit.assertEquals("multiply", result, 0x9c47729a9c3ef400l); }
@Test
public void test14878() { x = 0x000000007fffffffl; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff63c00000000l); }
@Test
public void test14879() { x = 0x0000000080000000l; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14880() { x = 0x00000000ffffffffl; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff63c00000000l); }
@Test
public void test14881() { x = 0x000000017fffffffl; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff63c00000000l); }
@Test
public void test14882() { x = 0x0000000180000000l; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14883() { x = 0x00000001ffffffffl; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff63c00000000l); }
@Test
public void test14884() { x = 0xffffffff7fffffffl; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff63c00000000l); }
@Test
public void test14885() { x = 0xffffffff80000000l; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14886() { x = 0x00000001deadf00dl; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0x9a9c3ef400000000l); }
@Test
public void test14887() { x = 0xffffffffdeadf00dl; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0x9a9c3ef400000000l); }
@Test
public void test14888() { x = 0x7fffffffffffffffl; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff63c00000000l); }
@Test
public void test14889() { x = 0x7fffffff7fffffffl; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff63c00000000l); }
@Test
public void test14890() { x = 0x7fffffff80000000l; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14891() { x = 0x7fffffffdeadf00dl; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0x9a9c3ef400000000l); }
@Test
public void test14892() { x = 0x8000000000000000l; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14893() { x = 0xffffffffffffffffl; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff63c00000000l); }
@Test
public void test14894() { x = 0xfffffffffffffffel; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffec7800000000l); }
@Test
public void test14895() { x = 0xefffffffffffffffl; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff63c00000000l); }
@Test
public void test14896() { x = 0xdeadf00ddeadf00dl; long result = x * 0x9c400000000l; AssertJUnit.assertEquals("multiply", result, 0x9a9c3ef400000000l); }
@Test
public void test14897() { x = 0x000000007fffffffl; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb1e000000000l); }
@Test
public void test14898() { x = 0x0000000080000000l; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14899() { x = 0x00000000ffffffffl; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb1e000000000l); }
@Test
public void test14900() { x = 0x000000017fffffffl; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb1e000000000l); }
@Test
public void test14901() { x = 0x0000000180000000l; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14902() { x = 0x00000001ffffffffl; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb1e000000000l); }
@Test
public void test14903() { x = 0xffffffff7fffffffl; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb1e000000000l); }
@Test
public void test14904() { x = 0xffffffff80000000l; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14905() { x = 0x00000001deadf00dl; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0xd4e1f7a000000000l); }
@Test
public void test14906() { x = 0xffffffffdeadf00dl; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0xd4e1f7a000000000l); }
@Test
public void test14907() { x = 0x7fffffffffffffffl; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb1e000000000l); }
@Test
public void test14908() { x = 0x7fffffff7fffffffl; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb1e000000000l); }
@Test
public void test14909() { x = 0x7fffffff80000000l; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14910() { x = 0x7fffffffdeadf00dl; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0xd4e1f7a000000000l); }
@Test
public void test14911() { x = 0x8000000000000000l; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14912() { x = 0xffffffffffffffffl; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb1e000000000l); }
@Test
public void test14913() { x = 0xfffffffffffffffel; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0xffff63c000000000l); }
@Test
public void test14914() { x = 0xefffffffffffffffl; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffb1e000000000l); }
@Test
public void test14915() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4e2000000000l; AssertJUnit.assertEquals("multiply", result, 0xd4e1f7a000000000l); }
@Test
public void test14916() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e000009c4l); }
@Test
public void test14917() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0xfffffb1e00000000l); }
@Test
public void test14918() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0xfffff63c000009c4l); }
@Test
public void test14919() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0xfffff15a000009c4l); }
@Test
public void test14920() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0xfffff15a00000000l); }
@Test
public void test14921() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0xffffec78000009c4l); }
@Test
public void test14922() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0x000004e2000009c4l); }
@Test
public void test14923() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0x000004e200000000l); }
@Test
public void test14924() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0xffffedbd6563c10cl); }
@Test
public void test14925() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0x000001456563c10cl); }
@Test
public void test14926() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0x00000000000009c4l); }
@Test
public void test14927() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0x000004e2000009c4l); }
@Test
public void test14928() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0x000004e200000000l); }
@Test
public void test14929() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0x000001456563c10cl); }
@Test
public void test14930() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14931() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0x00000000000009c4l); }
@Test
public void test14932() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0x0000000000001388l); }
@Test
public void test14933() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0x40000000000009c4l); }
@Test
public void test14934() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff63cl; AssertJUnit.assertEquals("multiply", result, 0x6563b88d6563c10cl); }
@Test
public void test14935() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000004e20l); }
@Test
public void test14936() { x = 0x0000000080000000l; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0xffffd8f000000000l); }
@Test
public void test14937() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0xffffb1e000004e20l); }
@Test
public void test14938() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0xffff8ad000004e20l); }
@Test
public void test14939() { x = 0x0000000180000000l; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0xffff8ad000000000l); }
@Test
public void test14940() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0xffff63c000004e20l); }
@Test
public void test14941() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0x0000271000004e20l); }
@Test
public void test14942() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0x0000271000000000l); }
@Test
public void test14943() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0xffff6deb2b1e0860l); }
@Test
public void test14944() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0x00000a2b2b1e0860l); }
@Test
public void test14945() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004e20l); }
@Test
public void test14946() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0x0000271000004e20l); }
@Test
public void test14947() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0x0000271000000000l); }
@Test
public void test14948() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0x00000a2b2b1e0860l); }
@Test
public void test14949() { x = 0x8000000000000000l; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14950() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004e20l); }
@Test
public void test14951() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000009c40l); }
@Test
public void test14952() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000004e20l); }
@Test
public void test14953() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffb1e0l; AssertJUnit.assertEquals("multiply", result, 0x2b1dc46b2b1e0860l); }
@Test
public void test14954() { x = 0x000000007fffffffl; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0xfffb1e000009c400l); }
@Test
public void test14955() { x = 0x0000000080000000l; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0xfffb1e0000000000l); }
@Test
public void test14956() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0xfff63c000009c400l); }
@Test
public void test14957() { x = 0x000000017fffffffl; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0xfff15a000009c400l); }
@Test
public void test14958() { x = 0x0000000180000000l; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0xfff15a0000000000l); }
@Test
public void test14959() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0xffec78000009c400l); }
@Test
public void test14960() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0x0004e2000009c400l); }
@Test
public void test14961() { x = 0xffffffff80000000l; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0x0004e20000000000l); }
@Test
public void test14962() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0xffedbd6563c10c00l); }
@Test
public void test14963() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0x0001456563c10c00l); }
@Test
public void test14964() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0x000000000009c400l); }
@Test
public void test14965() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0x0004e2000009c400l); }
@Test
public void test14966() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0x0004e20000000000l); }
@Test
public void test14967() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0x0001456563c10c00l); }
@Test
public void test14968() { x = 0x8000000000000000l; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14969() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0x000000000009c400l); }
@Test
public void test14970() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000138800l); }
@Test
public void test14971() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0x000000000009c400l); }
@Test
public void test14972() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffff63c00l; AssertJUnit.assertEquals("multiply", result, 0x63b88d6563c10c00l); }
@Test
public void test14973() { x = 0x000000007fffffffl; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000009c400000000l); }
@Test
public void test14974() { x = 0x0000000080000000l; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14975() { x = 0x00000000ffffffffl; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000009c400000000l); }
@Test
public void test14976() { x = 0x000000017fffffffl; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000009c400000000l); }
@Test
public void test14977() { x = 0x0000000180000000l; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14978() { x = 0x00000001ffffffffl; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000009c400000000l); }
@Test
public void test14979() { x = 0xffffffff7fffffffl; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000009c400000000l); }
@Test
public void test14980() { x = 0xffffffff80000000l; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14981() { x = 0x00000001deadf00dl; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x6563c10c00000000l); }
@Test
public void test14982() { x = 0xffffffffdeadf00dl; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x6563c10c00000000l); }
@Test
public void test14983() { x = 0x7fffffffffffffffl; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000009c400000000l); }
@Test
public void test14984() { x = 0x7fffffff7fffffffl; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000009c400000000l); }
@Test
public void test14985() { x = 0x7fffffff80000000l; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14986() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x6563c10c00000000l); }
@Test
public void test14987() { x = 0x8000000000000000l; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14988() { x = 0xffffffffffffffffl; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000009c400000000l); }
@Test
public void test14989() { x = 0xfffffffffffffffel; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000138800000000l); }
@Test
public void test14990() { x = 0xefffffffffffffffl; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x000009c400000000l); }
@Test
public void test14991() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffff63c00000000l; AssertJUnit.assertEquals("multiply", result, 0x6563c10c00000000l); }
@Test
public void test14992() { x = 0x000000007fffffffl; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x00004e2000000000l); }
@Test
public void test14993() { x = 0x0000000080000000l; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14994() { x = 0x00000000ffffffffl; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x00004e2000000000l); }
@Test
public void test14995() { x = 0x000000017fffffffl; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x00004e2000000000l); }
@Test
public void test14996() { x = 0x0000000180000000l; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test14997() { x = 0x00000001ffffffffl; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x00004e2000000000l); }
@Test
public void test14998() { x = 0xffffffff7fffffffl; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x00004e2000000000l); }
@Test
public void test14999() { x = 0xffffffff80000000l; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15000() { x = 0x00000001deadf00dl; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x2b1e086000000000l); }
@Test
public void test15001() { x = 0xffffffffdeadf00dl; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x2b1e086000000000l); }
@Test
public void test15002() { x = 0x7fffffffffffffffl; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x00004e2000000000l); }
@Test
public void test15003() { x = 0x7fffffff7fffffffl; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x00004e2000000000l); }
@Test
public void test15004() { x = 0x7fffffff80000000l; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15005() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x2b1e086000000000l); }
@Test
public void test15006() { x = 0x8000000000000000l; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15007() { x = 0xffffffffffffffffl; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x00004e2000000000l); }
@Test
public void test15008() { x = 0xfffffffffffffffel; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x00009c4000000000l); }
@Test
public void test15009() { x = 0xefffffffffffffffl; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x00004e2000000000l); }
@Test
public void test15010() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffb1e000000000l; AssertJUnit.assertEquals("multiply", result, 0x2b1e086000000000l); }
@Test
public void test15011() { x = 0x000000007fffffffl; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0x000008c9ffffee6cl); }
@Test
public void test15012() { x = 0x0000000080000000l; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0x000008ca00000000l); }
@Test
public void test15013() { x = 0x00000000ffffffffl; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0x00001193ffffee6cl); }
@Test
public void test15014() { x = 0x000000017fffffffl; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0x00001a5dffffee6cl); }
@Test
public void test15015() { x = 0x0000000180000000l; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0x00001a5e00000000l); }
@Test
public void test15016() { x = 0x00000001ffffffffl; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0x00002327ffffee6cl); }
@Test
public void test15017() { x = 0xffffffff7fffffffl; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0xfffff735ffffee6cl); }
@Test
public void test15018() { x = 0xffffffff80000000l; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000000l); }
@Test
public void test15019() { x = 0x00000001deadf00dl; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0x000020de497fa484l); }
@Test
public void test15020() { x = 0xffffffffdeadf00dl; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb6497fa484l); }
@Test
public void test15021() { x = 0x7fffffffffffffffl; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffee6cl); }
@Test
public void test15022() { x = 0x7fffffff7fffffffl; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0xfffff735ffffee6cl); }
@Test
public void test15023() { x = 0x7fffffff80000000l; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000000l); }
@Test
public void test15024() { x = 0x7fffffffdeadf00dl; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0xfffffdb6497fa484l); }
@Test
public void test15025() { x = 0x8000000000000000l; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15026() { x = 0xffffffffffffffffl; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffee6cl); }
@Test
public void test15027() { x = 0xfffffffffffffffel; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdcd8l); }
@Test
public void test15028() { x = 0xefffffffffffffffl; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0xbfffffffffffee6cl); }
@Test
public void test15029() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1194l; AssertJUnit.assertEquals("multiply", result, 0x497fb3ce497fa484l); }
@Test
public void test15030() { x = 0x000000007fffffffl; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0x0000464fffff7360l); }
@Test
public void test15031() { x = 0x0000000080000000l; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0x0000465000000000l); }
@Test
public void test15032() { x = 0x00000000ffffffffl; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0x00008c9fffff7360l); }
@Test
public void test15033() { x = 0x000000017fffffffl; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0x0000d2efffff7360l); }
@Test
public void test15034() { x = 0x0000000180000000l; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0x0000d2f000000000l); }
@Test
public void test15035() { x = 0x00000001ffffffffl; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0x0001193fffff7360l); }
@Test
public void test15036() { x = 0xffffffff7fffffffl; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0xffffb9afffff7360l); }
@Test
public void test15037() { x = 0xffffffff80000000l; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000000000l); }
@Test
public void test15038() { x = 0x00000001deadf00dl; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0x000106f24bfd2420l); }
@Test
public void test15039() { x = 0xffffffffdeadf00dl; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0xffffedb24bfd2420l); }
@Test
public void test15040() { x = 0x7fffffffffffffffl; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff7360l); }
@Test
public void test15041() { x = 0x7fffffff7fffffffl; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0xffffb9afffff7360l); }
@Test
public void test15042() { x = 0x7fffffff80000000l; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000000000l); }
@Test
public void test15043() { x = 0x7fffffffdeadf00dl; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0xffffedb24bfd2420l); }
@Test
public void test15044() { x = 0x8000000000000000l; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15045() { x = 0xffffffffffffffffl; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff7360l); }
@Test
public void test15046() { x = 0xfffffffffffffffel; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffee6c0l); }
@Test
public void test15047() { x = 0xefffffffffffffffl; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff7360l); }
@Test
public void test15048() { x = 0xdeadf00ddeadf00dl; long result = x * 0x8ca0l; AssertJUnit.assertEquals("multiply", result, 0x4bfd9e724bfd2420l); }
@Test
public void test15049() { x = 0x000000007fffffffl; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0x0008c9ffffee6c00l); }
@Test
public void test15050() { x = 0x0000000080000000l; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0x0008ca0000000000l); }
@Test
public void test15051() { x = 0x00000000ffffffffl; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0x001193ffffee6c00l); }
@Test
public void test15052() { x = 0x000000017fffffffl; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0x001a5dffffee6c00l); }
@Test
public void test15053() { x = 0x0000000180000000l; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0x001a5e0000000000l); }
@Test
public void test15054() { x = 0x00000001ffffffffl; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0x002327ffffee6c00l); }
@Test
public void test15055() { x = 0xffffffff7fffffffl; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0xfff735ffffee6c00l); }
@Test
public void test15056() { x = 0xffffffff80000000l; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0xfff7360000000000l); }
@Test
public void test15057() { x = 0x00000001deadf00dl; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0x0020de497fa48400l); }
@Test
public void test15058() { x = 0xffffffffdeadf00dl; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0xfffdb6497fa48400l); }
@Test
public void test15059() { x = 0x7fffffffffffffffl; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffee6c00l); }
@Test
public void test15060() { x = 0x7fffffff7fffffffl; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0xfff735ffffee6c00l); }
@Test
public void test15061() { x = 0x7fffffff80000000l; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0xfff7360000000000l); }
@Test
public void test15062() { x = 0x7fffffffdeadf00dl; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0xfffdb6497fa48400l); }
@Test
public void test15063() { x = 0x8000000000000000l; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15064() { x = 0xffffffffffffffffl; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffee6c00l); }
@Test
public void test15065() { x = 0xfffffffffffffffel; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffdcd800l); }
@Test
public void test15066() { x = 0xefffffffffffffffl; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffee6c00l); }
@Test
public void test15067() { x = 0xdeadf00ddeadf00dl; long result = x * 0x119400l; AssertJUnit.assertEquals("multiply", result, 0x7fb3ce497fa48400l); }
@Test
public void test15068() { x = 0x000000007fffffffl; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000000l); }
@Test
public void test15069() { x = 0x0000000080000000l; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15070() { x = 0x00000000ffffffffl; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000000l); }
@Test
public void test15071() { x = 0x000000017fffffffl; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000000l); }
@Test
public void test15072() { x = 0x0000000180000000l; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15073() { x = 0x00000001ffffffffl; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000000l); }
@Test
public void test15074() { x = 0xffffffff7fffffffl; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000000l); }
@Test
public void test15075() { x = 0xffffffff80000000l; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15076() { x = 0x00000001deadf00dl; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0x497fa48400000000l); }
@Test
public void test15077() { x = 0xffffffffdeadf00dl; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0x497fa48400000000l); }
@Test
public void test15078() { x = 0x7fffffffffffffffl; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000000l); }
@Test
public void test15079() { x = 0x7fffffff7fffffffl; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000000l); }
@Test
public void test15080() { x = 0x7fffffff80000000l; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15081() { x = 0x7fffffffdeadf00dl; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0x497fa48400000000l); }
@Test
public void test15082() { x = 0x8000000000000000l; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15083() { x = 0xffffffffffffffffl; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000000l); }
@Test
public void test15084() { x = 0xfffffffffffffffel; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800000000l); }
@Test
public void test15085() { x = 0xefffffffffffffffl; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00000000l); }
@Test
public void test15086() { x = 0xdeadf00ddeadf00dl; long result = x * 0x119400000000l; AssertJUnit.assertEquals("multiply", result, 0x497fa48400000000l); }
@Test
public void test15087() { x = 0x000000007fffffffl; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0xffff736000000000l); }
@Test
public void test15088() { x = 0x0000000080000000l; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15089() { x = 0x00000000ffffffffl; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0xffff736000000000l); }
@Test
public void test15090() { x = 0x000000017fffffffl; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0xffff736000000000l); }
@Test
public void test15091() { x = 0x0000000180000000l; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15092() { x = 0x00000001ffffffffl; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0xffff736000000000l); }
@Test
public void test15093() { x = 0xffffffff7fffffffl; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0xffff736000000000l); }
@Test
public void test15094() { x = 0xffffffff80000000l; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15095() { x = 0x00000001deadf00dl; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0x4bfd242000000000l); }
@Test
public void test15096() { x = 0xffffffffdeadf00dl; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0x4bfd242000000000l); }
@Test
public void test15097() { x = 0x7fffffffffffffffl; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0xffff736000000000l); }
@Test
public void test15098() { x = 0x7fffffff7fffffffl; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0xffff736000000000l); }
@Test
public void test15099() { x = 0x7fffffff80000000l; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15100() { x = 0x7fffffffdeadf00dl; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0x4bfd242000000000l); }
@Test
public void test15101() { x = 0x8000000000000000l; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15102() { x = 0xffffffffffffffffl; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0xffff736000000000l); }
@Test
public void test15103() { x = 0xfffffffffffffffel; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffee6c000000000l); }
@Test
public void test15104() { x = 0xefffffffffffffffl; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0xffff736000000000l); }
@Test
public void test15105() { x = 0xdeadf00ddeadf00dl; long result = x * 0x8ca000000000l; AssertJUnit.assertEquals("multiply", result, 0x4bfd242000000000l); }
@Test
public void test15106() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0xfffff73600001194l); }
@Test
public void test15107() { x = 0x0000000080000000l; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0xfffff73600000000l); }
@Test
public void test15108() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0xffffee6c00001194l); }
@Test
public void test15109() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0xffffe5a200001194l); }
@Test
public void test15110() { x = 0x0000000180000000l; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0xffffe5a200000000l); }
@Test
public void test15111() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0xffffdcd800001194l); }
@Test
public void test15112() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0x000008ca00001194l); }
@Test
public void test15113() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0x000008ca00000000l); }
@Test
public void test15114() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0xffffdf21b6805b7cl); }
@Test
public void test15115() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0x00000249b6805b7cl); }
@Test
public void test15116() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0x0000000000001194l); }
@Test
public void test15117() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0x000008ca00001194l); }
@Test
public void test15118() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0x000008ca00000000l); }
@Test
public void test15119() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0x00000249b6805b7cl); }
@Test
public void test15120() { x = 0x8000000000000000l; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15121() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0x0000000000001194l); }
@Test
public void test15122() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0x0000000000002328l); }
@Test
public void test15123() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0x4000000000001194l); }
@Test
public void test15124() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffee6cl; AssertJUnit.assertEquals("multiply", result, 0xb6804c31b6805b7cl); }
@Test
public void test15125() { x = 0x000000007fffffffl; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000008ca0l); }
@Test
public void test15126() { x = 0x0000000080000000l; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0xffffb9b000000000l); }
@Test
public void test15127() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0xffff736000008ca0l); }
@Test
public void test15128() { x = 0x000000017fffffffl; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0xffff2d1000008ca0l); }
@Test
public void test15129() { x = 0x0000000180000000l; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0xffff2d1000000000l); }
@Test
public void test15130() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0xfffee6c000008ca0l); }
@Test
public void test15131() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0x0000465000008ca0l); }
@Test
public void test15132() { x = 0xffffffff80000000l; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0x0000465000000000l); }
@Test
public void test15133() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0xfffef90db402dbe0l); }
@Test
public void test15134() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0x0000124db402dbe0l); }
@Test
public void test15135() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0x0000000000008ca0l); }
@Test
public void test15136() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0x0000465000008ca0l); }
@Test
public void test15137() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0x0000465000000000l); }
@Test
public void test15138() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0x0000124db402dbe0l); }
@Test
public void test15139() { x = 0x8000000000000000l; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15140() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0x0000000000008ca0l); }
@Test
public void test15141() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0x0000000000011940l); }
@Test
public void test15142() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0x0000000000008ca0l); }
@Test
public void test15143() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffff7360l; AssertJUnit.assertEquals("multiply", result, 0xb402618db402dbe0l); }
@Test
public void test15144() { x = 0x000000007fffffffl; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0xfff7360000119400l); }
@Test
public void test15145() { x = 0x0000000080000000l; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0xfff7360000000000l); }
@Test
public void test15146() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0xffee6c0000119400l); }
@Test
public void test15147() { x = 0x000000017fffffffl; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0xffe5a20000119400l); }
@Test
public void test15148() { x = 0x0000000180000000l; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0xffe5a20000000000l); }
@Test
public void test15149() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0xffdcd80000119400l); }
@Test
public void test15150() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0x0008ca0000119400l); }
@Test
public void test15151() { x = 0xffffffff80000000l; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0x0008ca0000000000l); }
@Test
public void test15152() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0xffdf21b6805b7c00l); }
@Test
public void test15153() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0x000249b6805b7c00l); }
@Test
public void test15154() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000119400l); }
@Test
public void test15155() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0x0008ca0000119400l); }
@Test
public void test15156() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0x0008ca0000000000l); }
@Test
public void test15157() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0x000249b6805b7c00l); }
@Test
public void test15158() { x = 0x8000000000000000l; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15159() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000119400l); }
@Test
public void test15160() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000232800l); }
@Test
public void test15161() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000119400l); }
@Test
public void test15162() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffee6c00l; AssertJUnit.assertEquals("multiply", result, 0x804c31b6805b7c00l); }
@Test
public void test15163() { x = 0x000000007fffffffl; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000119400000000l); }
@Test
public void test15164() { x = 0x0000000080000000l; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15165() { x = 0x00000000ffffffffl; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000119400000000l); }
@Test
public void test15166() { x = 0x000000017fffffffl; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000119400000000l); }
@Test
public void test15167() { x = 0x0000000180000000l; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15168() { x = 0x00000001ffffffffl; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000119400000000l); }
@Test
public void test15169() { x = 0xffffffff7fffffffl; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000119400000000l); }
@Test
public void test15170() { x = 0xffffffff80000000l; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15171() { x = 0x00000001deadf00dl; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0xb6805b7c00000000l); }
@Test
public void test15172() { x = 0xffffffffdeadf00dl; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0xb6805b7c00000000l); }
@Test
public void test15173() { x = 0x7fffffffffffffffl; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000119400000000l); }
@Test
public void test15174() { x = 0x7fffffff7fffffffl; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000119400000000l); }
@Test
public void test15175() { x = 0x7fffffff80000000l; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15176() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0xb6805b7c00000000l); }
@Test
public void test15177() { x = 0x8000000000000000l; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15178() { x = 0xffffffffffffffffl; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000119400000000l); }
@Test
public void test15179() { x = 0xfffffffffffffffel; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000232800000000l); }
@Test
public void test15180() { x = 0xefffffffffffffffl; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000119400000000l); }
@Test
public void test15181() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffee6c00000000l; AssertJUnit.assertEquals("multiply", result, 0xb6805b7c00000000l); }
@Test
public void test15182() { x = 0x000000007fffffffl; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x00008ca000000000l); }
@Test
public void test15183() { x = 0x0000000080000000l; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15184() { x = 0x00000000ffffffffl; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x00008ca000000000l); }
@Test
public void test15185() { x = 0x000000017fffffffl; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x00008ca000000000l); }
@Test
public void test15186() { x = 0x0000000180000000l; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15187() { x = 0x00000001ffffffffl; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x00008ca000000000l); }
@Test
public void test15188() { x = 0xffffffff7fffffffl; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x00008ca000000000l); }
@Test
public void test15189() { x = 0xffffffff80000000l; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15190() { x = 0x00000001deadf00dl; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0xb402dbe000000000l); }
@Test
public void test15191() { x = 0xffffffffdeadf00dl; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0xb402dbe000000000l); }
@Test
public void test15192() { x = 0x7fffffffffffffffl; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x00008ca000000000l); }
@Test
public void test15193() { x = 0x7fffffff7fffffffl; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x00008ca000000000l); }
@Test
public void test15194() { x = 0x7fffffff80000000l; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15195() { x = 0x7fffffffdeadf00dl; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0xb402dbe000000000l); }
@Test
public void test15196() { x = 0x8000000000000000l; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15197() { x = 0xffffffffffffffffl; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x00008ca000000000l); }
@Test
public void test15198() { x = 0xfffffffffffffffel; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x0001194000000000l); }
@Test
public void test15199() { x = 0xefffffffffffffffl; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0x00008ca000000000l); }
@Test
public void test15200() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffff736000000000l; AssertJUnit.assertEquals("multiply", result, 0xb402dbe000000000l); }
@Test
public void test15201() { x = 0x000000007fffffffl; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0x00000ffe7fffe003l); }
@Test
public void test15202() { x = 0x0000000080000000l; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0x00000ffe80000000l); }
@Test
public void test15203() { x = 0x00000000ffffffffl; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0x00001ffcffffe003l); }
@Test
public void test15204() { x = 0x000000017fffffffl; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0x00002ffb7fffe003l); }
@Test
public void test15205() { x = 0x0000000180000000l; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0x00002ffb80000000l); }
@Test
public void test15206() { x = 0x00000001ffffffffl; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0x00003ff9ffffe003l); }
@Test
public void test15207() { x = 0xffffffff7fffffffl; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0xfffff0017fffe003l); }
@Test
public void test15208() { x = 0xffffffff80000000l; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0xfffff00180000000l); }
@Test
public void test15209() { x = 0x00000001deadf00dl; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0x00003bd021f7cfd9l); }
@Test
public void test15210() { x = 0xffffffffdeadf00dl; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0xfffffbd621f7cfd9l); }
@Test
public void test15211() { x = 0x7fffffffffffffffl; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffe003l); }
@Test
public void test15212() { x = 0x7fffffff7fffffffl; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0x7ffff0017fffe003l); }
@Test
public void test15213() { x = 0x7fffffff80000000l; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0x7ffff00180000000l); }
@Test
public void test15214() { x = 0x7fffffffdeadf00dl; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0x7ffffbd621f7cfd9l); }
@Test
public void test15215() { x = 0x8000000000000000l; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15216() { x = 0xffffffffffffffffl; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe003l); }
@Test
public void test15217() { x = 0xfffffffffffffffel; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffc006l); }
@Test
public void test15218() { x = 0xefffffffffffffffl; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0x2fffffffffffe003l); }
@Test
public void test15219() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1ffdl; AssertJUnit.assertEquals("multiply", result, 0x21f7ebac21f7cfd9l); }
@Test
public void test15220() { x = 0x000000007fffffffl; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0x00007ff3ffff0018l); }
@Test
public void test15221() { x = 0x0000000080000000l; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0x00007ff400000000l); }
@Test
public void test15222() { x = 0x00000000ffffffffl; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000ffe7ffff0018l); }
@Test
public void test15223() { x = 0x000000017fffffffl; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0x00017fdbffff0018l); }
@Test
public void test15224() { x = 0x0000000180000000l; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0x00017fdc00000000l); }
@Test
public void test15225() { x = 0x00000001ffffffffl; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0x0001ffcfffff0018l); }
@Test
public void test15226() { x = 0xffffffff7fffffffl; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0xffff800bffff0018l); }
@Test
public void test15227() { x = 0xffffffff80000000l; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0xffff800c00000000l); }
@Test
public void test15228() { x = 0x00000001deadf00dl; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0x0001de810fbe7ec8l); }
@Test
public void test15229() { x = 0xffffffffdeadf00dl; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0xffffdeb10fbe7ec8l); }
@Test
public void test15230() { x = 0x7fffffffffffffffl; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff0018l); }
@Test
public void test15231() { x = 0x7fffffff7fffffffl; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0xffff800bffff0018l); }
@Test
public void test15232() { x = 0x7fffffff80000000l; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0xffff800c00000000l); }
@Test
public void test15233() { x = 0x7fffffffdeadf00dl; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0xffffdeb10fbe7ec8l); }
@Test
public void test15234() { x = 0x8000000000000000l; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15235() { x = 0xffffffffffffffffl; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff0018l); }
@Test
public void test15236() { x = 0xfffffffffffffffel; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe0030l); }
@Test
public void test15237() { x = 0xefffffffffffffffl; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffff0018l); }
@Test
public void test15238() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffe8l; AssertJUnit.assertEquals("multiply", result, 0x0fbf5d610fbe7ec8l); }
@Test
public void test15239() { x = 0x000000007fffffffl; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0x000ffe7fffe00300l); }
@Test
public void test15240() { x = 0x0000000080000000l; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0x000ffe8000000000l); }
@Test
public void test15241() { x = 0x00000000ffffffffl; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0x001ffcffffe00300l); }
@Test
public void test15242() { x = 0x000000017fffffffl; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0x002ffb7fffe00300l); }
@Test
public void test15243() { x = 0x0000000180000000l; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0x002ffb8000000000l); }
@Test
public void test15244() { x = 0x00000001ffffffffl; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0x003ff9ffffe00300l); }
@Test
public void test15245() { x = 0xffffffff7fffffffl; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0xfff0017fffe00300l); }
@Test
public void test15246() { x = 0xffffffff80000000l; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0xfff0018000000000l); }
@Test
public void test15247() { x = 0x00000001deadf00dl; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0x003bd021f7cfd900l); }
@Test
public void test15248() { x = 0xffffffffdeadf00dl; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffbd621f7cfd900l); }
@Test
public void test15249() { x = 0x7fffffffffffffffl; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffe00300l); }
@Test
public void test15250() { x = 0x7fffffff7fffffffl; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0xfff0017fffe00300l); }
@Test
public void test15251() { x = 0x7fffffff80000000l; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0xfff0018000000000l); }
@Test
public void test15252() { x = 0x7fffffffdeadf00dl; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffbd621f7cfd900l); }
@Test
public void test15253() { x = 0x8000000000000000l; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15254() { x = 0xffffffffffffffffl; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffe00300l); }
@Test
public void test15255() { x = 0xfffffffffffffffel; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffc00600l); }
@Test
public void test15256() { x = 0xefffffffffffffffl; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffe00300l); }
@Test
public void test15257() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1ffd00l; AssertJUnit.assertEquals("multiply", result, 0xf7ebac21f7cfd900l); }
@Test
public void test15258() { x = 0x000000007fffffffl; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffe00300000000l); }
@Test
public void test15259() { x = 0x0000000080000000l; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15260() { x = 0x00000000ffffffffl; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe00300000000l); }
@Test
public void test15261() { x = 0x000000017fffffffl; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffe00300000000l); }
@Test
public void test15262() { x = 0x0000000180000000l; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15263() { x = 0x00000001ffffffffl; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe00300000000l); }
@Test
public void test15264() { x = 0xffffffff7fffffffl; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffe00300000000l); }
@Test
public void test15265() { x = 0xffffffff80000000l; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15266() { x = 0x00000001deadf00dl; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x21f7cfd900000000l); }
@Test
public void test15267() { x = 0xffffffffdeadf00dl; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x21f7cfd900000000l); }
@Test
public void test15268() { x = 0x7fffffffffffffffl; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe00300000000l); }
@Test
public void test15269() { x = 0x7fffffff7fffffffl; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffe00300000000l); }
@Test
public void test15270() { x = 0x7fffffff80000000l; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15271() { x = 0x7fffffffdeadf00dl; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x21f7cfd900000000l); }
@Test
public void test15272() { x = 0x8000000000000000l; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15273() { x = 0xffffffffffffffffl; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe00300000000l); }
@Test
public void test15274() { x = 0xfffffffffffffffel; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffc00600000000l); }
@Test
public void test15275() { x = 0xefffffffffffffffl; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe00300000000l); }
@Test
public void test15276() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1ffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x21f7cfd900000000l); }
@Test
public void test15277() { x = 0x000000007fffffffl; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffff001800000000l); }
@Test
public void test15278() { x = 0x0000000080000000l; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15279() { x = 0x00000000ffffffffl; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffff001800000000l); }
@Test
public void test15280() { x = 0x000000017fffffffl; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffff001800000000l); }
@Test
public void test15281() { x = 0x0000000180000000l; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15282() { x = 0x00000001ffffffffl; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffff001800000000l); }
@Test
public void test15283() { x = 0xffffffff7fffffffl; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffff001800000000l); }
@Test
public void test15284() { x = 0xffffffff80000000l; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15285() { x = 0x00000001deadf00dl; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0fbe7ec800000000l); }
@Test
public void test15286() { x = 0xffffffffdeadf00dl; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0fbe7ec800000000l); }
@Test
public void test15287() { x = 0x7fffffffffffffffl; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffff001800000000l); }
@Test
public void test15288() { x = 0x7fffffff7fffffffl; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffff001800000000l); }
@Test
public void test15289() { x = 0x7fffffff80000000l; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15290() { x = 0x7fffffffdeadf00dl; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0fbe7ec800000000l); }
@Test
public void test15291() { x = 0x8000000000000000l; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15292() { x = 0xffffffffffffffffl; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffff001800000000l); }
@Test
public void test15293() { x = 0xfffffffffffffffel; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffe003000000000l); }
@Test
public void test15294() { x = 0xefffffffffffffffl; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0xffff001800000000l); }
@Test
public void test15295() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0fbe7ec800000000l); }
@Test
public void test15296() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0xfffff00180001ffdl); }
@Test
public void test15297() { x = 0x0000000080000000l; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0xfffff00180000000l); }
@Test
public void test15298() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0xffffe00300001ffdl); }
@Test
public void test15299() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0xffffd00480001ffdl); }
@Test
public void test15300() { x = 0x0000000180000000l; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0xffffd00480000000l); }
@Test
public void test15301() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0xffffc00600001ffdl); }
@Test
public void test15302() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0x00000ffe80001ffdl); }
@Test
public void test15303() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0x00000ffe80000000l); }
@Test
public void test15304() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0xffffc42fde083027l); }
@Test
public void test15305() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0x00000429de083027l); }
@Test
public void test15306() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0x8000000000001ffdl); }
@Test
public void test15307() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0x80000ffe80001ffdl); }
@Test
public void test15308() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0x80000ffe80000000l); }
@Test
public void test15309() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0x80000429de083027l); }
@Test
public void test15310() { x = 0x8000000000000000l; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15311() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001ffdl); }
@Test
public void test15312() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0x0000000000003ffal); }
@Test
public void test15313() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0xd000000000001ffdl); }
@Test
public void test15314() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffe003l; AssertJUnit.assertEquals("multiply", result, 0xde081453de083027l); }
@Test
public void test15315() { x = 0x000000007fffffffl; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0xffff800c0000ffe8l); }
@Test
public void test15316() { x = 0x0000000080000000l; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0xffff800c00000000l); }
@Test
public void test15317() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0xffff00180000ffe8l); }
@Test
public void test15318() { x = 0x000000017fffffffl; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0xfffe80240000ffe8l); }
@Test
public void test15319() { x = 0x0000000180000000l; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0xfffe802400000000l); }
@Test
public void test15320() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0xfffe00300000ffe8l); }
@Test
public void test15321() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0x00007ff40000ffe8l); }
@Test
public void test15322() { x = 0xffffffff80000000l; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0x00007ff400000000l); }
@Test
public void test15323() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0xfffe217ef0418138l); }
@Test
public void test15324() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0x0000214ef0418138l); }
@Test
public void test15325() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0x000000000000ffe8l); }
@Test
public void test15326() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0x00007ff40000ffe8l); }
@Test
public void test15327() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0x00007ff400000000l); }
@Test
public void test15328() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0x0000214ef0418138l); }
@Test
public void test15329() { x = 0x8000000000000000l; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15330() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0x000000000000ffe8l); }
@Test
public void test15331() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0x000000000001ffd0l); }
@Test
public void test15332() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0x800000000000ffe8l); }
@Test
public void test15333() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffff0018l; AssertJUnit.assertEquals("multiply", result, 0xf040a29ef0418138l); }
@Test
public void test15334() { x = 0x000000007fffffffl; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0xfff00180001ffd00l); }
@Test
public void test15335() { x = 0x0000000080000000l; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0xfff0018000000000l); }
@Test
public void test15336() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0xffe00300001ffd00l); }
@Test
public void test15337() { x = 0x000000017fffffffl; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0xffd00480001ffd00l); }
@Test
public void test15338() { x = 0x0000000180000000l; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0xffd0048000000000l); }
@Test
public void test15339() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0xffc00600001ffd00l); }
@Test
public void test15340() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0x000ffe80001ffd00l); }
@Test
public void test15341() { x = 0xffffffff80000000l; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0x000ffe8000000000l); }
@Test
public void test15342() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0xffc42fde08302700l); }
@Test
public void test15343() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0x000429de08302700l); }
@Test
public void test15344() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0x00000000001ffd00l); }
@Test
public void test15345() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0x000ffe80001ffd00l); }
@Test
public void test15346() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0x000ffe8000000000l); }
@Test
public void test15347() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0x000429de08302700l); }
@Test
public void test15348() { x = 0x8000000000000000l; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15349() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0x00000000001ffd00l); }
@Test
public void test15350() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0x00000000003ffa00l); }
@Test
public void test15351() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0x00000000001ffd00l); }
@Test
public void test15352() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffe00300l; AssertJUnit.assertEquals("multiply", result, 0x081453de08302700l); }
@Test
public void test15353() { x = 0x000000007fffffffl; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x80001ffd00000000l); }
@Test
public void test15354() { x = 0x0000000080000000l; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15355() { x = 0x00000000ffffffffl; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x00001ffd00000000l); }
@Test
public void test15356() { x = 0x000000017fffffffl; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x80001ffd00000000l); }
@Test
public void test15357() { x = 0x0000000180000000l; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15358() { x = 0x00000001ffffffffl; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x00001ffd00000000l); }
@Test
public void test15359() { x = 0xffffffff7fffffffl; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x80001ffd00000000l); }
@Test
public void test15360() { x = 0xffffffff80000000l; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15361() { x = 0x00000001deadf00dl; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0xde08302700000000l); }
@Test
public void test15362() { x = 0xffffffffdeadf00dl; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0xde08302700000000l); }
@Test
public void test15363() { x = 0x7fffffffffffffffl; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x00001ffd00000000l); }
@Test
public void test15364() { x = 0x7fffffff7fffffffl; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x80001ffd00000000l); }
@Test
public void test15365() { x = 0x7fffffff80000000l; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15366() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0xde08302700000000l); }
@Test
public void test15367() { x = 0x8000000000000000l; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15368() { x = 0xffffffffffffffffl; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x00001ffd00000000l); }
@Test
public void test15369() { x = 0xfffffffffffffffel; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x00003ffa00000000l); }
@Test
public void test15370() { x = 0xefffffffffffffffl; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0x00001ffd00000000l); }
@Test
public void test15371() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffe00300000000l; AssertJUnit.assertEquals("multiply", result, 0xde08302700000000l); }
@Test
public void test15372() { x = 0x000000007fffffffl; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000ffe800000000l); }
@Test
public void test15373() { x = 0x0000000080000000l; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15374() { x = 0x00000000ffffffffl; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000ffe800000000l); }
@Test
public void test15375() { x = 0x000000017fffffffl; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000ffe800000000l); }
@Test
public void test15376() { x = 0x0000000180000000l; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15377() { x = 0x00000001ffffffffl; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000ffe800000000l); }
@Test
public void test15378() { x = 0xffffffff7fffffffl; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000ffe800000000l); }
@Test
public void test15379() { x = 0xffffffff80000000l; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15380() { x = 0x00000001deadf00dl; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0xf041813800000000l); }
@Test
public void test15381() { x = 0xffffffffdeadf00dl; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0xf041813800000000l); }
@Test
public void test15382() { x = 0x7fffffffffffffffl; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000ffe800000000l); }
@Test
public void test15383() { x = 0x7fffffff7fffffffl; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000ffe800000000l); }
@Test
public void test15384() { x = 0x7fffffff80000000l; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15385() { x = 0x7fffffffdeadf00dl; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0xf041813800000000l); }
@Test
public void test15386() { x = 0x8000000000000000l; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15387() { x = 0xffffffffffffffffl; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000ffe800000000l); }
@Test
public void test15388() { x = 0xfffffffffffffffel; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0001ffd000000000l); }
@Test
public void test15389() { x = 0xefffffffffffffffl; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000ffe800000000l); }
@Test
public void test15390() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffff001800000000l; AssertJUnit.assertEquals("multiply", result, 0xf041813800000000l); }
@Test
public void test15391() { x = 0x000000007fffffffl; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0x000010017fffdffdl); }
@Test
public void test15392() { x = 0x0000000080000000l; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0x0000100180000000l); }
@Test
public void test15393() { x = 0x00000000ffffffffl; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0x00002002ffffdffdl); }
@Test
public void test15394() { x = 0x000000017fffffffl; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0x000030047fffdffdl); }
@Test
public void test15395() { x = 0x0000000180000000l; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0x0000300480000000l); }
@Test
public void test15396() { x = 0x00000001ffffffffl; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0x00004005ffffdffdl); }
@Test
public void test15397() { x = 0xffffffff7fffffffl; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0xffffeffe7fffdffdl); }
@Test
public void test15398() { x = 0xffffffff80000000l; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0xffffeffe80000000l); }
@Test
public void test15399() { x = 0x00000001deadf00dl; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0x00003bdb5a0b7027l); }
@Test
public void test15400() { x = 0xffffffffdeadf00dl; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0xfffffbd55a0b7027l); }
@Test
public void test15401() { x = 0x7fffffffffffffffl; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffdffdl); }
@Test
public void test15402() { x = 0x7fffffff7fffffffl; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0x7fffeffe7fffdffdl); }
@Test
public void test15403() { x = 0x7fffffff80000000l; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0x7fffeffe80000000l); }
@Test
public void test15404() { x = 0x7fffffffdeadf00dl; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0x7ffffbd55a0b7027l); }
@Test
public void test15405() { x = 0x8000000000000000l; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15406() { x = 0xffffffffffffffffl; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffdffdl); }
@Test
public void test15407() { x = 0xfffffffffffffffel; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffbffal); }
@Test
public void test15408() { x = 0xefffffffffffffffl; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0xcfffffffffffdffdl); }
@Test
public void test15409() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2003l; AssertJUnit.assertEquals("multiply", result, 0x5a0b8bff5a0b7027l); }
@Test
public void test15410() { x = 0x000000007fffffffl; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0x0000800bfffeffe8l); }
@Test
public void test15411() { x = 0x0000000080000000l; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0x0000800c00000000l); }
@Test
public void test15412() { x = 0x00000000ffffffffl; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0x00010017fffeffe8l); }
@Test
public void test15413() { x = 0x000000017fffffffl; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0x00018023fffeffe8l); }
@Test
public void test15414() { x = 0x0000000180000000l; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0x0001802400000000l); }
@Test
public void test15415() { x = 0x00000001ffffffffl; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0x0002002ffffeffe8l); }
@Test
public void test15416() { x = 0xffffffff7fffffffl; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0xffff7ff3fffeffe8l); }
@Test
public void test15417() { x = 0xffffffff80000000l; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0xffff7ff400000000l); }
@Test
public void test15418() { x = 0x00000001deadf00dl; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0x0001dedad05b8138l); }
@Test
public void test15419() { x = 0xffffffffdeadf00dl; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0xffffdeaad05b8138l); }
@Test
public void test15420() { x = 0x7fffffffffffffffl; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffeffe8l); }
@Test
public void test15421() { x = 0x7fffffff7fffffffl; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0xffff7ff3fffeffe8l); }
@Test
public void test15422() { x = 0x7fffffff80000000l; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0xffff7ff400000000l); }
@Test
public void test15423() { x = 0x7fffffffdeadf00dl; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0xffffdeaad05b8138l); }
@Test
public void test15424() { x = 0x8000000000000000l; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15425() { x = 0xffffffffffffffffl; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffeffe8l); }
@Test
public void test15426() { x = 0xfffffffffffffffel; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffdffd0l); }
@Test
public void test15427() { x = 0xefffffffffffffffl; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffeffe8l); }
@Test
public void test15428() { x = 0xdeadf00ddeadf00dl; long result = x * 0x10018l; AssertJUnit.assertEquals("multiply", result, 0xd05c5ffad05b8138l); }
@Test
public void test15429() { x = 0x000000007fffffffl; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0x0010017fffdffd00l); }
@Test
public void test15430() { x = 0x0000000080000000l; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0x0010018000000000l); }
@Test
public void test15431() { x = 0x00000000ffffffffl; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0x002002ffffdffd00l); }
@Test
public void test15432() { x = 0x000000017fffffffl; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0x0030047fffdffd00l); }
@Test
public void test15433() { x = 0x0000000180000000l; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0x0030048000000000l); }
@Test
public void test15434() { x = 0x00000001ffffffffl; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0x004005ffffdffd00l); }
@Test
public void test15435() { x = 0xffffffff7fffffffl; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0xffeffe7fffdffd00l); }
@Test
public void test15436() { x = 0xffffffff80000000l; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0xffeffe8000000000l); }
@Test
public void test15437() { x = 0x00000001deadf00dl; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0x003bdb5a0b702700l); }
@Test
public void test15438() { x = 0xffffffffdeadf00dl; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0xfffbd55a0b702700l); }
@Test
public void test15439() { x = 0x7fffffffffffffffl; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffdffd00l); }
@Test
public void test15440() { x = 0x7fffffff7fffffffl; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0xffeffe7fffdffd00l); }
@Test
public void test15441() { x = 0x7fffffff80000000l; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0xffeffe8000000000l); }
@Test
public void test15442() { x = 0x7fffffffdeadf00dl; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0xfffbd55a0b702700l); }
@Test
public void test15443() { x = 0x8000000000000000l; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15444() { x = 0xffffffffffffffffl; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffdffd00l); }
@Test
public void test15445() { x = 0xfffffffffffffffel; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffbffa00l); }
@Test
public void test15446() { x = 0xefffffffffffffffl; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffdffd00l); }
@Test
public void test15447() { x = 0xdeadf00ddeadf00dl; long result = x * 0x200300l; AssertJUnit.assertEquals("multiply", result, 0x0b8bff5a0b702700l); }
@Test
public void test15448() { x = 0x000000007fffffffl; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffdffd00000000l); }
@Test
public void test15449() { x = 0x0000000080000000l; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15450() { x = 0x00000000ffffffffl; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdffd00000000l); }
@Test
public void test15451() { x = 0x000000017fffffffl; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffdffd00000000l); }
@Test
public void test15452() { x = 0x0000000180000000l; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15453() { x = 0x00000001ffffffffl; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdffd00000000l); }
@Test
public void test15454() { x = 0xffffffff7fffffffl; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffdffd00000000l); }
@Test
public void test15455() { x = 0xffffffff80000000l; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15456() { x = 0x00000001deadf00dl; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0x5a0b702700000000l); }
@Test
public void test15457() { x = 0xffffffffdeadf00dl; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0x5a0b702700000000l); }
@Test
public void test15458() { x = 0x7fffffffffffffffl; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdffd00000000l); }
@Test
public void test15459() { x = 0x7fffffff7fffffffl; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0x7fffdffd00000000l); }
@Test
public void test15460() { x = 0x7fffffff80000000l; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15461() { x = 0x7fffffffdeadf00dl; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0x5a0b702700000000l); }
@Test
public void test15462() { x = 0x8000000000000000l; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15463() { x = 0xffffffffffffffffl; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdffd00000000l); }
@Test
public void test15464() { x = 0xfffffffffffffffel; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffbffa00000000l); }
@Test
public void test15465() { x = 0xefffffffffffffffl; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0xffffdffd00000000l); }
@Test
public void test15466() { x = 0xdeadf00ddeadf00dl; long result = x * 0x200300000000l; AssertJUnit.assertEquals("multiply", result, 0x5a0b702700000000l); }
@Test
public void test15467() { x = 0x000000007fffffffl; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffeffe800000000l); }
@Test
public void test15468() { x = 0x0000000080000000l; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15469() { x = 0x00000000ffffffffl; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffeffe800000000l); }
@Test
public void test15470() { x = 0x000000017fffffffl; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffeffe800000000l); }
@Test
public void test15471() { x = 0x0000000180000000l; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15472() { x = 0x00000001ffffffffl; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffeffe800000000l); }
@Test
public void test15473() { x = 0xffffffff7fffffffl; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffeffe800000000l); }
@Test
public void test15474() { x = 0xffffffff80000000l; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15475() { x = 0x00000001deadf00dl; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0xd05b813800000000l); }
@Test
public void test15476() { x = 0xffffffffdeadf00dl; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0xd05b813800000000l); }
@Test
public void test15477() { x = 0x7fffffffffffffffl; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffeffe800000000l); }
@Test
public void test15478() { x = 0x7fffffff7fffffffl; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffeffe800000000l); }
@Test
public void test15479() { x = 0x7fffffff80000000l; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15480() { x = 0x7fffffffdeadf00dl; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0xd05b813800000000l); }
@Test
public void test15481() { x = 0x8000000000000000l; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15482() { x = 0xffffffffffffffffl; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffeffe800000000l); }
@Test
public void test15483() { x = 0xfffffffffffffffel; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffdffd000000000l); }
@Test
public void test15484() { x = 0xefffffffffffffffl; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffeffe800000000l); }
@Test
public void test15485() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1001800000000l; AssertJUnit.assertEquals("multiply", result, 0xd05b813800000000l); }
@Test
public void test15486() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0xffffeffe80002003l); }
@Test
public void test15487() { x = 0x0000000080000000l; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0xffffeffe80000000l); }
@Test
public void test15488() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0xffffdffd00002003l); }
@Test
public void test15489() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0xffffcffb80002003l); }
@Test
public void test15490() { x = 0x0000000180000000l; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0xffffcffb80000000l); }
@Test
public void test15491() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0xffffbffa00002003l); }
@Test
public void test15492() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0x0000100180002003l); }
@Test
public void test15493() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0x0000100180000000l); }
@Test
public void test15494() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0xffffc424a5f48fd9l); }
@Test
public void test15495() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0x0000042aa5f48fd9l); }
@Test
public void test15496() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0x8000000000002003l); }
@Test
public void test15497() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0x8000100180002003l); }
@Test
public void test15498() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0x8000100180000000l); }
@Test
public void test15499() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0x8000042aa5f48fd9l); }
@Test
public void test15500() { x = 0x8000000000000000l; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15501() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0x0000000000002003l); }
@Test
public void test15502() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0x0000000000004006l); }
@Test
public void test15503() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0x3000000000002003l); }
@Test
public void test15504() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffdffdl; AssertJUnit.assertEquals("multiply", result, 0xa5f47400a5f48fd9l); }
@Test
public void test15505() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0xffff7ff400010018l); }
@Test
public void test15506() { x = 0x0000000080000000l; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0xffff7ff400000000l); }
@Test
public void test15507() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0xfffeffe800010018l); }
@Test
public void test15508() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0xfffe7fdc00010018l); }
@Test
public void test15509() { x = 0x0000000180000000l; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0xfffe7fdc00000000l); }
@Test
public void test15510() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0xfffdffd000010018l); }
@Test
public void test15511() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000800c00010018l); }
@Test
public void test15512() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000800c00000000l); }
@Test
public void test15513() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0xfffe21252fa47ec8l); }
@Test
public void test15514() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0x000021552fa47ec8l); }
@Test
public void test15515() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000010018l); }
@Test
public void test15516() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000800c00010018l); }
@Test
public void test15517() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000800c00000000l); }
@Test
public void test15518() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0x000021552fa47ec8l); }
@Test
public void test15519() { x = 0x8000000000000000l; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15520() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000010018l); }
@Test
public void test15521() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000020030l); }
@Test
public void test15522() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0x8000000000010018l); }
@Test
public void test15523() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffeffe8l; AssertJUnit.assertEquals("multiply", result, 0x2fa3a0052fa47ec8l); }
@Test
public void test15524() { x = 0x000000007fffffffl; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0xffeffe8000200300l); }
@Test
public void test15525() { x = 0x0000000080000000l; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0xffeffe8000000000l); }
@Test
public void test15526() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0xffdffd0000200300l); }
@Test
public void test15527() { x = 0x000000017fffffffl; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0xffcffb8000200300l); }
@Test
public void test15528() { x = 0x0000000180000000l; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0xffcffb8000000000l); }
@Test
public void test15529() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0xffbffa0000200300l); }
@Test
public void test15530() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0x0010018000200300l); }
@Test
public void test15531() { x = 0xffffffff80000000l; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0x0010018000000000l); }
@Test
public void test15532() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0xffc424a5f48fd900l); }
@Test
public void test15533() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0x00042aa5f48fd900l); }
@Test
public void test15534() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000200300l); }
@Test
public void test15535() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0x0010018000200300l); }
@Test
public void test15536() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0x0010018000000000l); }
@Test
public void test15537() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0x00042aa5f48fd900l); }
@Test
public void test15538() { x = 0x8000000000000000l; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15539() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000200300l); }
@Test
public void test15540() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000400600l); }
@Test
public void test15541() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000200300l); }
@Test
public void test15542() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffdffd00l; AssertJUnit.assertEquals("multiply", result, 0xf47400a5f48fd900l); }
@Test
public void test15543() { x = 0x000000007fffffffl; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000200300000000l); }
@Test
public void test15544() { x = 0x0000000080000000l; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15545() { x = 0x00000000ffffffffl; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000200300000000l); }
@Test
public void test15546() { x = 0x000000017fffffffl; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000200300000000l); }
@Test
public void test15547() { x = 0x0000000180000000l; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15548() { x = 0x00000001ffffffffl; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000200300000000l); }
@Test
public void test15549() { x = 0xffffffff7fffffffl; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000200300000000l); }
@Test
public void test15550() { x = 0xffffffff80000000l; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15551() { x = 0x00000001deadf00dl; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0xa5f48fd900000000l); }
@Test
public void test15552() { x = 0xffffffffdeadf00dl; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0xa5f48fd900000000l); }
@Test
public void test15553() { x = 0x7fffffffffffffffl; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000200300000000l); }
@Test
public void test15554() { x = 0x7fffffff7fffffffl; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000200300000000l); }
@Test
public void test15555() { x = 0x7fffffff80000000l; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000000l); }
@Test
public void test15556() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0xa5f48fd900000000l); }
@Test
public void test15557() { x = 0x8000000000000000l; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15558() { x = 0xffffffffffffffffl; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000200300000000l); }
@Test
public void test15559() { x = 0xfffffffffffffffel; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000400600000000l); }
@Test
public void test15560() { x = 0xefffffffffffffffl; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000200300000000l); }
@Test
public void test15561() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffdffd00000000l; AssertJUnit.assertEquals("multiply", result, 0xa5f48fd900000000l); }
@Test
public void test15562() { x = 0x000000007fffffffl; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0001001800000000l); }
@Test
public void test15563() { x = 0x0000000080000000l; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15564() { x = 0x00000000ffffffffl; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0001001800000000l); }
@Test
public void test15565() { x = 0x000000017fffffffl; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0001001800000000l); }
@Test
public void test15566() { x = 0x0000000180000000l; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15567() { x = 0x00000001ffffffffl; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0001001800000000l); }
@Test
public void test15568() { x = 0xffffffff7fffffffl; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0001001800000000l); }
@Test
public void test15569() { x = 0xffffffff80000000l; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15570() { x = 0x00000001deadf00dl; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x2fa47ec800000000l); }
@Test
public void test15571() { x = 0xffffffffdeadf00dl; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x2fa47ec800000000l); }
@Test
public void test15572() { x = 0x7fffffffffffffffl; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0001001800000000l); }
@Test
public void test15573() { x = 0x7fffffff7fffffffl; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0001001800000000l); }
@Test
public void test15574() { x = 0x7fffffff80000000l; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15575() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x2fa47ec800000000l); }
@Test
public void test15576() { x = 0x8000000000000000l; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15577() { x = 0xffffffffffffffffl; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0001001800000000l); }
@Test
public void test15578() { x = 0xfffffffffffffffel; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0002003000000000l); }
@Test
public void test15579() { x = 0xefffffffffffffffl; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x0001001800000000l); }
@Test
public void test15580() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffeffe800000000l; AssertJUnit.assertEquals("multiply", result, 0x2fa47ec800000000l); }
@Test
public void test15581() { x = 0x000000007fffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x00000043ffffff78l); }
@Test
public void test15582() { x = 0x0000000080000000l; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x0000004400000000l); }
@Test
public void test15583() { x = 0x00000000ffffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x00000087ffffff78l); }
@Test
public void test15584() { x = 0x000000017fffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x000000cbffffff78l); }
@Test
public void test15585() { x = 0x0000000180000000l; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x000000cc00000000l); }
@Test
public void test15586() { x = 0x00000001ffffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x0000010fffffff78l); }
@Test
public void test15587() { x = 0xffffffff7fffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffbbffffff78l); }
@Test
public void test15588() { x = 0xffffffff80000000l; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffbc00000000l); }
@Test
public void test15589() { x = 0x00000001deadf00dl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x000000fe4c6786e8l); }
@Test
public void test15590() { x = 0xffffffffdeadf00dl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffee4c6786e8l); }
@Test
public void test15591() { x = 0x7fffffffffffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff78l); }
@Test
public void test15592() { x = 0x7fffffff7fffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffbbffffff78l); }
@Test
public void test15593() { x = 0x7fffffff80000000l; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffbc00000000l); }
@Test
public void test15594() { x = 0x7fffffffdeadf00dl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffee4c6786e8l); }
@Test
public void test15595() { x = 0x8000000000000000l; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15596() { x = 0xffffffffffffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff78l); }
@Test
public void test15597() { x = 0xfffffffffffffffel; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffef0l); }
@Test
public void test15598() { x = 0xefffffffffffffffl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x7fffffffffffff78l); }
@Test
public void test15599() { x = 0xdeadf00ddeadf00dl; long result = x * 0x88l; AssertJUnit.assertEquals("multiply", result, 0x4c67875e4c6786e8l); }
@Test
public void test15600() { x = 0x000000007fffffffl; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0x0000021ffffffbc0l); }
@Test
public void test15601() { x = 0x0000000080000000l; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0x0000022000000000l); }
@Test
public void test15602() { x = 0x00000000ffffffffl; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0x0000043ffffffbc0l); }
@Test
public void test15603() { x = 0x000000017fffffffl; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0x0000065ffffffbc0l); }
@Test
public void test15604() { x = 0x0000000180000000l; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0x0000066000000000l); }
@Test
public void test15605() { x = 0x00000001ffffffffl; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0x0000087ffffffbc0l); }
@Test
public void test15606() { x = 0xffffffff7fffffffl; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0xfffffddffffffbc0l); }
@Test
public void test15607() { x = 0xffffffff80000000l; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0xfffffde000000000l); }
@Test
public void test15608() { x = 0x00000001deadf00dl; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0x000007f2633c3740l); }
@Test
public void test15609() { x = 0xffffffffdeadf00dl; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0xffffff72633c3740l); }
@Test
public void test15610() { x = 0x7fffffffffffffffl; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffbc0l); }
@Test
public void test15611() { x = 0x7fffffff7fffffffl; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0xfffffddffffffbc0l); }
@Test
public void test15612() { x = 0x7fffffff80000000l; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0xfffffde000000000l); }
@Test
public void test15613() { x = 0x7fffffffdeadf00dl; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0xffffff72633c3740l); }
@Test
public void test15614() { x = 0x8000000000000000l; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15615() { x = 0xffffffffffffffffl; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffbc0l); }
@Test
public void test15616() { x = 0xfffffffffffffffel; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff780l); }
@Test
public void test15617() { x = 0xefffffffffffffffl; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffbc0l); }
@Test
public void test15618() { x = 0xdeadf00ddeadf00dl; long result = x * 0x440l; AssertJUnit.assertEquals("multiply", result, 0x633c3af2633c3740l); }
@Test
public void test15619() { x = 0x000000007fffffffl; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0x000043ffffff7800l); }
@Test
public void test15620() { x = 0x0000000080000000l; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0x0000440000000000l); }
@Test
public void test15621() { x = 0x00000000ffffffffl; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0x000087ffffff7800l); }
@Test
public void test15622() { x = 0x000000017fffffffl; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0x0000cbffffff7800l); }
@Test
public void test15623() { x = 0x0000000180000000l; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0x0000cc0000000000l); }
@Test
public void test15624() { x = 0x00000001ffffffffl; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0x00010fffffff7800l); }
@Test
public void test15625() { x = 0xffffffff7fffffffl; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0xffffbbffffff7800l); }
@Test
public void test15626() { x = 0xffffffff80000000l; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0xffffbc0000000000l); }
@Test
public void test15627() { x = 0x00000001deadf00dl; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0x0000fe4c6786e800l); }
@Test
public void test15628() { x = 0xffffffffdeadf00dl; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0xffffee4c6786e800l); }
@Test
public void test15629() { x = 0x7fffffffffffffffl; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff7800l); }
@Test
public void test15630() { x = 0x7fffffff7fffffffl; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0xffffbbffffff7800l); }
@Test
public void test15631() { x = 0x7fffffff80000000l; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0xffffbc0000000000l); }
@Test
public void test15632() { x = 0x7fffffffdeadf00dl; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0xffffee4c6786e800l); }
@Test
public void test15633() { x = 0x8000000000000000l; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15634() { x = 0xffffffffffffffffl; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff7800l); }
@Test
public void test15635() { x = 0xfffffffffffffffel; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffef000l); }
@Test
public void test15636() { x = 0xefffffffffffffffl; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff7800l); }
@Test
public void test15637() { x = 0xdeadf00ddeadf00dl; long result = x * 0x8800l; AssertJUnit.assertEquals("multiply", result, 0x67875e4c6786e800l); }
@Test
public void test15638() { x = 0x000000007fffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test15639() { x = 0x0000000080000000l; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15640() { x = 0x00000000ffffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test15641() { x = 0x000000017fffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test15642() { x = 0x0000000180000000l; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15643() { x = 0x00000001ffffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test15644() { x = 0xffffffff7fffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test15645() { x = 0xffffffff80000000l; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15646() { x = 0x00000001deadf00dl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x4c6786e800000000l); }
@Test
public void test15647() { x = 0xffffffffdeadf00dl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x4c6786e800000000l); }
@Test
public void test15648() { x = 0x7fffffffffffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test15649() { x = 0x7fffffff7fffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test15650() { x = 0x7fffffff80000000l; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15651() { x = 0x7fffffffdeadf00dl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x4c6786e800000000l); }
@Test
public void test15652() { x = 0x8000000000000000l; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15653() { x = 0xffffffffffffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test15654() { x = 0xfffffffffffffffel; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffef000000000l); }
@Test
public void test15655() { x = 0xefffffffffffffffl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000000l); }
@Test
public void test15656() { x = 0xdeadf00ddeadf00dl; long result = x * 0x8800000000l; AssertJUnit.assertEquals("multiply", result, 0x4c6786e800000000l); }
@Test
public void test15657() { x = 0x000000007fffffffl; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffbc000000000l); }
@Test
public void test15658() { x = 0x0000000080000000l; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15659() { x = 0x00000000ffffffffl; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffbc000000000l); }
@Test
public void test15660() { x = 0x000000017fffffffl; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffbc000000000l); }
@Test
public void test15661() { x = 0x0000000180000000l; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15662() { x = 0x00000001ffffffffl; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffbc000000000l); }
@Test
public void test15663() { x = 0xffffffff7fffffffl; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffbc000000000l); }
@Test
public void test15664() { x = 0xffffffff80000000l; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15665() { x = 0x00000001deadf00dl; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0x633c374000000000l); }
@Test
public void test15666() { x = 0xffffffffdeadf00dl; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0x633c374000000000l); }
@Test
public void test15667() { x = 0x7fffffffffffffffl; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffbc000000000l); }
@Test
public void test15668() { x = 0x7fffffff7fffffffl; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffbc000000000l); }
@Test
public void test15669() { x = 0x7fffffff80000000l; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15670() { x = 0x7fffffffdeadf00dl; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0x633c374000000000l); }
@Test
public void test15671() { x = 0x8000000000000000l; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15672() { x = 0xffffffffffffffffl; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffbc000000000l); }
@Test
public void test15673() { x = 0xfffffffffffffffel; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff78000000000l); }
@Test
public void test15674() { x = 0xefffffffffffffffl; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffbc000000000l); }
@Test
public void test15675() { x = 0xdeadf00ddeadf00dl; long result = x * 0x44000000000l; AssertJUnit.assertEquals("multiply", result, 0x633c374000000000l); }
@Test
public void test15676() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xffffffbc00000088l); }
@Test
public void test15677() { x = 0x0000000080000000l; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xffffffbc00000000l); }
@Test
public void test15678() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xffffff7800000088l); }
@Test
public void test15679() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xffffff3400000088l); }
@Test
public void test15680() { x = 0x0000000180000000l; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xffffff3400000000l); }
@Test
public void test15681() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xfffffef000000088l); }
@Test
public void test15682() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000004400000088l); }
@Test
public void test15683() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000004400000000l); }
@Test
public void test15684() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xffffff01b3987918l); }
@Test
public void test15685() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x00000011b3987918l); }
@Test
public void test15686() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000088l); }
@Test
public void test15687() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000004400000088l); }
@Test
public void test15688() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000004400000000l); }
@Test
public void test15689() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x00000011b3987918l); }
@Test
public void test15690() { x = 0x8000000000000000l; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15691() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000088l); }
@Test
public void test15692() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000110l); }
@Test
public void test15693() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0x8000000000000088l); }
@Test
public void test15694() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffff78l; AssertJUnit.assertEquals("multiply", result, 0xb39878a1b3987918l); }
@Test
public void test15695() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0xfffffde000000440l); }
@Test
public void test15696() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0xfffffde000000000l); }
@Test
public void test15697() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0xfffffbc000000440l); }
@Test
public void test15698() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0xfffff9a000000440l); }
@Test
public void test15699() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0xfffff9a000000000l); }
@Test
public void test15700() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0xfffff78000000440l); }
@Test
public void test15701() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0x0000022000000440l); }
@Test
public void test15702() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0x0000022000000000l); }
@Test
public void test15703() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0xfffff80d9cc3c8c0l); }
@Test
public void test15704() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0x0000008d9cc3c8c0l); }
@Test
public void test15705() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000440l); }
@Test
public void test15706() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0x0000022000000440l); }
@Test
public void test15707() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0x0000022000000000l); }
@Test
public void test15708() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0x0000008d9cc3c8c0l); }
@Test
public void test15709() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15710() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000440l); }
@Test
public void test15711() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000880l); }
@Test
public void test15712() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000440l); }
@Test
public void test15713() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffbc0l; AssertJUnit.assertEquals("multiply", result, 0x9cc3c50d9cc3c8c0l); }
@Test
public void test15714() { x = 0x000000007fffffffl; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0xffffbc0000008800l); }
@Test
public void test15715() { x = 0x0000000080000000l; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0xffffbc0000000000l); }
@Test
public void test15716() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0xffff780000008800l); }
@Test
public void test15717() { x = 0x000000017fffffffl; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0xffff340000008800l); }
@Test
public void test15718() { x = 0x0000000180000000l; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0xffff340000000000l); }
@Test
public void test15719() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0xfffef00000008800l); }
@Test
public void test15720() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0x0000440000008800l); }
@Test
public void test15721() { x = 0xffffffff80000000l; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0x0000440000000000l); }
@Test
public void test15722() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0xffff01b398791800l); }
@Test
public void test15723() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0x000011b398791800l); }
@Test
public void test15724() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000008800l); }
@Test
public void test15725() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0x0000440000008800l); }
@Test
public void test15726() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0x0000440000000000l); }
@Test
public void test15727() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0x000011b398791800l); }
@Test
public void test15728() { x = 0x8000000000000000l; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15729() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000008800l); }
@Test
public void test15730() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000011000l); }
@Test
public void test15731() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000008800l); }
@Test
public void test15732() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffff7800l; AssertJUnit.assertEquals("multiply", result, 0x9878a1b398791800l); }
@Test
public void test15733() { x = 0x000000007fffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test15734() { x = 0x0000000080000000l; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15735() { x = 0x00000000ffffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test15736() { x = 0x000000017fffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test15737() { x = 0x0000000180000000l; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15738() { x = 0x00000001ffffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test15739() { x = 0xffffffff7fffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test15740() { x = 0xffffffff80000000l; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15741() { x = 0x00000001deadf00dl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0xb398791800000000l); }
@Test
public void test15742() { x = 0xffffffffdeadf00dl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0xb398791800000000l); }
@Test
public void test15743() { x = 0x7fffffffffffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test15744() { x = 0x7fffffff7fffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test15745() { x = 0x7fffffff80000000l; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15746() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0xb398791800000000l); }
@Test
public void test15747() { x = 0x8000000000000000l; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15748() { x = 0xffffffffffffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test15749() { x = 0xfffffffffffffffel; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000011000000000l); }
@Test
public void test15750() { x = 0xefffffffffffffffl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000008800000000l); }
@Test
public void test15751() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffff7800000000l; AssertJUnit.assertEquals("multiply", result, 0xb398791800000000l); }
@Test
public void test15752() { x = 0x000000007fffffffl; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000044000000000l); }
@Test
public void test15753() { x = 0x0000000080000000l; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15754() { x = 0x00000000ffffffffl; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000044000000000l); }
@Test
public void test15755() { x = 0x000000017fffffffl; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000044000000000l); }
@Test
public void test15756() { x = 0x0000000180000000l; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15757() { x = 0x00000001ffffffffl; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000044000000000l); }
@Test
public void test15758() { x = 0xffffffff7fffffffl; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000044000000000l); }
@Test
public void test15759() { x = 0xffffffff80000000l; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15760() { x = 0x00000001deadf00dl; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x9cc3c8c000000000l); }
@Test
public void test15761() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x9cc3c8c000000000l); }
@Test
public void test15762() { x = 0x7fffffffffffffffl; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000044000000000l); }
@Test
public void test15763() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000044000000000l); }
@Test
public void test15764() { x = 0x7fffffff80000000l; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15765() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x9cc3c8c000000000l); }
@Test
public void test15766() { x = 0x8000000000000000l; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15767() { x = 0xffffffffffffffffl; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000044000000000l); }
@Test
public void test15768() { x = 0xfffffffffffffffel; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000088000000000l); }
@Test
public void test15769() { x = 0xefffffffffffffffl; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000044000000000l); }
@Test
public void test15770() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffbc000000000l; AssertJUnit.assertEquals("multiply", result, 0x9cc3c8c000000000l); }
@Test
public void test15771() { x = 0x000000007fffffffl; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0x00002000ffffbffel); }
@Test
public void test15772() { x = 0x0000000080000000l; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0x0000200100000000l); }
@Test
public void test15773() { x = 0x00000000ffffffffl; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0x00004001ffffbffel); }
@Test
public void test15774() { x = 0x000000017fffffffl; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0x00006002ffffbffel); }
@Test
public void test15775() { x = 0x0000000180000000l; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0x0000600300000000l); }
@Test
public void test15776() { x = 0x00000001ffffffffl; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0x00008003ffffbffel); }
@Test
public void test15777() { x = 0xffffffff7fffffffl; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0xffffdffeffffbffel); }
@Test
public void test15778() { x = 0xffffffff80000000l; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0xffffdfff00000000l); }
@Test
public void test15779() { x = 0x00000001deadf00dl; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0x000077af395f201al); }
@Test
public void test15780() { x = 0xffffffffdeadf00dl; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0xfffff7ab395f201al); }
@Test
public void test15781() { x = 0x7fffffffffffffffl; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffbffel); }
@Test
public void test15782() { x = 0x7fffffff7fffffffl; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0xffffdffeffffbffel); }
@Test
public void test15783() { x = 0x7fffffff80000000l; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0xffffdfff00000000l); }
@Test
public void test15784() { x = 0x7fffffffdeadf00dl; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0xfffff7ab395f201al); }
@Test
public void test15785() { x = 0x8000000000000000l; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15786() { x = 0xffffffffffffffffl; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffbffel); }
@Test
public void test15787() { x = 0xfffffffffffffffel; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff7ffcl); }
@Test
public void test15788() { x = 0xefffffffffffffffl; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0xdfffffffffffbffel); }
@Test
public void test15789() { x = 0xdeadf00ddeadf00dl; long result = x * 0x4002l; AssertJUnit.assertEquals("multiply", result, 0x395f57c7395f201al); }
@Test
public void test15790() { x = 0x000000007fffffffl; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0x00010007fffdfff0l); }
@Test
public void test15791() { x = 0x0000000080000000l; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0x0001000800000000l); }
@Test
public void test15792() { x = 0x00000000ffffffffl; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0x0002000ffffdfff0l); }
@Test
public void test15793() { x = 0x000000017fffffffl; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0x00030017fffdfff0l); }
@Test
public void test15794() { x = 0x0000000180000000l; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0x0003001800000000l); }
@Test
public void test15795() { x = 0x00000001ffffffffl; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0x0004001ffffdfff0l); }
@Test
public void test15796() { x = 0xffffffff7fffffffl; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0xfffefff7fffdfff0l); }
@Test
public void test15797() { x = 0xffffffff80000000l; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0xfffefff800000000l); }
@Test
public void test15798() { x = 0x00000001deadf00dl; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0x0003bd79caf900d0l); }
@Test
public void test15799() { x = 0xffffffffdeadf00dl; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0xffffbd59caf900d0l); }
@Test
public void test15800() { x = 0x7fffffffffffffffl; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffdfff0l); }
@Test
public void test15801() { x = 0x7fffffff7fffffffl; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0xfffefff7fffdfff0l); }
@Test
public void test15802() { x = 0x7fffffff80000000l; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0xfffefff800000000l); }
@Test
public void test15803() { x = 0x7fffffffdeadf00dl; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0xffffbd59caf900d0l); }
@Test
public void test15804() { x = 0x8000000000000000l; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15805() { x = 0xffffffffffffffffl; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffdfff0l); }
@Test
public void test15806() { x = 0xfffffffffffffffel; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffbffe0l); }
@Test
public void test15807() { x = 0xefffffffffffffffl; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffdfff0l); }
@Test
public void test15808() { x = 0xdeadf00ddeadf00dl; long result = x * 0x20010l; AssertJUnit.assertEquals("multiply", result, 0xcafabe39caf900d0l); }
@Test
public void test15809() { x = 0x000000007fffffffl; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0x002000ffffbffe00l); }
@Test
public void test15810() { x = 0x0000000080000000l; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0x0020010000000000l); }
@Test
public void test15811() { x = 0x00000000ffffffffl; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0x004001ffffbffe00l); }
@Test
public void test15812() { x = 0x000000017fffffffl; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0x006002ffffbffe00l); }
@Test
public void test15813() { x = 0x0000000180000000l; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0x0060030000000000l); }
@Test
public void test15814() { x = 0x00000001ffffffffl; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0x008003ffffbffe00l); }
@Test
public void test15815() { x = 0xffffffff7fffffffl; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0xffdffeffffbffe00l); }
@Test
public void test15816() { x = 0xffffffff80000000l; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0xffdfff0000000000l); }
@Test
public void test15817() { x = 0x00000001deadf00dl; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0x0077af395f201a00l); }
@Test
public void test15818() { x = 0xffffffffdeadf00dl; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0xfff7ab395f201a00l); }
@Test
public void test15819() { x = 0x7fffffffffffffffl; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffbffe00l); }
@Test
public void test15820() { x = 0x7fffffff7fffffffl; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0xffdffeffffbffe00l); }
@Test
public void test15821() { x = 0x7fffffff80000000l; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0xffdfff0000000000l); }
@Test
public void test15822() { x = 0x7fffffffdeadf00dl; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0xfff7ab395f201a00l); }
@Test
public void test15823() { x = 0x8000000000000000l; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15824() { x = 0xffffffffffffffffl; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffbffe00l); }
@Test
public void test15825() { x = 0xfffffffffffffffel; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffff7ffc00l); }
@Test
public void test15826() { x = 0xefffffffffffffffl; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffbffe00l); }
@Test
public void test15827() { x = 0xdeadf00ddeadf00dl; long result = x * 0x400200l; AssertJUnit.assertEquals("multiply", result, 0x5f57c7395f201a00l); }
@Test
public void test15828() { x = 0x000000007fffffffl; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffbffe00000000l); }
@Test
public void test15829() { x = 0x0000000080000000l; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15830() { x = 0x00000000ffffffffl; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffbffe00000000l); }
@Test
public void test15831() { x = 0x000000017fffffffl; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffbffe00000000l); }
@Test
public void test15832() { x = 0x0000000180000000l; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15833() { x = 0x00000001ffffffffl; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffbffe00000000l); }
@Test
public void test15834() { x = 0xffffffff7fffffffl; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffbffe00000000l); }
@Test
public void test15835() { x = 0xffffffff80000000l; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15836() { x = 0x00000001deadf00dl; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0x395f201a00000000l); }
@Test
public void test15837() { x = 0xffffffffdeadf00dl; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0x395f201a00000000l); }
@Test
public void test15838() { x = 0x7fffffffffffffffl; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffbffe00000000l); }
@Test
public void test15839() { x = 0x7fffffff7fffffffl; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffbffe00000000l); }
@Test
public void test15840() { x = 0x7fffffff80000000l; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15841() { x = 0x7fffffffdeadf00dl; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0x395f201a00000000l); }
@Test
public void test15842() { x = 0x8000000000000000l; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15843() { x = 0xffffffffffffffffl; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffbffe00000000l); }
@Test
public void test15844() { x = 0xfffffffffffffffel; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0xffff7ffc00000000l); }
@Test
public void test15845() { x = 0xefffffffffffffffl; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0xffffbffe00000000l); }
@Test
public void test15846() { x = 0xdeadf00ddeadf00dl; long result = x * 0x400200000000l; AssertJUnit.assertEquals("multiply", result, 0x395f201a00000000l); }
@Test
public void test15847() { x = 0x000000007fffffffl; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffdfff000000000l); }
@Test
public void test15848() { x = 0x0000000080000000l; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15849() { x = 0x00000000ffffffffl; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffdfff000000000l); }
@Test
public void test15850() { x = 0x000000017fffffffl; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffdfff000000000l); }
@Test
public void test15851() { x = 0x0000000180000000l; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15852() { x = 0x00000001ffffffffl; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffdfff000000000l); }
@Test
public void test15853() { x = 0xffffffff7fffffffl; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffdfff000000000l); }
@Test
public void test15854() { x = 0xffffffff80000000l; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15855() { x = 0x00000001deadf00dl; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0xcaf900d000000000l); }
@Test
public void test15856() { x = 0xffffffffdeadf00dl; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0xcaf900d000000000l); }
@Test
public void test15857() { x = 0x7fffffffffffffffl; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffdfff000000000l); }
@Test
public void test15858() { x = 0x7fffffff7fffffffl; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffdfff000000000l); }
@Test
public void test15859() { x = 0x7fffffff80000000l; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15860() { x = 0x7fffffffdeadf00dl; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0xcaf900d000000000l); }
@Test
public void test15861() { x = 0x8000000000000000l; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15862() { x = 0xffffffffffffffffl; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffdfff000000000l); }
@Test
public void test15863() { x = 0xfffffffffffffffel; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffbffe000000000l); }
@Test
public void test15864() { x = 0xefffffffffffffffl; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffdfff000000000l); }
@Test
public void test15865() { x = 0xdeadf00ddeadf00dl; long result = x * 0x2001000000000l; AssertJUnit.assertEquals("multiply", result, 0xcaf900d000000000l); }
@Test
public void test15866() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0xffffdfff00004002l); }
@Test
public void test15867() { x = 0x0000000080000000l; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0xffffdfff00000000l); }
@Test
public void test15868() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0xffffbffe00004002l); }
@Test
public void test15869() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0xffff9ffd00004002l); }
@Test
public void test15870() { x = 0x0000000180000000l; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0xffff9ffd00000000l); }
@Test
public void test15871() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0xffff7ffc00004002l); }
@Test
public void test15872() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0x0000200100004002l); }
@Test
public void test15873() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0x0000200100000000l); }
@Test
public void test15874() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0xffff8850c6a0dfe6l); }
@Test
public void test15875() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0x00000854c6a0dfe6l); }
@Test
public void test15876() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0x0000000000004002l); }
@Test
public void test15877() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0x0000200100004002l); }
@Test
public void test15878() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0x0000200100000000l); }
@Test
public void test15879() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0x00000854c6a0dfe6l); }
@Test
public void test15880() { x = 0x8000000000000000l; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15881() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0x0000000000004002l); }
@Test
public void test15882() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0x0000000000008004l); }
@Test
public void test15883() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0x2000000000004002l); }
@Test
public void test15884() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffbffel; AssertJUnit.assertEquals("multiply", result, 0xc6a0a838c6a0dfe6l); }
@Test
public void test15885() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0xfffefff800020010l); }
@Test
public void test15886() { x = 0x0000000080000000l; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0xfffefff800000000l); }
@Test
public void test15887() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0xfffdfff000020010l); }
@Test
public void test15888() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0xfffcffe800020010l); }
@Test
public void test15889() { x = 0x0000000180000000l; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0xfffcffe800000000l); }
@Test
public void test15890() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0xfffbffe000020010l); }
@Test
public void test15891() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0x0001000800020010l); }
@Test
public void test15892() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0x0001000800000000l); }
@Test
public void test15893() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0xfffc42863506ff30l); }
@Test
public void test15894() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0x000042a63506ff30l); }
@Test
public void test15895() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000020010l); }
@Test
public void test15896() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0x0001000800020010l); }
@Test
public void test15897() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0x0001000800000000l); }
@Test
public void test15898() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0x000042a63506ff30l); }
@Test
public void test15899() { x = 0x8000000000000000l; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15900() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000020010l); }
@Test
public void test15901() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000040020l); }
@Test
public void test15902() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000020010l); }
@Test
public void test15903() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffdfff0l; AssertJUnit.assertEquals("multiply", result, 0x350541c63506ff30l); }
@Test
public void test15904() { x = 0x000000007fffffffl; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0xffdfff0000400200l); }
@Test
public void test15905() { x = 0x0000000080000000l; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0xffdfff0000000000l); }
@Test
public void test15906() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0xffbffe0000400200l); }
@Test
public void test15907() { x = 0x000000017fffffffl; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0xff9ffd0000400200l); }
@Test
public void test15908() { x = 0x0000000180000000l; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0xff9ffd0000000000l); }
@Test
public void test15909() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0xff7ffc0000400200l); }
@Test
public void test15910() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0x0020010000400200l); }
@Test
public void test15911() { x = 0xffffffff80000000l; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0x0020010000000000l); }
@Test
public void test15912() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0xff8850c6a0dfe600l); }
@Test
public void test15913() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0x000854c6a0dfe600l); }
@Test
public void test15914() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000400200l); }
@Test
public void test15915() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0x0020010000400200l); }
@Test
public void test15916() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0x0020010000000000l); }
@Test
public void test15917() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0x000854c6a0dfe600l); }
@Test
public void test15918() { x = 0x8000000000000000l; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15919() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000400200l); }
@Test
public void test15920() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000800400l); }
@Test
public void test15921() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000400200l); }
@Test
public void test15922() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffbffe00l; AssertJUnit.assertEquals("multiply", result, 0xa0a838c6a0dfe600l); }
@Test
public void test15923() { x = 0x000000007fffffffl; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000400200000000l); }
@Test
public void test15924() { x = 0x0000000080000000l; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15925() { x = 0x00000000ffffffffl; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000400200000000l); }
@Test
public void test15926() { x = 0x000000017fffffffl; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000400200000000l); }
@Test
public void test15927() { x = 0x0000000180000000l; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15928() { x = 0x00000001ffffffffl; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000400200000000l); }
@Test
public void test15929() { x = 0xffffffff7fffffffl; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000400200000000l); }
@Test
public void test15930() { x = 0xffffffff80000000l; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15931() { x = 0x00000001deadf00dl; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0xc6a0dfe600000000l); }
@Test
public void test15932() { x = 0xffffffffdeadf00dl; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0xc6a0dfe600000000l); }
@Test
public void test15933() { x = 0x7fffffffffffffffl; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000400200000000l); }
@Test
public void test15934() { x = 0x7fffffff7fffffffl; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000400200000000l); }
@Test
public void test15935() { x = 0x7fffffff80000000l; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15936() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0xc6a0dfe600000000l); }
@Test
public void test15937() { x = 0x8000000000000000l; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15938() { x = 0xffffffffffffffffl; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000400200000000l); }
@Test
public void test15939() { x = 0xfffffffffffffffel; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000800400000000l); }
@Test
public void test15940() { x = 0xefffffffffffffffl; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0x0000400200000000l); }
@Test
public void test15941() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffbffe00000000l; AssertJUnit.assertEquals("multiply", result, 0xc6a0dfe600000000l); }
@Test
public void test15942() { x = 0x000000007fffffffl; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0002001000000000l); }
@Test
public void test15943() { x = 0x0000000080000000l; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15944() { x = 0x00000000ffffffffl; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0002001000000000l); }
@Test
public void test15945() { x = 0x000000017fffffffl; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0002001000000000l); }
@Test
public void test15946() { x = 0x0000000180000000l; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15947() { x = 0x00000001ffffffffl; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0002001000000000l); }
@Test
public void test15948() { x = 0xffffffff7fffffffl; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0002001000000000l); }
@Test
public void test15949() { x = 0xffffffff80000000l; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15950() { x = 0x00000001deadf00dl; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x3506ff3000000000l); }
@Test
public void test15951() { x = 0xffffffffdeadf00dl; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x3506ff3000000000l); }
@Test
public void test15952() { x = 0x7fffffffffffffffl; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0002001000000000l); }
@Test
public void test15953() { x = 0x7fffffff7fffffffl; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0002001000000000l); }
@Test
public void test15954() { x = 0x7fffffff80000000l; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15955() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x3506ff3000000000l); }
@Test
public void test15956() { x = 0x8000000000000000l; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15957() { x = 0xffffffffffffffffl; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0002001000000000l); }
@Test
public void test15958() { x = 0xfffffffffffffffel; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0004002000000000l); }
@Test
public void test15959() { x = 0xefffffffffffffffl; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x0002001000000000l); }
@Test
public void test15960() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffdfff000000000l; AssertJUnit.assertEquals("multiply", result, 0x3506ff3000000000l); }
@Test
public void test15961() { x = 0x000000007fffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x0000002fffffffa0l); }
@Test
public void test15962() { x = 0x0000000080000000l; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test15963() { x = 0x00000000ffffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x0000005fffffffa0l); }
@Test
public void test15964() { x = 0x000000017fffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x0000008fffffffa0l); }
@Test
public void test15965() { x = 0x0000000180000000l; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x0000009000000000l); }
@Test
public void test15966() { x = 0x00000001ffffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x000000bfffffffa0l); }
@Test
public void test15967() { x = 0xffffffff7fffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffcfffffffa0l); }
@Test
public void test15968() { x = 0xffffffff80000000l; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test15969() { x = 0x00000001deadf00dl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x000000b3813a04e0l); }
@Test
public void test15970() { x = 0xffffffffdeadf00dl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xfffffff3813a04e0l); }
@Test
public void test15971() { x = 0x7fffffffffffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffa0l); }
@Test
public void test15972() { x = 0x7fffffff7fffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffcfffffffa0l); }
@Test
public void test15973() { x = 0x7fffffff80000000l; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test15974() { x = 0x7fffffffdeadf00dl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xfffffff3813a04e0l); }
@Test
public void test15975() { x = 0x8000000000000000l; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15976() { x = 0xffffffffffffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffa0l); }
@Test
public void test15977() { x = 0xfffffffffffffffel; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffff40l); }
@Test
public void test15978() { x = 0xefffffffffffffffl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffffa0l); }
@Test
public void test15979() { x = 0xdeadf00ddeadf00dl; long result = x * 0x60l; AssertJUnit.assertEquals("multiply", result, 0x813a0533813a04e0l); }
@Test
public void test15980() { x = 0x000000007fffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x0000017ffffffd00l); }
@Test
public void test15981() { x = 0x0000000080000000l; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x0000018000000000l); }
@Test
public void test15982() { x = 0x00000000ffffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x000002fffffffd00l); }
@Test
public void test15983() { x = 0x000000017fffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x0000047ffffffd00l); }
@Test
public void test15984() { x = 0x0000000180000000l; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x0000048000000000l); }
@Test
public void test15985() { x = 0x00000001ffffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x000005fffffffd00l); }
@Test
public void test15986() { x = 0xffffffff7fffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7ffffffd00l); }
@Test
public void test15987() { x = 0xffffffff80000000l; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8000000000l); }
@Test
public void test15988() { x = 0x00000001deadf00dl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x0000059c09d02700l); }
@Test
public void test15989() { x = 0xffffffffdeadf00dl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xffffff9c09d02700l); }
@Test
public void test15990() { x = 0x7fffffffffffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd00l); }
@Test
public void test15991() { x = 0x7fffffff7fffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffe7ffffffd00l); }
@Test
public void test15992() { x = 0x7fffffff80000000l; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8000000000l); }
@Test
public void test15993() { x = 0x7fffffffdeadf00dl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xffffff9c09d02700l); }
@Test
public void test15994() { x = 0x8000000000000000l; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test15995() { x = 0xffffffffffffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd00l); }
@Test
public void test15996() { x = 0xfffffffffffffffel; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffa00l); }
@Test
public void test15997() { x = 0xefffffffffffffffl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffd00l); }
@Test
public void test15998() { x = 0xdeadf00ddeadf00dl; long result = x * 0x300l; AssertJUnit.assertEquals("multiply", result, 0x09d0299c09d02700l); }
@Test
public void test15999() { x = 0x000000007fffffffl; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0x00002fffffffa000l); }
@Test
public void test16000() { x = 0x0000000080000000l; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0x0000300000000000l); }
@Test
public void test16001() { x = 0x00000000ffffffffl; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0x00005fffffffa000l); }
@Test
public void test16002() { x = 0x000000017fffffffl; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0x00008fffffffa000l); }
@Test
public void test16003() { x = 0x0000000180000000l; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0x0000900000000000l); }
@Test
public void test16004() { x = 0x00000001ffffffffl; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0x0000bfffffffa000l); }
@Test
public void test16005() { x = 0xffffffff7fffffffl; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0xffffcfffffffa000l); }
@Test
public void test16006() { x = 0xffffffff80000000l; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0xffffd00000000000l); }
@Test
public void test16007() { x = 0x00000001deadf00dl; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0x0000b3813a04e000l); }
@Test
public void test16008() { x = 0xffffffffdeadf00dl; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0xfffff3813a04e000l); }
@Test
public void test16009() { x = 0x7fffffffffffffffl; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffa000l); }
@Test
public void test16010() { x = 0x7fffffff7fffffffl; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0xffffcfffffffa000l); }
@Test
public void test16011() { x = 0x7fffffff80000000l; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0xffffd00000000000l); }
@Test
public void test16012() { x = 0x7fffffffdeadf00dl; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0xfffff3813a04e000l); }
@Test
public void test16013() { x = 0x8000000000000000l; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16014() { x = 0xffffffffffffffffl; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffa000l); }
@Test
public void test16015() { x = 0xfffffffffffffffel; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffff4000l); }
@Test
public void test16016() { x = 0xefffffffffffffffl; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffa000l); }
@Test
public void test16017() { x = 0xdeadf00ddeadf00dl; long result = x * 0x6000l; AssertJUnit.assertEquals("multiply", result, 0x3a0533813a04e000l); }
@Test
public void test16018() { x = 0x000000007fffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test16019() { x = 0x0000000080000000l; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16020() { x = 0x00000000ffffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test16021() { x = 0x000000017fffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test16022() { x = 0x0000000180000000l; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16023() { x = 0x00000001ffffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test16024() { x = 0xffffffff7fffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test16025() { x = 0xffffffff80000000l; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16026() { x = 0x00000001deadf00dl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x813a04e000000000l); }
@Test
public void test16027() { x = 0xffffffffdeadf00dl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x813a04e000000000l); }
@Test
public void test16028() { x = 0x7fffffffffffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test16029() { x = 0x7fffffff7fffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test16030() { x = 0x7fffffff80000000l; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16031() { x = 0x7fffffffdeadf00dl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x813a04e000000000l); }
@Test
public void test16032() { x = 0x8000000000000000l; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16033() { x = 0xffffffffffffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test16034() { x = 0xfffffffffffffffel; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffff4000000000l); }
@Test
public void test16035() { x = 0xefffffffffffffffl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000000l); }
@Test
public void test16036() { x = 0xdeadf00ddeadf00dl; long result = x * 0x6000000000l; AssertJUnit.assertEquals("multiply", result, 0x813a04e000000000l); }
@Test
public void test16037() { x = 0x000000007fffffffl; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000000l); }
@Test
public void test16038() { x = 0x0000000080000000l; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16039() { x = 0x00000000ffffffffl; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000000l); }
@Test
public void test16040() { x = 0x000000017fffffffl; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000000l); }
@Test
public void test16041() { x = 0x0000000180000000l; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16042() { x = 0x00000001ffffffffl; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000000l); }
@Test
public void test16043() { x = 0xffffffff7fffffffl; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000000l); }
@Test
public void test16044() { x = 0xffffffff80000000l; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16045() { x = 0x00000001deadf00dl; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0x09d0270000000000l); }
@Test
public void test16046() { x = 0xffffffffdeadf00dl; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0x09d0270000000000l); }
@Test
public void test16047() { x = 0x7fffffffffffffffl; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000000l); }
@Test
public void test16048() { x = 0x7fffffff7fffffffl; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000000l); }
@Test
public void test16049() { x = 0x7fffffff80000000l; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16050() { x = 0x7fffffffdeadf00dl; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0x09d0270000000000l); }
@Test
public void test16051() { x = 0x8000000000000000l; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16052() { x = 0xffffffffffffffffl; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000000l); }
@Test
public void test16053() { x = 0xfffffffffffffffel; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffa0000000000l); }
@Test
public void test16054() { x = 0xefffffffffffffffl; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000000l); }
@Test
public void test16055() { x = 0xdeadf00ddeadf00dl; long result = x * 0x30000000000l; AssertJUnit.assertEquals("multiply", result, 0x09d0270000000000l); }
@Test
public void test16056() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000060l); }
@Test
public void test16057() { x = 0x0000000080000000l; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffd000000000l); }
@Test
public void test16058() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0xffffffa000000060l); }
@Test
public void test16059() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000060l); }
@Test
public void test16060() { x = 0x0000000180000000l; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0xffffff7000000000l); }
@Test
public void test16061() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0xffffff4000000060l); }
@Test
public void test16062() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000060l); }
@Test
public void test16063() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test16064() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0xffffff4c7ec5fb20l); }
@Test
public void test16065() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000000c7ec5fb20l); }
@Test
public void test16066() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000060l); }
@Test
public void test16067() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000060l); }
@Test
public void test16068() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000003000000000l); }
@Test
public void test16069() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000000c7ec5fb20l); }
@Test
public void test16070() { x = 0x8000000000000000l; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16071() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000060l); }
@Test
public void test16072() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x00000000000000c0l); }
@Test
public void test16073() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000060l); }
@Test
public void test16074() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffffa0l; AssertJUnit.assertEquals("multiply", result, 0x7ec5facc7ec5fb20l); }
@Test
public void test16075() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8000000300l); }
@Test
public void test16076() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffe8000000000l); }
@Test
public void test16077() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0000000300l); }
@Test
public void test16078() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffb8000000300l); }
@Test
public void test16079() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffb8000000000l); }
@Test
public void test16080() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa0000000300l); }
@Test
public void test16081() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000018000000300l); }
@Test
public void test16082() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000018000000000l); }
@Test
public void test16083() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xfffffa63f62fd900l); }
@Test
public void test16084() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x00000063f62fd900l); }
@Test
public void test16085() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000300l); }
@Test
public void test16086() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000018000000300l); }
@Test
public void test16087() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000018000000000l); }
@Test
public void test16088() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x00000063f62fd900l); }
@Test
public void test16089() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16090() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000300l); }
@Test
public void test16091() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000600l); }
@Test
public void test16092() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000300l); }
@Test
public void test16093() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffd00l; AssertJUnit.assertEquals("multiply", result, 0xf62fd663f62fd900l); }
@Test
public void test16094() { x = 0x000000007fffffffl; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0xffffd00000006000l); }
@Test
public void test16095() { x = 0x0000000080000000l; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0xffffd00000000000l); }
@Test
public void test16096() { x = 0x00000000ffffffffl; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0xffffa00000006000l); }
@Test
public void test16097() { x = 0x000000017fffffffl; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0xffff700000006000l); }
@Test
public void test16098() { x = 0x0000000180000000l; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0xffff700000000000l); }
@Test
public void test16099() { x = 0x00000001ffffffffl; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0xffff400000006000l); }
@Test
public void test16100() { x = 0xffffffff7fffffffl; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0x0000300000006000l); }
@Test
public void test16101() { x = 0xffffffff80000000l; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0x0000300000000000l); }
@Test
public void test16102() { x = 0x00000001deadf00dl; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0xffff4c7ec5fb2000l); }
@Test
public void test16103() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0x00000c7ec5fb2000l); }
@Test
public void test16104() { x = 0x7fffffffffffffffl; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006000l); }
@Test
public void test16105() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0x0000300000006000l); }
@Test
public void test16106() { x = 0x7fffffff80000000l; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0x0000300000000000l); }
@Test
public void test16107() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0x00000c7ec5fb2000l); }
@Test
public void test16108() { x = 0x8000000000000000l; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16109() { x = 0xffffffffffffffffl; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006000l); }
@Test
public void test16110() { x = 0xfffffffffffffffel; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0x000000000000c000l); }
@Test
public void test16111() { x = 0xefffffffffffffffl; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000006000l); }
@Test
public void test16112() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffffffffa000l; AssertJUnit.assertEquals("multiply", result, 0xc5facc7ec5fb2000l); }
@Test
public void test16113() { x = 0x000000007fffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test16114() { x = 0x0000000080000000l; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16115() { x = 0x00000000ffffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test16116() { x = 0x000000017fffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test16117() { x = 0x0000000180000000l; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16118() { x = 0x00000001ffffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test16119() { x = 0xffffffff7fffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test16120() { x = 0xffffffff80000000l; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16121() { x = 0x00000001deadf00dl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x7ec5fb2000000000l); }
@Test
public void test16122() { x = 0xffffffffdeadf00dl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x7ec5fb2000000000l); }
@Test
public void test16123() { x = 0x7fffffffffffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test16124() { x = 0x7fffffff7fffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test16125() { x = 0x7fffffff80000000l; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16126() { x = 0x7fffffffdeadf00dl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x7ec5fb2000000000l); }
@Test
public void test16127() { x = 0x8000000000000000l; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16128() { x = 0xffffffffffffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test16129() { x = 0xfffffffffffffffel; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x000000c000000000l); }
@Test
public void test16130() { x = 0xefffffffffffffffl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000006000000000l); }
@Test
public void test16131() { x = 0xdeadf00ddeadf00dl; long result = x * 0xffffffa000000000l; AssertJUnit.assertEquals("multiply", result, 0x7ec5fb2000000000l); }
@Test
public void test16132() { x = 0x000000007fffffffl; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000030000000000l); }
@Test
public void test16133() { x = 0x0000000080000000l; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16134() { x = 0x00000000ffffffffl; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000030000000000l); }
@Test
public void test16135() { x = 0x000000017fffffffl; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000030000000000l); }
@Test
public void test16136() { x = 0x0000000180000000l; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16137() { x = 0x00000001ffffffffl; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000030000000000l); }
@Test
public void test16138() { x = 0xffffffff7fffffffl; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000030000000000l); }
@Test
public void test16139() { x = 0xffffffff80000000l; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16140() { x = 0x00000001deadf00dl; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0xf62fd90000000000l); }
@Test
public void test16141() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0xf62fd90000000000l); }
@Test
public void test16142() { x = 0x7fffffffffffffffl; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000030000000000l); }
@Test
public void test16143() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000030000000000l); }
@Test
public void test16144() { x = 0x7fffffff80000000l; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16145() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0xf62fd90000000000l); }
@Test
public void test16146() { x = 0x8000000000000000l; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16147() { x = 0xffffffffffffffffl; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000030000000000l); }
@Test
public void test16148() { x = 0xfffffffffffffffel; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000060000000000l); }
@Test
public void test16149() { x = 0xefffffffffffffffl; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000030000000000l); }
@Test
public void test16150() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffd0000000000l; AssertJUnit.assertEquals("multiply", result, 0xf62fd90000000000l); }
@Test
public void test16151() { x = 0x000000007fffffffl; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0x000000fbfffffe08l); }
@Test
public void test16152() { x = 0x0000000080000000l; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0x000000fc00000000l); }
@Test
public void test16153() { x = 0x00000000ffffffffl; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0x000001f7fffffe08l); }
@Test
public void test16154() { x = 0x000000017fffffffl; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0x000002f3fffffe08l); }
@Test
public void test16155() { x = 0x0000000180000000l; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0x000002f400000000l); }
@Test
public void test16156() { x = 0x00000001ffffffffl; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0x000003effffffe08l); }
@Test
public void test16157() { x = 0xffffffff7fffffffl; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0xffffff03fffffe08l); }
@Test
public void test16158() { x = 0xffffffff80000000l; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0xffffff0400000000l); }
@Test
public void test16159() { x = 0x00000001deadf00dl; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0x000003ae66709998l); }
@Test
public void test16160() { x = 0xffffffffdeadf00dl; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0xffffffbe66709998l); }
@Test
public void test16161() { x = 0x7fffffffffffffffl; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe08l); }
@Test
public void test16162() { x = 0x7fffffff7fffffffl; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0xffffff03fffffe08l); }
@Test
public void test16163() { x = 0x7fffffff80000000l; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0xffffff0400000000l); }
@Test
public void test16164() { x = 0x7fffffffdeadf00dl; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0xffffffbe66709998l); }
@Test
public void test16165() { x = 0x8000000000000000l; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16166() { x = 0xffffffffffffffffl; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffe08l); }
@Test
public void test16167() { x = 0xfffffffffffffffel; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffffc10l); }
@Test
public void test16168() { x = 0xefffffffffffffffl; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0x7ffffffffffffe08l); }
@Test
public void test16169() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1f8l; AssertJUnit.assertEquals("multiply", result, 0x66709b4e66709998l); }
@Test
public void test16170() { x = 0x000000007fffffffl; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0x000007dffffff040l); }
@Test
public void test16171() { x = 0x0000000080000000l; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0x000007e000000000l); }
@Test
public void test16172() { x = 0x00000000ffffffffl; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0x00000fbffffff040l); }
@Test
public void test16173() { x = 0x000000017fffffffl; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0x0000179ffffff040l); }
@Test
public void test16174() { x = 0x0000000180000000l; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0x000017a000000000l); }
@Test
public void test16175() { x = 0x00000001ffffffffl; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0x00001f7ffffff040l); }
@Test
public void test16176() { x = 0xffffffff7fffffffl; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0xfffff81ffffff040l); }
@Test
public void test16177() { x = 0xffffffff80000000l; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0xfffff82000000000l); }
@Test
public void test16178() { x = 0x00000001deadf00dl; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0x00001d733384ccc0l); }
@Test
public void test16179() { x = 0xffffffffdeadf00dl; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0xfffffdf33384ccc0l); }
@Test
public void test16180() { x = 0x7fffffffffffffffl; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff040l); }
@Test
public void test16181() { x = 0x7fffffff7fffffffl; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0xfffff81ffffff040l); }
@Test
public void test16182() { x = 0x7fffffff80000000l; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0xfffff82000000000l); }
@Test
public void test16183() { x = 0x7fffffffdeadf00dl; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0xfffffdf33384ccc0l); }
@Test
public void test16184() { x = 0x8000000000000000l; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16185() { x = 0xffffffffffffffffl; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff040l); }
@Test
public void test16186() { x = 0xfffffffffffffffel; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0xffffffffffffe080l); }
@Test
public void test16187() { x = 0xefffffffffffffffl; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffff040l); }
@Test
public void test16188() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfc0l; AssertJUnit.assertEquals("multiply", result, 0x3384da733384ccc0l); }
@Test
public void test16189() { x = 0x000000007fffffffl; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0x0000fbfffffe0800l); }
@Test
public void test16190() { x = 0x0000000080000000l; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0x0000fc0000000000l); }
@Test
public void test16191() { x = 0x00000000ffffffffl; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0x0001f7fffffe0800l); }
@Test
public void test16192() { x = 0x000000017fffffffl; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0x0002f3fffffe0800l); }
@Test
public void test16193() { x = 0x0000000180000000l; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0x0002f40000000000l); }
@Test
public void test16194() { x = 0x00000001ffffffffl; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0x0003effffffe0800l); }
@Test
public void test16195() { x = 0xffffffff7fffffffl; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0xffff03fffffe0800l); }
@Test
public void test16196() { x = 0xffffffff80000000l; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0xffff040000000000l); }
@Test
public void test16197() { x = 0x00000001deadf00dl; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0x0003ae6670999800l); }
@Test
public void test16198() { x = 0xffffffffdeadf00dl; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0xffffbe6670999800l); }
@Test
public void test16199() { x = 0x7fffffffffffffffl; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe0800l); }
@Test
public void test16200() { x = 0x7fffffff7fffffffl; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0xffff03fffffe0800l); }
@Test
public void test16201() { x = 0x7fffffff80000000l; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0xffff040000000000l); }
@Test
public void test16202() { x = 0x7fffffffdeadf00dl; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0xffffbe6670999800l); }
@Test
public void test16203() { x = 0x8000000000000000l; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16204() { x = 0xffffffffffffffffl; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe0800l); }
@Test
public void test16205() { x = 0xfffffffffffffffel; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffc1000l); }
@Test
public void test16206() { x = 0xefffffffffffffffl; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0xfffffffffffe0800l); }
@Test
public void test16207() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1f800l; AssertJUnit.assertEquals("multiply", result, 0x709b4e6670999800l); }
@Test
public void test16208() { x = 0x000000007fffffffl; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0800000000l); }
@Test
public void test16209() { x = 0x0000000080000000l; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16210() { x = 0x00000000ffffffffl; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0800000000l); }
@Test
public void test16211() { x = 0x000000017fffffffl; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0800000000l); }
@Test
public void test16212() { x = 0x0000000180000000l; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16213() { x = 0x00000001ffffffffl; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0800000000l); }
@Test
public void test16214() { x = 0xffffffff7fffffffl; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0800000000l); }
@Test
public void test16215() { x = 0xffffffff80000000l; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16216() { x = 0x00000001deadf00dl; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0x6670999800000000l); }
@Test
public void test16217() { x = 0xffffffffdeadf00dl; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0x6670999800000000l); }
@Test
public void test16218() { x = 0x7fffffffffffffffl; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0800000000l); }
@Test
public void test16219() { x = 0x7fffffff7fffffffl; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0800000000l); }
@Test
public void test16220() { x = 0x7fffffff80000000l; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16221() { x = 0x7fffffffdeadf00dl; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0x6670999800000000l); }
@Test
public void test16222() { x = 0x8000000000000000l; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16223() { x = 0xffffffffffffffffl; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0800000000l); }
@Test
public void test16224() { x = 0xfffffffffffffffel; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffc1000000000l); }
@Test
public void test16225() { x = 0xefffffffffffffffl; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0xfffffe0800000000l); }
@Test
public void test16226() { x = 0xdeadf00ddeadf00dl; long result = x * 0x1f800000000l; AssertJUnit.assertEquals("multiply", result, 0x6670999800000000l); }
@Test
public void test16227() { x = 0x000000007fffffffl; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff04000000000l); }
@Test
public void test16228() { x = 0x0000000080000000l; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16229() { x = 0x00000000ffffffffl; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff04000000000l); }
@Test
public void test16230() { x = 0x000000017fffffffl; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff04000000000l); }
@Test
public void test16231() { x = 0x0000000180000000l; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16232() { x = 0x00000001ffffffffl; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff04000000000l); }
@Test
public void test16233() { x = 0xffffffff7fffffffl; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff04000000000l); }
@Test
public void test16234() { x = 0xffffffff80000000l; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16235() { x = 0x00000001deadf00dl; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0x3384ccc000000000l); }
@Test
public void test16236() { x = 0xffffffffdeadf00dl; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0x3384ccc000000000l); }
@Test
public void test16237() { x = 0x7fffffffffffffffl; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff04000000000l); }
@Test
public void test16238() { x = 0x7fffffff7fffffffl; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff04000000000l); }
@Test
public void test16239() { x = 0x7fffffff80000000l; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16240() { x = 0x7fffffffdeadf00dl; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0x3384ccc000000000l); }
@Test
public void test16241() { x = 0x8000000000000000l; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16242() { x = 0xffffffffffffffffl; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff04000000000l); }
@Test
public void test16243() { x = 0xfffffffffffffffel; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0xffffe08000000000l); }
@Test
public void test16244() { x = 0xefffffffffffffffl; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0xfffff04000000000l); }
@Test
public void test16245() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfc000000000l; AssertJUnit.assertEquals("multiply", result, 0x3384ccc000000000l); }
@Test
public void test16246() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0xffffff04000001f8l); }
@Test
public void test16247() { x = 0x0000000080000000l; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0xffffff0400000000l); }
@Test
public void test16248() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0xfffffe08000001f8l); }
@Test
public void test16249() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0c000001f8l); }
@Test
public void test16250() { x = 0x0000000180000000l; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0xfffffd0c00000000l); }
@Test
public void test16251() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0xfffffc10000001f8l); }
@Test
public void test16252() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0x000000fc000001f8l); }
@Test
public void test16253() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0x000000fc00000000l); }
@Test
public void test16254() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0xfffffc51998f6668l); }
@Test
public void test16255() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0x00000041998f6668l); }
@Test
public void test16256() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001f8l); }
@Test
public void test16257() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0x000000fc000001f8l); }
@Test
public void test16258() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0x000000fc00000000l); }
@Test
public void test16259() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0x00000041998f6668l); }
@Test
public void test16260() { x = 0x8000000000000000l; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16261() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0x00000000000001f8l); }
@Test
public void test16262() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0x00000000000003f0l); }
@Test
public void test16263() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0x80000000000001f8l); }
@Test
public void test16264() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffffe08l; AssertJUnit.assertEquals("multiply", result, 0x998f64b1998f6668l); }
@Test
public void test16265() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0xfffff82000000fc0l); }
@Test
public void test16266() { x = 0x0000000080000000l; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0xfffff82000000000l); }
@Test
public void test16267() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0xfffff04000000fc0l); }
@Test
public void test16268() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0xffffe86000000fc0l); }
@Test
public void test16269() { x = 0x0000000180000000l; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0xffffe86000000000l); }
@Test
public void test16270() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0xffffe08000000fc0l); }
@Test
public void test16271() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0x000007e000000fc0l); }
@Test
public void test16272() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0x000007e000000000l); }
@Test
public void test16273() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0xffffe28ccc7b3340l); }
@Test
public void test16274() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0x0000020ccc7b3340l); }
@Test
public void test16275() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000fc0l); }
@Test
public void test16276() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0x000007e000000fc0l); }
@Test
public void test16277() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0x000007e000000000l); }
@Test
public void test16278() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0x0000020ccc7b3340l); }
@Test
public void test16279() { x = 0x8000000000000000l; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16280() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000fc0l); }
@Test
public void test16281() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0x0000000000001f80l); }
@Test
public void test16282() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000fc0l); }
@Test
public void test16283() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffff040l; AssertJUnit.assertEquals("multiply", result, 0xcc7b258ccc7b3340l); }
@Test
public void test16284() { x = 0x000000007fffffffl; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0xffff04000001f800l); }
@Test
public void test16285() { x = 0x0000000080000000l; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0xffff040000000000l); }
@Test
public void test16286() { x = 0x00000000ffffffffl; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0xfffe08000001f800l); }
@Test
public void test16287() { x = 0x000000017fffffffl; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0xfffd0c000001f800l); }
@Test
public void test16288() { x = 0x0000000180000000l; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0xfffd0c0000000000l); }
@Test
public void test16289() { x = 0x00000001ffffffffl; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0xfffc10000001f800l); }
@Test
public void test16290() { x = 0xffffffff7fffffffl; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0x0000fc000001f800l); }
@Test
public void test16291() { x = 0xffffffff80000000l; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0x0000fc0000000000l); }
@Test
public void test16292() { x = 0x00000001deadf00dl; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0xfffc51998f666800l); }
@Test
public void test16293() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0x000041998f666800l); }
@Test
public void test16294() { x = 0x7fffffffffffffffl; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0x000000000001f800l); }
@Test
public void test16295() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0x0000fc000001f800l); }
@Test
public void test16296() { x = 0x7fffffff80000000l; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0x0000fc0000000000l); }
@Test
public void test16297() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0x000041998f666800l); }
@Test
public void test16298() { x = 0x8000000000000000l; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16299() { x = 0xffffffffffffffffl; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0x000000000001f800l); }
@Test
public void test16300() { x = 0xfffffffffffffffel; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0x000000000003f000l); }
@Test
public void test16301() { x = 0xefffffffffffffffl; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0x000000000001f800l); }
@Test
public void test16302() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffffffffe0800l; AssertJUnit.assertEquals("multiply", result, 0x8f64b1998f666800l); }
@Test
public void test16303() { x = 0x000000007fffffffl; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f800000000l); }
@Test
public void test16304() { x = 0x0000000080000000l; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16305() { x = 0x00000000ffffffffl; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f800000000l); }
@Test
public void test16306() { x = 0x000000017fffffffl; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f800000000l); }
@Test
public void test16307() { x = 0x0000000180000000l; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16308() { x = 0x00000001ffffffffl; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f800000000l); }
@Test
public void test16309() { x = 0xffffffff7fffffffl; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f800000000l); }
@Test
public void test16310() { x = 0xffffffff80000000l; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16311() { x = 0x00000001deadf00dl; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x998f666800000000l); }
@Test
public void test16312() { x = 0xffffffffdeadf00dl; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x998f666800000000l); }
@Test
public void test16313() { x = 0x7fffffffffffffffl; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f800000000l); }
@Test
public void test16314() { x = 0x7fffffff7fffffffl; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f800000000l); }
@Test
public void test16315() { x = 0x7fffffff80000000l; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16316() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x998f666800000000l); }
@Test
public void test16317() { x = 0x8000000000000000l; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16318() { x = 0xffffffffffffffffl; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f800000000l); }
@Test
public void test16319() { x = 0xfffffffffffffffel; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000003f000000000l); }
@Test
public void test16320() { x = 0xefffffffffffffffl; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x000001f800000000l); }
@Test
public void test16321() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffffe0800000000l; AssertJUnit.assertEquals("multiply", result, 0x998f666800000000l); }
@Test
public void test16322() { x = 0x000000007fffffffl; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fc000000000l); }
@Test
public void test16323() { x = 0x0000000080000000l; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16324() { x = 0x00000000ffffffffl; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fc000000000l); }
@Test
public void test16325() { x = 0x000000017fffffffl; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fc000000000l); }
@Test
public void test16326() { x = 0x0000000180000000l; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16327() { x = 0x00000001ffffffffl; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fc000000000l); }
@Test
public void test16328() { x = 0xffffffff7fffffffl; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fc000000000l); }
@Test
public void test16329() { x = 0xffffffff80000000l; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16330() { x = 0x00000001deadf00dl; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0xcc7b334000000000l); }
@Test
public void test16331() { x = 0xffffffffdeadf00dl; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0xcc7b334000000000l); }
@Test
public void test16332() { x = 0x7fffffffffffffffl; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fc000000000l); }
@Test
public void test16333() { x = 0x7fffffff7fffffffl; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fc000000000l); }
@Test
public void test16334() { x = 0x7fffffff80000000l; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16335() { x = 0x7fffffffdeadf00dl; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0xcc7b334000000000l); }
@Test
public void test16336() { x = 0x8000000000000000l; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x0000000000000000l); }
@Test
public void test16337() { x = 0xffffffffffffffffl; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fc000000000l); }
@Test
public void test16338() { x = 0xfffffffffffffffel; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x00001f8000000000l); }
@Test
public void test16339() { x = 0xefffffffffffffffl; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0x00000fc000000000l); }
@Test
public void test16340() { x = 0xdeadf00ddeadf00dl; long result = x * 0xfffff04000000000l; AssertJUnit.assertEquals("multiply", result, 0xcc7b334000000000l); }

}
//#include <stdio.h>
//
//
//long long A[] = 
//   {
//   0x000000007fffffffull,
//   0x0000000080000000ull,
//   0x00000000ffffffffull,
//   0x000000017fffffffull,
//   0x0000000180000000ull,
//   0x00000001ffffffffull,
//   0xffffffff7fffffffull,
//   0xffffffff80000000ull,
//   0x00000001deadf00dull,
//   0xffffffffdeadf00dull,
//   0x7fffffffffffffffull,
//   0x7fffffff7fffffffull,
//   0x7fffffff80000000ull,
//   0x7fffffffdeadf00dull,
//   0x8000000000000000ull,
//   0xffffffffffffffffull,
//   0xfffffffffffffffeull,
//   0xefffffffffffffffull,   
//   0xdeadf00ddeadf00dull,
//   };
//
//int B[] =
//   {
//   1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20,
//   21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 41,
//   44, 45, 49, 51, 52, 53, 54, 55, 56, 59, 61, 67, 69, 70, 73, 74, 75, 79,
//   81, 82, 83, 90, 99, 102, 125, 225, 243, 250, 341, 342, 365, 375, 405, 487,
//   500, 625, 729, 750, 1000, 1125, 1250, 1461, 1500, 2000, 2250, 2500, 4500,
//   8189, 8195, 
//   0x88, 0x4002,/* sum of 2 powers of two */
//   0x60, 0x1f8 /* difference of 2 powers of 2 */
//   };
//
//int test = 0;
//
//void bar(long long b)
//   {
//   int i;
//   for (i = 0; i < sizeof(A)/sizeof(A[0]); i++)
//      {
//      long long a = A[i];
//      printf("public void test%05d() { x = 0x%016llxl; long result = x * 0x%llxl; assertEquals(\"multiply\", result, 0x%016llxl); }\n",
//             ++test, a, b, a*b);
//      }
//   }
//
//void foo(long long b)
//   {   
//   bar(b);
//   bar(b<<3);
//   bar(b<<8);
//   bar(b<<32);
//   bar(b<<35);
//   }
//
//int main()
//   {
//   int j;
//   for (j = 0; j < sizeof(B)/sizeof(B[0]); j++)
//      {
//      long long b = B[j];
//      foo(b);
//      foo(-b);
//      }
//   return 0;
//   }


