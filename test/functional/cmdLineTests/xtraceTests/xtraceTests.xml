<?xml version="1.0" encoding="UTF-8" standalone="no" ?>

<!--
	Copyright IBM Corp. and others 2025

	This program and the accompanying materials are made available under
	the terms of the Eclipse Public License 2.0 which accompanies this
	distribution and is available at https://www.eclipse.org/legal/epl-2.0/
	or the Apache License, Version 2.0 which accompanies this distribution and
	is available at https://www.apache.org/licenses/LICENSE-2.0.

	This Source Code may also be made available under the following
	Secondary Licenses when the conditions for such availability set
	forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
	General Public License, version 2 with the GNU Classpath
	Exception [1] and GNU General Public License, version 2 with the
	OpenJDK Assembly Exception [2].

	[1] https://www.gnu.org/software/classpath/license.html
	[2] https://openjdk.org/legal/assembly-exception.html

	SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
-->

<!DOCTYPE suite SYSTEM "cmdlinetester.dtd">

<suite id="xtrace commandline tests" timeout="120">

	<!-- These tests check -Xtrace is working correctly and error/warning messages are proper. -->
	<test id="Test 1 - invalid argument - 'a'">
		<command>$EXE$ -Xtrace:methods={java/lang/String.concat()},maxstringlength='a',print=mt -version</command>
		<output regex="no" type="success">Trace option unrecognized: -Xtrace:maxstringlength</output>
		<output regex="no" type="required">Error processing trace option, detail: maxstringlength takes an integer value from 0 to 128</output>
		<output regex="no" type="required">Error processing trace option, detail: Invalid character(s) encountered in decimal number</output>
	</test>

	<test id="Test 2 - out of range invalid argument - 129">
		<command>$EXE$ -Xtrace:methods={java/lang/String.concat()},maxstringlength=129,print=mt -version</command>
		<output regex="no" type="success">Trace option unrecognized: -Xtrace:maxstringlength</output>
		<output regex="no" type="required">Error processing trace option, detail: maxstringlength takes an integer value from 0 to 128</output>
		<output regex="no" type="required">Error processing trace option: -Xtrace:maxstringlength=129</output>
	</test>

	<test id="Test 3 - valid argument length 1" runPath=".">
		<command>$EXE$ -Xtrace:methods={java/lang/String.concat()},maxstringlength=1,print=mt -version</command>
		<output type="success" caseSensitive="no" regex="yes" javaUtilPattern="yes">(.)*method arguments: \(\(String\)"(\w)"\.{3}\)</output>
		<output type="success" caseSensitive="no" regex="yes" javaUtilPattern="yes">(java|openjdk|semeru) version</output>
	</test>

	<test id="Test 4 - valid argument length" runPath=".">
		<command>$EXE$ -Xtrace:methods={java/lang/String.concat()},maxstringlength=6,print=mt -version</command>
		<output type="success" caseSensitive="no" regex="yes" javaUtilPattern="yes">(.)*method arguments: \(\(String\)"(\w{6})"\.{3}\)</output>
		<output type="success" caseSensitive="no" regex="yes" javaUtilPattern="yes">(java|openjdk|semeru) version</output>
	</test>

	<test id="Test 5 - valid argument zero length - 0">
		<command>$EXE$ -Xtrace:methods={java/lang/String.concat()},maxstringlength=0,print=mt -version</command>
		<output type="success" caseSensitive="no" regex="yes" javaUtilPattern="yes">(.)*method arguments: \(\(String\)"([\x00-\x7F]{0,32})"\)</output>
		<output type="success" caseSensitive="no" regex="yes" javaUtilPattern="yes">(java|openjdk|semeru) version</output>
	</test>

	<test id="Test 6 - no argument">
		<command>$EXE$ -Xtrace:methods={java/lang/String.concat()},print=mt -version</command>
		<output type="success" caseSensitive="no" regex="yes" javaUtilPattern="yes">(.)*method arguments: \(\(String\)"([\x00-\x7F]{0,32})"\)</output>
		<output type="success" caseSensitive="no" regex="yes" javaUtilPattern="yes">(java|openjdk|semeru) version</output>
	</test>
</suite>
