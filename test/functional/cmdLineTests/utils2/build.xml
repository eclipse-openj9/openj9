<?xml version="1.0"?>
<!--
Copyright IBM Corp. and others 2019

This program and the accompanying materials are made available under
the terms of the Eclipse Public License 2.0 which accompanies this
distribution and is available at https://www.eclipse.org/legal/epl-2.0/
or the Apache License, Version 2.0 which accompanies this distribution and
is available at https://www.apache.org/licenses/LICENSE-2.0.

This Source Code may also be made available under the following
Secondary Licenses when the conditions for such availability set
forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
General Public License, version 2 with the GNU Classpath
Exception [1] and GNU General Public License, version 2 with the
OpenJDK Assembly Exception [2].

[1] https://www.gnu.org/software/classpath/license.html
[2] https://openjdk.org/legal/assembly-exception.html

SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
-->
<project name="utils2" default="build" basedir=".">
	<taskdef resource="net/sf/antcontrib/antlib.xml" />
	<description>
		Build utils2. It only contains the modified AnonClassAndUnsafeClassTest.java and the duplicated ClassTest.java which are used on the ShareClassesCMLTests-1 test 62-d.
	</description>

	<import file="${TEST_ROOT}/functional/cmdLineTests/buildTools.xml" />

	<!-- set properties for this build -->
	<property name="DEST" value="${BUILD_ROOT}/functional/cmdLineTests/utils2" />
	<property name="jarfile" value="${DEST}/utils2.jar" />
	<property name="src" location="src" />
	<property name="src_shared" location="../utils/src_shared" />
	<property name="build" location="bin" />

	<target name="init">
		<mkdir dir="${DEST}" />
		<mkdir dir="${build}" />
	</target>

	<target name="compile" depends="init" description="Using java ${JDK_VERSION} to compile the source">
		<echo>Ant version is ${ant.version}</echo>
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:                         yes</echo>
		<echo>===executable:                   ${compiler.javac}</echo>
		<echo>===debug:                        on</echo>
		<echo>===destdir:                      ${DEST}</echo>
		<if>
			<equals arg1="${JDK_VERSION}" arg2="8" />
			<then>
				<property name="src_access" location="${TEST_ROOT}/functional/UnsafeAccess/src" />
				<javac srcdir="${src}" destdir="${build}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${src_shared}" />
					<src path="${src_access}" />
					<classpath>
						<pathelement location="${LIB_DIR}/testng.jar" />
					</classpath>
				</javac>
			</then>
			<else>
				<if>
					<matches string="${JDK_VERSION}" pattern="^1[1-6]$$" />
					<then>
						<!-- Java 11-16 -->
						<property name="src_access" location="${TEST_ROOT}/functional/UnsafeAccess/src_110" />
					</then>
					<else>
						<!-- Java 17+ -->
						<property name="src_access" location="${TEST_ROOT}/functional/UnsafeAccess/src_170" />
					</else>
				</if>
				<javac srcdir="${src}" destdir="${build}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${src_shared}" />
					<src path="${src_access}" />
					<classpath>
						<pathelement location="${LIB_DIR}/testng.jar" />
					</classpath>
					<compilerarg value="--add-exports" />
					<compilerarg value="java.base/jdk.internal.misc=ALL-UNNAMED" />
				</javac>
			</else>
		</if>
	</target>

	<target name="dist" depends="compile" description="generate the distribution">
		<jar jarfile="${jarfile}" filesonly="true">
			<fileset dir="${build}" />
			<fileset dir="${src}" />
		</jar>
		<copy todir="${DEST}">
			<fileset dir="${src}/../" includes="*.xml" />
			<fileset dir="${src}/../" includes="*.mk" />
		</copy>
	</target>

	<target name="clean" depends="dist" description="clean up">
		<!-- Delete the ${build} directory trees -->
		<delete dir="${build}" />
	</target>

	<target name="check-jar">
		<available file="${jarfile}" property="jar.exist" />
	</target>

	<target name="build" depends="check-jar" unless="jar.exist">
		<if>
			<or>
				<equals arg1="${JDK_IMPL}" arg2="ibm" />
				<equals arg1="${JDK_IMPL}" arg2="openj9" />
			</or>
			<then>
				<antcall target="clean" inheritall="true" />
			</then>
		</if>
	</target>
</project>
