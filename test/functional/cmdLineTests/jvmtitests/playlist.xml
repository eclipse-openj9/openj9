<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright (c) 2016, 2019 IBM Corp. and others

  This program and the accompanying materials are made available under
  the terms of the Eclipse Public License 2.0 which accompanies this
  distribution and is available at https://www.eclipse.org/legal/epl-2.0/
  or the Apache License, Version 2.0 which accompanies this distribution and
  is available at https://www.apache.org/licenses/LICENSE-2.0.

  This Source Code may also be made available under the following
  Secondary Licenses when the conditions for such availability set
  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
  General Public License, version 2 with the GNU Classpath
  Exception [1] and GNU General Public License, version 2 with the
  OpenJDK Assembly Exception [2].

  [1] https://www.gnu.org/software/classpath/license.html
  [2] http://openjdk.java.net/legal/assembly-exception.html

  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
-->

<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../TestConfig/playlist.xsd">
	<test>
		<testCaseName>cmdLineTester_jvmtitests</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode148</variation>
			<variation>Mode149</variation>
			<variation>Mode201</variation>
			<variation>Mode301</variation>
			<variation>Mode351</variation>
			<variation>Mode501</variation>
			<variation>Mode551</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) -Xshareclasses:none \
	-DTEST_ROOT=$(Q)$(TEST_RESROOT)$(Q) \
	-DJAR=$(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(Q) \
	-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump $(SQ) \
	-DMODE_HINTS=$(Q)$(MODE_HINTS)$(Q) \
	-jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)jvmtitests.xml$(Q) \
	-explainExcludes \
	-xids all,$(PLATFORM),$(JCL_VERSION) -xlist $(Q)$(TEST_RESROOT)$(D)jvmtitests_excludes_$(JDK_VERSION).xml$(Q) -nonZeroExitWhenError; \
	${TEST_STATUS}</command>
		<platformRequirements>^arch.390</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<types>
			<type>native</type>
		</types>
		<aot>explicit</aot>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>cmdLineTester_jvmtitests_hcr_SE80</testCaseName>
		<variations>
			<variation>Mode100</variation>
			<variation>Mode101</variation>
			<variation>Mode110</variation>
			<variation>Mode112</variation>
			<variation>Mode148</variation>
			<variation>Mode201</variation>
			<variation>Mode301</variation>
			<variation>Mode351</variation>
			<variation>Mode551</variation>
			<variation>Mode501</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-DTEST_ROOT=$(Q)$(TEST_RESROOT)$(Q) \
	-DJAR=$(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump $(SQ) \
	-DEXTRA_Add_OPEN_OPTION=$(SQ) $(SQ) \
	-jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)jvmtitests_hcr.xml$(Q) \
	-explainExcludes -xids all,$(PLATFORM) -xlist $(Q)$(TEST_RESROOT)$(D)jvmtitests_excludes_$(JDK_VERSION).xml$(Q) -nonZeroExitWhenError; \
	${TEST_STATUS}</command>
		<platformRequirements>^arch.390</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<types>
			<type>native</type>
		</types>
		<subsets>
			<subset>8</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>cmdLineTester_jvmtitests_hcr</testCaseName>
		<variations>
			<variation>Mode100</variation>
			<variation>Mode101</variation>
			<variation>Mode110</variation>
			<variation>Mode112</variation>
			<variation>Mode148</variation>
			<variation>Mode201</variation>
			<variation>Mode301</variation>
			<variation>Mode351</variation>
			<variation>Mode551</variation>
			<variation>Mode501</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-DTEST_ROOT=$(Q)$(TEST_RESROOT)$(Q) \
	-DJAR=$(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump $(SQ) \
	-DEXTRA_Add_OPEN_OPTION=$(SQ)--add-opens=java.base/java.lang.reflect=ALL-UNNAMED$(SQ) \
	-jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)jvmtitests_hcr.xml$(Q) \
	-explainExcludes -xids all,$(PLATFORM) -xlist $(Q)$(TEST_RESROOT)$(D)jvmtitests_excludes_$(JDK_VERSION).xml$(Q) -nonZeroExitWhenError; \
	${TEST_STATUS}</command>
		<platformRequirements>^arch.390</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<types>
			<type>native</type>
		</types>
		<subsets>
			<subset>11+</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>cmdLineTester_jvmtitests_debug</testCaseName>
		<variations>
			<variation>Mode100</variation>
			<variation>Mode107</variation>
			<variation>Mode108</variation>
			<variation>Mode154</variation>
			<variation>Mode307</variation>
			<variation>Mode357</variation>
			<variation>Mode507</variation>
			<variation>Mode557</variation>
			<variation>Mode607</variation>
			<variation>Mode608</variation>
			<variation>Mode107-OSR</variation>
			<variation>Mode607-OSR</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-DTEST_ROOT=$(Q)$(TEST_RESROOT)$(Q) \
	-DJAR=$(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump $(SQ) \
	-jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)jvmtitests_extended.xml$(Q) \
	-explainExcludes -xids all,$(PLATFORM) -xlist $(Q)$(TEST_RESROOT)$(D)jvmtitests_excludes_$(JDK_VERSION).xml$(Q) -nonZeroExitWhenError; \
	${TEST_STATUS}</command>
		<platformRequirements>^arch.390</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<types>
			<type>native</type>
		</types>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>cmdLineTester_jvmtitests_nongold</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode148</variation>
			<variation>Mode149</variation>
			<variation>Mode201</variation>
			<variation>Mode301</variation>
			<variation>Mode351</variation>
			<variation>Mode501</variation>
			<variation>Mode551</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) -Xshareclasses:none \
	-DTEST_ROOT=$(Q)$(TEST_RESROOT)$(Q) \
	-DJAR=$(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(Q) \
	-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump $(SQ) \
	-DMODE_HINTS=$(Q)$(MODE_HINTS)$(Q) \
	-jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)jvmtitests.xml$(Q) \
	-explainExcludes \
	-xids all,$(PLATFORM),$(JCL_VERSION) -xlist $(Q)$(TEST_RESROOT)$(D)jvmtitests_excludes_$(JDK_VERSION).xml$(Q) -nonZeroExitWhenError; \
	${TEST_STATUS}</command>
		<platformRequirements>arch.390</platformRequirements>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<types>
			<type>native</type>
		</types>
		<aot>explicit</aot>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>


	<test>
		<testCaseName>cmdLineTester_fieldwatchtests</testCaseName>
		<variations>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) -Xshareclasses:none \
	-DTEST_ROOT=$(Q)$(TEST_RESROOT)$(Q) \
	-DJAR=$(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(Q) \
	-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump $(SQ) \
	-DMODE_HINTS=$(Q)$(MODE_HINTS)$(Q) \
	-jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)fieldwatchtests.xml$(Q) \
	-explainExcludes \
	-xids all,$(PLATFORM),$(JCL_VERSION) -xlist $(Q)$(TEST_RESROOT)$(D)jvmtitests_excludes_$(JDK_VERSION).xml$(Q) -nonZeroExitWhenError; \
	${TEST_STATUS}</command>
		<platformRequirements>^arch.arm</platformRequirements>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<types>
			<type>native</type>
		</types>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>


	<test>
		<testCaseName>cmdLineTester_jvmtitests_hcr_nongold_SE80</testCaseName>
		<variations>
			<variation>Mode100</variation>
			<variation>Mode101</variation>
			<variation>Mode110</variation>
			<variation>Mode112</variation>
			<variation>Mode148</variation>
			<variation>Mode201</variation>
			<variation>Mode301</variation>
			<variation>Mode351</variation>
			<variation>Mode551</variation>
			<variation>Mode501</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-DTEST_ROOT$(Q)$(TEST_RESROOT)$(Q) \
	-DJAR=$(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump $(SQ) \
	-DEXTRA_Add_OPEN_OPTION=$(SQ) $(SQ) \
	-jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)jvmtitests_hcr.xml$(Q) \
	-explainExcludes -xids all,$(PLATFORM) -xlist $(Q)$(TEST_RESROOT)$(D)jvmtitests_excludes_$(JDK_VERSION).xml$(Q) -nonZeroExitWhenError; \
	${TEST_STATUS}</command>
		<platformRequirements>arch.390</platformRequirements>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<types>
			<type>native</type>
		</types>
		<subsets>
			<subset>8</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>cmdLineTester_jvmtitests_hcr_nongold</testCaseName>
		<variations>
			<variation>Mode100</variation>
			<variation>Mode101</variation>
			<variation>Mode110</variation>
			<variation>Mode112</variation>
			<variation>Mode148</variation>
			<variation>Mode201</variation>
			<variation>Mode301</variation>
			<variation>Mode351</variation>
			<variation>Mode551</variation>
			<variation>Mode501</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-DTEST_ROOT$(Q)$(TEST_RESROOT)$(Q) \
	-DJAR=$(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump $(SQ) \
	-DEXTRA_Add_OPEN_OPTION=$(SQ)--add-opens=java.base/java.lang.reflect=ALL-UNNAMED$(SQ) \
	-jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)jvmtitests_hcr.xml$(Q) \
	-explainExcludes -xids all,$(PLATFORM) -xlist $(Q)$(TEST_RESROOT)$(D)jvmtitests_excludes_$(JDK_VERSION).xml$(Q) -nonZeroExitWhenError; \
	${TEST_STATUS}</command>
		<platformRequirements>arch.390</platformRequirements>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<types>
			<type>native</type>
		</types>
		<subsets>
			<subset>11+</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>


	<test>
		<testCaseName>cmdLineTester_jvmtitests_hcr_OSRG_nongold_SE80</testCaseName>
		<variations>
			<variation>Mode107-OSRG</variation>
			<variation>Mode110-OSRG</variation>
			<variation>Mode607-OSRG</variation>
			<variation>Mode610-OSRG</variation>
			<variation>Mode612-OSRG</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-DTEST_ROOT$(Q)$(TEST_RESROOT)$(Q) \
	-DJAR=$(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump $(SQ) \
	-DEXTRA_Add_OPEN_OPTION=$(SQ) $(SQ) \
	-jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)jvmtitests_hcr.xml$(Q) \
	-explainExcludes -xids all,$(PLATFORM) -xlist $(Q)$(TEST_RESROOT)$(D)jvmtitests_excludes_$(JDK_VERSION).xml$(Q) -nonZeroExitWhenError; \
	${TEST_STATUS}</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<types>
			<type>native</type>
		</types>
		<subsets>
			<subset>8</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>cmdLineTester_jvmtitests_hcr_OSRG_nongold</testCaseName>
		<variations>
			<variation>Mode107-OSRG</variation>
			<variation>Mode110-OSRG</variation>
			<variation>Mode607-OSRG</variation>
			<variation>Mode610-OSRG</variation>
			<variation>Mode612-OSRG</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-DTEST_ROOT$(Q)$(TEST_RESROOT)$(Q) \
	-DJAR=$(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump $(SQ) \
	-DEXTRA_Add_OPEN_OPTION=$(SQ)--add-opens=java.base/java.lang.reflect=ALL-UNNAMED$(SQ) \
	-jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)jvmtitests_hcr.xml$(Q) \
	-explainExcludes -xids all,$(PLATFORM) -xlist $(Q)$(TEST_RESROOT)$(D)jvmtitests_excludes_$(JDK_VERSION).xml$(Q) -nonZeroExitWhenError; \
	${TEST_STATUS}</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<types>
			<type>native</type>
		</types>
		<subsets>
			<subset>11+</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>cmdLineTester_jvmtitests_extended_nongold</testCaseName>
		<variations>
			<variation>Mode100</variation>
			<variation>Mode107</variation>
			<variation>Mode108</variation>
			<variation>Mode154</variation>
			<variation>Mode307</variation>
			<variation>Mode357</variation>
			<variation>Mode507</variation>
			<variation>Mode557</variation>
			<variation>Mode607</variation>
			<variation>Mode608</variation>
			<variation>Mode107-OSR</variation>
			<variation>Mode607-OSR</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-DTEST_ROOT$(Q)$(TEST_RESROOT)$(Q) \
	-DJAR=$(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump $(SQ) \
	-jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)jvmtitests_extended.xml$(Q) \
	-explainExcludes -xids all,$(PLATFORM) -xlist $(Q)$(TEST_RESROOT)$(D)jvmtitests_excludes_$(JDK_VERSION).xml$(Q) -nonZeroExitWhenError; \
	${TEST_STATUS}</command>
		<platformRequirements>arch.390</platformRequirements>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<types>
			<type>native</type>
		</types>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>cmdLineTester_decompilationTests</testCaseName>
		<variations>
			<variation>Mode112-OSR</variation>
			<variation>Mode612-OSR</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-DTEST_ROOT$(Q)$(TEST_RESROOT)$(Q) \
	-DJAR=$(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(Q) \
	-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump -Xgcthreads1 $(SQ) \
	-jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)decompilationtests.xml$(Q) \
	-explainExcludes -xids all,linux_ppc -xlist $(Q)$(TEST_RESROOT)$(D)jvmtitests_excludes_$(JDK_VERSION).xml$(Q) -verbose -nonZeroExitWhenError; \
	${TEST_STATUS}</command>
		<platformRequirements>^arch.arm</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<types>
			<type>native</type>
		</types>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>cmdLineTester_decompilationTests_nongold</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode301</variation>
			<variation>Mode351</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-DTEST_ROOT$(Q)$(TEST_RESROOT)$(Q) \
	-DJAR=$(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(Q) \
	-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump -Xgcthreads1 $(SQ) \
	-jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)decompilationtests.xml$(Q) \
	-explainExcludes -xids all,linux_ppc -xlist $(Q)$(TEST_RESROOT)$(D)jvmtitests_excludes_$(JDK_VERSION).xml$(Q) -verbose -nonZeroExitWhenError; \
	${TEST_STATUS}</command>
		<platformRequirements>^arch.arm</platformRequirements>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<types>
			<type>native</type>
		</types>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>decompileAtMethodResolve</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-XXdecomp:forceDecompile $(Q)-Xjit:count=0,limit={*.test*},rtresolve$(Q) -Xrunjdwp:transport=dt_socket,address=8888,server=y,onthrow=no.pkg.foo,launch=echo \
	-cp $(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(Q) com.ibm.jvmti.tests.decompileAtMethodResolve.ResolveTest; \
	${TEST_STATUS}</command>
		<platformRequirements>^arch.arm</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
	<test>
		<testCaseName>cmdLineTester_jvmtitests_soae</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode148</variation>
			<variation>Mode149</variation>
			<variation>Mode610</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	$(JAVA_COMMAND) $(JVM_OPTIONS) -Xshareclasses:none \
	-DTEST_ROOT=$(Q)$(TEST_RESROOT)$(Q) \
	-DJAR=$(Q)$(TEST_RESROOT)$(D)jvmtitest.jar$(Q) \
	-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump $(SQ) \
	-DMODE_HINTS=$(Q)$(MODE_HINTS)$(Q) \
	-jar $(CMDLINETESTER_JAR) \
	-config $(Q)$(TEST_RESROOT)$(D)jvmtitests_soae.xml$(Q) \
	-explainExcludes \
	-xids all,$(PLATFORM),$(JCL_VERSION) -xlist $(Q)$(TEST_RESROOT)$(D)jvmtitests_excludes_$(JDK_VERSION).xml$(Q) -nonZeroExitWhenError; \
	${TEST_STATUS}</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<types>
			<type>native</type>
		</types>
		<subsets>
			<subset>11+</subset>
		</subsets>
		<aot>explicit</aot>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>
</playlist>
