<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright (c) 2016, 2019 IBM Corp. and others

  This program and the accompanying materials are made available under
  the terms of the Eclipse Public License 2.0 which accompanies this
  distribution and is available at https://www.eclipse.org/legal/epl-2.0/
  or the Apache License, Version 2.0 which accompanies this distribution and
  is available at https://www.apache.org/licenses/LICENSE-2.0.

  This Source Code may also be made available under the following
  Secondary Licenses when the conditions for such availability set
  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
  General Public License, version 2 with the GNU Classpath
  Exception [1] and GNU General Public License, version 2 with the
  OpenJDK Assembly Exception [2].

  [1] https://www.gnu.org/software/classpath/license.html
  [2] http://openjdk.java.net/legal/assembly-exception.html

  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
-->

<project name="JVMTI tests" default="build" basedir=".">
	<taskdef resource='net/sf/antcontrib/antlib.xml' />
	<description>
		Build JVMTI tests
	</description>

	<!-- set global properties for this build -->
	<property name="DEST" value="${BUILD_ROOT}/functional/cmdLineTests/jvmtitests" />
	<property name="src" location="./src"/>
	<property name="src_current" location="./src_current"/>
	<property name="src_latest" location="./src_latest"/>
	<property name="src_80" location="./src_80"/>
	<property name="src_90" location="./src_90"/>
	<property name="build" location="./bin"/>
	<property name="asm.jar" location="${TEST_ROOT}/TestConfig/lib/asm-all.jar" />

	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${DEST}" />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<echo>Ant version is ${ant.version}</echo>
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:                         yes</echo>
		<echo>===executable:                   ${compiler.javac}</echo>
		<echo>===debug:                        on</echo>
		<echo>===destdir:                      ${build}</echo>

		<if>
			<equals arg1="${JDK_VERSION}" arg2="8"/>
			<then>
				<javac destdir="${build}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${src}" />
					<src path="${src_80}"/>
					<classpath>
						<pathelement location="${asm.jar}" />
						<pathelement location="${TEST_JDK_HOME}/lib/tools.jar" />
					</classpath>
				</javac>
			</then>
			<else>
				<property name="addExports" value="--add-exports java.base/jdk.internal.module=ALL-UNNAMED --add-exports java.base/com.ibm.tools.attach.target=ALL-UNNAMED --add-exports java.base/com.ibm.tools.attach=ALL-UNNAMED --add-exports=java.base/jdk.internal.misc=ALL-UNNAMED" />
				<if>
					<equals arg1="${JCL_VERSION}" arg2="latest"/>
					<then>
						<property name="extraSrc" value="${src_latest}" />
						<property name="excludeFile" value="**/modularityTests/**" />
					</then>
					<else>
						<property name="extraSrc" value="${src_current}" />
						<property name="excludeFile" value="" />
					</else>
				</if>
				<javac destdir="${build}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${src}"/>
					<src path="${src_90}"/>
					<src path="${extraSrc}"/>
					<exclude name="${excludeFile}" />
					<compilerarg line="${addExports}" />
					<classpath>
						<pathelement location="${asm.jar}" />
					</classpath>
				</javac>
			</else>
		</if>

		<!-- Compile VersionedClass separately -->
		<copy file="${src}/com/ibm/jvmti/tests/getClassVersionNumbers/VersionedClass.java.dont_auto_compile"
			tofile="${build}/com/ibm/jvmti/tests/getClassVersionNumbers/VersionedClass/VersionedClass.java"/>
		<!-- If you modified the source and target level in this javac, you also need to modify the corresponding java class version
		in /cmdLineTests/jvmtitests/src/com/ibm/jvmti/tests/getClassVersionNumbers/gcvn001.java -->
		<javac srcdir="${build}" destdir="${build}" includes="com/ibm/jvmti/tests/getClassVersionNumbers/VersionedClass/VersionedClass.java"
			debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" source="1.8" target="1.8" encoding="ISO-8859-1" />

	</target>

	<target name="dist" depends="compile" description="generate the distribution">
		<!-- Store all class files, and .c files in com.ibm.jvmti.tests.jar -->
		<mkdir dir="${DEST}" />

		<copy todir="${DEST}">
			<fileset dir="${src}/../" includes="*.xml, jars/" />
			<fileset dir="${src}/../" includes="*.mk" />
		</copy>

		<!-- Generate getClassVersionNumbers.jar file and delete the class file of VersionedClass -->
		<jar jarfile="${DEST}/jars/getClassVersionNumbers.jar" basedir="${build}" filesonly="true"
			includes="com/ibm/jvmti/tests/getClassVersionNumbers/VersionedClass/VersionedClass.class" />
		<delete file="${build}/com/ibm/jvmti/tests/getClassVersionNumbers/VersionedClass/VersionedClass.class" />

		<!-- Generate general jvmtitest jar -->
		<jar jarfile="${DEST}/jvmtitest.jar" filesonly="true">
			<fileset dir="${build}" />
			<fileset dir="${src}" excludes="**/*.java, **/package.htm*" />
			<fileset dir="${src}/../" includes="*.properties,*.xml" />
		</jar>
	</target>

	<target name="clean" depends="dist" description="clean up">
		<!-- Delete the ${build} directory trees -->
		<delete dir="${build}" />
	</target>

	<target name="build" >
		<if>
			<or>
				<equals arg1="${JDK_IMPL}" arg2="ibm"  />
				<equals arg1="${JDK_IMPL}" arg2="openj9" />
			</or>
			<then>
				<antcall target="clean" inheritall="true" />
			</then>
		</if>
	</target>
</project>
