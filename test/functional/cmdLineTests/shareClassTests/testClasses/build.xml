<?xml version="1.0"?>

<!--
  Copyright (c) 2016, 2019 IBM Corp. and others

  This program and the accompanying materials are made available under
  the terms of the Eclipse Public License 2.0 which accompanies this
  distribution and is available at https://www.eclipse.org/legal/epl-2.0/
  or the Apache License, Version 2.0 which accompanies this distribution and
  is available at https://www.apache.org/licenses/LICENSE-2.0.

  This Source Code may also be made available under the following
  Secondary Licenses when the conditions for such availability set
  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
  General Public License, version 2 with the GNU Classpath
  Exception [1] and GNU General Public License, version 2 with the
  OpenJDK Assembly Exception [2].

  [1] https://www.gnu.org/software/classpath/license.html
  [2] http://openjdk.java.net/legal/assembly-exception.html

  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
-->

<project name="testClasses" default="build" basedir=".">
	<taskdef resource='net/sf/antcontrib/antlib.xml'/>
	
	<description>
       Build sharedClass testClasses  
    </description>

	<!--Properties for this particular build-->
	<property name="build" location="build" />
	<property name="sharedClassTestClasses_srddir" value="../testClasses/" />
	<property name="SharedClassUtils_srddir" value="../utils/src/" />
	
	<property name="DEST" value="${BUILD_ROOT}/functional/cmdLineTests/shareClassTests/testClasses" />

	<!-- on zos, ant <copy> does not keep file tag. Therefore, ant copied files 
	cannot be read by javac. Preset javac with encoding="ISO-8859-1" so that files 
	without proper tagging can be read.
	-->
	<presetdef name="javac">
		<javac encoding="ISO-8859-1" />
	</presetdef>

	<target name="AddTestClassesToPackage">
		<!-- create the folders -->
		<mkdir dir="${build}/Alphabet" />
		<mkdir dir="${build}/AlphabetJar" />
		<mkdir dir="${build}/Animals" />
		<mkdir dir="${build}/AnimalsJar" />
		<mkdir dir="${build}/BallSports" />
		<mkdir dir="${build}/DuplicateOrphansTest" />
		<mkdir dir="${build}/DuplicateOrphansTest/temp" />
		<mkdir dir="${build}/EmptyDirectory" />
		<mkdir dir="${build}/Food" />
		<mkdir dir="${build}/FoodJar" />
		<mkdir dir="${build}/Pets" />
		<mkdir dir="${build}/Pudding" />
		<mkdir dir="${build}/Sports" />
		<mkdir dir="${build}/SportsJar" />
		<mkdir dir="${build}/StaleOrphansTest" />
		<mkdir dir="${build}/StaleOrphansTest/temp" />
		<mkdir dir="${build}/StaleOrphansTest1" />
		<mkdir dir="${build}/tempfiles" />
		<mkdir dir="${build}/Vowels" />

		<!-- some tests depend on .java being present -->
		<copy todir="${build}/Alphabet">
			<fileset dir="${sharedClassTestClasses_srddir}/Alphabet"/>
		</copy>
		<copy todir="${build}/AlphabetJar">
			<fileset dir="${sharedClassTestClasses_srddir}/AlphabetJar"/>
		</copy>
		<copy todir="${build}/Animals">
			<fileset dir="${sharedClassTestClasses_srddir}/Animals"/>
		</copy>
		<copy todir="${build}/BallSports">
			<fileset dir="${sharedClassTestClasses_srddir}/BallSports"/>
		</copy>
		<copy todir="${build}/DuplicateOrphansTest">
			<fileset dir="${sharedClassTestClasses_srddir}/DuplicateOrphansTest"/>
		</copy>
		<copy todir="${build}/DuplicateOrphansTest/temp">
			<fileset dir="${sharedClassTestClasses_srddir}/DuplicateOrphansTest/temp"/>
		</copy>
		<copy todir="${build}/EmptyDirectory">
			<fileset dir="${sharedClassTestClasses_srddir}/Sports" includes="*.props"/>			
		</copy>
		<copy todir="${build}/Food">
			<fileset dir="${sharedClassTestClasses_srddir}/Food"/>
		</copy>
		<copy todir="${build}/FoodJar">
			<fileset dir="${sharedClassTestClasses_srddir}/FoodJar"/>
		</copy>		
		<copy todir="${build}/Pets">
			<fileset dir="${sharedClassTestClasses_srddir}/Pets"/>
		</copy>	
		<copy todir="${build}/Pudding">
			<fileset dir="${sharedClassTestClasses_srddir}/Pudding"/>
		</copy>		
		<copy todir="${build}/Sports">
			<fileset dir="${sharedClassTestClasses_srddir}/Sports"/>
		</copy>		
		<copy todir="${build}/SportsJar">
			<fileset dir="${sharedClassTestClasses_srddir}/SportsJar"/>
		</copy>	
		<copy todir="${build}/StaleOrphansTest">
			<fileset dir="${sharedClassTestClasses_srddir}/StaleOrphansTest"/>
		</copy>			
		<copy todir="${build}/StaleOrphansTest/temp">
			<fileset dir="${sharedClassTestClasses_srddir}/StaleOrphansTest/temp"/>
		</copy>			
		<copy todir="${build}/StaleOrphansTest1">
			<fileset dir="${sharedClassTestClasses_srddir}/StaleOrphansTest1"/>
		</copy>			
		<copy todir="${build}/SportsJar">
			<fileset dir="${sharedClassTestClasses_srddir}/SportsJar"/>
		</copy>			
		<copy todir="${build}/Vowels">
			<fileset dir="${sharedClassTestClasses_srddir}/Vowels"/>
		</copy>			

		<!-- compile sources -->
		<if>
			<equals arg1="${JDK_VERSION}" arg2="8"/>
			<then>
				<javac srcdir="${sharedClassTestClasses_srddir}/Alphabet" classpath="${build}:" destdir="${build}/Alphabet" fork="true" executable="${compiler.javac}" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}AlphabetJar" classpath="${build}" destdir="${build}/AlphabetJar" fork="true" executable="${compiler.javac}" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>

				<jar destfile="${build}/AlphabetJar/Alphabet.jar" basedir="${build}/AlphabetJar/" includes="*.class" duplicate="fail"/>
				<delete dir="${build}/AlphabetJar/" excludes="*.jar,*.java" />

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}Animals" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/Animals" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}AnimalsJar" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/AnimalsJar" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>

				<jar destfile="${build}/AnimalsJar/Animals.jar" basedir="${build}/AnimalsJar/" includes="*.class" duplicate="fail"/>
				<delete dir="${build}/AnimalsJar/" excludes="*.jar,*.java" />

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}BallSports" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/BallSports" debug="on">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}DuplicateOrphansTest" excludes="temp/DuplicateOrphan.java" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/DuplicateOrphansTest" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}Food" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/Food" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}FoodJar" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/FoodJar" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>

				<jar destfile="${build}/FoodJar/Food.jar" basedir="${build}/FoodJar/" includes="*.class" duplicate="fail"/>
				<delete dir="${build}/FoodJar/" excludes="*.jar,*.java" />

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}Pets" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/Pets" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}Pudding" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/Pudding" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}Sports" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/Sports" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}SportsJar" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/SportsJar" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>
				
				<jar destfile="${build}/SportsJar/Sports.jar" basedir="${build}/SportsJar/" includes="*.class" duplicate="fail"/>
				<delete dir="${build}/SportsJar/" excludes="*.jar,*.java" />

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}StaleOrphansTest" excludes="**/*.java" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/StaleOrphansTest" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}StaleOrphansTest/temp" excludes="**/*.java" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/StaleOrphansTest/temp" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}StaleOrphansTest1" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/StaleOrphansTest1" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}Vowels" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/Vowels" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
				</javac>
			</then>
			<else>
				<property name="addExports" value="--add-modules openj9.sharedclasses --add-exports java.base/com.ibm.oti.util=ALL-UNNAMED" />

				<javac srcdir="${sharedClassTestClasses_srddir}/Alphabet" classpath="${build}:" destdir="${build}/Alphabet" fork="true" executable="${compiler.javac}" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}AlphabetJar" classpath="${build}" destdir="${build}/AlphabetJar" fork="true" executable="${compiler.javac}" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>

				<jar destfile="${build}/AlphabetJar/Alphabet.jar" basedir="${build}/AlphabetJar/" includes="*.class" duplicate="fail"/>
				<delete dir="${build}/AlphabetJar/" excludes="*.jar,*.java" />

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}Animals" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/Animals" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}AnimalsJar" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/AnimalsJar" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>

				<jar destfile="${build}/AnimalsJar/Animals.jar" basedir="${build}/AnimalsJar/" includes="*.class" duplicate="fail"/>
				<delete dir="${build}/AnimalsJar/" excludes="*.jar,*.java" />

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}BallSports" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/BallSports" debug="on">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}DuplicateOrphansTest" excludes="temp/DuplicateOrphan.java" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/DuplicateOrphansTest" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}Food" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/Food" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}FoodJar" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/FoodJar" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>

				<jar destfile="${build}/FoodJar/Food.jar" basedir="${build}/FoodJar/" includes="*.class" duplicate="fail"/>
				<delete dir="${build}/FoodJar/" excludes="*.jar,*.java" />

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}Pets" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/Pets" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}Pudding" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/Pudding" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}Sports" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/Sports" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}SportsJar" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/SportsJar" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>
				
				<jar destfile="${build}/SportsJar/Sports.jar" basedir="${build}/SportsJar/" includes="*.class" duplicate="fail"/>
				<delete dir="${build}/SportsJar/" excludes="*.jar,*.java" />

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}StaleOrphansTest" excludes="**/*.java" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/StaleOrphansTest" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}StaleOrphansTest/temp" excludes="**/*.java" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/StaleOrphansTest/temp" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}StaleOrphansTest1" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/StaleOrphansTest1" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>

				<javac srcdir="${sharedClassTestClasses_srddir}/${sharedClassTestClasses_srddir}Vowels" classpath="${build}" fork="true" executable="${compiler.javac}" destdir="${build}/Vowels" debug="on" debuglevel="lines,vars,source">
					<src path="${SharedClassUtils_srddir}"/>
					<compilerarg line='${addExports}' />
				</javac>
			</else>
		</if>
			
		<copy todir="${build}/tempfiles">
			<fileset dir="${build}/Sports" includes="*.class"/>			
		</copy>
		<copy file="${build}/DuplicateOrphansTest/DuplicateOrphan.class" 
			  tofile="${build}/DuplicateOrphansTest/temp/DuplicateOrphan.class">
		</copy>	
		
		<jar destfile="${build}/tempfiles/copiedJar.jar" basedir="${build}/tempfiles/" includes="*.class" duplicate="fail"/>
		<jar destfile="${build}/tempfiles/copiedJar2.jar" basedir="${build}/tempfiles/" includes="*.class" duplicate="fail"/>
		<delete dir="${build}/tempfiles" includes="*.class" />
	</target>
	
	<target name="dist" depends="AddTestClassesToPackage" description="generate the distribution" >
		<copy todir="${build}">
			<fileset dir="./" includes="*.xml,*.java,*.jar"/>
		</copy>	
		<mkdir dir="${DEST}"/>
	    <jar jarfile="${DEST}/SharedClassesTestClasses.jar" filesonly="true">
			<fileset dir="${build}"/>
		</jar>
  	</target>
	
	<target name="clean" depends="dist" description="clean up">
		<!-- Delete the ${build} directory trees -->
		<delete dir="${build}" />
	</target>

	<target name="build" >
		<if>
			<or>
				<equals arg1="${JDK_IMPL}" arg2="ibm"  />
				<equals arg1="${JDK_IMPL}" arg2="openj9" />
			</or>
			<then>
				<antcall target="clean" inheritall="true" />
			</then>
		</if>
	</target>
</project>
