<?xml version='1.0' encoding='UTF-8'?>
<!--
  Copyright (c) 2022, 2023 IBM Corp. and others

  This program and the accompanying materials are made available under
  the terms of the Eclipse Public License 2.0 which accompanies this
  distribution and is available at https://www.eclipse.org/legal/epl-2.0/
  or the Apache License, Version 2.0 which accompanies this distribution and
  is available at https://www.apache.org/licenses/LICENSE-2.0.

  This Source Code may also be made available under the following
  Secondary Licenses when the conditions for such availability set
  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
  General Public License, version 2 with the GNU Classpath
  Exception [1] and GNU General Public License, version 2 with the
  OpenJDK Assembly Exception [2].

  [1] https://www.gnu.org/software/classpath/license.html
  [2] https://openjdk.org/legal/assembly-exception.html

  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
-->
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../TKG/playlist.xsd">
	<test>
		<testCaseName>cmdLineTester_criu</testCaseName>
		<variations>
			<variation>-Xjit</variation>
			<variation>-Xint</variation>
			<variation>-Xjit:count=0</variation>
		</variations>
		<disables>
			<disable>
				<comment>https://github.com/eclipse-openj9/openj9/issues/15584</comment>
			</disable>
		</disables>
		<command>
			$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump \
			-DSCRIPPATH=$(TEST_RESROOT)$(D)criuScript.sh -DTEST_RESROOT=$(TEST_RESROOT) \
			-DJAVA_COMMAND=$(JAVA_COMMAND) -DJVM_OPTIONS=$(SQ)$(JVM_OPTIONS)$(SQ) \
			-jar $(CMDLINETESTER_JAR) -config $(Q)$(TEST_RESROOT)$(D)criu.xml$(Q) \
			-explainExcludes -xids all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
			$(TEST_STATUS)
		</command>
		<features>
			<feature>CRIU:required</feature>
		</features>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	<test>
		<testCaseName>cmdLineTester_criu_keepCheckpoint</testCaseName>
		<variations>
			<variation>-Xjit</variation>
			<variation>-Xint</variation>
			<variation>-Xjit:count=0</variation>
			<variation>-Xjit -XX:+CRIURestoreNonPortableMode</variation>
			<variation>-Xint -XX:+CRIURestoreNonPortableMode</variation>
			<variation>-Xjit:count=0 -XX:+CRIURestoreNonPortableMode</variation>
		</variations>
		<command>
			$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump \
			-DSCRIPPATH=$(TEST_RESROOT)$(D)criuScript.sh -DTEST_RESROOT=$(TEST_RESROOT) \
			-DJAVA_COMMAND=$(JAVA_COMMAND) -DJVM_OPTIONS=$(SQ)$(JVM_OPTIONS)$(SQ) \
			-jar $(CMDLINETESTER_JAR) -config $(Q)$(TEST_RESROOT)$(D)criu_keepCheckpoint.xml$(Q) \
			-explainExcludes -xids all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
			$(TEST_STATUS)
		</command>
		<features>
			<feature>CRIU:required</feature>
		</features>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	<test>
		<testCaseName>cmdLineTester_criu_nonPortableRestore</testCaseName>
		<disables>
			<disable>
				<comment>Metronome GC policy is not supported on IBM Z</comment>
				<variation>-Xgcpolicy:metronome</variation>
				<platform>s390x_.*</platform>
			</disable>
			<disable>
				<comment>Metronome GC policy is not supported on Power PC for Linux</comment>
				<variation>-Xgcpolicy:metronome</variation>
				<platform>ppc64le_linux.*</platform>
			</disable>
		</disables>
		<variations>
			<variation>-Xjit -XX:+CRIURestoreNonPortableMode</variation>
			<variation>-Xint -XX:+CRIURestoreNonPortableMode</variation>
			<variation>-Xjit:count=0 -XX:+CRIURestoreNonPortableMode</variation>
			<variation>-Xgcpolicy:balanced</variation>
			<variation>-Xgcpolicy:optthruput</variation>
			<variation>-Xgcpolicy:metronome</variation>
		</variations>
		<command>
			TR_Options=$(Q)exclude={org/openj9/criu/TimeChangeTest.nanoTimeInt()J},dontInline={org/openj9/criu/TimeChangeTest.nanoTimeInt()J|org/openj9/criu/TimeChangeTest.nanoTimeJit()J},{org/openj9/criu/TimeChangeTest.nanoTimeJit()J}(count=1)$(Q) \
			$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump \
			-DSCRIPPATH=$(TEST_RESROOT)$(D)criuScript.sh -DTEST_RESROOT=$(TEST_RESROOT) \
			-DJAVA_COMMAND=$(JAVA_COMMAND) -DJVM_OPTIONS=$(Q)$(JVM_OPTIONS)$(Q) \
			-jar $(CMDLINETESTER_JAR) -config $(Q)$(TEST_RESROOT)$(D)criu_nonPortable.xml$(Q) \
			-explainExcludes -xids all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
			$(TEST_STATUS)
		</command>
		<features>
			<feature>CRIU:required</feature>
		</features>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	<test>
		<testCaseName>cmdLineTester_criu_nonPortableRestoreJDK11Up</testCaseName>
		<variations>
			<variation>-Xjit -XX:+CRIURestoreNonPortableMode</variation>
			<variation>-Xint -XX:+CRIURestoreNonPortableMode</variation>
			<variation>-Xjit:count=0 -XX:+CRIURestoreNonPortableMode</variation>
		</variations>
		<command>
			$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump \
			-DSCRIPPATH=$(TEST_RESROOT)$(D)criuScript.sh -DTEST_RESROOT=$(TEST_RESROOT) \
			-DJAVA_COMMAND=$(JAVA_COMMAND) -DJVM_OPTIONS=$(Q)$(JVM_OPTIONS)$(Q) \
			-jar $(CMDLINETESTER_JAR) -config $(Q)$(TEST_RESROOT)$(D)criu_nonPortableJDK11Up.xml$(Q) \
			-explainExcludes -xids all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
			$(TEST_STATUS)
		</command>
		<features>
			<feature>CRIU:required</feature>
		</features>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
		<versions>
			<version>11+</version>
		</versions>
	</test>
	<test>
		<testCaseName>cmdLineTester_criu_security</testCaseName>
		<variations>
			<variation>-XX:+CRIURestoreNonPortableMode -Denable.j9internal.checkpoint.security.api.debug=true</variation>
		</variations>
		<command>
			$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump \
			-DSCRIPPATH=$(TEST_RESROOT)$(D)criuSecurityScript.sh -DTEST_RESROOT=$(TEST_RESROOT) \
			-DJAVA_COMMAND=$(JAVA_COMMAND) -DJVM_OPTIONS=$(Q)$(JVM_OPTIONS)$(Q) \
			-jar $(CMDLINETESTER_JAR) -config $(Q)$(TEST_RESROOT)$(D)criu_security.xml$(Q) \
			-explainExcludes -xids all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
			$(TEST_STATUS)
		</command>
		<features>
			<feature>CRIU:required</feature>
		</features>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	<test>
		<testCaseName>cmdLineTester_criu_random</testCaseName>
		<variations>
			<variation>-Denable.j9internal.checkpoint.security.api.debug=true</variation>
		</variations>
		<command>
			$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump \
			-DSCRIPPATH=$(TEST_RESROOT)$(D)criuRandomScript.sh -DTEST_RESROOT=$(TEST_RESROOT) \
			-DJAVA_COMMAND=$(JAVA_COMMAND) -DJVM_OPTIONS=$(Q)$(JVM_OPTIONS)$(Q) \
			-jar $(CMDLINETESTER_JAR) -config $(Q)$(TEST_RESROOT)$(D)criu_random.xml$(Q) \
			-explainExcludes -xids all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
			$(TEST_STATUS)
		</command>
		<features>
			<feature>CRIU:required</feature>
		</features>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
	<test>
		<testCaseName>cmdLineTester_criu_gc_threads</testCaseName>
		<variations>
			<variation>-Xgcpolicy:gencon</variation>
			<variation>-Xgcpolicy:balanced</variation>
			<variation>-Xgcpolicy:optavgpause</variation>
			<variation>-Xgcpolicy:optthruput</variation>
			<variation>-Xgcpolicy:metronome</variation>
			<variation>-Xgcthreads1</variation>
			<variation>-Xgcthreads2 -XX:CheckpointGCThreads=4</variation>
			<variation>-Xgcthreads64 -XX:CheckpointGCThreads=1</variation>
			<variation>-Xgcthreads1 -XX:CheckpointGCThreads=64</variation>
			<variation>-Xgcthreads99 -XX:CheckpointGCThreads=99</variation>
			<variation>-Xgcthreads99 -XX:CheckpointGCThreads=1</variation>
		</variations>
		<command>
			$(JAVA_COMMAND) $(JVM_OPTIONS) -Xdump \
			-DSCRIPPATH=$(TEST_RESROOT)$(D)criuVerifyGCThreading.sh -DRUNCRIUSCRIPPATH=$(TEST_RESROOT)$(D)criuScript.sh -DTEST_RESROOT=$(TEST_RESROOT) \
			-DJAVA_COMMAND=$(JAVA_COMMAND) -DJVM_OPTIONS=$(Q)$(JVM_OPTIONS)$(Q) \
			-jar $(CMDLINETESTER_JAR) -config $(Q)$(TEST_RESROOT)$(D)criu_gc_threading.xml$(Q) \
			-explainExcludes -xids all,$(PLATFORM),$(VARIATION) -nonZeroExitWhenError; \
			$(TEST_STATUS)
		</command>
		<features>
			<feature>CRIU:required</feature>
		</features>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<impls>
			<impl>openj9</impl>
		</impls>
	</test>
</playlist>
