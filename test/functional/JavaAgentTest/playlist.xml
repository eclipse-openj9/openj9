<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright (c) 2016, 2019 IBM Corp. and others

  This program and the accompanying materials are made available under
  the terms of the Eclipse Public License 2.0 which accompanies this
  distribution and is available at https://www.eclipse.org/legal/epl-2.0/
  or the Apache License, Version 2.0 which accompanies this distribution and
  is available at https://www.apache.org/licenses/LICENSE-2.0.

  This Source Code may also be made available under the following
  Secondary Licenses when the conditions for such availability set
  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
  General Public License, version 2 with the GNU Classpath
  Exception [1] and GNU General Public License, version 2 with the
  OpenJDK Assembly Exception [2].

  [1] https://www.gnu.org/software/classpath/license.html
  [2] http://openjdk.java.net/legal/assembly-exception.html

  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
-->

<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../TestConfig/playlist.xsd">
	<test>
		<testCaseName>TestFlushReflectionCache</testCaseName>
		<variations>
			<variation>NoOptions</variation>
			<variation>Mode100</variation>
			<variation>Mode107</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) \
	--add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED  --add-opens=java.base/java.lang=ALL-UNNAMED \
	--add-exports=java.base/jdk.internal.org.objectweb.asm.commons=ALL-UNNAMED \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames Cmvc196982 \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>11+</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestRefreshGCSpecialClassesCache_NOBCI</testCaseName>
		<variations>
			<variation>NoOptions</variation>
			<variation>Mode100</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) \
	--add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED  --add-opens=java.base/java.lang=ALL-UNNAMED \
	--add-exports=java.base/jdk.internal.org.objectweb.asm.commons=ALL-UNNAMED \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames RefreshGCCache_NoBCI_Test \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>11+</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestRefreshGCSpecialClassesCache_NOBCI_JIT_ON</testCaseName>
		<variations>
			<variation>Mode107</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) \
	--add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED  --add-opens=java.base/java.lang=ALL-UNNAMED \
	--add-exports=java.base/jdk.internal.org.objectweb.asm.commons=ALL-UNNAMED \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames RefreshGCCache_NoBCI_Test \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>11+</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestRefreshGCSpecialClassesCache_BCI_FAST_HCR</testCaseName>
		<variations>
			<variation>NoOptions</variation>
			<variation>Mode100</variation>
			<variation>Mode107</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) \
	--add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED  --add-opens=java.base/java.lang=ALL-UNNAMED \
	--add-exports=java.base/jdk.internal.org.objectweb.asm.commons=ALL-UNNAMED \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames RefreshGCCache_FastHCR_Test \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>11+</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestRefreshGCSpecialClassesCache_BCI_EXTENDED_HCR</testCaseName>
		<variations>
			<variation>Mode100</variation>
			<variation>Mode107</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) \
	--add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED  --add-opens=java.base/java.lang=ALL-UNNAMED \
	--add-exports=java.base/jdk.internal.org.objectweb.asm.commons=ALL-UNNAMED \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames RefreshGCCache_ExtendedHCR_Test \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>11+</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestGCClassWithStaticRetransformInGencon</testCaseName>
		<variations>
			<variation>Mode109</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -Xgc:scvTenureAge=14,scvNoAdaptiveTenure \
	--add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED  --add-opens=java.base/java.lang=ALL-UNNAMED \
	--add-exports=java.base/jdk.internal.org.objectweb.asm.commons=ALL-UNNAMED --add-exports=java.base/com.ibm.oti.vm=ALL-UNNAMED \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames GCRetransformTest \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>11+</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestGCClassWithStaticRetransformInBalanced</testCaseName>
		<variations>
			<variation>Mode550</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -Xcheck:gc:all:all:abort \
	--add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED  --add-opens=java.base/java.lang=ALL-UNNAMED \
	--add-exports=java.base/jdk.internal.org.objectweb.asm.commons=ALL-UNNAMED --add-exports=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED --add-exports=java.base/jdk.internal.org.objectweb.asm.util=ALL-UNNAMED --add-exports=java.base/com.ibm.oti.vm=ALL-UNNAMED \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames GCRetransformTest \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>11+</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestFlushReflectionCache_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
			<variation>Mode100</variation>
			<variation>Mode107</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames Cmvc196982 \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestRefreshGCSpecialClassesCache_NOBCI_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
			<variation>Mode100</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames RefreshGCCache_NoBCI_Test \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestRefreshGCSpecialClassesCache_NOBCI_JIT_ON_SE80</testCaseName>
		<variations>
			<variation>Mode107</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames RefreshGCCache_NoBCI_Test \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestRefreshGCSpecialClassesCache_BCI_FAST_HCR_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
			<variation>Mode100</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames RefreshGCCache_FastHCR_Test \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestRefreshGCSpecialClassesCache_BCI_FAST_HCR_JIT_ON_SE80</testCaseName>
		<variations>
			<variation>Mode107</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames RefreshGCCache_FastHCR_Test \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestRefreshGCSpecialClassesCache_BCI_EXTENDED_HCR_SE80</testCaseName>
		<variations>
			<variation>Mode100</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames RefreshGCCache_ExtendedHCR_Test \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestRefreshGCSpecialClassesCache_BCI_EXTENDED_HCR_JIT_ON_SE80</testCaseName>
		<variations>
			<variation>Mode107</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames RefreshGCCache_ExtendedHCR_Test \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestGCClassWithStaticRetransformInGencon_SE80</testCaseName>
		<variations>
			<variation>Mode109</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -Xgc:scvTenureAge=14,scvNoAdaptiveTenure \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames GCRetransformTest \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

	<test>
		<testCaseName>TestGCClassWithStaticRetransformInBalanced_SE80</testCaseName>
		<variations>
			<variation>Mode550</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -Xcheck:gc:all:all:abort \
	-javaagent:$(Q)$(TEST_RESROOT)$(D)javaagenttest.jar$(Q) \
	-cp $(Q)$(RESOURCES_DIR)$(P)$(TESTNG)$(P)$(LIB_DIR)$(D)asm-all.jar$(Q) \
	org.testng.TestNG -d $(REPORTDIR) $(Q)$(TEST_RESROOT)$(D)testng.xml$(Q) -testnames GCRetransformTest \
	-groups $(TEST_GROUP) \
	-excludegroups $(DEFAULT_EXCLUDE); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
		<impls>
			<impl>openj9</impl>
			<impl>ibm</impl>
		</impls>
	</test>

</playlist>
