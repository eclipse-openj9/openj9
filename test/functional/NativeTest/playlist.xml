<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright (c) 2016, 2018 IBM Corp. and others

  This program and the accompanying materials are made available under
  the terms of the Eclipse Public License 2.0 which accompanies this
  distribution and is available at https://www.eclipse.org/legal/epl-2.0/
  or the Apache License, Version 2.0 which accompanies this distribution and
  is available at https://www.apache.org/licenses/LICENSE-2.0.

  This Source Code may also be made available under the following
  Secondary Licenses when the conditions for such availability set
  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
  General Public License, version 2 with the GNU Classpath
  Exception [1] and GNU General Public License, version 2 with the
  OpenJDK Assembly Exception [2].

  [1] https://www.gnu.org/software/classpath/license.html
  [2] http://openjdk.java.net/legal/assembly-exception.html

  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
-->

<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../TestConfig/playlist.xsd">

	<test>
		<testCaseName>algotest2</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)algotest' -avltest:$(TEST_RESROOT)$(D)..$(D)algotest$(D)avltest.lst -Xcheck:memory:ignoreUnfreedCallsite=zip/:dbgwrapper:unknown:wrapper; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
			<subset>9</subset>
			<subset>10</subset>
			<subset>11</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>ctest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)ctest' ; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
			<subset>9</subset>
			<subset>10</subset>
			<subset>11</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jniargtests</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -Xint \
	-cp $(Q)$(TEST_RESROOT)$(D)jniargtests$(D)jniargtests.jar$(Q) JniArgTests ; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
			<subset>9</subset>
			<subset>10</subset>
			<subset>11</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>vmtest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)vmtest'  ; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
			<subset>9</subset>
			<subset>10</subset>
			<subset>11</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jsigjnitest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)jsigjnitest' \
	'$(JAVA_BIN)$(D)j9vm' $(JVM_OPTIONS) ; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
			<subset>9</subset>
			<subset>10</subset>
			<subset>11</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>gc_rwlocktest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>chmod u+x $(JAVA_SHARED_LIBRARIES_DIR)$(D)gc_rwlocktest; \
	$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)gc_rwlocktest' -verbose; \
	$(TEST_STATUS)</command>
		<platformRequirements>^os.win</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
			<subset>9</subset>
			<subset>10</subset>
			<subset>11</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>gc_rwlocktest_win</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)gc_rwlocktest' -verbose; \
	$(TEST_STATUS)</command>
		<platformRequirements>os.win</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
			<subset>9</subset>
			<subset>10</subset>
			<subset>11</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>shrtest_linux</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>perl $(JVM_TEST_ROOT)$(D)TestConfig$(D)scripts$(D)tools$(D)sysvcleanup.pl all ; \
	$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)shrtest' $(JVM_OPTIONS)  -Djava.home='$(JAVA_BIN)$(D)..$(D)'  '-Xbootclasspath/a:"dummy1$(P)dummy2$(P)dummy3"' ; \
	$(TEST_STATUS)
	</command>
		<platformRequirements>os.linux</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>9</subset>
			<subset>10</subset>
			<subset>11</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>shrtest_zos</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>perl $(JVM_TEST_ROOT)$(D)TestConfig$(D)scripts$(D)tools$(D)sysvcleanup.pl all zos ; \
	$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)shrtest' $(JVM_OPTIONS)  -Djava.home='$(JAVA_BIN)$(D)..$(D)'  '-Xbootclasspath/a:"dummy1$(P)dummy2$(P)dummy3"' ; \
	$(TEST_STATUS)
	</command>
		<platformRequirements>os.zos</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>9</subset>
			<subset>10</subset>
			<subset>11</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>shrtest_aix</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>perl $(JVM_TEST_ROOT)$(D)TestConfig$(D)scripts$(D)tools$(D)sysvcleanup.pl all aix ; \
	$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)shrtest' $(JVM_OPTIONS)  -Djava.home='$(JAVA_BIN)$(D)..$(D)'  '-Xbootclasspath/a:"dummy1$(P)dummy2$(P)dummy3"' ; \
	$(TEST_STATUS)
	</command>
		<platformRequirements>os.aix</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>9</subset>
			<subset>10</subset>
			<subset>11</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>shrtest_win</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)shrtest' $(JVM_OPTIONS)  -Djava.home='$(JAVA_BIN)$(D)..$(D)'  '-Xbootclasspath/a:"dummy1$(P)dummy2$(P)dummy3"' ; \
	$(TEST_STATUS)
	</command>
		<platformRequirements>os.win</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>9</subset>
			<subset>10</subset>
			<subset>11</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>shrtest_linux_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>perl $(JVM_TEST_ROOT)$(D)TestConfig$(D)scripts$(D)tools$(D)sysvcleanup.pl all ; \
	$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)shrtest' $(JVM_OPTIONS)  -Djava.home='$(JAVA_BIN)$(D)..$(D)' ; \
	$(TEST_STATUS)
	</command>
		<platformRequirements>os.linux</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>shrtest_zos_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>perl $(JVM_TEST_ROOT)$(D)TestConfig$(D)scripts$(D)tools$(D)sysvcleanup.pl all zos ; \
	$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)shrtest' $(JVM_OPTIONS)  -Djava.home='$(JAVA_BIN)$(D)..$(D)' ; \
	$(TEST_STATUS)
	</command>
		<platformRequirements>os.zos</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>shrtest_aix_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>perl $(JVM_TEST_ROOT)$(D)TestConfig$(D)scripts$(D)tools$(D)sysvcleanup.pl all aix ; \
	$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)shrtest' $(JVM_OPTIONS)  -Djava.home='$(JAVA_BIN)$(D)..$(D)'  ; \
	$(TEST_STATUS)
	</command>
		<platformRequirements>os.aix</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>shrtest_win_SE80</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)shrtest' $(JVM_OPTIONS)  -Djava.home='$(JAVA_BIN)$(D)..$(D)'  ; \
	$(TEST_STATUS)
	</command>
		<platformRequirements>os.win</platformRequirements>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>thrstatetest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)thrstatetest' $(JVM_OPTIONS)  -Djava.home='$(JAVA_BIN)$(D)..$(D)' -Dcom.ibm.tools.attach.enable=no -Dibm.java9.forceCommonCleanerShutdown=true ; \
	$(TEST_STATUS)
	</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
			<subset>9</subset>
			<subset>10</subset>
			<subset>11</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>vmLifecyleTests</testCaseName>
		<variations>
			<variation>Mode110</variation>
			<variation>Mode610</variation>
			<variation>Mode301</variation>
			<variation>Mode351</variation>
			<variation>Mode501</variation>
			<variation>Mode551</variation>
		</variations>
		<command>$(ADD_JVM_LIB_DIR_TO_LIBPATH) \
	'$(JAVA_SHARED_LIBRARIES_DIR)$(D)vmLifecyleTests' $(JVM_OPTIONS) -Djava.home='$(JAVA_BIN)$(D)..$(D)' -Dibm.java9.forceCommonCleanerShutdown=true ; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>functional</group>
		</groups>
		<subsets>
			<subset>8</subset>
			<subset>9</subset>
			<subset>10</subset>
			<subset>11</subset>
		</subsets>
	</test>
</playlist>
