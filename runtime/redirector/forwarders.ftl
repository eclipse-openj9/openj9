<#assign functions = 
[
	{ "name": "jio_vfprintf", "return": "int ", "args": "FILE * stream, const char * format, va_list args", "cc": "", "decorate": "false"},
	{ "name": "jio_vsnprintf", "return": "int ", "args": "char * str, int n, const char * format, va_list args", "cc": "", "decorate": "false"},
	{ "name": "JNI_a2e_vsprintf", "return": "jint ", "args": "char *target, const char *format, va_list args", "cc": "", "decorate": "false"},
	{ "name": "JVM_Accept", "return": "jint ", "args": "jint descriptor, struct sockaddr* address, int* length", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ActiveProcessorCount", "return": "jint ", "args": "void", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_AllocateNewArray", "return": "jobject ", "args": "JNIEnv *env, jclass caller, jclass current, jint length", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_AllocateNewObject", "return": "jobject ", "args": "JNIEnv *env, jclass caller, jclass current, jclass init", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Available", "return": "jint ", "args": "jint descriptor, jlong* bytes", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ClassDepth", "return": "jint ", "args": "JNIEnv *env, jstring name", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ClassLoaderDepth", "return": "jint ", "args": "JNIEnv *env", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Close", "return": "jint ", "args": "jint descriptor", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Connect", "return": "jint ", "args": "jint descriptor, const struct sockaddr* address, int length", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ConstantPoolGetClassAt", "return": "jclass ", "args": "JNIEnv *env, jobject anObject, jobject constantPool, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ConstantPoolGetClassAtIfLoaded", "return": "jclass ", "args": "JNIEnv *env, jobject anObject, jobject constantPool, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ConstantPoolGetDoubleAt", "return": "jdouble ", "args": "JNIEnv *env, jobject anObject, jobject constantPool, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ConstantPoolGetFieldAt", "return": "jobject ", "args": "JNIEnv *env, jobject anObject, jobject constantPool, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ConstantPoolGetFieldAtIfLoaded", "return": "jobject ", "args": "JNIEnv *env, jobject anObject, jobject constantPool, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ConstantPoolGetFloatAt", "return": "jfloat ", "args": "JNIEnv *env, jobject anObject, jobject constantPool, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ConstantPoolGetIntAt", "return": "jint ", "args": "JNIEnv *env, jobject anObject, jobject constantPool, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ConstantPoolGetLongAt", "return": "jlong ", "args": "JNIEnv *env, jobject anObject, jobject constantPool, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ConstantPoolGetMemberRefInfoAt", "return": "jobjectArray ", "args": "JNIEnv *env, jobject anObject, jobject constantPool, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ConstantPoolGetMethodAt", "return": "jobject ", "args": "JNIEnv *env, jobject anObject, jobject constantPool, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ConstantPoolGetMethodAtIfLoaded", "return": "jobject ", "args": "JNIEnv *env, jobject anObject, jobject constantPool, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ConstantPoolGetSize", "return": "jint ", "args": "JNIEnv *env, jobject anObject, jobject constantPool", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ConstantPoolGetStringAt", "return": "jstring ", "args": "JNIEnv *env, jobject anObject, jobject constantPool, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ConstantPoolGetUTF8At", "return": "jstring ", "args": "JNIEnv *env, jobject anObject, jobject constantPool, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_CurrentClassLoader", "return": "jobject ", "args": "JNIEnv *env", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_CurrentLoadedClass", "return": "jclass ", "args": "JNIEnv *env", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_CurrentTimeMillis", "return": "jlong ", "args": "JNIEnv *env, jint unused1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_CX8Field", "return": "jboolean ", "args": "JNIEnv* env, jobject obj, jfieldID field, jlong oldval, jlong newval", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_DefineClassWithSource", "return": "jclass ", "args": "JNIEnv *env, const char * className, jobject classLoader, const jbyte * classArray, jsize length, jobject domain, const char * source", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_DumpThreads", "return": "jobjectArray ", "args": "JNIEnv *env, jclass thread, jobjectArray threadArray", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ExpandFdTable", "return": "jint ", "args": "jint fd", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_FindLibraryEntry", "return": "void* ", "args": "void* handle, const char *functionName", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_FindSignal", "return": "jint ", "args": "const char* sigName", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_FreeMemory", "return": "jlong ", "args": "void", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GC", "return": "void ", "args": "void", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GCNoCompact", "return": "void ", "args": "void", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetAllThreads", "return": "jobjectArray ", "args": "JNIEnv *env, jclass aClass", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetCallerClass", "return": "jobject ", "args": "JNIEnv *env, jint depth", "cc": "JNICALL", "decorate": "true", "if": "!defined(J9VM_JCL_SE11)"},
	{ "name": "JVM_GetCallerClass", "return": "jobject ", "args": "JNIEnv *env", "cc": "JNICALL", "decorate": "true", "if": "defined(J9VM_JCL_SE11)"},
	{ "name": "JVM_GetClassAccessFlags", "return": "jint ", "args": "JNIEnv * env, jclass clazzRef", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassAnnotations", "return": "jbyteArray ", "args": "JNIEnv *env, jclass target", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassConstantPool", "return": "jobject ", "args": "JNIEnv *env, jclass target", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassContext", "return": "jobject ", "args": "JNIEnv *env", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassLoader", "return": "jobject ", "args": "JNIEnv *env, jobject obj", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassName", "return": "jstring ", "args": "JNIEnv *env, jclass theClass", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassSignature", "return": "jstring ", "args": "JNIEnv *env, jclass target", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetEnclosingMethodInfo", "return": "jobjectArray ", "args": "JNIEnv *env, jclass theClass", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetInterfaceVersion", "return": "jint ", "args": "void", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetLastErrorString", "return": "jint ", "args": "char* buffer, jint length", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetManagement", "return": "void* ", "args": "jint version", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetPortLibrary", "return": "struct J9PortLibrary* ", "args": "void", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetSystemPackage", "return": "jstring ", "args": "JNIEnv* env, jstring pkgName", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetSystemPackages", "return": "jobject ", "args": "JNIEnv* env", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetThreadInterruptEvent", "return": "void* ", "args": "void", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Halt", "return": "void ", "args": "jint exitCode", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_InitializeSocketLibrary", "return": "jint ", "args": "void", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_InvokeMethod", "return": "jobject ", "args": "JNIEnv * env, jobject method, jobject obj, jobjectArray args", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_IsNaN", "return": "jboolean ", "args": "jdouble dbl", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_LatestUserDefinedLoader", "return": "jobject ", "args": "JNIEnv *env", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Listen", "return": "jint ", "args": "jint descriptor, jint count", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_LoadLibrary", "return": "void* ", "args": "const char *libName", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Lseek", "return": "jlong ", "args": "jint descriptor, jlong bytesToSeek, jint origin", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_MaxMemory", "return": "jlong ", "args": "void", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_MaxObjectInspectionAge", "return": "jlong ", "args": "void", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_MonitorNotify", "return": "void ", "args": "JNIEnv *env, jobject anObject", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_MonitorNotifyAll", "return": "void ", "args": "JNIEnv *env, jobject anObject", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_MonitorWait", "return": "void ", "args": "JNIEnv *env, jobject anObject, jlong timeout", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_NanoTime", "return": "jlong ", "args": "JNIEnv *env, jclass aClass", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_NativePath", "return": "char* ", "args": "char* path", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_NewInstanceFromConstructor", "return": "jobject ", "args": "JNIEnv * env, jobject c, jobjectArray args", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Open", "return": "jint ", "args": "const char* filename, jint flags, jint mode", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RaiseSignal", "return": "jboolean ", "args": "jint sigNum", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RawMonitorCreate", "return": "void* ", "args": "void", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RawMonitorDestroy", "return": "void ", "args": "void* deadMonitor", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RawMonitorEnter", "return": "jint ", "args": "void* monitor", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RawMonitorExit", "return": "void ", "args": "void* monitor", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Read", "return": "jint ", "args": "jint descriptor, char *buffer, jint bytesToRead", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Recv", "return": "jint ", "args": "jint descriptor, char* buffer, jint length, jint flags", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RecvFrom", "return": "jint ", "args": "jint descriptor, char* buffer, jint length, jint flags, struct sockaddr* fromAddr, int* fromLength", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RegisterSignal", "return": "void* ", "args": "jint sigNum, void* handler", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RegisterUnsafeMethods", "return": "void ", "args": "JNIEnv* env, jclass unsafeClz", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Send", "return": "jint ", "args": "jint descriptor, const char* buffer, jint numBytes, jint flags", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SendTo", "return": "jint ", "args": "jint descriptor, const char* buffer, jint length, jint flags, const struct sockaddr* toAddr, int toLength", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SetLength", "return": "jint ", "args": "jint fd, jlong length", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Sleep", "return": "jint ", "args": "JNIEnv* env, jclass thread, jlong timeout", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Socket", "return": "jint ", "args": "jint domain, jint type, jint protocol", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SocketAvailable", "return": "jint ", "args": "jint descriptor, jint* result", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SocketClose", "return": "jint ", "args": "jint descriptor", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Startup", "return": "jint ", "args": "JavaVM* vm, JNIEnv* env", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SupportsCX8", "return": "jboolean ", "args": "void", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Sync", "return": "jint ", "args": "jint descriptor", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Timeout", "return": "jint ", "args": "jint descriptor, jint timeout", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_TotalMemory", "return": "jlong ", "args": "void", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_TraceInstructions", "return": "void ", "args": "jboolean on", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_TraceMethodCalls", "return": "void ", "args": "jboolean on", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_UcsOpen", "return": "jint ", "args": "const jchar* filename, jint flags, jint mode", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Write", "return": "jint ", "args": "jint descriptor, const char* buffer, jint length", "cc": "JNICALL", "decorate": "true"},
	{ "name": "NewStringPlatform", "return": "jint ", "args": "JNIEnv* env, const char* instr, jstring* outstr, const char* encoding", "cc": "", "decorate": "false"},
	{ "name": "post_block", "return": "int ", "args": "void", "cc": "", "decorate": "false"},
	{ "name": "pre_block", "return": "int ", "args": "pre_block_t buf", "cc": "", "decorate": "false"},
	{ "name": "JVM_ZipHook", "return": "void ", "args": "JNIEnv *env, const char* filename, jint newState", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RawAllocate", "return": "void * ", "args": "size_t size, const char * callsite", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RawRealloc", "return": "void * ", "args": "void * ptr, size_t size, const char * callsite", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RawCalloc", "return": "void * ", "args": "size_t nmemb, size_t size, const char * callsite", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RawAllocateInCategory", "return": "void * ", "args": "size_t size, const char * callsite, jint category", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RawReallocInCategory", "return": "void * ", "args": "void * ptr, size_t size, const char * callsite, jint category", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RawCallocInCategory", "return": "void * ", "args": "size_t nmemb, size_t size, const char * callsite, jint category", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_RawFree", "return": "void ", "args": "void * ptr", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ArrayCopy", "return": "void", "args": "JNIEnv *env, jclass ignored, jobject src, jint src_pos, jobject dst, jint dst_pos, jint length", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_AssertionStatusDirectives", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Clone", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_CompileClass", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_CompileClasses", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_CompilerCommand", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_CountStackFrames", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_CurrentThread", "return": "jobject ", "args": "JNIEnv* env, jclass java_lang_Thread", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_DesiredAssertionStatus", "return": "jboolean ", "args": "JNIEnv* env, jobject arg1, jobject arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_DisableCompiler", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_DoPrivileged", "return": "jobject ", "args": "JNIEnv* env, jobject java_security_AccessController, jobject action, jboolean unknown, jboolean isExceptionAction", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_EnableCompiler", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_FillInStackTrace", "return": "void ", "args": "JNIEnv* env, jobject throwable", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_FindClassFromClassLoader", "return": "jobject ", "args": "JNIEnv* env, char* className, jboolean init, jobject classLoader, jboolean throwError", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_FindClassFromBootLoader", "return": "jobject ", "args": "JNIEnv* env, char* className", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_FindLoadedClass", "return": "jobject ", "args": "JNIEnv* env, jobject classLoader, jobject className", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_FindPrimitiveClass", "return": "jobject ", "args": "JNIEnv* env, char* className", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetArrayElement", "return": "jobject ", "args": "JNIEnv* env, jobject arr, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetArrayLength", "return": "jint ", "args": "JNIEnv *env, jobject arr", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassDeclaredConstructors", "return": "jobject ", "args": "JNIEnv* env, jclass clazz, jboolean unknown", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassDeclaredFields", "return": "jobject ", "args": "JNIEnv* env, jobject clazz, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassDeclaredMethods", "return": "jobject ", "args": "JNIEnv* env, jobject clazz, jboolean unknown", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassInterfaces", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassModifiers", "return": "jint ", "args": "JNIEnv* env, jclass clazz", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassSigners", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetComponentType", "return": "jobject ", "args": "JNIEnv* env, jclass cls", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetDeclaredClasses", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetDeclaringClass", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetInheritedAccessControlContext", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetPrimitiveArrayElement", "return": "jvalue ", "args": "JNIEnv *env, jobject arr, jint index, jint wCode", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetProtectionDomain", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetStackAccessControlContext", "return": "jobject ", "args": "JNIEnv* env, jclass java_security_AccessController", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetStackTraceDepth", "return": "jint ", "args": "JNIEnv* env, jobject throwable", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetStackTraceElement", "return": "jobject ", "args": "JNIEnv* env, jobject throwable, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_HoldsLock", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_IHashCode", "return": "jint ", "args": "JNIEnv *env, jobject obj", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_InitProperties", "return": "jobject ", "args": "JNIEnv* env, jobject properties", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_InternString", "return": "jstring ", "args": "JNIEnv *env, jstring str", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Interrupt", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_IsArrayClass", "return": "jboolean ", "args": "JNIEnv* env, jclass clazz", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_IsInterface", "return": "jboolean ", "args": "JNIEnv* env, jclass clazz", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_IsInterrupted", "return": "jboolean ", "args": "JNIEnv* env, jobject thread, jboolean unknown", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_IsPrimitiveClass", "return": "jboolean ", "args": "JNIEnv* env, jclass clazz", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_IsSupportedJNIVersion", "return": "jboolean ", "args": "jint jniVersion", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_IsThreadAlive", "return": "jboolean ", "args": "JNIEnv* jniEnv, jobject targetThread", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_NewArray", "return": "jobject ", "args": "JNIEnv* jniEnv, jclass componentType, jint dimension", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_NewMultiArray", "return": "jobject ", "args": "JNIEnv *env, jclass eltClass, jintArray dim", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ResolveClass", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ResumeThread", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SetArrayElement", "return": "void ", "args": "JNIEnv *env, jobject array, jint index, jobject value", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SetClassSigners", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SetPrimitiveArrayElement", "return": "void", "args": "JNIEnv *env, jobject array, jint index, jvalue value, unsigned char vCode", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SetProtectionDomain", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SetThreadPriority", "return": "void", "args": "JNIEnv* env, jobject thread, jint priority", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_StartThread", "return": "void ", "args": "JNIEnv* jniEnv, jobject newThread", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_StopThread", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SuspendThread", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_UnloadLibrary", "return": "jobject ", "args": "jint arg0", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Yield", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SetSockOpt", "return": "jint ", "args": "jint fd, int level, int optname, const char *optval, int optlen", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetSockOpt", "return": "jint ", "args": "jint fd, int level, int optname, char *optval, int *optlen", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SocketShutdown", "return": "jint ", "args": "jint fd, jint howto", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetSockName", "return": "jint ", "args": "jint fd, struct sockaddr *him, int *len", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetHostName", "return": "int ", "args": "char* name, int namelen", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodIxLocalsCount", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetCPMethodNameUTF", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodIxExceptionTableEntry", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3, jint arg4", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodIxExceptionTableLength", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodIxMaxStack", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodIxExceptionIndexes", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetCPFieldSignatureUTF", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassMethodsCount", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassFieldsCount", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassCPTypes", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassCPEntriesCount", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetCPMethodSignatureUTF", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetCPFieldModifiers", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetCPMethodModifiers", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_IsSameClassPackage", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetCPMethodClassNameUTF", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetCPFieldClassNameUTF", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetCPClassNameUTF", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodIxArgsSize", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodIxModifiers", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_IsConstructorIx", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodIxByteCodeLength", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodIxByteCode", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetFieldIxModifiers", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_FindClassFromClass", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassNameUTF", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodIxNameUTF", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodIxSignatureUTF", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodIxExceptionsCount", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_ReleaseUTF", "return": "jobject ", "args": "jint arg0", "cc": "JNICALL", "decorate": "true"},
	{ "name": "GetStringPlatform", "return": "jint ", "args": "JNIEnv* env, jstring instr, char* outstr, jint outlen, const char* encoding", "cc": "", "decorate": "false"},
	{ "name": "GetStringPlatformLength", "return": "jint ", "args": "JNIEnv* env, jstring instr, jint* outlen, const char* encoding", "cc": "", "decorate": "false"},
	{ "name": "JVM_ExtendBootClassPath", "return": "void ", "args": "JNIEnv* env, const char * path", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Bind", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_DTraceActivate", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3, jint arg4", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_DTraceDispose", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_DTraceGetVersion", "return": "jobject ", "args": "jint arg0", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_DTraceIsProbeEnabled", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_DTraceIsSupported", "return": "jobject ", "args": "jint arg0", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_DefineClass", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3, jint arg4, jint arg5", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_DefineClassWithSourceCond", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3, jint arg4, jint arg5, jint arg6, jint arg7", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_EnqueueOperation", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3, jint arg4", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_Exit", "return": "jobject ", "args": "jint arg0", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetCPFieldNameUTF", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassConstructor", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassConstructors", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassField", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassFields", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassMethod", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3, jint arg4", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassMethods", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetField", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetFieldAnnotations", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodAnnotations", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodDefaultAnnotationValue", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodParameterAnnotations", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetClassTypeAnnotations", "return": "jbyteArray ", "args": "JNIEnv *env, jobject cls", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetFieldTypeAnnotations", "return": "jbyteArray ", "args": "JNIEnv *env, jobject field", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodParameters", "return": "jobjectArray ", "args": "JNIEnv *env, jobject method", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetMethodTypeAnnotations", "return": "jbyteArray ", "args": "JNIEnv *env, jobject method", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_IsVMGeneratedMethodIx", "return": "jboolean ", "args": "JNIEnv *env, jclass cb, jint index", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_GetTemporaryDirectory", "return": "jstring ", "args": "JNIEnv *env", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_GetPrimitiveField", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_InitializeCompiler", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_IsSilentCompiler", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_LoadClass0", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_NewInstance", "return": "jobject ", "args": "jint arg0, jint arg1", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_PrintStackTrace", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SetField", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_SetPrimitiveField", "return": "jobject ", "args": "jint arg0, jint arg1, jint arg2, jint arg3, jint arg4, jint arg5", "cc": "JNICALL", "decorate": "true"}
	{ "name": "JVM_SetNativeThreadName", "return": "void ", "args": "jint arg0, jobject arg1, jstring arg2", "cc": "JNICALL", "decorate": "true"},
	{ "name": "JVM_DefineModule", "return": "jobject ", "args": "JNIEnv arg0, jobject arg1, jstring arg2, jstring arg3, jobjectArray arg4", "cc": "JNICALL", "decorate": "false", "if": "(!defined(J9VM_JAVA9_BUILD)) || (J9VM_JAVA9_BUILD < 148)"},
	{ "name": "JVM_DefineModule", "return": "jobject ", "args": "JNIEnv arg0, jobject arg1, jboolean arg2, jstring arg3, jstring arg4, jobjectArray arg5", "cc": "JNICALL", "decorate": "false", "if": "defined(J9VM_JAVA9_BUILD) && (J9VM_JAVA9_BUILD >= 148) && (J9VM_JAVA9_BUILD < 156)"},
	{ "name": "JVM_DefineModule", "return": "jobject ", "args": "JNIEnv arg0, jobject arg1, jboolean arg2, jstring arg3, jstring arg4, const char* const* arg5, jsize arg6", "cc": "JNICALL", "decorate": "false", "if": "defined(J9VM_JAVA9_BUILD) && (J9VM_JAVA9_BUILD >= 156)"},
	{ "name": "JVM_AddModuleExports", "return": "void ", "args": "JNIEnv arg0, jobject arg1, jstring arg2, jobject arg3", "cc": "JNICALL", "decorate": "false", "if": "(!defined(J9VM_JAVA9_BUILD)) || (J9VM_JAVA9_BUILD < 156)"},
	{ "name": "JVM_AddModuleExports", "return": "void ", "args": "JNIEnv arg0, jobject arg1, const char *arg2, jobject arg3", "cc": "JNICALL", "decorate": "false", "if": "defined(J9VM_JAVA9_BUILD) && (J9VM_JAVA9_BUILD >= 156)"},
	{ "name": "JVM_AddModuleExportsToAll", "return": "void ", "args": "JNIEnv arg0, jobject arg1, jstring arg2, jobject arg3", "cc": "JNICALL", "decorate": "false", "if": "(!defined(J9VM_JAVA9_BUILD)) || (J9VM_JAVA9_BUILD < 156)"},
	{ "name": "JVM_AddModuleExportsToAll", "return": "void ", "args": "JNIEnv arg0, jobject arg1, const char *arg2, jobject arg3", "cc": "JNICALL", "decorate": "false", "if": "defined(J9VM_JAVA9_BUILD) && (J9VM_JAVA9_BUILD >= 156)"},
	{ "name": "JVM_AddReadsModule", "return": "void ", "args": "JNIEnv arg0, jobject arg1, jobject arg2", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_CanReadModule", "return": "jboolean ", "args": "JNIEnv arg0, jobject arg1, jobject arg2", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_IsExportedToModule", "return": "jboolean ", "args": "JNIEnv arg0, jobject arg1, jstring arg2, jobject arg3", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_AddModulePackage", "return": "void ", "args": "JNIEnv arg0, jobject arg1, jstring arg2", "cc": "JNICALL", "decorate": "false", "if": "(!defined(J9VM_JAVA9_BUILD)) || (J9VM_JAVA9_BUILD < 156)"},
	{ "name": "JVM_AddModulePackage", "return": "void ", "args": "JNIEnv arg0, jobject arg1, const char *arg2", "cc": "JNICALL", "decorate": "false", "if": "defined(J9VM_JAVA9_BUILD) && (J9VM_JAVA9_BUILD >= 156)"},
	{ "name": "JVM_AddModuleExportsToAllUnnamed", "return": "void ", "args": "JNIEnv arg0, jobject arg1, jstring arg2", "cc": "JNICALL", "decorate": "false", "if": "(!defined(J9VM_JAVA9_BUILD)) || (J9VM_JAVA9_BUILD < 156)"},
	{ "name": "JVM_AddModuleExportsToAllUnnamed", "return": "void ", "args": "JNIEnv arg0, jobject arg1, const char *arg2", "cc": "JNICALL", "decorate": "false", "if": "defined(J9VM_JAVA9_BUILD) && (J9VM_JAVA9_BUILD >= 156)"},
	{ "name": "JVM_GetSimpleBinaryName", "return": "jstring ", "args": "JNIEnv arg0, jclass arg1", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_SetMethodInfo", "return": "void ", "args": "JNIEnv arg0, jobject arg1", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_ConstantPoolGetNameAndTypeRefIndexAt", "return": "jint ", "args": "JNIEnv arg0, jobject arg1, jobject arg2, jint arg3", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_MoreStackWalk", "return": "jint ", "args": "JNIEnv arg0, jobject arg1, jlong arg2, jlong arg3, jint arg4, jobjectArray arg5, jobjectArray arg6", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_ConstantPoolGetClassRefIndexAt", "return": "jint ", "args": "JNIEnv arg0, jobject arg1, jlong arg2, jint arg3", "cc": "JNICALL", "decorate": "false"},	
	{ "name": "JVM_GetVmArguments", "return": "jobjectArray ", "args": "JNIEnv arg0", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_FillStackFrames", "return": "void ", "args": "JNIEnv arg0, jclass arg1, jint arg2, jobjectArray arg3, jint arg4, jint arg5", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_FindClassFromCaller", "return": "jclass ", "args": "JNIEnv arg0, const char* arg1, jboolean arg2, jobject arg3, jclass arg4", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_ConstantPoolGetNameAndTypeRefInfoAt", "return": "jobjectArray ", "args": "JNIEnv arg0, jobject arg1, jobject arg2, jint arg3", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_ConstantPoolGetTagAt", "return": "jbyte ", "args": "JNIEnv arg0, jobject arg1, jobject arg2, jint arg3", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_CallStackWalk", "return": "jobject ", "args": "JNIEnv arg0, jobject arg1, jlong arg2, jint arg3, jint arg4, jint arg5, jobjectArray arg6, jobjectArray arg7", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_SetBootLoaderUnnamedModule", "return": "void ", "args": "JNIEnv *env, jobject arg1", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_GetModuleByPackageName", "return": "jobject ", "args": "JNIEnv *env, jobject classLoader, jstring packageName", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_ToStackTraceElement", "return": "void ", "args": "JNIEnv *env, jobject arg1, jobject arg2", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_GetStackTraceElements", "return": "void ", "args": "JNIEnv *env, jobject arg1, jobjectArray arg2", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_InitStackTraceElementArray", "return": "void ", "args": "JNIEnv *env, jobjectArray arg1, jobject arg2", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_InitStackTraceElement", "return": "void ", "args": "JNIEnv *env, jobject arg1, jobject arg2", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_GetAndClearReferencePendingList", "return": "jobject ", "args": "JNIEnv *env", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_HasReferencePendingList", "return": "jboolean ", "args": "JNIEnv *env", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_WaitForReferencePendingList", "return": "void ", "args": "JNIEnv *env", "cc": "JNICALL", "decorate": "false"},
	{ "name": "JVM_GetNanoTimeAdjustment", "return": "jlong ", "args": "JNIEnv *env, jclass clazz, jlong offsetSeconds", "cc": "JNICALL", "decorate": "true"}
]
>
