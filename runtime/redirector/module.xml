<?xml version="1.0" encoding="UTF-8"?>

<!--
   Copyright (c) 2007, 2018 IBM Corp. and others

   This program and the accompanying materials are made available under
   the terms of the Eclipse Public License 2.0 which accompanies this
   distribution and is available at https://www.eclipse.org/legal/epl-2.0/
   or the Apache License, Version 2.0 which accompanies this distribution and
   is available at https://www.apache.org/licenses/LICENSE-2.0.

   This Source Code may also be made available under the following
   Secondary Licenses when the conditions for such availability set
   forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
   General Public License, version 2 with the GNU Classpath
   Exception [1] and GNU General Public License, version 2 with the
   OpenJDK Assembly Exception [2].

   [1] https://www.gnu.org/software/classpath/license.html
   [2] http://openjdk.java.net/legal/assembly-exception.html

   SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
-->

<module xmlns:xi="http://www.w3.org/2001/XInclude">
	<xi:include href="../j9vm/j9vmnatives.xml"><xi:fallback/></xi:include>
	
	<exports group="all">
		<export name="JNI_CreateJavaVM" />
		<export name="JNI_GetCreatedJavaVMs" />
		<export name="JNI_GetDefaultJavaVMInitArgs" />
	</exports>
	<exports group="jdk11">
		<export name="_JVM_GetCallerClass@4" />
	</exports>
	<exports group="prejdk11">
		<export name="_JVM_GetCallerClass@8" />
	</exports>
		
	<artifact type="shared" name="jvm_b150" scope="redirector" loadgroup="top" buildlocal="true" appendrelease="false">
		<include-if condition="spec.flags.module_j9vm"/>
		<options>
			<!-- Need this for compatibility with older UMA versions in ifix streams -->
			<option name="linuxVersionName" data ="JVM_2.3"/>
		</options>
		<phase>core quick j2se</phase>
		<exports>
			<group name="prejdk11"/>
			<group name="all"/>
			<group name="j9vmnatives"/>
		</exports>
		<flags>
			<flag name="J9VM_JAVA9_BUILD" value="150"/>
		</flags>
		<includes>
			<include path="j9include"/>
			<include path="j9oti"/>
			<include path="jvm"/>
			<include path="$(OMRPORT_SRCDIR)zos390" type="relativepath">
				<include-if condition="spec.zos_390.*"/>
			</include>
		</includes>
		<makefilestubs>
			<makefilestub data="UMA_TREAT_WARNINGS_AS_ERRORS=1"/>
			<makefilestub data="OMRPORT_SRCDIR=$(OMR_DIR)/port/"/>
		</makefilestubs>
		<objects>
			<object name="generated"/>
			<object name="redirector"/>
		</objects>
		<libraries>
			<library name="omrutil" type="external"/>
		</libraries>
	</artifact>

	<!-- The makefile target from following artifact is expected to clean the object files generated by the makefile of the artifact jvm_b150
		such that a clean build for the makefile of the artifact jvm can proceed.
		Hence this relies on the execution order of makefile targets generated by UMA, i.e.,
		first the makefile target of the artifact jvm_b150,
		second the makefile target of the artifact jvm_b150_clean,
		and last the makefile target of the artifact jvm -->
	<artifact type="shared" name="jvm_b150_clean" scope="redirector" loadgroup="top" buildlocal="true" appendrelease="false">
		<include-if condition="spec.flags.module_j9vm"/>
		<phase>core quick j2se</phase>
		<commands>
			<command line="$(MAKE) -f redirector_jvm.mk clean" type="all"/>
		</commands>
	</artifact>

	<artifact type="shared" name="jvm_b156" scope="redirector" loadgroup="top" buildlocal="true" appendrelease="false">
		<include-if condition="spec.flags.module_j9vm"/>
		<options>
			<!-- Need this for compatibility with older UMA versions in ifix streams -->
			<option name="linuxVersionName" data ="JVM_2.3"/>
		</options>
		<phase>core quick j2se</phase>
		<exports>
			<group name="prejdk11"/>
			<group name="all"/>
			<group name="j9vmnatives"/>
		</exports>
		<flags>
			<flag name="J9VM_JAVA9_BUILD" value="156"/>
		</flags>
		<includes>
			<include path="j9include"/>
			<include path="j9oti"/>
			<include path="jvm"/>
			<include path="$(OMRPORT_SRCDIR)zos390" type="relativepath">
				<include-if condition="spec.zos_390.*"/>
			</include>
		</includes>
		<makefilestubs>
			<makefilestub data="UMA_TREAT_WARNINGS_AS_ERRORS=1"/>
			<makefilestub data="OMRPORT_SRCDIR=$(OMR_DIR)/port/"/>
		</makefilestubs>
		<objects>
			<object name="generated"/>
			<object name="redirector"/>
		</objects>
		<libraries>
			<library name="omrutil" type="external"/>
		</libraries>
	</artifact>
	
	<!-- The makefile target from following artifact is expected to clean the object files generated by the makefile of the artifact jvm_b156
		such that a clean build for the makefile of the artifact jvm can proceed.
		Hence this relies on the execution order of makefile targets generated by UMA, i.e.,
		first the makefile target of the artifact jvm_b156,
		second the makefile target of the artifact jvm_b156_clean,
		and last the makefile target of the artifact jvm -->
	<artifact type="shared" name="jvm_b156_clean" scope="redirector" loadgroup="top" buildlocal="true" appendrelease="false">
		<include-if condition="spec.flags.module_j9vm"/>
		<phase>core quick j2se</phase>
		<commands>
			<command line="$(MAKE) -f redirector_jvm.mk clean" type="all"/>
		</commands>
	</artifact>

	<artifact type="shared" name="jvm_jdk11" scope="redirector" loadgroup="top" buildlocal="true" appendrelease="false">
		<include-if condition="spec.flags.module_j9vm"/>
		<options>
			<!-- Need this for compatibility with older UMA versions in ifix streams -->
			<option name="linuxVersionName" data ="JVM_2.3"/>
		</options>
		<phase>core quick j2se</phase>
		<exports>
			<group name="jdk11"/>
			<group name="all"/>
			<group name="j9vmnatives"/>
		</exports>
		<flags>
			<flag name="J9VM_JAVA9_BUILD" value="156"/>
			<flag name="J9VM_JCL_SE11"/>
		</flags>
		<includes>
			<include path="j9include"/>
			<include path="j9oti"/>
			<include path="jvm"/>
			<include path="$(OMRPORT_SRCDIR)zos390" type="relativepath">
				<include-if condition="spec.zos_390.*"/>
			</include>
		</includes>
		<makefilestubs>
			<makefilestub data="UMA_TREAT_WARNINGS_AS_ERRORS=1"/>
			<makefilestub data="OMRPORT_SRCDIR=$(OMR_DIR)/port/"/>
		</makefilestubs>
		<objects>
			<object name="generated"/>
			<object name="redirector"/>
		</objects>
		<libraries>
			<library name="omrutil" type="external"/>
		</libraries>
	</artifact>
	
	<!-- The makefile target from following artifact is expected to clean the object files generated by the makefile of the artifact jvm_jdk11
		such that a clean build for the makefile of the artifact jvm can proceed.
		Hence this relies on the execution order of makefile targets generated by UMA, i.e.,
		first the makefile target of the artifact jvm_jdk11,
		second the makefile target of the artifact jvm_jdk11_clean,
		and last the makefile target of the artifact jvm -->
	<artifact type="shared" name="jvm_jdk11_clean" scope="redirector" loadgroup="top" buildlocal="true" appendrelease="false">
		<include-if condition="spec.flags.module_j9vm"/>
		<phase>core quick j2se</phase>
		<commands>
			<command line="$(MAKE) -f redirector_jvm.mk clean" type="all"/>
		</commands>
	</artifact>

	<!-- This artifact must be last because the ones above do a 'clean' after they run, removing libjvm.so. -->  
	<artifact type="shared" name="jvm" scope="redirector" loadgroup="top" buildlocal="true" appendrelease="false">
		<include-if condition="spec.flags.module_j9vm" />
		<options>
			<!-- Need this for compatibility with older UMA versions in ifix streams -->
			<option name="linuxVersionName" data ="JVM_2.3" />
		</options>
		<phase>core quick j2se</phase>		
		<exports>
			<group name="prejdk11"/>
			<group name="all"/>
			<group name="j9vmnatives"/>
		</exports>
		<flags>
			<flag name="J9VM_JAVA9_BUILD" value="148"/>
		</flags>
		<includes> 
			<include path="j9include"/>
			<include path="j9oti"/>
			<include path="jvm"/>
			<include path="$(OMRPORT_SRCDIR)zos390" type="relativepath">
				<include-if condition="spec.zos_390.*"/>
			</include>
		</includes>
		<makefilestubs>
			<makefilestub data="UMA_TREAT_WARNINGS_AS_ERRORS=1"/>
			<makefilestub data="OMRPORT_SRCDIR=$(OMR_DIR)/port/" />
		</makefilestubs>
		<objects>
			<object name="generated"/>
			<object name="redirector"/>
		</objects>		
		<libraries>
			<library name="omrutil" type="external"/>
		</libraries>
	</artifact>
</module>
