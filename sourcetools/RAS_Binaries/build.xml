<project name="RAS_Binaries Build" default="all" >
	<!--
	   Copyright (c) 2013, 2017 IBM Corp. and others

	   This program and the accompanying materials are made available under
	   the terms of the Eclipse Public License 2.0 which accompanies this
	   distribution and is available at https://www.eclipse.org/legal/epl-2.0/
	   or the Apache License, Version 2.0 which accompanies this distribution and
	   is available at https://www.apache.org/licenses/LICENSE-2.0.

	   This Source Code may also be made available under the following
	   Secondary Licenses when the conditions for such availability set
	   forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
	   General Public License, version 2 with the GNU Classpath
	   Exception [1] and GNU General Public License, version 2 with the
	   OpenJDK Assembly Exception [2].

	   [1] https://www.gnu.org/software/classpath/license.html
	   [2] http://openjdk.java.net/legal/assembly-exception.html

	   SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
	-->
	<!-- Include custom tasks -->
	<taskdef resource='net/sf/antcontrib/antlib.xml'/>
	<taskdef resource='com/ibm/j9/ant/antlib.xml'/>

	<!-- Declare some root variables -->
	<property name="workspace" value="${basedir}/.." />
	<echo>Workspace located at ${workspace}.</echo>
	
	<!-- Look for DEV_TOOLS -->
	<property environment="env"/> 
	
	<if>
		<and>
			<not><equals arg1="${env.DEV_TOOLS}" arg2="" /></not>
			<isset property="env.DEV_TOOLS" />
		</and>
		<then>
			<property name="javabin_java9" location="${env.DEV_TOOLS}/ibm-jdk-1.9.0/bin"/>
			<property name="javabin_java8" location="${env.DEV_TOOLS}/ibm-jdk-1.8.0/bin"/>
		</then>
		<else>
			<property name="javabin_java9" value="/bluebird/bin/platform/linux386/ibm-jdk-1.9.0-b136/bin" />
			<property name="javabin_java8" value="/bluebird/bin/platform/linux386/ibm-jdk-1.8.0/bin" />
		</else>
	</if>
	
	<property name="src.target.level.java8" value="1.8"/>
	<property name="src.target.level.java9" value="1.9"/>
	
	<!-- properties to control the created jars -->
	<property name="dtfjtests.jar" value="dtfjtests.jar" />
	<property name="tracegen.jar" value="tracegen.jar" />
	<property name="asm.jar" value="asm-3.1.jar" />
	
	<!-- Create a place to work -->
	<tempfile property="root.dir" prefix="rasbld" destdir="${java.io.tmpdir}"/>
	<property name="build.dir" value="${root.dir}/build" />
	<property name="jar.dir" value="${root.dir}/jar" />
	<mkdir dir="${build.dir}" />
	<mkdir dir="${jar.dir}" />
	
	<condition property="path.separator" value=";" else=":">
		<os family="windows"/>
	</condition>
	
	<target name="file-checks">
		<!-- file check added for the purpose of manual builds of DDR_VM/manual_build.xml -->
		<available file="${basedir}/${tracegen.jar}"  		property="found.tracegen.jar"/>
	</target>

	<target name="ras-jars-build">
		<!-- Java 9 -->
		<antcall target="tracegen.jar">
			<param name="product" value="java9" />
			<param name="javabin" value="${javabin_java9}" />
			<param name="src.target.level" value="${src.target.level.java9}" />
		</antcall>
		
		<!-- Java 8 -->
		<antcall target="tracegen.jar">
			<param name="product" value="java8" />
			<param name="javabin" value="${javabin_java8}" />
			<param name="src.target.level" value="${src.target.level.java8}" />
		</antcall>
	</target>
	
	<!-- trace gen -->
	<target name="tracegen.jar">
		<delete dir="${build.dir}/${tracegen.jar}" />
		<mkdir dir="${build.dir}/${tracegen.jar}" />
		<javac executable="${javabin}/javac" source="${src.target.level}" target="${src.target.level}"
			destdir="${build.dir}/${tracegen.jar}" fork="true" >
			<src path="${workspace}/sourcetools/tracegen" />
		</javac>
		<if>
			<equals arg1="${product}" arg2="java8" />
			<then>
				<jar destfile="${jar.dir}/${tracegen.jar}">
					<fileset dir="${build.dir}/${tracegen.jar}" />
				</jar>
			</then>
			<else>
				<jar destfile="${jar.dir}/${product}_${tracegen.jar}">
					<fileset dir="${build.dir}/${tracegen.jar}" />
				</jar>
			</else>
		</if>
	</target>
	
	<target name="cleanup">
		<delete includeemptydirs="true" dir="${root.dir}" />
	</target>
	
	<!-- copies the built jars into the directory that the script is currently running in ready for the commit -->
	<target name="copy">
		<copy todir="${basedir}">
			<fileset dir="${jar.dir}" includes="*.jar"></fileset>
		</copy>
	</target>
	
	<target name="compile" depends="file-checks,ras-jars-build" />
	<target name="all" depends="compile,copy,cleanup"/>
			
</project>
