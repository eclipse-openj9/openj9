# Copyright (c) 2008, 2017 IBM Corp. and others
#
#  This program and the accompanying materials are made available under
#  the terms of the Eclipse Public License 2.0 which accompanies this
#  distribution and is available at https://www.eclipse.org/legal/epl-2.0/
#  or the Apache License, Version 2.0 which accompanies this distribution and
#  is available at https://www.apache.org/licenses/LICENSE-2.0.
#
#  This Source Code may also be made available under the following
#  Secondary Licenses when the conditions for such availability set
#  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
#  General Public License, version 2 with the GNU Classpath
#  Exception [1] and GNU General Public License, version 2 with the
#  OpenJDK Assembly Exception [2].
#
#  [1] https://www.gnu.org/software/classpath/license.html
#  [2] http://openjdk.java.net/legal/assembly-exception.html
#
#  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception

Steps for updating admincache.jar and committing it:

0. Ensure you have the HEAD of this project checked out.

1. Alter the files in src.  

1a. Ensure the program version is updated in the call to setMyVersion() from
com.ibm.admincache.SharedCacheConfig.SharedCacheConfig(). This version is displayed when
admincache is run. It should be incremented every time a change is introduced, including
when an admincache.jar is distributed for testing.

2. To update a build or to generate a local distribution:

LOCAL copy
2a. Run build.xml file using "Ant Build...". 
2b. On configuration window, under JRE tab, add the JRE that this release is targeting and name it as "realtime latest".
2c. On the same JRE tab, set "realtime latest" as the Runtime JRE to be used.
2d. Run the ant target "prepare" in the build.xml file - this will update the files in the "final" directory.
2e. Refresh the project in the Eclipse/Jazz/RTC workspace with the key "F5" or right-click and select "refresh".
This ensures that Eclipse is aware of the newly generated binary files in "final".

HEAD builds
Run steps 2a-2e under LOCAL copy.
2f. Commit all the modified files. The HEAD build will pick up admincache.jar from the HEAD of this project.

3. Tag the project with a tag identifying the version.

4. Commit the admincache.jar into the realtime_binaries project so it becomes part of the JVM builds