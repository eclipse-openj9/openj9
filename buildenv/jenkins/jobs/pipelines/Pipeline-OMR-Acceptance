/*******************************************************************************
 * Copyright (c) 2018, 2018 IBM Corp. and others
 *
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/
 * or the Apache License, Version 2.0 which accompanies this distribution and
 * is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * This Source Code may also be made available under the following
 * Secondary Licenses when the conditions for such availability set
 * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
 * General Public License, version 2 with the GNU Classpath
 * Exception [1] and GNU General Public License, version 2 with the
 * OpenJDK Assembly Exception [2].
 *
 * [1] https://www.gnu.org/software/classpath/license.html
 * [2] http://openjdk.java.net/legal/assembly-exception.html
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
 *******************************************************************************/

def SDK_VERSIONS = ['8', '10']
def SPECS = ['linux_ppc-64_cmprssptrs_le', 'linux_390-64_cmprssptrs', 'aix_ppc-64_cmprssptrs', 'linux_x86-64_cmprssptrs', 'linux_x86-64']

def OPENJDK_REPOS = [:]
OPENJDK_REPOS['8'] = [repo: 'https://github.com/ibmruntimes/openj9-openjdk-jdk8.git', branch: 'openj9']
OPENJDK_REPOS['10'] = [repo: 'https://github.com/ibmruntimes/openj9-openjdk-jdk10.git', branch: 'openj9']

def OPENJ9_REPO = 'https://github.com/eclipse/openj9.git'
def OPENJ9_BRANCH = 'master'

def OMR_REPO = 'https://github.com/eclipse/openj9-omr.git'
def OMR_BRANCH = 'master'

TESTS_TARGETS = '_sanity'

def JOBS = [:]
def ALL_SHAS = [:]

def SLACK_CHANNEL

timeout(time: 6, unit: 'HOURS') {
    node('worker') {
        timestamps {
            checkout scm
            buildFile = load 'buildenv/jenkins/common/pipeline-functions'
            variableFile = load 'buildenv/jenkins/common/variables-functions'
            variableFile.parse_variables_file()
            variableFile.set_slack_channel()

            // fetch SHAs
            ALL_SHAS['OPENJ9'] = buildFile.get_sha(OPENJ9_REPO, OPENJ9_BRANCH)
            ALL_SHAS['OMR'] = buildFile.get_sha(OMR_REPO, OMR_BRANCH)

            // update build description
            currentBuild.description = "OpenJ9: ${ALL_SHAS['OPENJ9']}<br/>OMR: ${ALL_SHAS['OMR']}"

            SDK_VERSIONS.each { SDK_VERSION ->
                def OPENJDK_REPO = OPENJDK_REPOS["${SDK_VERSION}"].repo
                def OPENJDK_BRANCH = OPENJDK_REPOS["${SDK_VERSION}"].branch
                def SHAS = [:]
                SHAS['OPENJ9'] = ALL_SHAS['OPENJ9']
                SHAS['OMR'] = ALL_SHAS['OMR']
                SHAS['OPENJDK'] = buildFile.get_sha(OPENJDK_REPO, OPENJDK_BRANCH)
                ALL_SHAS["OPENJDK${SDK_VERSION}"] = SHAS['OPENJDK']

                // append OpenJDK SHA to the build description
                currentBuild.description += "<br/>OpenJDK${SDK_VERSION}: ${SHAS['OPENJDK']}"

                echo "Building OpenJ9 extensions for OpenJDK${SDK_VERSION}"
                echo "OPENJDK_REPO = ${OPENJDK_REPO}"
                echo "OPENJDK_BRANCH = ${OPENJDK_BRANCH}"
                echo "OPENJDK_SHA:${SHAS['OPENJDK']}"
                echo "OPENJ9_SHA:${SHAS['OPENJ9']}"
                echo "OMR_SHA:${SHAS['OMR']}"

                SPECS.each { SPEC ->
                    JOBS["Build-Test-JDK${SDK_VERSION}-${SPEC}"] = { buildFile.workflow(SDK_VERSION, SPEC, SHAS, OPENJDK_REPO, OPENJDK_BRANCH, OPENJ9_REPO, OPENJ9_BRANCH, OMR_REPO, OMR_BRANCH, TESTS_TARGETS) }
                 }
            }

            cleanWs()
        }
    }

    timestamps {
        parallel JOBS
        stage('Promote') {
            PROMOTE_JOB = buildFile.build_with_slack('Promote-OpenJ9-OMR-master-to-openj9',
                                                    [string(name: 'OMR_COMMIT', value: "${ALL_SHAS['OMR']}"),
                                                    string(name: 'OPENJ9_COMMIT', value: "${ALL_SHAS['OPENJ9']}"),
                                                    string(name: 'OPENJDK8_COMMIT', value: "${ALL_SHAS['OPENJDK8']}"),
                                                    string(name: 'OPENJDK10_COMMIT', value: "${ALL_SHAS['OPENJDK10']}")])
        }
    }
}
